<Type Name="IValueProvider" FullName="System.Windows.Automation.Provider.IValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d5537e7b31799e403a69420ce0dc6f31807428f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36571107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueProvider" />
  <TypeSignature Language="F#" Value="type IValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5c132-101">Expone métodos y propiedades para admitir el acceso de cliente de UI Automation a los controles que tienen un valor intrínseco que no abarca un intervalo y que se puede representar como una cadena.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c132-101">Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c132-102">El valor del control puede o no ser modificable dependiendo del control y sus valores.</span><span class="sxs-lookup"><span data-stu-id="5c132-102">The value of the control may or may not be editable depending on the control and its settings.</span></span>  
  
 <span data-ttu-id="5c132-103">Implementa en un proveedor de automatización de la interfaz de usuario que debe admitir el <xref:System.Windows.Automation.ValuePattern> patrón de control.</span><span class="sxs-lookup"><span data-stu-id="5c132-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.ValuePattern" />
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c132-104">Obtiene un valor que especifica si el valor de un control es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-104">Gets a value that specifies whether the value of a control is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c132-105">
            <see langword="true" /> si el valor es de solo lectura; <see langword="false" /> si se puede modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-105">
              <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c132-106">Un control debe tener el valor de su <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> establecido en `true` y el valor de <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> establecido en `false` antes de permitir una llamada a <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="5c132-106">A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c132-107">En el ejemplo siguiente se muestra una implementación de este método para un control que permite que su valor puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="5c132-107">The following example shows an implementation of this method for a control that allows its value to be changed.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]
 [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit" Usage="iValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5c132-108">El valor que se establece.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-108">The value to set.</span>
          </span>
          <span data-ttu-id="5c132-109">El proveedor es responsable de convertir el valor en el tipo de datos adecuado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-109">The provider is responsible for converting the value to the appropriate data type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c132-110">Establece el valor de un control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-110">Sets the value of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c132-111">Los controles de edición de línea única admiten el acceso mediante programación a su contenido a través de la implementación de <xref:System.Windows.Automation.Provider.IValueProvider>.</span><span class="sxs-lookup"><span data-stu-id="5c132-111">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span> <span data-ttu-id="5c132-112">Sin embargo, los controles de edición multilínea no implementan <xref:System.Windows.Automation.Provider.IValueProvider>; en su lugar, proporcionan acceso a su contenido mediante la implementación de <xref:System.Windows.Automation.Provider.ITextProvider>.</span><span class="sxs-lookup"><span data-stu-id="5c132-112">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span>  
  
 <span data-ttu-id="5c132-113">Controles como <xref:System.Windows.Automation.ControlType.ListItem> y <xref:System.Windows.Automation.ControlType.TreeItem> debe implementar <xref:System.Windows.Automation.Provider.IValueProvider> si el valor de cualquiera de los elementos es modificable, sin tener en cuenta este modo de edición del control.</span><span class="sxs-lookup"><span data-stu-id="5c132-113">Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control.</span></span> <span data-ttu-id="5c132-114">El control primario también debe implementar <xref:System.Windows.Automation.Provider.IValueProvider> si los elementos secundarios son modificables.</span><span class="sxs-lookup"><span data-stu-id="5c132-114">The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.</span></span>  
  
 <span data-ttu-id="5c132-115">![Elemento de lista modificable. ] (~/add/media/uia-valuepattern-editable-listitem.PNG "Elemento de lista modificable.")</span><span class="sxs-lookup"><span data-stu-id="5c132-115">![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG "Editable list item.")</span></span>  
<span data-ttu-id="5c132-116">Ejemplo de un elemento de lista modificable</span><span class="sxs-lookup"><span data-stu-id="5c132-116">Example of an Editable List Item</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c132-117">Ejemplo de código siguiente muestra un control personalizado que permite que su valor se establezca en una cadena de longitud limitada.</span><span class="sxs-lookup"><span data-stu-id="5c132-117">The following example code demonstrates a custom control that allows its value to be set to a string of limited length.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]
 [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c132-118">Si la información específica de la configuración regional se pasa a un control con un formato incorrecto (por ejemplo, una fecha con un formato incorrecto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-118">If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c132-119">Si no se puede convertir un nuevo valor de una cadena a un formato que el control reconozca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-119">If a new value cannot be converted from a string to a format the control recognizes.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="5c132-120">Cuando se realiza un intento de manipular un control que no está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-120">When an attempt is made to manipulate a control that is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c132-121">Obtiene el valor del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-121">Gets the value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c132-122">Valor del control como cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c132-122">The value of the control as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c132-123">Controles de edición de línea única admiten el acceso mediante programación a su contenido mediante la implementación <xref:System.Windows.Automation.Provider.IValueProvider> (además <xref:System.Windows.Automation.Provider.ITextProvider>).</span><span class="sxs-lookup"><span data-stu-id="5c132-123">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>).</span></span> <span data-ttu-id="5c132-124">Sin embargo, los controles de edición multilínea no implementan <xref:System.Windows.Automation.Provider.IValueProvider>.</span><span class="sxs-lookup"><span data-stu-id="5c132-124">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span>  
  
 <span data-ttu-id="5c132-125">Para recuperar el contenido textual de los controles de edición multilínea, los controles deben implementar <xref:System.Windows.Automation.Provider.ITextProvider>.</span><span class="sxs-lookup"><span data-stu-id="5c132-125">To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span> <span data-ttu-id="5c132-126">Sin embargo, <xref:System.Windows.Automation.Provider.ITextProvider> no admite establecer el valor de un control.</span><span class="sxs-lookup"><span data-stu-id="5c132-126">However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.</span></span>  
  
 <span data-ttu-id="5c132-127"><xref:System.Windows.Automation.Provider.IValueProvider> no admite la recuperación de la información de formato ni los valores de subcadenas.</span><span class="sxs-lookup"><span data-stu-id="5c132-127"><xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values.</span></span> <span data-ttu-id="5c132-128">Implemente <xref:System.Windows.Automation.Provider.ITextProvider> en estos escenarios.</span><span class="sxs-lookup"><span data-stu-id="5c132-128">Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c132-129">En el ejemplo siguiente se muestra una implementación de este método para un control que permite que su valor va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5c132-129">The following example shows an implementation of this method for a control that allows its value to be retrieved.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]
 [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>