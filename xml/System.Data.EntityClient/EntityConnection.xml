<Type Name="EntityConnection" FullName="System.Data.EntityClient.EntityConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a33f2cd7ecb7a36b829c9430323ef109258faa0" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52594071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnection : System.Data.Common.DbConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnection extends System.Data.Common.DbConnection" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnection&#xA;Inherits DbConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnection sealed : System::Data::Common::DbConnection" />
  <TypeSignature Language="F#" Value="type EntityConnection = class&#xA;    inherit DbConnection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene una referencia a un modelo conceptual y una conexión a un origen de datos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 Para obtener ejemplos de código, vea [trabajar con EntityClient](https://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8c5db787-78e6-4a34-8dc1-188bca0aca5e">Proveedor de EntityClient para Entity Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5">Trabajar con EntityClient</related>
    <related type="Article" href="https://msdn.microsoft.com/library/78d516bc-c99f-4865-8ff1-d856bc1a01c0">Cadena de conexión</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 Para obtener ejemplos de código, vea [trabajar con EntityClient](https://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 Para obtener ejemplos de código, vea [trabajar con EntityClient](https://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : string -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Cadena de conexión específica del proveedor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityClient.EntityConnection" />, tomando como base la cadena de conexión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El generar una cadena de conexión con nombre que se almacena en el archivo de configuración de la aplicación. Puede proporcionar esta cadena de conexión con nombre en lugar de la `connectionString` parámetro al crear instancias de la <xref:System.Data.EntityClient.EntityConnection> clase.  
  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante este constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>), que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 Para obtener ejemplos de código, vea [trabajar con EntityClient](https://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se ha proporcionado una palabra clave de la cadena de conexión no válida, o no se ha proporcionado una palabra clave de la cadena de conexión requerida.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::Data::Metadata::Edm::MetadataWorkspace ^ workspace, System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : System.Data.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection (workspace, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="workspace">
          <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> que se va a asociar a esta <see cref="T:System.Data.EntityClient.EntityConnection" />.</param>
        <param name="connection">Conexión de origen de datos subyacente para este objeto <see cref="T:System.Data.EntityClient.EntityConnection" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityClient.EntityConnection" /> con un <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> y una <see cref="T:System.Data.Common.DbConnection" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor permite crear una <xref:System.Data.EntityClient.EntityConnection> a partir de metadatos no procedentes de un archivo en un disco o de un recurso incrustado en un ensamblado.  
  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante este constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>), que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="workspace" /> o <paramref name="connection" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Falta el modelo conceptual del área de trabajo.  
  
O bien 
Falta el archivo de asignación del área de trabajo.  
  
O bien 
Falta el modelo de almacenamiento del área de trabajo.  
  
O bien 
<paramref name="connection" /> no está en estado cerrado.</exception>
        <exception cref="T:System.Data.ProviderIncompatibleException">
          <paramref name="connection" /> no procede de un proveedor compatible con ADO.NET Entity Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="entityConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia una transacción de base de datos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As EntityTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comienza una transacción utilizando el proveedor subyacente.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Data.EntityClient.EntityTransaction" />. La instancia de <see cref="T:System.Data.EntityClient.EntityTransaction" /> devuelta se puede asociar posteriormente a <see cref="T:System.Data.EntityClient.EntityCommand" /> para ejecutar el comando en esa transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> usa el nivel de aislamiento de transacción <xref:System.Data.IsolationLevel.Unspecified>. Para especificar un nivel de aislamiento diferente, llame a <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. Este valor se puede interpretar de forma diferente por proveedores subyacentes diferentes. Si desea que la aplicación sea portable entre varios proveedores, debe especificar explícitamente el nivel de aislamiento de transacción llamando a <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.  
  
 En un momento determinado puede que no haya más de una transacción activa creada mediante <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. Un intento de llamada a cualquiera de las sobrecargas de <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> en una <xref:System.Data.EntityClient.EntityConnection> que ya tiene una transacción actual produce una excepción <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El proveedor de datos subyacente no se conoce.  
  
O bien 
La llamada a <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> se ha realizado en una <see cref="T:System.Data.EntityClient.EntityConnection" /> que ya tiene una transacción actual.  
  
O bien 
El estado de la <see cref="T:System.Data.EntityClient.EntityConnection" /> no es <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Nivel de aislamiento de la transacción.</param>
        <summary>Comienza una transacción con el nivel de aislamiento especificado utilizando el proveedor subyacente.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Data.EntityClient.EntityTransaction" />. La instancia de <see cref="T:System.Data.EntityClient.EntityTransaction" /> devuelta se puede asociar posteriormente a <see cref="T:System.Data.EntityClient.EntityCommand" /> para ejecutar el comando en esa transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un momento determinado puede que no haya más de una transacción activa creada mediante <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. Un intento de llamada a cualquiera de las sobrecargas de <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> en una <xref:System.Data.EntityClient.EntityConnection> que ya tiene una transacción actual produce una excepción <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El proveedor de datos subyacente no se conoce.  
  
O bien 
La llamada a <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> se ha realizado en una <see cref="T:System.Data.EntityClient.EntityConnection" /> que ya tiene una transacción actual.  
  
O bien 
El estado de la <see cref="T:System.Data.EntityClient.EntityConnection" /> no es <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (databaseName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ databaseName);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="entityConnection.ChangeDatabase databaseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseName">No se admite.</param>
        <summary>No se admite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A> método es necesario cuando se deriva de <xref:System.Data.Common.DbConnection>. Este método no es compatible y generará una <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cuando se llama al método.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="entityConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra la conexión con la base de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se conoce el proveedor de datos subyacente, la llamada a <xref:System.Data.EntityClient.EntityConnection.Close%2A> no hace nada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se ha producido un error al cerrarse la conexión.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de conexión <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <value>La cadena de conexión requerida para establecer la conexión inicial con un origen de datos. El valor predeterminado es una cadena vacía. En una conexión cerrada, se devuelve el valor establecido actualmente. Si no se ha establecido ningún valor, se devuelve una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un `EntityClient` cadena de conexión consta de una secuencia de pares de parámetro de palabra clave y valor separados por punto y coma. El signo igual (=) asocia cada palabra clave a su valor. En la tabla siguiente se muestran los nombres válidos para los valores de palabra clave en la propiedad <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
|Palabra clave|Descripción|  
|-------------|-----------------|  
|`Provider`|Se requiere si no se especifica la palabra clave `Name`. El nombre del proveedor, que se usa para recuperar el objeto <xref:System.Data.Common.DbProviderFactory> para el proveedor subyacente. Este valor es constante.<br /><br /> Cuando el `Name` palabra clave no se incluye en la cadena de conexión, un valor no vacío para el `Provider` palabra clave es necesaria. Esta palabra clave y la palabra clave `Name` se excluyen mutuamente.|  
|`Provider Connection String`|Opcional. Especifica la cadena de conexión específica del proveedor que se pasa al origen de datos subyacente. Esta cadena de conexión se expresa mediante pares palabra clave-valor válidos para el proveedor de datos. Un valor de `Provider Connection String` no válido provocará un error en tiempo de ejecución cuando sea evaluado por el origen de datos.<br /><br /> Esta palabra clave y la palabra clave `Name` se excluyen mutuamente.<br /><br /> El valor de `Provider Connection String` debe estar entrecomillado. A continuación se muestra un ejemplo:<br /><br /> `Provider Connection String ="Server=serverName; User ID = userID";`<br /><br /> El ejemplo siguiente no va a funcionar:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  
|`Metadata`|Se requiere si no se especifica la palabra clave `Name`. Una lista delimitada por barras verticales de directorios, archivos y localizadores de recursos en el que se va a buscar información de asignación y modelo. A continuación se muestra un ejemplo:<br /><br /> `Metadata=`<br /><br /> `c:\model &#124; c:\model\sql\mapping.msl;`<br /><br /> Los espacios en blanco a cada lado del separador de barra vertical se pasan por alto.<br /><br /> Esta palabra clave y la palabra clave `Name` se excluyen mutuamente.|  
|`Name`|La aplicación puede especificar, si se desea, el nombre de conexión en un archivo de configuración de la aplicación que proporcione los valores de cadena de conexión con pares palabra clave-valor necesarios. En este caso, no es posible suministrarlos directamente en la cadena de conexión. La palabra clave `Name` no se permite en un archivo de configuración.<br /><br /> Cuando la palabra clave `Name` no se incluye en la cadena de conexión, se requiere un valor no vacío para la palabra clave Provider.<br /><br /> Esta palabra clave y todas las demás palabras clave de cadena de conexión se excluyen mutuamente.|  
  
 La aplicación puede proporcionar los pares palabra clave-valor directamente en el <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> propiedad, o bien puede especificar un valor para el `Name` palabra clave. Si el `Name` se especifica la palabra clave, los pares palabra clave-valor de cadena de conexión se recuperan de un archivo de configuración de la aplicación, como se indica a continuación:  
  
 `Name=AdventureWorksEntities;`  
  
 Si el `Name` se utiliza la palabra clave en el <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> propiedad, no se permite otras palabras clave. El `Name` palabra clave hace referencia a una cadena de conexión con nombre que se almacena en la `connectionStrings` sección en un archivo de configuración de aplicación, tal como se muestra en el ejemplo siguiente. El `Provider`, `Metadata`, y `Provider Connection String` valores se recuperan desde el archivo de configuración en tiempo de ejecución.  
  
  
  
 Los pares palabra clave-valor también se pueden suministrar directamente en la propiedad <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>, como se muestra en el siguiente ejemplo. En este caso, el `Name` no se utiliza la palabra clave.  
  
```  
"Provider=System.Data.SqlClient;  
Metadata=c:\metadata|c:\Metadata\Sql;  
Provider Connection String= 'Data Source=localhost;  
    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' "  
```  
  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo se usa <xref:System.Data.EntityClient.EntityConnectionStringBuilder> junto con <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. El código establece propiedades de un `SqlConnectionStringBuilder` para crear un <xref:System.Data.SqlClient.SqlConnection> cadena que suministre parte de la cadena de conexión del proveedor subyacente. Tenga en cuenta que el `Provider` nombre no puede establecerse mediante el uso de la `SqlConnectionStringBuilder`, ya que no utiliza válido `SqlConnection` sintaxis. El código crea el <xref:System.Data.EntityClient.EntityConnection> cadena estableciendo `EntityConnectionStringBuilder` propiedades.  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se ha realizado un intento de establecer la propiedad <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> después de haberse inicializado <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> de <see cref="T:System.Data.EntityClient.EntityConnection" />. <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> se inicializa cuando la instancia de <see cref="T:System.Data.EntityClient.EntityConnection" /> se crea mediante la sobrecarga que toma <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> como parámetro, o cuando la instancia de <see cref="T:System.Data.EntityClient.EntityConnection" /> se ha abierto.</exception>
        <exception cref="T:System.ArgumentException">Se ha proporcionado una palabra clave de la cadena de conexión no válida, o no se ha proporcionado una palabra clave de la cadena de conexión requerida.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Cadenas de conexión</related>
        <related type="Article" href="https://msdn.microsoft.com/library/78d516bc-c99f-4865-8ff1-d856bc1a01c0">Cadenas de conexión (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de segundos que se debe esperar cuando se intenta establecer una conexión antes de que finalice el intento y se genere un error.</summary>
        <value>El tiempo (en segundos) que se debe esperar para que se abra una conexión. El valor predeterminado es el tiempo de espera predeterminado del proveedor de datos subyacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve cero si el proveedor de datos subyacente no se conoce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor establecido es menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As EntityCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.EntityClient.EntityCommand" Usage="entityConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una instancia nueva de <see cref="T:System.Data.EntityClient.EntityCommand" />, con la propiedad <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> establecida en <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <returns>Un objeto <see cref="T:System.Data.EntityClient.EntityCommand" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">El nombre del proveedor de datos subyacente no se conoce.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="entityConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.EntityClient.EntityConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la base de datos actual o de la base de datos que se va a utilizar una vez que se abra la conexión.</summary>
        <value>Valor de la propiedad <see langword="Database" /> del proveedor de datos subyacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para el valor de la palabra clave específica, como `Database`, que se asigna a la <xref:System.Data.EntityClient.EntityConnection.Database%2A> propiedad, consulte la documentación para el proveedor de datos subyacente. Palabras clave equivalentes de SQL Server, consulte la documentación de la <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El proveedor de datos subyacente no se conoce.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre o la dirección de red del origen de datos con el que se va a establecer conexión.</summary>
        <value>El nombre del origen de datos. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para el valor de la palabra clave específica, como `DataSource`, que se asigna a la <xref:System.Data.EntityClient.EntityConnection.DataSource%2A> propiedad, consulte la documentación para el proveedor de datos subyacente. Palabras clave equivalentes de SQL Server, consulte la documentación de la <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El proveedor de datos subyacente no se conoce.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="entityConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="entityConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Objeto de transacción en el que se da de alta.</param>
        <summary>Da de alta esta <see cref="T:System.Data.EntityClient.EntityConnection" /> en la transacción especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método reenvía la llamada a la conexión de origen de datos para darle de alta explícitamente en la <xref:System.Transactions.Transaction> pasada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El estado de la <see cref="T:System.Data.EntityClient.EntityConnection" /> no es <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataWorkspace () As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::MetadataWorkspace ^ GetMetadataWorkspace();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataWorkspace : unit -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="entityConnection.GetMetadataWorkspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el objeto <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> asociado a esta <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> asociada a esta <see cref="T:System.Data.EntityClient.EntityConnection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se crea automáticamente un objeto <xref:System.Data.Metadata.Edm.MetadataWorkspace> cuando se crea la clase <xref:System.Data.EntityClient.EntityConnection>. El proceso de creación puede producir excepciones específicas de metadatos. Los metadatos se cargan en memoria y una aplicación de Entity Data Model (EDM) los usa para tener acceso a información sobre el origen de datos subyacente. Para obtener más información, consulte [metadatos de ADO.NET](https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5).  
  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En ambos casos la cadena de conexión puede cambiar varias veces antes de abrirse la conexión. <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MetadataException">La cadena de conexión insertada contiene un valor de la palabra clave <see langword="Metadata" /> no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="entityConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece una conexión con el origen de datos llamando al método <see langword="Open" /> del proveedor de datos subyacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar que objetos como <xref:System.Data.Common.CommandTrees> y <xref:System.Data.Objects.ObjectContext> dejen de estar sincronizados involuntariamente con sus metadatos, <xref:System.Data.EntityClient.EntityConnection> debe bloquear los metadatos. No se permiten cambios en la cadena de conexión una vez bloqueados los metadatos. A continuación se presentan dos escenarios en los que se bloquean los metadatos:  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor predeterminado, o mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>, que acepta una cadena de conexión. En cualquiera de los casos, la cadena de conexión se puede cambiar varias veces antes de abrirse la conexión. La llamada a los métodos <xref:System.Data.EntityClient.EntityConnection.Open%2A> o <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> bloquea los metadatos.  
  
-   La instancia de <xref:System.Data.EntityClient.EntityConnection> se crea mediante el constructor <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>, que acepta <xref:System.Data.Metadata.Edm.MetadataWorkspace> y <xref:System.Data.Common.DbConnection>. En este caso, los metadatos se bloquean en el momento de la creación. No se permiten en ningún caso cambios en la cadena de conexión.  
  
 Cuando se cargan los metadatos, <xref:System.Data.EntityClient.EntityConnection> comprueba que el modelo conceptual, el modelo de almacenamiento y el archivo de asignación estén presentes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se produce un error al abrir la conexión o cuando el nombre del proveedor de datos subyacente no se conoce.</exception>
        <exception cref="T:System.Data.MetadataException">La cadena de conexión insertada contiene un valor de la palabra clave <see langword="Metadata" /> no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena que contiene la versión del origen de datos al que está conectado el cliente.</summary>
        <value>La versión del origen de datos contenido en la cadena de conexión del proveedor.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La conexión está cerrada.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.EntityClient.EntityConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la propiedad <see cref="T:System.Data.ConnectionState" /> del proveedor subyacente si <see cref="T:System.Data.EntityClient.EntityConnection" /> está abierta. De lo contrario, devuelve <see cref="F:System.Data.ConnectionState.Closed" />.</summary>
        <value>
          <see cref="F:System.Data.ConnectionState.Open" />, si y solo si tanto el <see cref="T:System.Data.EntityClient.EntityConnection" />del estado interno y el proveedor subyacente <see cref="T:System.Data.ConnectionState" /> están abiertos. Si el <see cref="T:System.Data.EntityClient.EntityConnection" />del estado es abierto pero el proveedor <see cref="T:System.Data.ConnectionState" /> está cerrada, esta propiedad devuelve <see cref="F:System.Data.ConnectionState.Broken" />. De lo contrario, devuelve <see cref="F:System.Data.ConnectionState.Closed" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection StoreConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection StoreConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ StoreConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreConnection : System.Data.Common.DbConnection" Usage="System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proporciona acceso a la conexión de origen de datos subyacente usada por el objeto <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <value>
          <see cref="T:System.Data.Common.DbConnection" /> para la conexión de origen de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el objeto <xref:System.Data.EntityClient.EntityConnection> está cerrado, la conexión de origen de datos devuelta estará cerrada. Si está abierto, se devolverá una conexión de origen de datos abierta. Si se ha establecido la información de conexión de origen de datos, siempre se devuelve un valor no null. Si no hay información de conexión de origen de datos (por ejemplo, si se ha usado el constructor predeterminado y no se ha establecido después ninguna cadena de conexión), se devuelve una referencia nula.  
  
 La misma conexión de origen de datos usada por Entity Framework se puede compartir con otras partes de una aplicación. La conexión de origen de datos se devuelve como un objeto <xref:System.Data.Common.DbConnection> desde la propiedad <xref:System.Data.Objects.ObjectContext.Connection%2A> de <xref:System.Data.Objects.ObjectContext>, o desde la propiedad <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A> de <xref:System.Data.EntityClient.EntityConnection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>