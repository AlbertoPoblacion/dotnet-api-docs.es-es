<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="84986-101">Representa un usuario de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-101">Represents a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-102">Llame a la <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> método para crear un <xref:System.Security.Principal.WindowsIdentity> objeto que representa al usuario actual.</span><span class="sxs-lookup"><span data-stu-id="84986-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="84986-103">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="84986-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="84986-104">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="84986-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="84986-105">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="84986-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="84986-106">Para deshacerse de él indirectamente, use una construcción de lenguaje como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84986-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="84986-107">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="84986-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-108">En el ejemplo siguiente se muestra el uso de los miembros de <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="84986-109">Para obtener un ejemplo que muestra cómo obtener un Windows cuenta token mediante una llamada a Win32 no administrada `LogonUser` función y use ese token para suplantar a otro usuario, consulte la <xref:System.Security.Principal.WindowsImpersonationContext> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84986-110">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="84986-111">Token de cuenta del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-111">The account token for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="84986-112">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado mediante el token de cuenta de Windows especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-113">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="84986-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="84986-114">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="84986-114">Property</span></span>|<span data-ttu-id="84986-115">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="84986-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="84986-116">Puede recuperar el token representado por `userToken` mediante una llamada a código no administrado, como la API de Win32 `LogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="84986-117">Siempre la versión `userToken` mediante una llamada a la API de Win32 `CloseHandle` función.</span><span class="sxs-lookup"><span data-stu-id="84986-117">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="84986-118">Para obtener más información sobre cómo llamar a código no administrado, consulte [consumir funciones DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="84986-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84986-119"><paramref name="userToken" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="84986-119"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="84986-120">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-120">-or-</span></span>  
  
 <span data-ttu-id="84986-121"><paramref name="userToken" /> está duplicado y no es válido para la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-121"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-122">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-122">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-123">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-123">-or-</span></span>  
  
 <span data-ttu-id="84986-124">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-124">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-125">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-126">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="84986-127">Objeto a partir del cual se construye la nueva instancia de <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="84986-128">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> mediante el objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="84986-129">UPN del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-129">The UPN for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="84986-130">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado por el nombre principal de usuario (UPN).</span><span class="sxs-lookup"><span data-stu-id="84986-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-131">Un UPN tiene el formato *nombre de usuario*@*domainname*.com, en otras palabras, una dirección de correo electrónico.</span><span class="sxs-lookup"><span data-stu-id="84986-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="84986-132">El UPN identificado en `sUserPrincipalName` se utiliza para recuperar un token para ese usuario a través de la API de Win32 `LsaLogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="84986-133">A su vez ese token se utiliza para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="84986-134">Una excepción se podría devolver debido a la incapacidad para iniciar sesión con el nombre UPN proporcionado.</span><span class="sxs-lookup"><span data-stu-id="84986-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-135">Este constructor está pensado para su uso solo en equipos unidos a dominios posteriores o Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="84986-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="84986-136">Para los tipos de dominio anteriores, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="84986-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="84986-137">Esta restricción es debido al hecho de que este constructor utiliza el [KERB_S4U_LOGON estructura](http://go.microsoft.com/fwlink/?LinkId=143533), que fue la primera presentó en Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="84986-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="84986-138">Windows ha devuelto el código de estado de Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="84986-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="84986-139">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="84986-139">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-140">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-140">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-141">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-141">-or-</span></span>  
  
 <span data-ttu-id="84986-142">El equipo no se adjunta a un dominio Windows 2003 o dominio posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-142">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="84986-143">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-143">-or-</span></span>  
  
 <span data-ttu-id="84986-144">El equipo no está ejecutando Windows 2003 o posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-144">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="84986-145">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-145">-or-</span></span>  
  
 <span data-ttu-id="84986-146">El usuario no es un miembro del dominio al que el equipo está adjunto.</span><span class="sxs-lookup"><span data-stu-id="84986-146">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-147">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-147">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-148">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="84986-149">Token de cuenta del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-149">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="84986-150">(Uso meramente informativo). Tipo de autenticación usado para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-150">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="84986-151">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado mediante el token de cuenta de Windows y el tipo de autenticación que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-152">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="84986-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="84986-153">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="84986-153">Property</span></span>|<span data-ttu-id="84986-154">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="84986-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="84986-155">El valor de la `type` parámetro se usa para establecer el <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="84986-156">Si `type` es `null`, los conjuntos de sistema de seguridad <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> a `Negotiate` en Windows Vista y versiones posteriores del sistema operativo Windows y a `Kerberos` en versiones anteriores del sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="84986-157">El sistema de seguridad no usa este valor; es solo para fines informativos.</span><span class="sxs-lookup"><span data-stu-id="84986-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-158">Puede recuperar el token representado por `userToken` mediante una llamada a código no administrado, como la API de Win32 `LogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="84986-159">Siempre la versión `userToken` mediante una llamada a la API de Win32 `CloseHandle` función.</span><span class="sxs-lookup"><span data-stu-id="84986-159">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="84986-160">Para obtener más información sobre cómo llamar a código no administrado, consulte [consumir funciones DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="84986-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-161">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor para crear una nueva instancia de la <xref:System.Security.Principal.WindowsIdentity> clase para el usuario representado mediante el token de cuenta de Windows especificado y el tipo de autenticación especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="84986-162">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84986-163"><paramref name="userToken" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="84986-163"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="84986-164">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-164">-or-</span></span>  
  
 <span data-ttu-id="84986-165"><paramref name="userToken" /> está duplicado y no es válido para la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-165"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-166">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-166">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-167">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-167">-or-</span></span>  
  
 <span data-ttu-id="84986-168">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-168">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-169">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-169">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-170">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="84986-171">Objeto que contiene la información sobre la cuenta del usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-171">The object containing the account information for the user.</span></span></param>
        <param name="context"><span data-ttu-id="84986-172">Objeto que indica las características del flujo.</span><span class="sxs-lookup"><span data-stu-id="84986-172">An object that indicates the stream characteristics.</span></span></param>
        <summary><span data-ttu-id="84986-173">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado mediante la información incluida en un flujo <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span><span class="sxs-lookup"><span data-stu-id="84986-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="84986-174">Llamar a este método con datos no es de confianza es un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="84986-174">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="84986-175">Llamar a este método solo con datos de confianza.</span><span class="sxs-lookup"><span data-stu-id="84986-175">Call this method only with trusted data.</span></span> <span data-ttu-id="84986-176">Para obtener más información, consulte [validación de datos](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="84986-176">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="84986-177"><see cref="T:System.Security.Principal.WindowsIdentity" /> no se puede serializar entre los procesos.</span><span class="sxs-lookup"><span data-stu-id="84986-177">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-178">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-178">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-179">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-179">-or-</span></span>  
  
 <span data-ttu-id="84986-180">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-180">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-181">Para poder manipular el objeto principal.</span><span class="sxs-lookup"><span data-stu-id="84986-181">for ability to manipulate the principal object.</span></span> <span data-ttu-id="84986-182">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="84986-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="84986-183">UPN del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-183">The UPN for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="84986-184">(Uso meramente informativo). Tipo de autenticación usado para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-184">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="84986-185">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado por el nombre principal de usuario (UPN) y el tipo de autenticación que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-185">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-186">El valor de la `type` parámetro se usa para establecer el <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-186">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="84986-187">Si `type` es `null`, los conjuntos de sistema de seguridad <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> a `Negotiate` en Windows Vista y versiones posteriores del sistema operativo Windows y a `Kerberos` en versiones anteriores del sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-187">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="84986-188">El sistema de seguridad no usa este valor; es solo para fines informativos.</span><span class="sxs-lookup"><span data-stu-id="84986-188">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="84986-189">El UPN identificado en `sUserPrincipalName` se utiliza para recuperar un token para ese usuario a través de la API de Win32 `LsaLogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-189">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="84986-190">A su vez ese token se utiliza para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-190">In turn that token is used to identify the user.</span></span> <span data-ttu-id="84986-191">Una excepción se podría devolver debido a la incapacidad para iniciar sesión con el nombre UPN proporcionado.</span><span class="sxs-lookup"><span data-stu-id="84986-191">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-192">Este constructor está pensado para su uso solo en equipos unidos a dominios posteriores o Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="84986-192">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="84986-193">Para los tipos de dominio anteriores, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="84986-193">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="84986-194">Esta restricción es debido al hecho de que este constructor utiliza el [KERB_S4U_LOGON estructura](http://go.microsoft.com/fwlink/?LinkId=143533), que fue la primera presentó en Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="84986-194">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="84986-195">Windows ha devuelto el código de estado de Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="84986-195">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="84986-196">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="84986-196">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-197">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-197">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-198">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-198">-or-</span></span>  
  
 <span data-ttu-id="84986-199">El equipo no se adjunta a un dominio Windows 2003 o dominio posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-199">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="84986-200">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-200">-or-</span></span>  
  
 <span data-ttu-id="84986-201">El equipo no está ejecutando Windows 2003 o posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-201">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="84986-202">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-202">-or-</span></span>  
  
 <span data-ttu-id="84986-203">El usuario no es un miembro del dominio al que el equipo está adjunto.</span><span class="sxs-lookup"><span data-stu-id="84986-203">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-204">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-204">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-205">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="84986-206">Token de cuenta del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-206">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="84986-207">(Uso meramente informativo). Tipo de autenticación usado para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-207">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="84986-208">Uno de los valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="84986-208">One of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="84986-209">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado mediante el token de cuenta de Windows, el tipo de autenticación y el tipo de cuenta de Windows que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-209">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-210">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="84986-210">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="84986-211">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="84986-211">Property</span></span>|<span data-ttu-id="84986-212">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="84986-212">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="84986-213">El valor de la `type` parámetro se usa para establecer el <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-213">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="84986-214">Si `type` es `null`, los conjuntos de sistema de seguridad <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> a `Negotiate` en Windows Vista y versiones posteriores del sistema operativo Windows y a `Kerberos` en versiones anteriores del sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-214">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="84986-215">El sistema de seguridad no usa este valor; es solo para fines informativos.</span><span class="sxs-lookup"><span data-stu-id="84986-215">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-216">Puede recuperar el token representado por `userToken` mediante una llamada a código no administrado, como la API de Win32 `LogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-216">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="84986-217">Siempre la versión `userToken` mediante una llamada a la API de Win32 `CloseHandle` función.</span><span class="sxs-lookup"><span data-stu-id="84986-217">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="84986-218">Para obtener más información sobre cómo llamar a código no administrado, consulte [consumir funciones DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="84986-218">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-219">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor para crear una nueva instancia de la <xref:System.Security.Principal.WindowsIdentity> clase para el usuario representado mediante el símbolo (token) de cuenta de Windows, el tipo de autenticación especificado y el tipo de cuenta de Windows especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-219">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="84986-220">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-220">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84986-221"><paramref name="userToken" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="84986-221"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="84986-222">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-222">-or-</span></span>  
  
 <span data-ttu-id="84986-223"><paramref name="userToken" /> está duplicado y no es válido para la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-223"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-224">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-224">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-225">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-225">-or-</span></span>  
  
 <span data-ttu-id="84986-226">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-226">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-227">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-227">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-228">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-228">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="84986-229">Token de cuenta del usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-229">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="84986-230">(Uso meramente informativo). Tipo de autenticación usado para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-230">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="84986-231">Uno de los valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="84986-231">One of the enumeration values.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="84986-232"><see langword="true" /> para indicar que el usuario está autenticado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84986-232"><see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="84986-233">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Principal.WindowsIdentity" /> para el usuario representado mediante el token de cuenta de Windows, el tipo de autenticación, el tipo de cuenta de Windows y el estado de autenticación que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-233">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-234">El valor de la `type` parámetro se usa para establecer el <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-234">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="84986-235">Si `type` es `null`, los conjuntos de sistema de seguridad <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> a `Negotiate` en Windows Vista y versiones posteriores del sistema operativo Windows y a `Kerberos` en versiones anteriores del sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-235">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="84986-236">El sistema de seguridad no usa este valor; es solo para fines informativos.</span><span class="sxs-lookup"><span data-stu-id="84986-236">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="84986-237">Puede recuperar el token representado por `userToken` mediante una llamada a código no administrado, como la API de Win32 `LogonUser` función.</span><span class="sxs-lookup"><span data-stu-id="84986-237">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="84986-238">Siempre la versión `userToken` mediante una llamada a la API de Win32 `CloseHandle` función.</span><span class="sxs-lookup"><span data-stu-id="84986-238">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="84986-239">Para obtener más información sobre cómo llamar a código no administrado, consulte [consumir funciones DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="84986-239">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-240">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor para crear una nueva instancia de la <xref:System.Security.Principal.WindowsIdentity> clase para el usuario representado mediante el símbolo (token) de cuenta de Windows, el tipo de autenticación especificado, el tipo de cuenta de Windows especificado y el estado de autenticación especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-240">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="84986-241">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-241">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84986-242"><paramref name="userToken" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="84986-242"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="84986-243">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-243">-or-</span></span>  
  
 <span data-ttu-id="84986-244"><paramref name="userToken" /> está duplicado y no es válido para la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-244"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-245">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-245">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-246">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-246">-or-</span></span>  
  
 <span data-ttu-id="84986-247">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-247">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-248">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-248">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-249">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-250">Obtiene este objeto <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> para esta instancia <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-250">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span></span></summary>
        <value><span data-ttu-id="84986-251">Devuelve un <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span><span class="sxs-lookup"><span data-stu-id="84986-251">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-252">Obtiene el tipo de autenticación que se usa para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-252">Gets the type of authentication used to identify the user.</span></span></summary>
        <value><span data-ttu-id="84986-253">Tipo de autenticación usado para identificar al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-253">The type of authentication used to identify the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-254">Esta propiedad es informativa; no se utiliza el sistema de seguridad.</span><span class="sxs-lookup"><span data-stu-id="84986-254">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="84986-255">En Windows Vista y versiones posteriores del sistema operativo Windows, el valor predeterminado de esta propiedad es `Negotiate`, que debe elegir el mejor proveedor de soporte técnico de seguridad (SSP) basándose en la directiva de seguridad configurada por cliente.</span><span class="sxs-lookup"><span data-stu-id="84986-255">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="84986-256">El valor de propiedad predeterminado para las versiones anteriores del sistema operativo Windows es `Kerberos`.</span><span class="sxs-lookup"><span data-stu-id="84986-256">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="84986-257">Windows ha devuelto el código de estado de Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="84986-257">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="84986-258">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="84986-258">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-259">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-259">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="84986-260">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-260">-or-</span></span>  
  
 <span data-ttu-id="84986-261">El equipo no se adjunta a un dominio Windows 2003 o dominio posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-261">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="84986-262">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-262">-or-</span></span>  
  
 <span data-ttu-id="84986-263">El equipo no está ejecutando Windows 2003 o posterior.</span><span class="sxs-lookup"><span data-stu-id="84986-263">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="84986-264">O bien</span><span class="sxs-lookup"><span data-stu-id="84986-264">-or-</span></span>  
  
 <span data-ttu-id="84986-265">El usuario no es un miembro del dominio al que el equipo está adjunto.</span><span class="sxs-lookup"><span data-stu-id="84986-265">The user is not a member of the domain the computer is attached to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-266">Obtiene todas las notificaciones para el usuario representado por esta identidad de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-266">Gets all claims for the user represented by this Windows identity.</span></span></summary>
        <value><span data-ttu-id="84986-267">Colección de notificaciones de este objeto <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-267">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84986-268">Crea un nuevo objeto copiado de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="84986-268">Creates a new  object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="84986-269">Copia de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="84986-269">A copy of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-270">Identifica el nombre del emisor predeterminado de <see cref="T:System.Security.Claims.ClaimsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-270">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-271">Obtiene las notificaciones que tienen la clave de la propiedad <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" />.</span><span class="sxs-lookup"><span data-stu-id="84986-271">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="84986-272">Colección de notificaciones que tienen la clave de propiedad <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" />.</span><span class="sxs-lookup"><span data-stu-id="84986-272">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84986-273">Libera los recursos que usa <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-273">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84986-274">Libera todos los recursos que usa <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-274">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-275">Llame a <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> cuando haya terminado de usar <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="84986-275">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="84986-276">El método <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> deja el <xref:System.Security.Principal.WindowsIdentity> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="84986-276">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="84986-277">Después de llamar a <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Security.Principal.WindowsIdentity> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Security.Principal.WindowsIdentity> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="84986-277">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="84986-278">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="84986-278">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-279">Realice siempre una llamada a <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="84986-279">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="84986-280">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Security.Principal.WindowsIdentity> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="84986-280">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="84986-281">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="84986-281"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="84986-282">Libera los recursos no administrados que usa <see cref="T:System.Security.Principal.WindowsIdentity" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="84986-282">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-283">Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="84986-283">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="84986-284">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="84986-284">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="84986-285"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="84986-285"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="84986-286">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Security.Principal.WindowsIdentity> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="84986-286">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="84986-287">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="84986-287">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="84986-288"><see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="84986-288"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="84986-289">Al reemplazar <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="84986-289">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="84986-290">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="84986-290">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="84986-291">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="84986-291">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84986-292">Devuelve un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que puede usar como valor centinela en el código para representar un usuario anónimo.</span><span class="sxs-lookup"><span data-stu-id="84986-292">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span></span> <span data-ttu-id="84986-293">El valor de la propiedad no representa la identidad anónima integrada que utiliza el sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-293">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span></span></summary>
        <returns><span data-ttu-id="84986-294">Objeto que representa a un usuario anónimo.</span><span class="sxs-lookup"><span data-stu-id="84986-294">An object that represents an anonymous user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-295">Esta propiedad devuelve una instancia vacía <xref:System.Security.Principal.WindowsIdentity> objeto que permite tratar las operaciones como anónimo.</span><span class="sxs-lookup"><span data-stu-id="84986-295">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="84986-296">El valor de propiedad no se corresponde con un usuario anónimo de Windows y no se puede usar para la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-296">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="84986-297">Además, tenga en cuenta que la identidad devuelta por esta propiedad no es estática; cada llamada a <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> devuelve una identidad anónima diferente.</span><span class="sxs-lookup"><span data-stu-id="84986-297">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="84986-298">Puede usar el <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propiedad para detectar el valor devuelto de <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span><span class="sxs-lookup"><span data-stu-id="84986-298">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="84986-299">Sin embargo, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detecta la identidad de Windows anónima y la identidad anónima devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="84986-299">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="84986-300">Para usar la identidad de este última, almacenar en caché el <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> devuelven el valor en lugar de depender del <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="84986-300">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-301">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> método para devolver un <xref:System.Security.Principal.WindowsIdentity> objeto que representa un usuario de Windows anónimo.</span><span class="sxs-lookup"><span data-stu-id="84986-301">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="84986-302">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-302">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84986-303">Devuelve un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que representa al usuario actual de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-303">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84986-304">Devuelve un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que representa al usuario actual de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-304">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
        <returns><span data-ttu-id="84986-305">Objeto que representa al usuario actual.</span><span class="sxs-lookup"><span data-stu-id="84986-305">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-306">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> método para devolver un <xref:System.Security.Principal.WindowsIdentity> objeto que representa al usuario de Windows actual.</span><span class="sxs-lookup"><span data-stu-id="84986-306">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="84986-307">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-307">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-308">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-308">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-309">Para poder manipular el objeto principal.</span><span class="sxs-lookup"><span data-stu-id="84986-309">for ability to manipulate the principal object.</span></span> <span data-ttu-id="84986-310">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="84986-310">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating">
          <span data-ttu-id="84986-311">Es <see langword="true" /> para devolver el objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> solamente si el subproceso está realizando la suplantación actualmente; es <see langword="false" /> para devolver el objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> del subproceso si está realizando la suplantación o el objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> del proceso si el subproceso no está realizando la suplantación actualmente.</span><span class="sxs-lookup"><span data-stu-id="84986-311"><see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span></span></param>
        <summary><span data-ttu-id="84986-312">Devuelve un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que representa la identidad de Windows para el subproceso o el proceso, en función del valor del parámetro <paramref name="ifImpersonating" />.</span><span class="sxs-lookup"><span data-stu-id="84986-312">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="84986-313">Objeto que representa a un usuario de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-313">An object that represents a Windows user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-314">Si `ifImpersonating` es `true` y el subproceso no está suplantando a, el valor devuelto <xref:System.Security.Principal.WindowsIdentity> objeto no tiene ningún valor.</span><span class="sxs-lookup"><span data-stu-id="84986-314">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="84986-315">Si `ifImpersonating` es `false` y el subproceso está realizando la suplantación, la <xref:System.Security.Principal.WindowsIdentity> para el subproceso se devuelve.</span><span class="sxs-lookup"><span data-stu-id="84986-315">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="84986-316">Si `ifImpersonating` es `false` y el subproceso no está realizando la suplantación, la <xref:System.Security.Principal.WindowsIdentity> para el proceso se devuelve.</span><span class="sxs-lookup"><span data-stu-id="84986-316">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-317">Para poder manipular el objeto principal.</span><span class="sxs-lookup"><span data-stu-id="84986-317">for ability to manipulate the principal object.</span></span> <span data-ttu-id="84986-318">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="84986-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
      </Parameters>
      <Docs>
        <param name="desiredAccess"><span data-ttu-id="84986-319">Combinación bit a bit de los valores de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="84986-319">A bitwise combination of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="84986-320">Devuelve un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que representa al usuario de Windows actual, usando para ello el nivel de acceso deseado del token que se haya especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-320">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span></span></summary>
        <returns><span data-ttu-id="84986-321">Objeto que representa al usuario actual.</span><span class="sxs-lookup"><span data-stu-id="84986-321">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-322">El `desiredAccess` parámetro especifica una máscara de acceso que identifica los tipos de acceso al token de acceso solicitados.</span><span class="sxs-lookup"><span data-stu-id="84986-322">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="84986-323">Estos tipos de acceso solicitados se comparan con la lista de control de acceso discrecional (DACL) para determinar qué tipos de acceso se conceden o deniegan del token.</span><span class="sxs-lookup"><span data-stu-id="84986-323">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-324">Para poder manipular el objeto principal.</span><span class="sxs-lookup"><span data-stu-id="84986-324">for ability to manipulate the principal object.</span></span> <span data-ttu-id="84986-325">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="84986-325">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-326">Obtiene los grupos a los que pertenece el usuario de Windows actual.</span><span class="sxs-lookup"><span data-stu-id="84986-326">Gets the groups the current Windows user belongs to.</span></span></summary>
        <value><span data-ttu-id="84986-327">Objeto que representa los grupos a los que pertenece el usuario de Windows actual.</span><span class="sxs-lookup"><span data-stu-id="84986-327">An object representing the groups the current Windows user belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-328">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.Groups%2A> propiedad para mostrar las referencias de identidad para los grupos que pertenece el usuario actual.</span><span class="sxs-lookup"><span data-stu-id="84986-328">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="84986-329">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-329">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84986-330">Permite al código suplantar a otro usuario de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-330">Allows code to impersonate a different Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84986-331">Suplanta al usuario representado por el objeto <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="84986-331">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <returns><span data-ttu-id="84986-332">Objeto que representa al usuario de Windows antes de la suplantación; se puede utilizar para revertirlo al contexto del usuario original.</span><span class="sxs-lookup"><span data-stu-id="84986-332">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-333">En plataformas de Windows NT, el usuario actual debe tener derechos suficientes para permitir la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-333">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-334">En el ejemplo siguiente se muestra cómo obtener un token de cuenta de Windows mediante una llamada a Win32 no administrada `LogonUser` función y cómo utilizar ese token para suplantar a otro usuario y, a continuación, volver a la identidad original.</span><span class="sxs-lookup"><span data-stu-id="84986-334">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84986-335">Una identidad anónima intentó realizar una suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-335">An anonymous identity attempted to perform an impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-336">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-336">A Win32 error occurred.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="84986-337">Dado que Microsoft plataformas Windows 98 y Windows Millennium Edition (Windows Me) no tienen tokens de usuario, la suplantación no puede tener lugar en estas plataformas.</span><span class="sxs-lookup"><span data-stu-id="84986-337">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="84986-338">Después de usar <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, es importante llamar a la <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> método para finalizar la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-338">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="84986-339">Identificador de un token de cuenta de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-339">The handle of a Windows account token.</span></span> <span data-ttu-id="84986-340">Normalmente, este token se recupera mediante una llamada a código no administrado, como puede ser una llamada a la función <see langword="LogonUser" /> de la API Win32.</span><span class="sxs-lookup"><span data-stu-id="84986-340">This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <see langword="LogonUser" /> function.</span></span></param>
        <summary><span data-ttu-id="84986-341">Suplanta al usuario representado por el token de usuario especificado.</span><span class="sxs-lookup"><span data-stu-id="84986-341">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="84986-342">Objeto que representa al usuario de Windows antes de la suplantación; se puede utilizar para revertir al contexto del usuario original.</span><span class="sxs-lookup"><span data-stu-id="84986-342">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-343">En plataformas de Windows NT, el usuario actual debe tener derechos suficientes para permitir la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-343">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-344">Llamar a la <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> método con un `userToken` valo <xref:System.IntPtr.Zero> es equivalente a llamar a Win32 `RevertToSelf` función.</span><span class="sxs-lookup"><span data-stu-id="84986-344">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="84986-345">Si actualmente se está suplantando otro usuario, el control vuelve al usuario original.</span><span class="sxs-lookup"><span data-stu-id="84986-345">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="84986-346">Para obtener más información sobre las llamadas a código no administrado, consulte [consumir funciones DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="84986-346">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-347">En el ejemplo siguiente se muestra cómo obtener un token de cuenta de Windows mediante una llamada a Win32 no administrada `LogonUser` función y cómo utilizar ese token para suplantar a otro usuario y, a continuación, volver a la identidad original.</span><span class="sxs-lookup"><span data-stu-id="84986-347">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="84986-348">Windows ha devuelto el código de estado de Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="84986-348">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="84986-349">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="84986-349">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="84986-350">El autor de llamada no dispone de los permisos requeridos.</span><span class="sxs-lookup"><span data-stu-id="84986-350">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-351">la capacidad de manipular el objeto principal y tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-351">for the ability to manipulate the principal object and access unmanaged code.</span></span> <span data-ttu-id="84986-352">Enumeraciones asociadas: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> y <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="84986-352">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="84986-353">Dado que Microsoft plataformas Windows 98 y Windows Millennium Edition (Windows Me) no tienen tokens de usuario, la suplantación no puede tener lugar en estas plataformas.</span><span class="sxs-lookup"><span data-stu-id="84986-353">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="84986-354">Después de usar <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, es importante llamar a la <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> método para finalizar la suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-354">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-355">Obtiene el nivel de suplantación del usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-355">Gets the impersonation level for the user.</span></span></summary>
        <value><span data-ttu-id="84986-356">Uno de los valores de la enumeración que especifica el nivel de suplantación.</span><span class="sxs-lookup"><span data-stu-id="84986-356">One of the enumeration values that specifies the impersonation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-357">Describe el nivel de suplantación que se utiliza para conectar WMI.</span><span class="sxs-lookup"><span data-stu-id="84986-357">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-358">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> propiedad para mostrar el nivel de suplantación para el usuario actual.</span><span class="sxs-lookup"><span data-stu-id="84986-358">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="84986-359">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-359">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-360">Obtiene un valor que indica si el sistema identifica la cuenta de usuario como cuenta anónima.</span><span class="sxs-lookup"><span data-stu-id="84986-360">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="84986-361"><see langword="true" /> si la cuenta de usuario es anónima; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84986-361"><see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-362">El <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propiedad detecta la identidad de Windows anónima y la identidad anónima devuelto por la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> método.</span><span class="sxs-lookup"><span data-stu-id="84986-362">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="84986-363">Cuentas anónimas normalmente sólo se encuentran únicamente desde dentro de las aplicaciones basadas en ASP.NET cuando se permite el acceso anónimo por Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="84986-363">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-364">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propiedad para detectar si el sistema identifica la cuenta de usuario como cuenta anónima.</span><span class="sxs-lookup"><span data-stu-id="84986-364">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="84986-365">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-365">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-366">Obtiene un valor que indica si Windows ha autenticado al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-366">Gets a value indicating whether the user has been authenticated by Windows.</span></span></summary>
        <value>
          <span data-ttu-id="84986-367"><see langword="true" /> si se ha autenticado al usuario; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84986-367"><see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-368">Obtiene un valor que indica si el sistema identifica la cuenta de usuario como cuenta <see cref="F:System.Security.Principal.WindowsAccountType.Guest" />.</span><span class="sxs-lookup"><span data-stu-id="84986-368">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="84986-369">Es <see langword="true" /> si la cuenta de usuario es <see cref="F:System.Security.Principal.WindowsAccountType.Guest" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84986-369"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-370">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> propiedad para devolver un valor que indica si la cuenta de usuario se identifica como un <xref:System.Security.Principal.WindowsAccountType.Guest> cuenta por el sistema.</span><span class="sxs-lookup"><span data-stu-id="84986-370">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="84986-371">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-371">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-372">Obtiene un valor que indica si el sistema identifica la cuenta de usuario como cuenta <see cref="F:System.Security.Principal.WindowsAccountType.System" />.</span><span class="sxs-lookup"><span data-stu-id="84986-372">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="84986-373">Es <see langword="true" /> si la cuenta de usuario es <see cref="F:System.Security.Principal.WindowsAccountType.System" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84986-373"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-374">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> propiedad para devolver un valor que indica si la cuenta de usuario se identifica como un <xref:System.Security.Principal.WindowsAccountType.System> cuenta por el sistema.</span><span class="sxs-lookup"><span data-stu-id="84986-374">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="84986-375">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-375">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-376">Obtiene el nombre de inicio de sesión de Windows del usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-376">Gets the user's Windows logon name.</span></span></summary>
        <value><span data-ttu-id="84986-377">Inicio de sesión de Windows correspondiente al usuario en cuyo nombre se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="84986-377">The Windows logon name of the user on whose behalf the code is being run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-378">El nombre de inicio de sesión está en el formato dominio ombreDeUsuario.</span><span class="sxs-lookup"><span data-stu-id="84986-378">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-379">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.Name%2A> propiedad que se va a obtener el nombre de inicio de sesión de Windows del usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-379">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="84986-380">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-380">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-381">Obtiene el identificador de seguridad (SID) del propietario del token.</span><span class="sxs-lookup"><span data-stu-id="84986-381">Gets the security identifier (SID) for the token owner.</span></span></summary>
        <value><span data-ttu-id="84986-382">Objeto para el propietario del token.</span><span class="sxs-lookup"><span data-stu-id="84986-382">An object for the token owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-383">El SID identifica de forma única un usuario o grupo en todas las implementaciones de Windows NT.</span><span class="sxs-lookup"><span data-stu-id="84986-383">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="84986-384">El SID devuelto identifica el propietario predeterminado SID que se aplicarán a los objetos recién creados.</span><span class="sxs-lookup"><span data-stu-id="84986-384">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-385">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.Owner%2A> propiedad para mostrar el identificador de seguridad para el propietario del token.</span><span class="sxs-lookup"><span data-stu-id="84986-385">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="84986-386">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> (clase)</span><span class="sxs-lookup"><span data-stu-id="84986-386">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle"><span data-ttu-id="84986-387">SafeAccessTokenHandle de la identidad de Windows suplantada.</span><span class="sxs-lookup"><span data-stu-id="84986-387">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="action"><span data-ttu-id="84986-388">System.Action que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="84986-388">The System.Action to run.</span></span></param>
        <summary><span data-ttu-id="84986-389">Ejecuta la acción especificada como identidad de Windows suplantada.</span><span class="sxs-lookup"><span data-stu-id="84986-389">Runs the specified action as the impersonated Windows identity.</span></span> <span data-ttu-id="84986-390">En lugar de usar una llamada al método suplantado y ejecutar la función en <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, puede usar <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> y proporcionar la función directamente como parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-390">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-391">En el ejemplo siguiente se muestra el uso de la <xref:System.Security.Principal.WindowsIdentity> clase para suplantar a un usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-391">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="84986-392">Este ejemplo pide al usuario que escriba una contraseña en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="84986-392">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="84986-393">La contraseña será visible en la pantalla, ya que la ventana de consola no admite entrada enmascarada de forma nativa.</span><span class="sxs-lookup"><span data-stu-id="84986-393">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="84986-394">Tipo de objeto usado y devuelto por la función.</span><span class="sxs-lookup"><span data-stu-id="84986-394">The type of object used by and returned by the function.</span></span></typeparam>
        <param name="safeAccessTokenHandle"><span data-ttu-id="84986-395">SafeAccessTokenHandle de la identidad de Windows suplantada.</span><span class="sxs-lookup"><span data-stu-id="84986-395">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="func"><span data-ttu-id="84986-396">System.Func que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="84986-396">The System.Func to run.</span></span></param>
        <summary><span data-ttu-id="84986-397">Ejecuta la función especificada como identidad de Windows suplantada.</span><span class="sxs-lookup"><span data-stu-id="84986-397">Runs the specified function as the impersonated Windows identity.</span></span> <span data-ttu-id="84986-398">En lugar de usar una llamada al método suplantado y ejecutar la función en <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, puede usar <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> y proporcionar la función directamente como parámetro.</span><span class="sxs-lookup"><span data-stu-id="84986-398">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <returns><span data-ttu-id="84986-399">Devuelve el resultado de la función.</span><span class="sxs-lookup"><span data-stu-id="84986-399">Returns the result of the function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84986-400">En el ejemplo siguiente se muestra el uso de la <xref:System.Security.Principal.WindowsIdentity> clase para suplantar a un usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-400">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="84986-401">Este ejemplo pide al usuario que escriba una contraseña en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="84986-401">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="84986-402">La contraseña será visible en la pantalla, ya que la ventana de consola no admite entrada enmascarada de forma nativa.</span><span class="sxs-lookup"><span data-stu-id="84986-402">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="84986-403">Origen del evento de deserialización.</span><span class="sxs-lookup"><span data-stu-id="84986-403">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="84986-404">Implementa la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" />. El evento de deserialización vuelve a llamar a este método cuando se completa la deserialización.</span><span class="sxs-lookup"><span data-stu-id="84986-404">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="84986-405">Objeto que contiene la información necesaria para serializar <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="84986-405">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="84986-406">Objeto que contiene el origen y el destino del flujo serializado asociado a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="84986-406">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="84986-407">Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con la información de contexto lógica que se necesita para volver a crear una instancia de este contexto de ejecución.</span><span class="sxs-lookup"><span data-stu-id="84986-407">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-408">Este método establece una <xref:System.Runtime.Serialization.SerializationInfo> con la operación lógica, llame a la información de contexto.</span><span class="sxs-lookup"><span data-stu-id="84986-408">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="84986-409">Durante la deserialización, el objeto de contexto de ejecución se reconstituye a partir del <xref:System.Runtime.Serialization.SerializationInfo> transmitida en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="84986-409">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="84986-410">Para obtener más información, vea <xref:System.Runtime.Serialization.SerializationInfo>.</span><span class="sxs-lookup"><span data-stu-id="84986-410">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="84986-411">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="84986-411">requires full trust for the immediate caller.</span></span> <span data-ttu-id="84986-412">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="84986-412">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-413">Obtiene el token de cuenta de Windows que corresponde al usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-413">Gets the Windows account token for the user.</span></span></summary>
        <value><span data-ttu-id="84986-414">Identificador del token de acceso asociado al subproceso de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="84986-414">The handle of the access token associated with the current execution thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-415">No libere explícitamente el token de cuenta que es devuelto por la <xref:System.Security.Principal.WindowsIdentity.Token%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="84986-415">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="84986-416">El token se libera por la <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> método, que puede llamar en el código.</span><span class="sxs-lookup"><span data-stu-id="84986-416">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="84986-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> se llama también automáticamente por el recolector de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="84986-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-418">El token de cuenta que es devuelto por la <xref:System.Security.Principal.WindowsIdentity.Token%2A> propiedad es un duplicado del token de Windows que se utiliza para crear la <xref:System.Security.Principal.WindowsIdentity> del objeto y se libera automáticamente con .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="84986-418">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="84986-419">Esto es diferente del token de cuenta (la `userToken` parámetro para el constructor), que se usa para crear la <xref:System.Security.Principal.WindowsIdentity> objeto.</span><span class="sxs-lookup"><span data-stu-id="84986-419">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="84986-420">`userToken` es un token de cuenta de Windows que se crea mediante una llamada a `LogonUser` y debe cerrarse para evitar una pérdida de memoria.</span><span class="sxs-lookup"><span data-stu-id="84986-420">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84986-421">El código siguiente muestra el uso de la <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> propiedad que se va a obtener el token de cuenta de Windows para el usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-421">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="84986-422">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Principal.WindowsIdentity> clase.</span><span class="sxs-lookup"><span data-stu-id="84986-422">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="84986-423">la capacidad tener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="84986-423">for the ability to access unmanaged code.</span></span> <span data-ttu-id="84986-424">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="84986-424">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-425">Obtiene el identificador de seguridad (SID) del usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-425">Gets the security identifier (SID) for the user.</span></span></summary>
        <value><span data-ttu-id="84986-426">Objeto para el usuario.</span><span class="sxs-lookup"><span data-stu-id="84986-426">An object for the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84986-427">El SID identifica de forma única un usuario o grupo en todas las implementaciones de Windows NT.</span><span class="sxs-lookup"><span data-stu-id="84986-427">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84986-428">El <xref:System.Security.Principal.WindowsIdentity> objeto devuelto por la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> método no es el mismo que el usuario anónimo de Windows.</span><span class="sxs-lookup"><span data-stu-id="84986-428">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="84986-429">Esta propiedad obtiene `null` para un usuario anónimo representado por la <xref:System.Security.Principal.WindowsIdentity> objeto devuelto por la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> método; no obtiene el SID que representa un usuario de Windows anónimo.</span><span class="sxs-lookup"><span data-stu-id="84986-429">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84986-430">Obtiene las notificaciones que tienen la clave de la propiedad <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" />.</span><span class="sxs-lookup"><span data-stu-id="84986-430">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="84986-431">Colección de notificaciones que tienen la clave de propiedad <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" />.</span><span class="sxs-lookup"><span data-stu-id="84986-431">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>