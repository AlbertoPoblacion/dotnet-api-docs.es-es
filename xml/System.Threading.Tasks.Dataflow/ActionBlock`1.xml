<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ActionBlock`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58afab1dc1d52c0a32b999d4d940bfbda65ea0736.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8afab1dc1d52c0a32b999d4d940bfbda65ea0736</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
          <source>The type of data that this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> operates on.</source>
          <target state="translated">El tipo de datos en el que este <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> funciona.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
          <source>Provides a dataflow block that invokes a provided <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> delegate for every data element received.</source>
          <target state="translated">Proporciona un bloque de flujo de datos que invoca un delegado proporcionado de <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> para cada elemento de datos recibido.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> clase para llevar a cabo varios cálculos mediante bloques de flujo de datos y devuelve el tiempo necesario para realizar los cálculos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify the Degree of Parallelism in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <bpt id="p1">[</bpt>Cómo: especificar el grado de paralelismo en un Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})">
          <source>The action to invoke with each data element received.</source>
          <target state="translated">Acción que se va a invocar con cada elemento de datos recibido.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> class with the specified action.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> con la acción especificada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})">
          <source>The action to invoke with each data element received.</source>
          <target state="translated">Acción que se va a invocar con cada elemento de datos recibido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> class with the specified action.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> con la acción especificada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The action to invoke with each data element received.</source>
          <target state="translated">Acción que se va a invocar con cada elemento de datos recibido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph>.</source>
          <target state="translated">Las opciones con las que se va a configurar este <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> class with the specified action and configuration options.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> con la acción y opciones de configuración especificadas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29&gt;</ph> constructor para crear un nuevo <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify the Degree of Parallelism in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <bpt id="p1">[</bpt>Cómo: especificar el grado de paralelismo en un Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The action to invoke with each data element received.</source>
          <target state="translated">Acción que se va a invocar con cada elemento de datos recibido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph>.</source>
          <target state="translated">Las opciones con las que se va a configurar este <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> class with the specified action and configuration options.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /&gt;</ph> con la acción y opciones de configuración especificadas.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
          <source><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</source>
          <target state="translated">Indica al bloque de flujo de datos que no debe aceptar o generar más mensajes ni usar más mensajes pospuestos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete (so that its  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> task will enter a final state) after it has processed all previously available data.</source>
          <target state="translated">Después de <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A&gt;</ph> ha sido llama en un bloque de flujo de datos, ese bloque se completará (para que su <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> tarea pasará a un estado final) una vez procesado todos los datos disponibles anteriormente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>This method will not block waiting for completion to occur, but will initiate the request.</source>
          <target state="translated">Este método, no se bloqueará esperando finalización se produzca, pero se iniciará la solicitud.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>To wait for completion to occur, use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> property.</source>
          <target state="translated">Para esperar la finalización se produzca, use la <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A&gt;</ph> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages .</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A&gt;</ph> método para indicar a los bloques de flujo de datos que no debe aceptar o generar más mensajes ni consumir los mensajes más pospuestos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify the Degree of Parallelism in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <bpt id="p1">[</bpt>Cómo: especificar el grado de paralelismo en un Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>Gets a  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> object that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">Obtiene un objeto <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> que representa la operación asincrónica y la finalización del bloque de flujo de datos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>The completed task.</source>
          <target state="translated">Tarea completada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">Un bloque de flujo de datos se considera completada cuando no está procesando actualmente un mensaje y cuando se garantiza que no se procesará más mensajes.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state  when the associated block has completed.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> le transición a un estado completado cuando se haya completado el bloque asociado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">Realizará la transición a la <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> semántica definido por el estado cuando el bloque termine de procesarse correctamente según el bloque de flujo de datos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</source>
          <target state="translated">Realizará la transición a la <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> cuando el bloque de flujo de datos ha completado el procesamiento antes de tiempo debido a una excepción no controlada y realizará la transición a la <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> estado cuando el bloque de flujo de datos finaliza el procesamiento antes de tiempo después de recibir una solicitud de cancelación.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property returns an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exception that contains one or more exceptions that caused the block to fail.</source>
          <target state="translated">Si la tarea se completa con el <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> estado, su <ph id="ph2">`Exception`</ph> propiedad devuelve un <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> la excepción que contiene una o más excepciones que ha causado el bloqueo de un error.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> property to wait for all messages to propagate through the network.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> propiedad que se va a esperar para que todos los mensajes se propaguen a través de la red.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify the Degree of Parallelism in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <bpt id="p1">[</bpt>Cómo: especificar el grado de paralelismo en un Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount">
          <source>Gets the number of input items waiting to be processed by this block.</source>
          <target state="translated">Obtiene el número de elementos de entrada en espera de ser procesados por este bloque.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount">
          <source>The number of input items waiting to be processed by this block.</source>
          <target state="translated">El número de elementos de entrada en espera de ser procesados por este bloque.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A&gt;</ph> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A&gt;</ph> no incluye todos los elementos que se están procesando actualmente por el bloque o los elementos que ya se ha procesado por el bloque.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
          <source>The item being offered to the target.</source>
          <target state="translated">Elemento que se va a ofrecer al destino.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
          <source>Posts an item to the target dataflow block.</source>
          <target state="translated">Publica un elemento en el bloque de flujo de datos de destino.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is posted to the dataflow block; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se envía al bloque de flujo de datos; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A&gt;</ph> method to post an item to the target dataflow block.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A&gt;</ph> método para exponer un elemento en el bloque de flujo de datos de destino.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify the Degree of Parallelism in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <bpt id="p1">[</bpt>Cómo: especificar el grado de paralelismo en un Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The exception that caused the faulting.</source>
          <target state="translated">Excepción que provocó el error.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the dataflow block to complete in a faulted state.</source>
          <target state="translated">Hace que el bloque de flujo de datos se completar con errores.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> has been called on a dataflow block, that block will complete and its  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> task will enter a final state.</source>
          <target state="translated">Después de <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> ha sido llamado en un bloque de flujo de datos, ese bloque se completará y su <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A&gt;</ph> tarea pasará a un estado final.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</source>
          <target state="translated">Un error en un bloque, como con cancelar un bloque, hace que los mensajes almacenados en búfer (mensajes de entrada sin procesar así como mensajes de salida unoffered) se perderán.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source><ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The header of the message being offered.</source>
          <target state="translated">Encabezado del mensaje que se va a ofrecer.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The value of the message being offered.</source>
          <target state="translated">Valor del mensaje que se va a ofrecer.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The dataflow block that is offering the message.</source>
          <target state="translated">Bloque de flujo de datos que ofrece el mensaje.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>This may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to instruct the target to call <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> synchronously during the call to <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>, prior to returning <ph id="ph4">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, in order to consume the message; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para indicar al destino que llama a <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> de manera sincrónica durante la llamada a <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>, antes de devolver <ph id="ph4">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, para consumir el mensaje; en caso contrario, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</source>
          <target state="translated">Proporciona un mensaje para el bloque de flujo de datos y le ofrece la posibilidad de utilizarlo o posponerlo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The status of the offered message.</source>
          <target state="translated">Estado del mensaje ofrecido.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was accepted by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> is returned, and the source should no longer use the offered message, because it is now owned by the target.</source>
          <target state="translated">Si el destino aceptó el mensaje, se devuelve <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> y el origen ya no debe usar más el mensaje ofrecido, ya que ahora es propiedad del destino.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was postponed by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</source>
          <target state="translated">Si el destino pospuso el mensaje, se devuelve <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> como notificación de que el destino puede intentar más adelante consumir o reservar el mensaje; mientras tanto, el origen todavía posee el mensaje y puede ofrecerlo a otros bloques.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target would have otherwise postponed message, but source was <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is returned.</source>
          <target state="translated">Si el destino hubiera pospuesto de otra forma el mensaje, pero el origen fuera <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se devuelve <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph> is returned.</source>
          <target state="translated">Si el destino intentó aceptar el mensaje pero no pudo hacerlo porque el origen entrega el mensaje a otro destino o lo descarta simplemente, se devuelve <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is returned.</source>
          <target state="translated">Si el destino eligió no aceptar el mensaje, se devuelve <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message and will never accept another message from this source, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph> is returned.</source>
          <target state="translated">Si el destino eligió no aceptar el mensaje y nunca aceptará otro mensaje de este origen, se devuelve <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;TInput&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>-or- <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> may be <ph id="ph2">&lt;see langword="true" /&gt;</ph> only if provided with a non-null <ph id="ph3">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">O bien <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> puede ser <ph id="ph2">&lt;see langword="true" /&gt;</ph> solo si se proporciona un valor <ph id="ph3">&lt;paramref name="source" /&gt;</ph> que no es NULL.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
          <source>Returns a string that represents the formatted name of this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Devuelve una cadena que representa el nombre con formato de esta instancia de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
          <source>A string that represents the formatted name of this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Cadena que representa el nombre con formato de esta instancia de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
          <source>Inherited from <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Se hereda de <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">Usa el <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> opción.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>