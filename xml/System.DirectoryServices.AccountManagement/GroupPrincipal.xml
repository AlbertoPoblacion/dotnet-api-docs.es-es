<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9199792237c4efced39a7ba99dff2e2cc1a18e24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsula las cuentas de grupo. Las cuentas de grupo pueden ser colecciones arbitrarias de objetos de entidades de seguridad o cuentas creadas con fines administrativos.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica el servidor o dominio en el que se realizan las operaciones.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> utilizando el contexto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cuenta de entidad de seguridad de grupo no se conserva cuando se crea. Para conservar la cuenta, llame a la <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica el servidor o dominio en el que se realizan las operaciones.</param>
        <param name="samAccountName">Nombre de cuenta SAM de esta entidad de seguridad.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> y la asigna al contexto especificado y al nombre de cuenta SAM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cuenta de entidad de seguridad de grupo no se conserva cuando se crea. Para conservar la cuenta, llame a la <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desecha la instancia actual del objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve un objeto de entidad de seguridad de grupo que coincide con el valor de identidad especificado.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica el servidor o dominio en el que se realizan las operaciones.</param>
        <param name="identityValue">Identidad de la entidad de seguridad de grupo. Este parámetro puede ser cualquier formato que se encuentra en la enumeración <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</param>
        <summary>Devuelve un objeto de entidad de seguridad de grupo que coincide con el valor de identidad especificado.</summary>
        <returns>Objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que coincide con el valor y tipo de identidad especificado, o null si no se encuentra ninguna coincidencia.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">Se encontraron varios objetos de entidad de seguridad de grupo que coinciden con objeto de grupo actual.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica el servidor o dominio en el que se realizan las operaciones.</param>
        <param name="identityType">Valor de enumeración <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> que especifica el formato del parámetro <c>identityValue</c>.</param>
        <param name="identityValue">Identidad de la entidad de seguridad de grupo. Este parámetro puede ser cualquier formato que se encuentra en la enumeración <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</param>
        <summary>Devuelve un objeto de entidad de seguridad de grupo que coincide con el tipo y valor de identidad especificados. Esta versión del método <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> determina el formato del valor de identidad.</summary>
        <returns>Objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que coincide con el valor y el tipo de identidad especificados o su valor es null si no se encuentra ninguna coincidencia.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">Se encontraron varios objetos de entidad de seguridad de grupo que coinciden con objeto de grupo actual.</exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">El valor de identidad no es un valor de enumeración <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> válido.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve una colección de los objetos de entidad de seguridad contenidos en el grupo.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de los objetos de entidad de seguridad contenidos en el grupo.</summary>
        <returns>Objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> que contiene los objetos de entidades de seguridad que son miembros del grupo o una colección vacía si el grupo no tiene miembros.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no busca en el grupo actual recursivamente. Por lo tanto, los objetos de grupo se pueden devolver en la colección de objetos de entidad de seguridad.  
  
 Los miembros se devuelven independientemente del contexto. Por ejemplo, si un contexto de AD DS se basa en "CN = SpecialUsers, DC = Fabrikam, DC = com", el conjunto PrincipalFindResult también incluirá los miembros del grupo que se encuentran en "CN = NormalUsers, DC = Fabrikam, DC = com" también, aunque estén en un ámbito que no forme parte del contexto que se busca. La colección principal devuelta también puede contener a miembros que se encuentran en un almacén diferente del grupo.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Valor booleano que especifica si se busca en el grupo recursivamente.</param>
        <summary>Devuelve una colección de los objetos de entidad de seguridad contenidos en el grupo. Cuando el marcador recursivo se establece en true, este método busca el grupo actual recursivamente y devuelve todos los miembros del grupo anidados.</summary>
        <returns>Objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> que contiene los objetos de entidades de seguridad que son miembros del grupo o una colección vacía si el grupo no tiene miembros.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La colección principal devuelta no contiene objetos de grupo cuando el marcador recursivo se establece en `true`; solo se devuelven los nodos hoja. Por ejemplo, cuando un grupo que contenga un objeto de equipo y un objeto de grupo (con solo las entidades de usuario) es la búsqueda de forma recursiva, la colección devuelta contiene el objeto de equipo y los objetos de entidad de seguridad de usuario en el grupo anidado. Puesto que el objeto de grupo no es una hoja, incluso cuando está vacía, no se devuelve en la búsqueda recursiva.  Cuando se establece la marca recursiva en `false`, la colección devuelta puede contener objetos de grupo.  
  
 Los miembros se devuelven independientemente del contexto. Por ejemplo, si un contexto de AD DS se basa en "CN = SpecialUsers, DC = Fabrikam, DC = com", el conjunto PrincipalFindResult también incluirá los miembros del grupo que se encuentran en "CN = NormalUsers, DC = Fabrikam, DC = com" también, aunque estén en un ámbito que no forme parte del contexto que se busca. La colección principal devuelta también puede contener a miembros que se encuentran en un almacén diferente del grupo.  
  
   
  
## Examples  
 El código siguiente se conecta al dominio LDAP "fabrikam.com" con el nombre de usuario establecido en "administrador" y la contraseña establecida en "SecretPwd123" en el <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  
  
 Se realiza una búsqueda para buscar el grupo que tiene el nombre "Domain Admins" en el contenedor especificado en el <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor "DC = fabrikam, DC = com." Si se encuentra el grupo, a continuación, se enumeran todas las entidades de seguridad que son miembros de este grupo, que incluye a los miembros recursivos,  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una enumeración <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que acepta valores Null y especifica el ámbito de esta entidad de seguridad de grupo.</summary>
        <value>Valor de enumeración <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que acepta valores null y especifica el ámbito de este grupo o null si no se ha establecido ningún ámbito.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Puede que la aplicación no establezca esta propiedad en null.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor booleano que acepta valores Null e indica si el grupo tiene habilitada la seguridad.</summary>
        <value>
          Es <see langword="true" /> si el grupo tiene habilitada la seguridad o null si no se ha conservado el grupo; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando esta propiedad devuelve false, el grupo se temporalmente no con seguridad habilitada. Cuando el <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> se restablece la propiedad true más adelante, el grupo tendrán las mismas propiedades que antes de que se estableció en false.  
  
 Si la entidad de seguridad no es persistente en el almacén, esta propiedad devuelve null. Después de que se conserva la entidad de seguridad, la configuración predeterminada con la seguridad habilitada depende del almacén. Los almacenes de AD DS y AD LDS deshabilitan nuevas entidades de seguridad cuando se conservan, mientras que SAM permite nuevas entidades de seguridad cuando se conservan.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Puede que la aplicación no establezca esta propiedad en null.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos de entidad de seguridad que representan los miembros del grupo.</summary>
        <value>Objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> que contiene los objetos de entidades de seguridad que representan los miembros del grupo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los grupos de AD DS, la <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> esta propiedad incluye las entidades de seguridad de usuario que son miembros del grupo debido a su atributo primaryId. Cuando el grupo contiene estos tipos de miembros, se aplican las restricciones siguientes:  
  
-   El <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> no se puede usar el método para quitar los miembros que forman parte del grupo debido a su atributo primaryId.  
  
-   El <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> método no se puede usar para borrar los miembros que forman parte del grupo debido a su atributo primaryId.  
  
   
  
## Examples  
 El código siguiente se conecta al dominio LDAP "fabrikam.com" con el nombre de usuario establecido en "administrador" y la contraseña establecida en "SecretPwd123" en el <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  
  
 Se realiza una búsqueda para buscar el grupo que tiene el nombre "Domain Admins" en el contenedor especificado en el <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, "DC = fabrikam, DC = com." Si se encuentra el grupo, el usuario que tiene el nombre "John Smith" se quita del grupo y el usuario que tiene el nombre "Jim Daly" se agrega al grupo  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>