<Type Name="PipeStream" FullName="System.IO.Pipes.PipeStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4ce12188b120bb90db9e7bbf08c300b37b4511a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420109" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PipeStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeStream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeStream abstract : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f3ce6-101">Expone un objeto <see cref="T:System.IO.Stream" /> alrededor de una canalización, que admite tanto canalizaciones anónimas como canalizaciones con nombre.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3ce6-101">Exposes a <see cref="T:System.IO.Stream" /> object around a pipe, which supports both anonymous and named pipes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-102">La <xref:System.IO.Pipes.PipeStream> clase proporciona la clase base para las operaciones de canalizaciones con nombre y anónimos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-102">The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework.</span></span> <span data-ttu-id="f3ce6-103">Use la <xref:System.IO.Pipes.NamedPipeServerStream> y <xref:System.IO.Pipes.NamedPipeClientStream> clases para las operaciones de canalización con nombre.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-103">Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations.</span></span> <span data-ttu-id="f3ce6-104">Use la <xref:System.IO.Pipes.AnonymousPipeServerStream> y <xref:System.IO.Pipes.AnonymousPipeClientStream> clases para operaciones de canalización anónimas.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-104">Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.</span></span>  
  
 <span data-ttu-id="f3ce6-105">Para obtener más información acerca de las canalizaciones, consulte [canalizaciones](~/docs/standard/io/pipe-operations.md).</span><span class="sxs-lookup"><span data-stu-id="f3ce6-105">For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md).</span></span> <span data-ttu-id="f3ce6-106">Para obtener un ejemplo de canalizaciones anónimas, vea [Cómo: usar canalizaciones anónimas para la comunicación entre procesos Local](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span><span class="sxs-lookup"><span data-stu-id="f3ce6-106">For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span> <span data-ttu-id="f3ce6-107">Para obtener un ejemplo de canalizaciones con nombre, vea [Cómo: uso de canalizaciones con nombre para la comunicación de red entre procesos](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).</span><span class="sxs-lookup"><span data-stu-id="f3ce6-107">For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="f3ce6-108">de plena confianza para los herederos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3ce6-108">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="f3ce6-109">Esta clase no puede heredarse mediante código de confianza parcial.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3ce6-109">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-110">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.PipeStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-110">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (direction As PipeDirection, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeStream(System::IO::Pipes::PipeDirection direction, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="f3ce6-111">Uno de los valores de <see cref="T:System.IO.Pipes.PipeDirection" /> que indica la dirección del objeto de canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-111">One of the <see cref="T:System.IO.Pipes.PipeDirection" /> values that indicates the direction of the pipe object.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="f3ce6-112">Valor <see cref="T:System.Int32" /> positivo mayor o igual que 0 que indica el tamaño del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-112">A positive <see cref="T:System.Int32" /> value greater than or equal to 0 that indicates the buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-113">Inicializa una instancia nueva de la clase <see cref="T:System.IO.Pipes.PipeStream" /> con el valor de <see cref="T:System.IO.Pipes.PipeDirection" /> y el tamaño de búfer especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-113">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class using the specified <see cref="T:System.IO.Pipes.PipeDirection" /> value and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-114">Este constructor utiliza un modo de transmisión de canalización de <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-114">This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-115">
            <paramref name="direction" /> no es un valor <see cref="T:System.IO.Pipes.PipeDirection" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-115">
              <paramref name="direction" /> is not a valid <see cref="T:System.IO.Pipes.PipeDirection" /> value.</span>
          </span>
          <span data-ttu-id="f3ce6-116">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-116">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-117">
            <paramref name="bufferSize" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-117">
              <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, int32 outBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (direction As PipeDirection, transmissionMode As PipeTransmissionMode, outBufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeStream(System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeTransmissionMode transmissionMode, int outBufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="f3ce6-118">Uno de los valores de <see cref="T:System.IO.Pipes.PipeDirection" /> que indica la dirección del objeto de canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-118">One of the <see cref="T:System.IO.Pipes.PipeDirection" /> values that indicates the direction of the pipe object.</span>
          </span>
        </param>
        <param name="transmissionMode">
          <span data-ttu-id="f3ce6-119">Uno de los valores de <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> que indica el modo de transmisión del objeto de canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-119">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates the transmission mode of the pipe object.</span>
          </span>
        </param>
        <param name="outBufferSize">
          <span data-ttu-id="f3ce6-120">Valor <see cref="T:System.Int32" /> positivo mayor o igual que 0 que indica el tamaño del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-120">A positive <see cref="T:System.Int32" /> value greater than or equal to 0 that indicates the buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-121">Inicializa una instancia nueva de la clase <see cref="T:System.IO.Pipes.PipeStream" /> con el valor de <see cref="T:System.IO.Pipes.PipeDirection" />, <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> y el tamaño de búfer especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeStream" /> class using the specified <see cref="T:System.IO.Pipes.PipeDirection" />, <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, and buffer size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-122">
            <paramref name="direction" /> no es un valor <see cref="T:System.IO.Pipes.PipeDirection" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-122">
              <paramref name="direction" /> is not a valid <see cref="T:System.IO.Pipes.PipeDirection" /> value.</span>
          </span>
          <span data-ttu-id="f3ce6-123">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-123">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-124">
            <paramref name="transmissionMode" /> no es un valor <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-124">
              <paramref name="transmissionMode" /> is not a valid <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value.</span>
          </span>
          <span data-ttu-id="f3ce6-125">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-125">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-126">
            <paramref name="bufferSize" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-126">
              <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f3ce6-127">Búfer en el que se leen los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-127">The buffer to read data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f3ce6-128">Desplazamiento de bytes de <c>buffer</c> donde se va a empezar a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-128">The byte offset in <c>buffer</c> at which to begin reading.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3ce6-129">Número máximo de bytes que se pueden leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-129">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f3ce6-130">Método al que se va a llamar cuando finalice la lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-130">The method to call when the asynchronous read operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f3ce6-131">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-131">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-132">Comienza una operación de lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-132">Begins an asynchronous read operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-133">Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-133">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-134">Pasar el valor devuelto <xref:System.IAsyncResult> el objeto a la <xref:System.IO.Pipes.PipeStream.EndRead%2A> método para determinar el número de bytes que se leyeron y para liberar recursos del sistema operativo utilizados en la lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-134">Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="f3ce6-135"><xref:System.IO.Pipes.PipeStream.EndRead%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-135"><xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span> <span data-ttu-id="f3ce6-136">Esto puede hacerse en el mismo código que llama <xref:System.IO.Pipes.PipeStream.BeginRead%2A> o en una devolución de llamada que se pasa a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-136">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="f3ce6-137">Use la <xref:System.IO.Pipes.PipeStream.CanRead%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-137">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="f3ce6-138">Si la canalización está cerrada o se pasa un argumento no válido a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, las excepciones correspondientes se generan inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-138">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="f3ce6-139">Se producen errores que se producen durante una solicitud de lectura asincrónica en el subproceso del grupo que está realizando la solicitud.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-139">Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="f3ce6-140">Las excepciones se producen cuando el código llama a la <xref:System.IO.Pipes.PipeStream.EndRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-140">The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-141">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-141">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-142">
            <paramref name="offset" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-142">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3ce6-143">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-143">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-144">
            <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-144">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-145">
            <paramref name="count" /> es mayor que el número de bytes disponible en <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-145">
              <paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-146">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-146">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-147">Esta canalización no es compatible con operaciones de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-147">The pipe does not support read operations.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-148">La canalización está desconectada, esperando para conectarse, o bien el controlador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-148">The pipe is disconnected, waiting to connect, or the handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-149">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-149">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f3ce6-150">Búfer que contiene los datos que se van a escribir en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-150">The buffer that contains the data to write to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f3ce6-151">Desplazamiento de bytes de base cero de <c>buffer</c> en donde se van a empezar a copiar bytes en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-151">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3ce6-152">Número máximo de bytes que se pueden escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-152">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f3ce6-153">Método al que se va a llamar cuando finalice la escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-153">The method to call when the asynchronous write operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f3ce6-154">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-154">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-155">Comienza una operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-155">Begins an asynchronous write operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-156">Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-156">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-157"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-157"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span> <span data-ttu-id="f3ce6-158">Esto puede hacerse en el mismo código que llama <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> o en una devolución de llamada que se pasa a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-158">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="f3ce6-159">Use la <xref:System.IO.Pipes.PipeStream.CanWrite%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de escritura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-159">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="f3ce6-160">Si la canalización está cerrada o se pasa un argumento no válido a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, las excepciones correspondientes se generan inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-160">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="f3ce6-161">Se producen errores que se producen durante una solicitud de escritura asincrónica en el subproceso del grupo que está realizando la solicitud.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-161">Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="f3ce6-162">Las excepciones se producen cuando el código llama a la <xref:System.IO.Pipes.PipeStream.EndWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-162">The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-163">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-163">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-164">
            <paramref name="offset" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-164">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3ce6-165">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-165">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-166">
            <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-166">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-167">
            <paramref name="count" /> es mayor que el número de bytes disponible en <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-167">
              <paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-168">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-168">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-169">La canalización no admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-169">The pipe does not support write operations.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-170">La canalización está desconectada, esperando para conectarse, o bien el controlador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-170">The pipe is disconnected, waiting to connect, or the handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-171">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-171">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-172">Obtiene un valor que indica si la secuencia actual admite operaciones de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-172">Gets a value indicating whether the current stream supports read operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-173">
            <see langword="true" /> si la secuencia admite operaciones de lectura; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-173">
              <see langword="true" /> if the stream supports read operations; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-174">Si el <xref:System.IO.Pipes.PipeStream> objeto está cerrado, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-174">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-175">Obtiene un valor que indica si la secuencia actual admite operaciones de búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-175">Gets a value indicating whether the current stream supports seek operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-176">
            <see langword="false" /> en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-176">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-177">Si el <xref:System.IO.Pipes.PipeStream> objeto está cerrado, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-177">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-178">Obtiene un valor que indica si la secuencia actual admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-178">Gets a value indicating whether the current stream supports write operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-179">
            <see langword="true" /> si la secuencia admite operaciones de escritura; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-179">
              <see langword="true" /> if the stream supports write operations; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-180">Si el <xref:System.IO.Pipes.PipeStream> objeto está cerrado, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-180">If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPipePropertyOperations">
      <MemberSignature Language="C#" Value="protected internal virtual void CheckPipePropertyOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CheckPipePropertyOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CheckPipePropertyOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CheckPipePropertyOperations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-181">Comprueba si la canalización está en el estado apropiado para obtener o establecer las propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-181">Verifies that the pipe is in a proper state for getting or setting properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckReadOperations">
      <MemberSignature Language="C#" Value="protected internal void CheckReadOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckReadOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckReadOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckReadOperations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-182">Comprueba si la canalización está en estado conectado para las operaciones de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-182">Verifies that the pipe is in a connected state for read operations.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckWriteOperations">
      <MemberSignature Language="C#" Value="protected internal void CheckWriteOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckWriteOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckWriteOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckWriteOperations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-183">Comprueba si la canalización está en estado conectado para las operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-183">Verifies that the pipe is in a connected state for write operations.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f3ce6-184">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-184">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-185">Libera los recursos no administrados utilizados por la clase <see cref="T:System.IO.Pipes.PipeStream" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-185">Releases the unmanaged resources used by the <see cref="T:System.IO.Pipes.PipeStream" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-186">Se llama a este método público <xref:System.ComponentModel.Component.Dispose%2A> método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-186">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f3ce6-187"><xref:System.ComponentModel.Component.Dispose%2A> se invoca el protegido <xref:System.IO.Pipes.PipeStream.Dispose%2A> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-187"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f3ce6-188"><xref:System.Object.Finalize%2A> invoca <xref:System.IO.Pipes.PipeStream.Dispose%2A> con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-188"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`.</span></span> <span data-ttu-id="f3ce6-189">Cuando el parámetro que se va a eliminar es `true`, este método libera todos los recursos retenidos por los objetos administrados que este <xref:System.IO.Pipes.PipeStream> referencias a objetos.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-189">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references.</span></span> <span data-ttu-id="f3ce6-190">Este método invoca al método <xref:System.IO.Pipes.PipeStream.Dispose%2A> de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-190">This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f3ce6-191">En las clases derivadas, ponga todos los <see cref="T:System.IO.Stream" /> la lógica de limpieza en el <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3ce6-191">In derived classes, put all <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="f3ce6-192">
              <see cref="M:System.ComponentModel.Component.Dispose" /> puede recibir varias llamadas de otros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3ce6-192">
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="f3ce6-193">Al invalidar <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3ce6-193">When overriding <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            </span>
            <span data-ttu-id="f3ce6-194">Para obtener más información sobre cómo implementar <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3ce6-194">For more information about how to implement <see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="f3ce6-195">Para obtener más información acerca de <see cref="M:System.ComponentModel.Component.Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3ce6-195">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="f3ce6-196">Referencia a la solicitud asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-196">The reference to the pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-197">Finaliza una solicitud de lectura asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-197">Ends a pending asynchronous read request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-198">El número máximo de bytes leídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-198">The number of bytes that were read.</span>
          </span>
          <span data-ttu-id="f3ce6-199">Cuando se devuelve un valor igual a 0 significa que se alcanzó el final de la secuencia (se cerró la canalización).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-199">A return value of 0 indicates the end of the stream (the pipe has been closed).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-200">Este método devuelve el número de bytes leídos en la matriz de bytes especificada por la llamada anterior a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-200">This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="f3ce6-201">Pasar el valor devuelto <xref:System.IAsyncResult> el objeto a la <xref:System.IO.Pipes.PipeStream.EndRead%2A> método para determinar el número de bytes que se leyeron y para liberar recursos del sistema operativo utilizados en la lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-201">Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="f3ce6-202"><xref:System.IO.Pipes.PipeStream.EndRead%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-202"><xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span> <span data-ttu-id="f3ce6-203">Esto puede hacerse en el mismo código que llama <xref:System.IO.Pipes.PipeStream.BeginRead%2A> o en una devolución de llamada que se pasa a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-203">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="f3ce6-204">Use la <xref:System.IO.Pipes.PipeStream.CanRead%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-204">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="f3ce6-205">Si la canalización está cerrada o se pasa un argumento no válido a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, las excepciones correspondientes se generan inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-205">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="f3ce6-206">Se producen errores que se producen durante una solicitud de lectura asincrónica en el subproceso del grupo que está realizando la solicitud.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-206">Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="f3ce6-207">Las excepciones se producen cuando el código llama a la <xref:System.IO.Pipes.PipeStream.EndRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-207">The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-208">
            <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-208">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-209">
            <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-209">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-210">La secuencia está cerrada o se produjo un error interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-210">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="f3ce6-211">Referencia a la solicitud asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-211">The reference to the pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-212">Finaliza una solicitud de escritura asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-212">Ends a pending asynchronous write request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-213"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-213"><xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span> <span data-ttu-id="f3ce6-214">Esto puede hacerse en el mismo código que llama <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> o en una devolución de llamada que se pasa a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-214">This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="f3ce6-215">Use la <xref:System.IO.Pipes.PipeStream.CanWrite%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de escritura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-215">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="f3ce6-216">Si la canalización está cerrada o se pasa un argumento no válido a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, las excepciones correspondientes se generan inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-216">If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately.</span></span> <span data-ttu-id="f3ce6-217">Se producen errores que se producen durante una solicitud de escritura asincrónica en el subproceso del grupo que está realizando la solicitud.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-217">Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</span></span> <span data-ttu-id="f3ce6-218">Las excepciones se producen cuando el código de las llamadas <xref:System.IO.Pipes.PipeStream.EndWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-218">The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-219">
            <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-219">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-220">
            <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-220">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-221">La secuencia está cerrada o se produjo un error interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-221">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-222">Borra el búfer de la secuencia actual y hace que todos los datos almacenados en el búfer se escriban en el dispositivo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-222">Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-223">El <xref:System.IO.Pipes.PipeStream.Flush%2A> método no se admite en la <xref:System.IO.Pipes.PipeStream> clase y no nada cuando se llama.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-223">The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-224">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-224">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-225">La canalización no admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-225">The pipe does not support write operations.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-226">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-226">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.Pipes.PipeSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Pipes.PipeSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As PipeSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Pipes::PipeSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-227">Obtiene un objeto <see cref="T:System.IO.Pipes.PipeSecurity" /> que encapsula las entradas de la lista de control de acceso (ACL) de la canalización descrita por el objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-227">Gets a <see cref="T:System.IO.Pipes.PipeSecurity" /> object that encapsulates the access control list (ACL) entries for the pipe described by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-228">Un objeto <see cref="T:System.IO.Pipes.PipeSecurity" /> que encapsula las entradas de la lista de control de acceso (ACL) de la canalización descrita por el objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-228">A <see cref="T:System.IO.Pipes.PipeSecurity" /> object that encapsulates the access control list (ACL) entries for the pipe described by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-229">Una lista de control de acceso (ACL) describe usuarios o grupos que tienen o no tienen derechos para realizar acciones específicas en un archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-229">An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</span></span> <span data-ttu-id="f3ce6-230">Para más información, consulte [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md) (Cómo: Agregar o quitar entradas de la lista de control de acceso).</span><span class="sxs-lookup"><span data-stu-id="f3ce6-230">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-231">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-231">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f3ce6-232">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-232">The underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-233">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-233">The underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-234">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-234">The underlying call to set security information failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InBufferSize">
      <MemberSignature Language="C#" Value="public virtual int InBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.InBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InBufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-235">Obtiene el tamaño en bytes del búfer de entrada de una canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-235">Gets the size, in bytes, of the inbound buffer for a pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-236">Un valor entero que representa el tamaño en bytes del búfer de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-236">An integer value that represents the inbound buffer size, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-237">Si <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> es 0, el tamaño del búfer se asigna según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-237">If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-238">La secuencia no se puede leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-238">The stream is unreadable.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-239">La canalización está esperando para conectarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-239">The pipe is waiting to connect.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-240">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-240">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeHandle">
      <MemberSignature Language="C#" Value="protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeHandle(class Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeHandle (handle As SafePipeHandle, isExposed As Boolean, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeHandle(Microsoft::Win32::SafeHandles::SafePipeHandle ^ handle, bool isExposed, bool isAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="isExposed" Type="System.Boolean" />
        <Parameter Name="isAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="f3ce6-241">Objeto <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> de la canalización que se va a inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-241">The <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object of the pipe to initialize.</span>
          </span>
        </param>
        <param name="isExposed">
          <span data-ttu-id="f3ce6-242">Es <see langword="true" /> para exponer el identificador; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-242">
              <see langword="true" /> to expose the handle; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isAsync">
          <span data-ttu-id="f3ce6-243">Es <see langword="true" /> para indicar que se abrió el identificador de forma asincrónica; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-243">
              <see langword="true" /> to indicate that the handle was opened asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-244">Inicializa un objeto <see cref="T:System.IO.Pipes.PipeStream" /> a partir del objeto <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-244">Initializes a <see cref="T:System.IO.Pipes.PipeStream" /> object from the specified <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-245">Si la canalización está en estado conectado, este método también establece la <xref:System.IO.Pipes.PipeStream.IsConnected%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-245">If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-246">No se puede enlazar un identificador a la canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-246">A handle cannot be bound to the pipe.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-247">Obtiene un valor que indica si un objeto <see cref="T:System.IO.Pipes.PipeStream" /> se abrió de forma sincrónica o asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-247">Gets a value indicating whether a <see cref="T:System.IO.Pipes.PipeStream" /> object was opened asynchronously or synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-248">Es <see langword="true" /> si el objeto <see cref="T:System.IO.Pipes.PipeStream" /> se abrió de forma asincrónica; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-248">
              <see langword="true" /> if the <see cref="T:System.IO.Pipes.PipeStream" /> object was opened asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-249">Esta propiedad habilita el código para usar el <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> propiedad correctamente.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-249">This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsConnected {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-250">Obtiene o establece un valor que indica si un objeto <see cref="T:System.IO.Pipes.PipeStream" /> está conectado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-250">Gets or sets a value indicating whether a <see cref="T:System.IO.Pipes.PipeStream" /> object is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-251">Es <see langword="true" /> si el objeto <see cref="T:System.IO.Pipes.PipeStream" /> está conectado; en caso contrario, es  <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-251">
              <see langword="true" /> if the <see cref="T:System.IO.Pipes.PipeStream" /> object is connected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-252">El <xref:System.IO.Pipes.PipeStream.IsConnected%2A> propiedad devuelve `true` solo si la <xref:System.IO.Pipes.PipeStream> objeto está conectado.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-252">The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected.</span></span> <span data-ttu-id="f3ce6-253">Si esta propiedad devuelve `false`, la canalización puede estar esperando para conectarse, o puede ser desconectada, cerrada o roto.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-253">If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandleExposed">
      <MemberSignature Language="C#" Value="protected bool IsHandleExposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleExposed" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsHandleExposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsHandleExposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-254">Obtiene un valor que indica si se expone un identificador a un objeto <see cref="T:System.IO.Pipes.PipeStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-254">Gets a value indicating whether a handle to a <see cref="T:System.IO.Pipes.PipeStream" /> object is exposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-255">Es <see langword="true" /> si se expone un identificador al objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-255">
              <see langword="true" /> if a handle to the <see cref="T:System.IO.Pipes.PipeStream" /> object is exposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-256">El valor de esta propiedad se establece al obtener un identificador a la canalización que se encapsula el actual <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-256">The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMessageComplete">
      <MemberSignature Language="C#" Value="public bool IsMessageComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMessageComplete" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMessageComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMessageComplete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-257">Obtiene un valor que indica si hay más datos en el mensaje devuelto desde la operación de lectura más reciente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-257">Gets a value indicating whether there is more data in the message returned from the most recent read operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-258">
            <see langword="true" /> si no hay más caracteres que leer en el mensaje; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-258">
              <see langword="true" /> if there are no more characters to read in the message; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-259">Esta propiedad es relevante si la canalización <xref:System.IO.Pipes.PipeStream.ReadMode%2A> propiedad se estableció en <xref:System.IO.Pipes.PipeTransmissionMode.Message> por la última llamada a <xref:System.IO.Pipes.PipeStream.Read%2A> o <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-259">This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-260">La canalización no está conectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-260">The pipe is not connected.</span>
          </span>
          <span data-ttu-id="f3ce6-261">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-261">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-262">La canalización no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-262">The pipe handle has not been set.</span>
          </span>
          <span data-ttu-id="f3ce6-263">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-263">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-264">El valor de la propiedad <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> de la canalización no es <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-264">The pipe's <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> property value is not <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-265">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-265">The pipe is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-266">Devuelve la longitud en bytes de una secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-266">Gets the length of a stream, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-267">0 en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-267">0 in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-268">La clase <xref:System.IO.Pipes.PipeStream> no admite la propiedad <xref:System.IO.Pipes.PipeStream.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-268">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-269">Siempre se produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-269">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutBufferSize">
      <MemberSignature Language="C#" Value="public virtual int OutBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.OutBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutBufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-270">Obtiene el tamaño en bytes del búfer de salida de una canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-270">Gets the size, in bytes, of the outbound buffer for a pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-271">Tamaño en bytes del búfer de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-271">The outbound buffer size, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-272">Si <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> es 0, el tamaño del búfer se asigna según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-272">If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-273">La secuencia no se puede escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-273">The stream is unwriteable.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-274">La canalización está esperando para conectarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-274">The pipe is waiting to connect.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-275">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-275">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-276">Obtiene o establece la posición de la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-276">Gets or sets the current position of the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-277">0 en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-277">0 in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-278">La clase <xref:System.IO.Pipes.PipeStream> no admite la propiedad <xref:System.IO.Pipes.PipeStream.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-278">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-279">Siempre se produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-279">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([in]unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f3ce6-280">Cuando este método finaliza, contiene la matriz de bytes especificada con los valores comprendidos entre <c>offset</c> y (<c>offset</c> + <c>count</c> - 1) reemplazada por los bytes leídos del origen actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-280">When this method returns, contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f3ce6-281">Desplazamiento de bytes de la matriz de <c>buffer</c> donde se van a colocar los bytes que se leen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-281">The byte offset in the <c>buffer</c> array at which the bytes that are read will be placed.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3ce6-282">Número máximo de bytes que se pueden leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-282">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-283">Lee un bloque de bytes de una secuencia y escribe los datos en un búfer especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-283">Reads a block of bytes from a stream and writes the data to a specified buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-284">El número total de bytes leídos en <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-284">The total number of bytes that are read into <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="f3ce6-285">Puede ser menor que el número de bytes solicitado si ese número de bytes no está disponible actualmente o puede ser 0 si se alcanzó el final de la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-285">This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-286">Use la <xref:System.IO.Pipes.PipeStream.CanRead%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-286">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 <span data-ttu-id="f3ce6-287">Llamar a la <xref:System.IO.Pipes.PipeStream.Read%2A> método se bloquea hasta que `count` bytes se leen o se alcanza el final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-287">Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached.</span></span> <span data-ttu-id="f3ce6-288">Para operaciones de lectura asincrónica, vea <xref:System.IO.Pipes.PipeStream.BeginRead%2A> y <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-288">For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3ce6-289">En el ejemplo siguiente se crea un cliente de canalización anónima y el servidor de la canalización.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-289">The following example creates an anonymous pipe client and pipe server.</span></span> <span data-ttu-id="f3ce6-290">El servidor de la canalización usa el <xref:System.IO.Pipes.PipeStream.Read%2A> método para leer una serie de bytes desde el cliente de la canalización como un código de validación.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-290">The pipe server uses the <xref:System.IO.Pipes.PipeStream.Read%2A> method to read a series of bytes from the pipe client as a validation code.</span></span> <span data-ttu-id="f3ce6-291">El cliente de la canalización y el servidor de canalización forman parte del mismo ejemplo.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-291">Both the pipe client and the pipe server are part of the same example.</span></span> <span data-ttu-id="f3ce6-292">La parte del servidor de en el ejemplo crea un proceso de cliente y pasa un identificador de canalización anónima como argumento.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-292">The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.</span></span>  
  
 [!code-cpp[System.IO.Pipes.PipeStream#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cpp/sample.cpp#1)]
 [!code-csharp[System.IO.Pipes.PipeStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cs/sample.cs#1)]
 [!code-vb[System.IO.Pipes.PipeStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.pipes.pipestream/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-293">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-293">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-294">
            <paramref name="offset" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-294">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3ce6-295">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-295">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-296">
            <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-296">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-297">
            <paramref name="count" /> es mayor que el número de bytes disponible en <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-297">
              <paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-298">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-298">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-299">Esta canalización no es compatible con operaciones de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-299">The pipe does not support read operations.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-300">La canalización está desconectada, esperando para conectarse, o bien el controlador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-300">The pipe is disconnected, waiting to connect, or the handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-301">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-301">Any I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-302">Lee un byte de una canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-302">Reads a byte from a pipe.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-303">El byte, convertido en un valor <see cref="T:System.Int32" />, o -1 indica el final de la secuencia (se cerró la canalización).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-303">The byte, cast to <see cref="T:System.Int32" />, or -1 indicates the end of the stream (the pipe has been closed).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-304">Use la <xref:System.IO.Pipes.PipeStream.CanRead%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-304">Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-305">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-305">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-306">Esta canalización no es compatible con operaciones de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-306">The pipe does not support read operations.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-307">La canalización está desconectada, esperando para conectarse, o bien el controlador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-307">The pipe is disconnected, waiting to connect, or the handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-308">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-308">Any I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode { System::IO::Pipes::PipeTransmissionMode get(); void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-309">Obtiene o establece el modo de lectura de un objeto <see cref="T:System.IO.Pipes.PipeStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-309">Gets or sets the reading mode for a <see cref="T:System.IO.Pipes.PipeStream" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-310">Uno de los valores de <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> que indica de qué manera el objeto <see cref="T:System.IO.Pipes.PipeStream" /> lee de la canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-310">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates how the <see cref="T:System.IO.Pipes.PipeStream" /> object reads from the pipe.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-311">Las canalizaciones anónimas no admiten <xref:System.IO.Pipes.PipeTransmissionMode.Message> la transmisión de mensajes de modo.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-311">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-312">El valor proporcionado no es un valor <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-312">The supplied value is not a valid <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-313">El valor proporcionado no es un valor <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> compatible con esta secuencia de canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-313">The supplied value is not a supported <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> value for this pipe stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-314">El identificador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-314">The handle has not been set.</span>
          </span>
          <span data-ttu-id="f3ce6-315">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-315">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-316">La canalización está esperando para conectarse con un cliente con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-316">The pipe is waiting to connect with a named client.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-317">La canalización está rota o se produjo un error de E/S con un cliente con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-317">The pipe is broken or an I/O error occurred with a named client.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ SafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-318">Obtiene el identificador seguro del extremo local de la canalización encapsulada por el objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-318">Gets the safe handle for the local end of the pipe that the current <see cref="T:System.IO.Pipes.PipeStream" /> object encapsulates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-319">Un objeto <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> de la canalización encapsulada por el objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-319">A <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> object for the pipe that is encapsulated by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-320">No se estableció el identificador de canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-320">The pipe handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-321">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-321">The pipe is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="f3ce6-322">Punto, con respecto a <c>origin</c>, a partir del que se va a empezar a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-322">The point, relative to <c>origin</c>, to begin seeking from.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="f3ce6-323">Especifica el comienzo, el final o la posición actual como un punto de referencia para <c>offset</c>, con un valor de tipo <see cref="T:System.IO.SeekOrigin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-323">Specifies the beginning, the end, or the current position as a reference point for <c>offset</c>, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-324">Establece la posición actual de esta secuencia en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-324">Sets the current position of the current stream to the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3ce6-325">Nueva posición en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-325">The new position in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-326">El <xref:System.IO.Pipes.PipeStream.Seek%2A> método no se admite en las canalizaciones y genera un <xref:System.NotSupportedException> cuando se llama.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-326">The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="pipeSecurity">
          <span data-ttu-id="f3ce6-327">Objeto <see cref="T:System.IO.Pipes.PipeSecurity" /> que especifica una entrada de la lista de control de acceso (ACL) que se va a aplicar a la canalización actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-327">A <see cref="T:System.IO.Pipes.PipeSecurity" /> object that specifies an access control list (ACL) entry to apply to the current pipe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-328">Aplica las entradas de la lista de control de acceso (ACL) especificadas por un objeto <see cref="T:System.IO.Pipes.PipeSecurity" /> a la canalización establecida por el objeto <see cref="T:System.IO.Pipes.PipeStream" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-328">Applies the access control list (ACL) entries specified by a <see cref="T:System.IO.Pipes.PipeSecurity" /> object to the pipe specified by the current <see cref="T:System.IO.Pipes.PipeStream" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-329">Una lista de control de acceso (ACL) describe usuarios o grupos que tienen o no tienen derechos para realizar acciones específicas en un archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-329">An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</span></span> <span data-ttu-id="f3ce6-330">Para más información, consulte [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md) (Cómo: Agregar o quitar entradas de la lista de control de acceso).</span><span class="sxs-lookup"><span data-stu-id="f3ce6-330">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-331">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-331">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-332">
            <paramref name="pipeSecurity" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-332">
              <paramref name="pipeSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f3ce6-333">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-333">The underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-334">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-334">The underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-335">Error en la llamada subyacente para establecer la información de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-335">The underlying call to set security information failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f3ce6-336">La nueva longitud de la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-336">The new length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-337">Establece la longitud de la secuencia actual en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-337">Sets the length of the current stream to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-338">El <xref:System.IO.Pipes.PipeStream> clase no admite la <xref:System.IO.Pipes.PipeStream.SetLength%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-338">The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-339">Obtiene el modo de transmisión de canalización compatible con la canalización actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-339">Gets the pipe transmission mode supported by the current pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3ce6-340">Uno de los valores de <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> que indica el modo de transmisión admitido por la canalización actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-340">One of the <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> values that indicates the transmission mode supported by the current pipe.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-341">Las canalizaciones anónimas no admiten <xref:System.IO.Pipes.PipeTransmissionMode.Message> la transmisión de mensajes de modo.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-341">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-342">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-342">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-343">El identificador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-343">The handle has not been set.</span>
          </span>
          <span data-ttu-id="f3ce6-344">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-344">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-345">La canalización está esperando para conectarse en una operación de servidor/cliente anónimo o con un cliente con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-345">The pipe is waiting to connect in an anonymous client/server operation or with a named client.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-346">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-346">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForPipeDrain">
      <MemberSignature Language="C#" Value="public void WaitForPipeDrain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForPipeDrain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForPipeDrain ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForPipeDrain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3ce6-347">Espera hasta que el otro final de la canalización lea todos los bytes enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-347">Waits for the other end of the pipe to read all sent bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-348">El <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> método se bloquea hasta que el otro extremo de la canalización ha leído todos los bytes enviados.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-348">The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-349">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-349">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-350">La canalización no admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-350">The pipe does not support write operations.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-351">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-351">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f3ce6-352">Búfer que contiene los datos que se van a escribir en la canalización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-352">The buffer that contains data to write to the pipe.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f3ce6-353">Desplazamiento de bytes de base cero de <c>buffer</c> en donde se van a empezar a copiar bytes en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-353">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3ce6-354">Número máximo de bytes que se van a escribir en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-354">The maximum number of bytes to write to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-355">Escribe un bloque de bytes en la secuencia actual utilizando los datos de un búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-355">Writes a block of bytes to the current stream using data from a buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-356">Use la <xref:System.IO.Pipes.PipeStream.CanWrite%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de escritura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-356">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 <span data-ttu-id="f3ce6-357">Llamar a la <xref:System.IO.Pipes.PipeStream.Write%2A> método se bloquea hasta que `count` bytes se leen o se alcanza el final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-357">Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached.</span></span> <span data-ttu-id="f3ce6-358">Para operaciones de lectura asincrónica, vea <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> y <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-358">For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3ce6-359">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-359">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3ce6-360">
            <paramref name="offset" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-360">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3ce6-361">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-361">-or-</span>
          </span>
          <span data-ttu-id="f3ce6-362">
            <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-362">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3ce6-363">
            <paramref name="count" /> es mayor que el número de bytes disponible en <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-363">
              <paramref name="count" /> is greater than the number of bytes available in <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-364">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-364">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-365">La canalización no admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-365">The pipe does not support write operations.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-366">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-366">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f3ce6-367">Byte que se debe escribir en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-367">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3ce6-368">Escribe un byte en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-368">Writes a byte to the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3ce6-369">Use la <xref:System.IO.Pipes.PipeStream.CanWrite%2A> propiedad para determinar si la actual <xref:System.IO.Pipes.PipeStream> objeto admite operaciones de escritura.</span><span class="sxs-lookup"><span data-stu-id="f3ce6-369">Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3ce6-370">La canalización está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-370">The pipe is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3ce6-371">La canalización no admite operaciones de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-371">The pipe does not support write operations.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3ce6-372">La canalización está desconectada, esperando para conectarse, o bien el controlador no se estableció.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-372">The pipe is disconnected, waiting to connect, or the handle has not been set.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f3ce6-373">La canalización está rota o se produjo otro error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3ce6-373">The pipe is broken or another I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>