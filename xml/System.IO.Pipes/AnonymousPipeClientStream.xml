<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AnonymousPipeClientStream.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac558fff93e1a4bd2aab648e34c26bce216d9112d7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58fff93e1a4bd2aab648e34c26bce216d9112d7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">Expone la parte cliente de una secuencia de canalización anónima, que admite operaciones sincrónicas y asincrónicas de escritura y lectura.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
          <target state="translated">Las canalizaciones anónimas ayudan a proporcionar seguro y proteger la comunicación entre procesos entre primarios y secundarios procesos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> class enables a child process to connect to and exchange information with a parent process.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> clase permite a un proceso secundario para conectarse e intercambiar información con un proceso primario.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
          <target state="translated">Las canalizaciones anónimas son canalizaciones unidireccionales sin nombre que normalmente transfieren datos entre procesos primarios y secundarios.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
          <target state="translated">Las canalizaciones anónimas siempre son locales; no pueden utilizarse en una red.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valor de <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> no se admite porque las canalizaciones anónimas se definen como unidireccional.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read modes.</source>
          <target state="translated">Las canalizaciones anónimas no admiten <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> modos de lectura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> method.</source>
          <target state="translated">El cliente de una canalización anónima se debe crear desde un identificador de canalización proporcionado por el lado del servidor mediante una llamada a la <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The string is then passed as a parameter when creating the client process.</source>
          <target state="translated">La cadena, a continuación, se pasa como parámetro al crear el proceso del cliente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>From the client process, it is passed to the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> constructor as the <ph id="ph2">`pipeHandleAsString`</ph> parameter.</source>
          <target state="translated">El proceso de cliente, se pasa a la <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> constructor como el <ph id="ph2">`pipeHandleAsString`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>For <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> y <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, un máximo de 10 canalizaciones puede conectarse simultáneamente a través de la red.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>This example creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">En este ejemplo se crea un objeto <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> en un proceso primario con un valor <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> de <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>It also creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">También se crea un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto en un proceso secundario con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valo <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The parent process then sends a user-supplied string to the child process.</source>
          <target state="translated">El proceso primario envía a continuación una cadena proporcionada por usuario al proceso secundario.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The string is displayed to the console.</source>
          <target state="translated">La cadena se muestra en la consola.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>This example is for the client process, which is started by the server process.</source>
          <target state="translated">En este ejemplo es para el proceso de cliente, que se inicia el proceso de servidor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Name the resulting executable from the client code <ph id="ph1">`pipeClient.exe`</ph> and copy it to the same directory as the server executable when you run this example.</source>
          <target state="translated">Nombre del archivo ejecutable resultante del código de cliente <ph id="ph1">`pipeClient.exe`</ph> y cópielo en el mismo directorio que el ejecutable del servidor al ejecutar este ejemplo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>For the entire code example, including the code for both the pipe client and server, see <bpt id="p1">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</source>
          <target state="translated">En el ejemplo de código completo, incluido el código para el cliente de la canalización y el servidor, consulte <bpt id="p1">[</bpt>Cómo: usar canalizaciones anónimas para la comunicación entre procesos Local<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>A string that represents the pipe handle.</source>
          <target state="translated">Una cadena que representa el identificador de canalización.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class with the specified string representation of the pipe handle.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> con la representación de cadena especificada para el identificador de canalización.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>For constructors without a <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parameter, the default direction is <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">Para los constructores sin un <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parámetro, la dirección predeterminada es <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto se crea en un proceso secundario.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is not a valid pipe handle.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> no es un identificador de canalización válido.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno de los valores de enumeración que determina la dirección de la canalización.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Las canalizaciones anónimas solo pueden estar en una dirección, por lo que <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> no se puede establecer en <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A safe handle for the pipe that this <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Controlador seguro para la canalización que este objeto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> encapsulará.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class from the specified handle.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> a partir del identificador especificado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valor de <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> no se admite porque las canalizaciones anónimas se definen como unidireccional.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto se crea en un proceso secundario con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valo <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is not a valid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> no es un controlador válido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;paramref name="direction" /&gt;</ph> está establecida en <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>An I/O error, such as a disk error, has occurred.</source>
          <target state="translated">Se ha producido un error de E/S, como un error de disco.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The stream has been closed.</source>
          <target state="translated">Se ha cerrado la secuencia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno de los valores de enumeración que determina la dirección de la canalización.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Las canalizaciones anónimas solo pueden estar en una dirección, por lo que <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> no se puede establecer en <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>A string that represents the pipe handle.</source>
          <target state="translated">Una cadena que representa el identificador de canalización.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class with the specified pipe direction and a string representation of the pipe handle.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> con la dirección de canalización especificada y una representación de cadena del identificador de canalización.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valor de <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> no se admite porque las canalizaciones anónimas se definen como unidireccional.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto se crea en un proceso secundario con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valo <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is an invalid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> es un controlador no válido.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;paramref name="direction" /&gt;</ph> está establecida en <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> instance is reclaimed by garbage collection.</source>
          <target state="translated">Libera recursos no administrados y realiza otras operaciones de limpieza antes de que la recolección de elementos no utilizados reclame la instancia de <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>Sets the reading mode for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object.</source>
          <target state="translated">Establece el modo de lectura para el objeto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> para el <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">Las canalizaciones anónimas no admiten <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> en modo de lectura.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto se crea en un proceso secundario.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> is caught when the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> se detecta cuando el <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A&gt;</ph> propiedad está establecida en <ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The transmission mode is not valid.</source>
          <target state="translated">El modo de transmisión no es válido.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>For anonymous pipes, only <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph> is supported.</source>
          <target state="translated">Solo se admite <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph> para canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The transmission mode is <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>.</source>
          <target state="translated">El modo de transmisión es <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The connection is broken or another I/O error occurs.</source>
          <target state="translated">La conexión se ha roto o se produce otro error de E/S.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The pipe is closed.</source>
          <target state="translated">Se ha cerrado la canalización.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>Gets the pipe transmission mode supported by the current pipe.</source>
          <target state="translated">Obtiene el modo de transmisión de canalización compatible con la canalización actual.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> supported by the current pipe.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> que admite la canalización actual.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">Las canalizaciones anónimas no admiten <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> en modo de lectura.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process and the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A&gt;</ph> is displayed to the console.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> objeto se crea en un proceso secundario y el <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A&gt;</ph> se muestra en la consola.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>