<Type Name="FieldTemplateFactory" FullName="System.Web.DynamicData.FieldTemplateFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dcb2c1a2a510b16314a021f5678c624c7f50eab5" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51896422" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldTemplateFactory extends System.Object implements class System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldTemplateFactory&#xA;Implements IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldTemplateFactory : System::Web::DynamicData::IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type FieldTemplateFactory = class&#xA;    interface IFieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Crea una plantilla de campo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, esta clase implementa la <xref:System.Web.DynamicData.IFieldTemplateFactory> interfaz y se usa el <xref:System.Web.UI.UserControl> clase para crear plantillas de campo.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.FieldTemplateUserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">Scaffolding de datos dinámicos de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FieldTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildVirtualPath(string templateName, class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildVirtualPath (templateName As String, column As MetaColumn, mode As DataBoundControlMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BuildVirtualPath(System::String ^ templateName, System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string&#xA;override this.BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string" Usage="fieldTemplateFactory.BuildVirtualPath (templateName, column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName">Nombre de la plantilla que va a usarse.</param>
        <param name="column">Especifica la columna de datos a la que se aplica la plantilla de campo.</param>
        <param name="mode">Especifica el modo de presentación de la plantilla de campo.</param>
        <summary>Crea la ruta de acceso virtual a una plantilla de campo basándose en el nombre y en el modo de la plantilla de campo.</summary>
        <returns>Ruta de acceso virtual a la plantilla de campo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, este método crea la ruta de acceso virtual a una plantilla de campo mediante el nombre de plantilla, anexando el modo y, a continuación, agregar una extensión .ascx. Por ejemplo, si `templateName` es MyFieldTemplate y `mode` es editar la ruta de acceso virtual será MyFieldTemplate_Edit.ascx, en la carpeta especificada por la ruta de acceso de plantilla carpeta virtual.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="templateName" /> es null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate&#xA;override this.CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="fieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Especifica la columna de datos a la que se aplica la plantilla de campo.</param>
        <param name="mode">Especifica el modo de presentación de la plantilla de campo.</param>
        <param name="uiHint">Especifica la plantilla de campo que va a usarse.</param>
        <summary>Crea una instancia de una plantilla de campo mediante la clase <see cref="T:System.Web.DynamicData.MetaColumn" />, la clase <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> y la propiedad <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />.</summary>
        <returns>Instancia de la interfaz que la clase <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> implementa.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFieldTemplateVirtualPath(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldTemplateVirtualPath (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFieldTemplateVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string&#xA;override this.GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string" Usage="fieldTemplateFactory.GetFieldTemplateVirtualPath (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Especifica la columna de datos a la que se aplica la plantilla de campo.</param>
        <param name="mode">Especifica el modo de presentación Read Only, Edit o Insert del campo plantilla.</param>
        <param name="uiHint">Especifica la plantilla de campo que va a usarse. Este parámetro afecta a las búsquedas en la plantilla de campo.</param>
        <summary>Determina la ruta de acceso virtual de una plantilla de campo.</summary>
        <returns>Ruta de acceso virtual de la plantilla de campo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plantillas de campo de datos dinámicas se crean en el DynamicData/FieldTemplates/carpeta, pero se puede crear una nueva carpeta para las plantillas de campo. Este método determina la ruta de acceso virtual para la carpeta que contiene la plantilla de campo mediante los parámetros especificados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit&#xA;override this.Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="fieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Especifica el modelo de datos que va a asociarse con <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</param>
        <summary>Asocia <see cref="T:System.Web.DynamicData.MetaModel" /> a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Web.DynamicData.MetaModel" /> asociado a la clase <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</summary>
        <value>Modelo asociado a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.DynamicData.MetaModel> clase es una clase abstracta que representa la asignación entre una base de datos y objetos de dominio. Datos dinámicos proporcionan un conjunto de clases (el modelo de datos) que representan el modelo. Las clases se generan a través de Object Relational Designer (Object Relational Designer). Puede usar la plantilla de LINQ to SQL clases para generar estas clases. Esta propiedad se utiliza para obtener y establecer el modelo de datos asociado con el <xref:System.Web.DynamicData.FieldTemplateFactory> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.DataBoundControlMode PreprocessMode(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreprocessMode (column As MetaColumn, mode As DataBoundControlMode) As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataBoundControlMode PreprocessMode(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode&#xA;override this.PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode" Usage="fieldTemplateFactory.PreprocessMode (column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column">Columna para la que es necesaria la plantilla de campo.</param>
        <param name="mode">Modo (Read Only, Edit o Insert) al que va a pasarse.</param>
        <summary>Cambia el modo de la columna de datos.</summary>
        <returns>Modo que una columna representa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dinámico de datos representa los datos en solo lectura, inserción, o edita los modos. Este método controla el modo que se representa en la columna. Por ejemplo, una solicitud de modo de edición se cambia a solo lectura si la columna es una columna de clave principal. No se puede editar las columnas que son claves externas y generadas automáticamente que forman parte de la clave principal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string TemplateFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplateFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la carpeta en la que va a crearse una plantilla de campo.</summary>
        <value>Ruta de acceso a la carpeta que contiene las plantillas de campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La carpeta predeterminada donde se crean plantillas de campo es /DynamicData/FieldTemplates /. Esta carpeta contiene las plantillas de campo predeterminadas y plantillas de campo personalizado que cree. Si crea y especificar una carpeta diferente para las plantillas de campo, datos dinámicos creará las plantillas de campo en la carpeta que especifique. Para obtener más información acerca de las plantillas de campo, vea [ASP.NET Dynamic Data Scaffolding](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>