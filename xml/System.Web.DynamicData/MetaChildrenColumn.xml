<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8aabd320cc131fe76383e672e8d6b7e97988ef78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cb773-101">Representa un campo de base de datos que indica una relación uno a varios.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb773-101">Represents a database field that indicates a one-to-many relationship.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-102">En las aplicaciones de datos dinámicos de ASP.NET, la <xref:System.Web.DynamicData.MetaChildrenColumn> clase representa un campo de base de datos que indica una relación uno a varios o una relación de elementos primarios y secundarios.</span><span class="sxs-lookup"><span data-stu-id="cb773-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="cb773-103">La <xref:System.Web.DynamicData.MetaChildrenColumn> clase representa el campo de la tabla primaria de la relación de uno a varios.</span><span class="sxs-lookup"><span data-stu-id="cb773-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="cb773-104">Sin embargo, puede obtener acceso al objeto de tabla de secundaria mediante el uso de la <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb773-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="cb773-105">También puede recuperar el campo de clave externa en la tabla secundaria mediante el <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb773-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="cb773-106">Metatabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-106">The meta table.</span>
          </span>
        </param>
        <param name="entityMember">
          <span data-ttu-id="cb773-107">Proveedor de columnas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb773-108">Inicializa una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb773-109">Obtiene un objeto que representa la tabla secundaria de la relación uno a varios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-109">Gets an object that represents the child table of the one-to-many relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb773-110">Objeto que representa la tabla secundaria de la relación uno a varios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-110">An object that represents the child table of the one-to-many relationship.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-111">Use la <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> propiedad para obtener un objeto que representa la tabla secundaria de la relación de uno a varios.</span><span class="sxs-lookup"><span data-stu-id="cb773-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="cb773-112">Puede tener acceso a la tabla primaria mediante el <xref:System.Web.DynamicData.MetaColumn.Table%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb773-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb773-113">Obtiene un objeto que representa el campo de clave externa de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-113">Gets an object that represents the foreign-key field in the child table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb773-114">Objeto que representa el campo de clave externa de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-114">An object that represents the foreign-key field in the child table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-115">El <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> propiedad le permite obtener una referencia al campo en la tabla secundaria.</span><span class="sxs-lookup"><span data-stu-id="cb773-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="cb773-116">Fila que contiene el campo de clave externa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-116">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb773-117">Obtiene la ruta de acceso de la página de acciones de lista de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-117">Gets the path of the list-action page for the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cb773-118">Ruta de acceso de la página de acciones de lista de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-118">The path of the list-action page for the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-119">Use la <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> método cuando desea recuperar la página acción de la lista para la tabla secundaria utilizando la fila especificada como un elemento primario.</span><span class="sxs-lookup"><span data-stu-id="cb773-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="cb773-120">La ruta de acceso se obtiene anexando un valor de cadena de consulta a la dirección URL que contiene el valor del campo de clave externa especificado en el `row` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="cb773-121">Mediante el <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> método es lo mismo que invocar el <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> método y pasar el <xref:System.Web.DynamicData.PageAction.List%2A> acción como primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cb773-122">Obtiene la ruta de acceso a la página de acciones especificada de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-122">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="cb773-123">Acción de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-123">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="cb773-124">Fila que contiene el campo de clave externa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-124">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb773-125">Obtiene la ruta de acceso a la página de acciones especificada de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-125">Gets the path of the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cb773-126">Ruta de acceso a la página de acciones especificada de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-126">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-127">El <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> método devuelve la ruta de acceso de la página de la acción especificada para la tabla secundaria.</span><span class="sxs-lookup"><span data-stu-id="cb773-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="cb773-128">La ruta de acceso devuelta se basa en las rutas que se definen para la aplicación de datos dinámicos de ASP.NET y tiene la fila especificada como un elemento primario.</span><span class="sxs-lookup"><span data-stu-id="cb773-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="cb773-129">La ruta de acceso se obtiene anexando un valor de cadena de consulta a la dirección URL que contiene el valor del campo de clave externa especificado en el `row` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="cb773-130">Si `row` es `null`, este método devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="cb773-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="cb773-131">Puede usar los valores definidos en el <xref:System.Web.DynamicData.PageAction> de clases para el `action` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="cb773-132">Acción de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-132">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="cb773-133">Fila que contiene el campo de clave externa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-133">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="cb773-134">Página de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-134">The target page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb773-135">Obtiene la ruta de acceso a la página de acciones especificada de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-135">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cb773-136">Ruta de acceso a la página de acciones especificada de la tabla secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-136">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-137">El <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> método devuelve la ruta de acceso de la página de la acción especificada para la tabla secundaria.</span><span class="sxs-lookup"><span data-stu-id="cb773-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="cb773-138">La ruta de acceso se basa en la ruta de acceso especificada con la fila especificada como un elemento primario.</span><span class="sxs-lookup"><span data-stu-id="cb773-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="cb773-139">La ruta de acceso se obtiene anexando un valor de cadena de consulta a la dirección URL que contiene el valor del campo de clave externa especificado en el `row` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="cb773-140">Si `row` es `null`, este método devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="cb773-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="cb773-141">Si `path` es `null`, el <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> método devuelve la ruta de acceso en función de las rutas definidas para la aplicación de datos dinámicos de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="cb773-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="cb773-142">Puede usar los valores definidos en el <xref:System.Web.DynamicData.PageAction> de clases para el `action` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb773-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb773-143">Inicializa datos que quizás no estén disponibles cuando se llame al constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-143">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb773-144">No se puede llamar directamente a este método.</span><span class="sxs-lookup"><span data-stu-id="cb773-144">This method cannot be called directly.</span></span> <span data-ttu-id="cb773-145">Para personalizar la inicialización, puede derivar de esta clase e invalidar el `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="cb773-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="cb773-146">Si invalida este método, llame al control base `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="cb773-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb773-147">Obtiene un valor que indica el estado de la relación de varios a varios de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-147">Gets a value that indicates the many-to-many relationship status of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb773-148">Es <see langword="true" /> si la relación de la columna es de varios a varios; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb773-148">
              <see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>