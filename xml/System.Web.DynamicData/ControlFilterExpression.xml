<Type Name="ControlFilterExpression" FullName="System.Web.DynamicData.ControlFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41ed37f8a8a08a53bb4b2b310a0d9857c300cc24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ControlFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modifica una consulta de base de datos mediante la clave de datos del elemento seleccionado en un control enlazado a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.DynamicData.ControlFilterExpression> clase que está diseñada para utilizarse cuando una página contiene dos controles enlazados a datos como un <xref:System.Web.UI.WebControls.GridView> control y un <xref:System.Web.UI.WebControls.ListView> control. Un control es el origen, donde se selecciona una clave de datos (fila). El otro control es el destino donde se muestran los datos en función de la clave de datos seleccionada. Los datos de destino se obtienen por un control de origen de datos que se ejecuta la consulta que se define en la <xref:System.Web.UI.WebControls.QueryExtender> clase y que se compila mediante la clave de datos seleccionada.  
  
 Para usar la <xref:System.Web.DynamicData.ControlFilterExpression> clase en una página, siga estos pasos:  
  
-   Agregar el <xref:System.Web.UI.WebControls.QueryExtender> control a la página.  
  
-   Establecer el `TargetControlID` propiedad de la <xref:System.Web.UI.WebControls.QueryExtender> control para el identificador del control de origen de datos de destino.  
  
-   Agregar un <xref:System.Web.DynamicData.ControlFilterExpression> de instancia para el <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
-   Establecer el `ControlID` propiedad de la <xref:System.Web.DynamicData.ControlFilterExpression> elemento para el control enlazado a datos de origen.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar la <xref:System.Web.DynamicData.ControlFilterExpression> clase para hacer referencia a un control enlazado a datos de origen, donde se selecciona la clave de datos. El <xref:System.Web.UI.WebControls.QueryExtender> puntos a un control de origen de datos de destino que obtiene los datos que se filtran mediante la clave de datos seleccionados de control. En el ejemplo, el control enlazado a datos de origen hace referencia a una tabla primaria y el control enlazado a datos de destino hace referencia a una tabla secundaria.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="SourceGridViewID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <altmember cref="P:System.Web.DynamicData.ControlFilterExpression.Column" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public string Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Column { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la columna en la que se basa la consulta.</summary>
        <value>Nombre de la columna en la que se basa la consulta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta propiedad está vacía, el <xref:System.Web.DynamicData.ControlFilterExpression> control trata la clave de datos seleccionada como la clave principal de la tabla actual. Esto es útil en un escenario de detalles de la lista donde los controles enlazados a datos de origen y destino operan en los datos de la misma tabla.  
  
 Si asigna un valor a la propiedad, el <xref:System.Web.DynamicData.ControlFilterExpression> control trata la clave de datos como una clave externa. El valor asignado a esta propiedad se convierte en el nombre de la columna que se muestra en el control enlazado a datos de destino. Esto es útil en un escenario de elementos primarios y secundarios en el control enlazado a datos de destino funciona en los datos de la tabla secundaria y el control enlazado a datos de origen funciona en los datos de la tabla primaria.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar la <xref:System.Web.DynamicData.ControlFilterExpression> clase para establecer la columna que se aplica el filtro.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador del control enlazado a datos de origen.</summary>
        <value>Identificador del control enlazado a datos de origen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.DynamicData.ControlFilterExpression.ControlID%2A> propiedad identifica el control enlazado a datos de origen desde el que se selecciona la clave de datos. A continuación, se utiliza la clave de datos seleccionada por el <xref:System.Web.DynamicData.ControlFilterExpression> control para compilar la consulta.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar la <xref:System.Web.DynamicData.ControlFilterExpression> clase para establecer el identificador del control enlazado a datos de origen.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Consulta del origen de datos que se va a modificar.</param>
        <summary>Obtiene la consulta de origen de datos que se va a modificar.</summary>
        <returns>Objeto que representa la consulta de origen de datos modificada por esta instancia de <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.DynamicData.ControlFilterExpression.GetQueryable%28System.Linq.IQueryable%29> método modifica la consulta basada en la clave de datos seleccionada del control enlazado a datos de origen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Estado que se va a restaurar.</param>
        <summary>Restaura el estado de vista anteriormente guardado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios realizados en el estado de vista desde el momento en que se envió la página al servidor.</summary>
        <returns>Objeto que contiene los cambios realizados en el estado de vista. Si no hay un estado de vista asociado al objeto, este método devuelve <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Control en el que está la instancia de <see cref="T:System.Web.DynamicData.ControlFilterExpression" />, como el control <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual de la aplicación.</param>
        <param name="dataSource">Origen de datos de destino para la instancia de <see cref="T:System.Web.DynamicData.ControlFilterExpression" />. Si la instancia de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> está contenida en el control <see cref="T:System.Web.UI.WebControls.QueryExtender" />, este parámetro es el origen de datos al que el control <see cref="T:System.Web.UI.WebControls.QueryExtender" /> hace referencia.</param>
        <summary>Inicializa la expresión de filtro con información del origen de datos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el objeto <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> realice un seguimiento de los cambios realizados en su estado de vista de forma que dichos cambios puedan almacenarse en el objeto de estado de vista del control y se conserven en las diversas solicitudes de la misma página.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>