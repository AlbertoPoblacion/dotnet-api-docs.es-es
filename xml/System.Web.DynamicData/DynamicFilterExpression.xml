<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d34bba93fbe9c56fdfcf340e3b139b23384d0dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402185" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicFilterExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modifica una consulta de base de datos utilizando un valor del control de filtro especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.DynamicData.DynamicFilterExpression> clase le permite modificar una consulta de base de datos con los valores que se asignan en un <xref:System.Web.DynamicData.DynamicFilter> control. Este control delega la tarea de creación de la <xref:System.Linq.IQueryable> de consulta a un control especializado como <xref:System.Web.DynamicData.QueryableFilterRepeater> control o <xref:System.Web.DynamicData.DynamicFilter> control.  
  
 Los controles de filtro a su vez delegar la creación de la consulta a la plantilla de filtro que hacen referencia. A continuación, se ejecuta la consulta por el control de origen de datos que hace referencia el <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
 Para usar la <xref:System.Web.DynamicData.DynamicFilterExpression> clase en una página, siga estos pasos:  
  
-   Agregar un <xref:System.Web.UI.WebControls.QueryExtender> control a la página.  
  
-   Establecer el `TargetControlID` propiedad de la <xref:System.Web.UI.WebControls.QueryExtender> control hace referencia al control de origen de datos.  
  
-   Agregar un <xref:System.Web.DynamicData.DynamicFilterExpression> objeto como un elemento secundario de la <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
-   Establecer el `ControlID` propiedad de la <xref:System.Web.DynamicData.DynamicFilterExpression> objeto que se va a hacer referencia al control de filtro.  
  
 En los pasos anteriores se supone que los controles de filtro relacionados, controles enlazados a datos y control de código fuente de datos se definen en la página.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.DynamicData.DynamicFilterExpression> control para seleccionar una plantilla de filtro en una página. La plantilla de filtro está activada de forma la <xref:System.Web.DynamicData.DynamicFilter> control que se identifica mediante <xref:System.Web.DynamicData.DynamicFilterExpression> controlar a través de su `ControID` propiedad.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador de control de filtro.</summary>
        <value>El identificador de control de filtro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador de control se usa por la <xref:System.Web.DynamicData.DynamicFilterExpression> clase para seleccionar el filtro de control para que TI delega la tarea de creación de la consulta, que a su vez se ejecuta en el control de origen de datos.  
  
 El control de filtro delega la tarea de creación de la consulta para la plantilla de filtro las referencias. A continuación, se ejecuta la consulta por el control de origen de datos que hace referencia el <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar la <xref:System.Web.DynamicData.DynamicFilterExpression> clase para seleccionar un control de filtro en una página.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicFilterExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Consulta del origen de datos que se va a modificar.</param>
        <summary>Obtiene la consulta modificada utilizando el valor de filtro actual.</summary>
        <returns>La consulta del origen de datos que se modifica utilizando el valor actual contenido en la instancia de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A> método delega la tarea de creación de la consulta a la plantilla de filtro al que hace referencia el control de filtro especificado por el <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicFilterExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Control que contiene la instancia de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />, como el control <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual.</param>
        <param name="dataSource">Origen de datos de destino para la instancia de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</param>
        <summary>Inicializa la expresión con información del origen de datos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>