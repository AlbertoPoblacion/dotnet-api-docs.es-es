<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4c4aa034797f0d73c78986e75e2366030615ac2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso sin tipo a la información y los valores de propiedad de perfil.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa la <xref:System.Web.Profile.ProfileBase> clase para crear la clase utilizada para el perfil de usuario. Cuando se inicia una aplicación que tiene habilitado el perfil de usuario, ASP.NET crea una nueva clase de tipo `ProfileCommon`, que hereda de la <xref:System.Web.Profile.ProfileBase> clase. Accesos fuertemente tipados se agregan a la `ProfileCommon` clase para cada propiedad definida en la sección de configuración. Los descriptores de acceso fuertemente tipados de la `ProfileCommon` clase llamada la <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> y <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> métodos de la <xref:System.Web.Profile.ProfileBase> clase para recuperar y establecer valores de propiedad, respectivamente de perfil base. Una instancia de la `ProfileCommon` clase se establece como el valor de la <xref:System.Web.HttpContext.Profile%2A> propiedad de la aplicación ASP.NET.  
  
 Para crear una instancia de un perfil de usuario en una aplicación ASP.NET, se recomienda que utilice la <xref:System.Web.Profile.ProfileBase.Create%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un archivo Web.config que especifica un perfil de usuario que contiene un `ZipCode` propiedad de tipo `string` y un `RecentSearchList` propiedad de tipo <xref:System.Collections.Specialized.StringCollection>. Generado <xref:System.Web.HttpContext.Profile%2A> propiedad del elemento actual <xref:System.Web.HttpContext> habrá fuertemente tipadas descriptores de acceso para cada una de las propiedades especificadas.  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 En el ejemplo de código siguiente se muestra una página ASP.NET que lee y establece la `ZipCode` propiedad especificada para el perfil de usuario. Antes de intentar ejecutar este código, establezca el proveedor en el valor predeterminado `AspNetSqlProvider` en las opciones de configuración de ASP.NET para el sitio Web.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 En el ejemplo de código siguiente se define una clase que hereda de la <xref:System.Web.Profile.ProfileBase> clase para crear un perfil personalizado. El tipo de perfil personalizado se especifica en el `inherits` atributo del elemento de configuración en el archivo Web.config para una aplicación.  
  
> [!IMPORTANT]
>  Este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Puede crear una implementación de perfil personalizado que herede de la <see cref="T:System.Web.Profile.ProfileBase" /> clase abstracta y define las propiedades del perfil de usuario que no se especifican en el elemento de configuración. Puede especificar un tipo de perfil de usuario personalizado en el archivo Web.config con el <see langword="inherits" /> atributo del elemento de configuración, tal como se muestra en el ejemplo siguiente. El código para el <c>EmployeeProfile</c> clase se incluye en la sección ejemplo de este tema.  
  
```  
&lt;profile inherits="Samples.AspNet.Profile.EmployeeProfile"  
  defaultProvider="SqlProvider"&gt;  
  &lt;providers&gt;  
    &lt;clear /&gt;  
    &lt;add  
      name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Sample"/&gt;   
    &lt;add  
      name="EmployeeInfoProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Employee Info"/&gt;   
  &lt;/providers&gt;  
  
  &lt;properties&gt;  
    &lt;add name="GarmentSize" /&gt;  
  &lt;/properties&gt;  
&lt;/profile&gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de la clase <see cref="T:System.Web.Profile.ProfileBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa la <xref:System.Web.Profile.ProfileBase> clase para crear la clase utilizada para el perfil de usuario. Cuando se inicia una aplicación que tiene habilitado el perfil de usuario, ASP.NET crea una nueva clase de tipo `ProfileCommon`, que hereda de la <xref:System.Web.Profile.ProfileBase> clase. Accesos fuertemente tipados se agregan a la `ProfileCommon` clase para cada propiedad definida en la sección de configuración. Los descriptores de acceso fuertemente tipados de la `ProfileCommon` clase llamada la <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> y <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> métodos de la <xref:System.Web.Profile.ProfileBase> clase para recuperar y establecer valores de propiedad, respectivamente de perfil base. Una instancia de la `ProfileCommon` clase se establece como el valor de la <xref:System.Web.HttpContext.Profile%2A> propiedad de la aplicación ASP.NET.  
  
> [!NOTE]
>  La clase base utilizada para generar la clase almacenada en el <xref:System.Web.HttpContext.Profile%2A> propiedad se puede invalidar mediante la `inherits` atributo de la sección del archivo de configuración. En este caso se especificaría una clase personalizada que hereda de la <xref:System.Web.Profile.ProfileBase> clase base.  
  
 Este constructor no está pensado para usarse desde el código de la aplicación. Para crear una instancia de un perfil de usuario, use la <xref:System.Web.Profile.ProfileBase.Create%2A> método.  
  
   
  
## Examples  
 El archivo Web.config siguiente especifica un perfil de usuario que contiene un `ZipCode` propiedad de tipo `string` y un `RecentSearchList` propiedad de tipo <xref:System.Collections.Specialized.StringCollection>. Generado <xref:System.Web.HttpContext.Profile%2A> propiedad del elemento actual <xref:System.Web.HttpContext> habrá fuertemente tipadas descriptores de acceso para cada una de las propiedades especificadas.  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 La siguiente página ASP.NET lee y establece la `ZipCode` propiedad especificada para el perfil de usuario.  
  
> [!IMPORTANT]
>  Este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">El atributo <see langword="enabled" /> de la sección del archivo Web.config es <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo crear un tipo de propiedad especificado en la sección del archivo Web.config.  
  
 O bien  
  
 El valor del atributo <see langword="allowAnonymous" /> de una propiedad en la sección del archivo Web.config está establecido en <see langword="true" /> y el atributo <see langword="enabled" /> del elemento está establecido en <see langword="false" />.  
  
 O bien  
  
 El valor del atributo <see langword="serializeAs" /> de una propiedad en la sección del archivo Web.config está establecido en <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> y la propiedad <see cref="P:System.Type.IsSerializable" /> del elemento <see langword="type" /> especificado devuelve <see langword="false" />.  
  
 O bien  
  
 El nombre de un proveedor especificado utilizando el atributo <see langword="provider" /> de una propiedad de perfil no se pudo encontrar en la colección <see cref="P:System.Web.Profile.ProfileManager.Providers" />.  
  
 O bien  
  
 No se pudo encontrar el <see langword="type" /> especificado para una propiedad de perfil.  
  
 O bien  
  
 Se especificó una propiedad de perfil con un nombre que coincide con un nombre de propiedad en la clase base especificada en el atributo <see langword="inherits" /> de la sección.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una instancia de un perfil de usuario.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario para el que se va a crear un perfil.</param>
        <summary>ASP.NET lo utiliza para crear una instancia de un perfil para el nombre de usuario especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Profile.ProfileBase" /> que representa el perfil para el usuario especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Profile.ProfileBase.Create%2A> método crea e Inicializa una nueva instancia de perfil y es útil para las aplicaciones que utilizan un perfil personalizado de objetos o administran perfiles de usuario en un entorno no ASP.NET.  
  
 Esta sobrecarga de la <xref:System.Web.Profile.ProfileBase.Create%2A> método supone que el nombre de usuario especificado es un usuario autenticado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea una instancia de un objeto de perfil personalizado, se establece una propiedad y se guarda el perfil en el origen de datos.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">El atributo <see langword="enabled" /> de la sección del archivo Web.config es <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">El nivel de permiso de hospedaje actual es inferior a <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo crear un tipo de propiedad especificado en la sección del archivo Web.config.  
  
 O bien  
  
 El valor del atributo <see langword="allowAnonymous" /> de una propiedad en la sección del archivo Web.config está establecido en <see langword="true" /> y el atributo <see langword="enabled" /> del elemento está establecido en <see langword="false" />.  
  
 O bien  
  
 El valor del atributo <see langword="serializeAs" /> de una propiedad en la sección del archivo Web.config está establecido en <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> y la propiedad <see cref="P:System.Type.IsSerializable" /> del elemento <see langword="type" /> especificado devuelve <see langword="false" />.  
  
 O bien  
  
 El nombre de un proveedor especificado utilizando el atributo <see langword="provider" /> de una propiedad de perfil no se pudo encontrar en la colección <see cref="P:System.Web.Profile.ProfileManager.Providers" />.  
  
 O bien  
  
 No se pudo encontrar el <see langword="type" /> especificado para una propiedad de perfil.  
  
 O bien  
  
 Se especificó una propiedad de perfil con un nombre que coincide con un nombre de propiedad en la clase base especificada en el atributo <see langword="inherits" /> de la sección.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario para el que se va a crear un perfil.</param>
        <param name="isAuthenticated">
          Es <see langword="true" /> para indicar que el usuario es un usuario autenticado; es <see langword="false" /> para indicar que el usuario es anónimo.</param>
        <summary>ASP.NET lo utiliza para crear una instancia de un perfil para el nombre de usuario especificado. Toma un parámetro que indica si el usuario es un usuario autenticado o anónimo.</summary>
        <returns>Objeto <see cref="T:System.Web.Profile.ProfileBase" /> que representa el perfil para el usuario especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Profile.ProfileBase.Create%2A> método crea e Inicializa una nueva instancia de perfil y es útil para las aplicaciones que utilizan un perfil personalizado de objetos o administran perfiles de usuario en un entorno no ASP.NET.  
  
 Esta sobrecarga de la <xref:System.Web.Profile.ProfileBase.Create%2A> método se puede utilizar para crear un perfil para un usuario autenticado o un usuario anónimo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea una instancia de un objeto de perfil personalizado, se establece una propiedad y se guarda el perfil en el origen de datos.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">El atributo <see langword="enabled" /> de la sección del archivo Web.config es <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">El nivel de permiso de hospedaje actual es inferior a <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo crear un tipo de propiedad especificado en la sección del archivo Web.config.  
  
 O bien  
  
 El valor del atributo <see langword="allowAnonymous" /> de una propiedad en la sección del archivo Web.config está establecido en <see langword="true" /> y el atributo <see langword="enabled" /> del elemento está establecido en <see langword="false" />.  
  
 O bien  
  
 El valor del atributo <see langword="serializeAs" /> de una propiedad en la sección del archivo Web.config está establecido en <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> y la propiedad <see cref="P:System.Type.IsSerializable" /> del elemento <see langword="type" /> especificado devuelve <see langword="false" />.  
  
 O bien  
  
 El nombre de un proveedor especificado utilizando el atributo <see langword="provider" /> de una propiedad de perfil no se pudo encontrar en la colección <see cref="P:System.Web.Profile.ProfileManager.Providers" />.  
  
 O bien  
  
 No se pudo encontrar el <see langword="type" /> especificado para una propiedad de perfil.  
  
 O bien  
  
 Se especificó una propiedad de perfil con un nombre que coincide con un nombre de propiedad en la clase base especificada en el atributo <see langword="inherits" /> de la sección.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nombre del grupo de propiedades.</param>
        <summary>Obtiene un grupo de propiedades identificadas por un nombre de grupo.</summary>
        <returns>Objeto <see cref="T:System.Web.Profile.ProfileGroupBase" /> para un grupo de propiedades configurado con el nombre de grupo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Propiedades de perfil se pueden separar en grupos para una mejor organización. El <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> propiedad puede utilizarse para recuperar un grupo de propiedades por el nombre del grupo. También puede tener acceso a una propiedad de perfil en un grupo especificando el nombre del grupo como un miembro de la `Profile` propiedad disponible en cada página. Por ejemplo, el `ZipCode` generar perfiles de propiedad que es un miembro de la `Address` pudo tener acceso al grupo de perfiles mediante `Profile.Address.ZipCode`.  
  
   
  
## Examples  
 El archivo Web.config siguiente especifica un perfil de usuario que contiene el grupo de propiedades con un nombre de grupo de `Address`. Las propiedades agrupadas generadas para la <xref:System.Web.HttpContext.Profile%2A> propiedad del elemento actual <xref:System.Web.HttpContext> irá precedido por el nombre del grupo. Por ejemplo: `Profile.Address.Street`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 La siguiente página ASP.NET lee y establece las propiedades agrupadas especificadas para el perfil de usuario.  
  
> [!IMPORTANT]
>  Este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">El nombre de grupo de propiedades de perfil especificado no se encontró en la sección de configuración.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nombre de la propiedad de perfil.</param>
        <summary>Obtiene el valor de una propiedad de perfil.</summary>
        <returns>Valor de la propiedad de perfil especificada, que se considera de tipo <see langword="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa la <xref:System.Web.Profile.ProfileBase> clase para crear la clase utilizada para el perfil de usuario. Cuando se inicia una aplicación que tiene habilitado el perfil de usuario, ASP.NET crea una nueva clase de tipo `ProfileCommon`, que hereda de la <xref:System.Web.Profile.ProfileBase> clase. Accesos fuertemente tipados se agregan a la `ProfileCommon` clase para cada propiedad definida en la sección de configuración. Los descriptores de acceso fuertemente tipados de la `ProfileCommon` clase llamada la <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> método para recuperar los valores sin tipo desde el <xref:System.Web.Profile.ProfileProvider> que el descriptor de acceso generado, a continuación, convierte el tipo especificado y devuelve el valor de propiedad.  
  
 Puede usar el <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> método para recuperar los valores de propiedad del perfil de usuario para la aplicación por su nombre. Los valores devueltos no tienen tipo y deben convertirse en el tipo de objeto específico cuando se recuperan. Para obtener acceso fuertemente tipado a los valores de propiedad de perfil, se puede acceder a la propiedad por su nombre como un miembro de la propiedad de perfil disponible en cada página, por ejemplo, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una página ASP.NET que lee y establece la `ZipCode` propiedad especificada para el perfil de usuario. Para obtener un ejemplo de un archivo Web.config que especifica las propiedades para el perfil de usuario, vea el ejemplo proporcionado para el <xref:System.Web.Profile.ProfileBase> clase.  
  
> [!IMPORTANT]
>  Este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha intentado establecer un valor de propiedad en un perfil anónimo donde el atributo <see langword="allowAnonymous" /> de la propiedad es <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">No hay ninguna propiedad definida para el perfil actual.  
  
 O bien  
  
 El nombre de propiedad de perfil especificado no existe en el perfil actual.  
  
 O bien  
  
 El proveedor de la propiedad de perfil determinada no ha reconocido la propiedad especificada.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario para el que se va a inicializar el perfil.</param>
        <param name="isAuthenticated">
          Es <see langword="true" /> para indicar que el usuario es un usuario autenticado; es <see langword="false" /> para indicar que el usuario es anónimo.</param>
        <summary>Inicializa la información y los valores de propiedad de perfil para el usuario actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser utilizado desde el código. Utilice uno de los <xref:System.Web.Profile.ProfileBase.Create%2A> sobrecargas para crear una instancia del perfil de usuario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el perfil de usuario es para un usuario anónimo.</summary>
        <value>
          Es <see langword="true" /> si el perfil es para un usuario anónimo; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El acceso anónimo para el perfil de usuario se habilita mediante la sección de configuración y la `allowAnonymous` atributo del elemento de configuración que se utiliza para especificar propiedades de perfil.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se ha modificado alguna de las propiedades de perfil.</summary>
        <value>
          Es <see langword="true" /> si se ha modificado alguna de las propiedades de perfil; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Profile.ProfileBase.IsDirty%2A> propiedad se puede utilizar un proveedor de perfiles durante la <xref:System.Configuration.SettingsBase.Save%2A> método para determinar si las propiedades que sean consta de los tipos primitivos, cadenas, o <xref:System.DateTime> se cambiaron los objetos. A continuación, se actualizan propiedades cambiadas por el proveedor de perfil en el <xref:System.Configuration.SettingsBase.Save%2A> método. El <xref:System.Configuration.SettingsBase.Save%2A> método se llama automáticamente al final de la ejecución de la página si el <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> propiedad es `true`  
  
 Un proveedor de perfil llamado el <xref:System.Configuration.SettingsBase.Save%2A> método explícitamente no puede determinar si ha cambiado una propiedad de perfil con un tipo de clase personalizada o un tipo complejo, como una colección. Puede usar el <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento para determinar si se ha modificado un objeto personalizado y continuar con el guardado automático para los objetos modificados o cancelar el guardado automático si no se ha modificado ningún objeto. El comportamiento predeterminado de la <xref:System.Web.Profile.ProfileBase> clase consiste en establecer el <xref:System.Web.Profile.ProfileBase.IsDirty%2A> propiedad `true` para propiedades que son de un tipo complejo o personalizado la primera vez que la propiedad que se tiene acceso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nombre de la propiedad de perfil.</param>
        <summary>Obtiene o establece un valor de propiedad de perfil indizado por el nombre de propiedad.</summary>
        <value>Valor de la propiedad de perfil especificada, que se considera de tipo <see langword="object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para recuperar o establecer los valores de propiedad del perfil de usuario para la aplicación por su nombre. Los valores devueltos son de tipo `object` y se deben convertir como el tipo de objeto específico cuando se recuperan. Para obtener acceso fuertemente tipado a los valores de propiedad de perfil, se puede acceder a la propiedad por su nombre como un miembro de la `Profile` propiedad disponible en cada página, por ejemplo, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se enumera los nombres de las propiedades del perfil de usuario enlazando la <xref:System.Configuration.SettingsProperty.Name%2A> propiedad desde el método estático <xref:System.Web.Profile.ProfileBase.Properties%2A> colección de <xref:System.Configuration.SettingsProperty> objetos a un <xref:System.Web.UI.WebControls.GridView> control. El valor de la propiedad seleccionada se recupera por nombre mediante el <xref:System.Web.Profile.ProfileBase.Item%2A> colección. Para obtener un ejemplo de un archivo Web.config que especifica las propiedades para el perfil de usuario, vea el ejemplo proporcionado para el <xref:System.Web.Profile.ProfileBase> clase.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha intentado establecer un valor de propiedad en un perfil anónimo donde el atributo <see langword="allowAnonymous" /> de la propiedad es <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">No hay ninguna propiedad definida para el perfil actual.  
  
 O bien  
  
 El nombre de propiedad de perfil especificado no existe en el perfil actual.  
  
 O bien  
  
 El proveedor de la propiedad de perfil determinada no ha reconocido la propiedad especificada.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Se intentó establecer un valor de propiedad que estaba marcado como de sólo lectura.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Se intentó asignar un valor a una propiedad utilizando un tipo incompatible.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y hora más reciente en que se leyó o modificó el perfil.</summary>
        <value>Fecha y hora más reciente en que el proveedor predeterminado leyó o modificó el perfil.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo se modifica este valor de propiedad con el proveedor de perfil predeterminado. Los cambios realizados en las propiedades del perfil por un proveedor distinto del proveedor de perfil predeterminado no afecta al valor de la <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y hora más reciente en que se modificó el perfil.</summary>
        <value>Fecha y hora más reciente en que el proveedor predeterminado modificó el perfil.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo se modifica este valor de propiedad con el proveedor de perfil predeterminado. Los cambios realizados en las propiedades del perfil por un proveedor distinto del proveedor de perfil predeterminado no afecta al valor de la <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Configuration.SettingsProperty" /> para cada propiedad del perfil.</summary>
        <value>Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> de objetos <see cref="T:System.Configuration.SettingsProperty" /> para cada propiedad del perfil para la aplicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para obtener información sobre las propiedades de perfil configuradas para una aplicación, incluidos los tipos y nombres de propiedad. También puede hacer referencia a la <xref:System.Web.Profile.ProfileProvider> de cada propiedad. Un <xref:System.Web.Profile.ProfileProvider> administra el almacenamiento y recuperación de valores de propiedad a y desde el origen de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se enumera los nombres de las propiedades del perfil de usuario enlazando la <xref:System.Configuration.SettingsProperty.Name%2A> propiedad desde el método estático <xref:System.Web.Profile.ProfileBase.Properties%2A> colección de <xref:System.Configuration.SettingsProperty> objetos a un <xref:System.Web.UI.WebControls.GridView> control. El valor de la propiedad seleccionada se recupera por nombre mediante el <xref:System.Web.Profile.ProfileBase.Item%2A> colección. Para obtener un ejemplo de un archivo Web.config que especifica las propiedades para el perfil de usuario, vea el ejemplo proporcionado para el <xref:System.Web.Profile.ProfileBase> clase.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo crear un tipo de propiedad especificado en la sección del archivo Web.config.  
  
 O bien  
  
 El valor del atributo <see langword="allowAnonymous" /> de una propiedad en la sección del archivo Web.config está establecido en <see langword="true" /> y el atributo <see langword="enabled" /> del elemento está establecido en <see langword="false" />.  
  
 O bien  
  
 El valor del atributo <see langword="serializeAs" /> de una propiedad en la sección del archivo Web.config está establecido en <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> y la propiedad <see cref="P:System.Type.IsSerializable" /> del elemento <see langword="type" /> especificado devuelve <see langword="false" />.  
  
 O bien  
  
 El nombre de un proveedor especificado utilizando el atributo <see langword="provider" /> de una propiedad de perfil no se pudo encontrar en la colección <see cref="P:System.Web.Profile.ProfileManager.Providers" />.  
  
 O bien  
  
 No se pudo encontrar el <see langword="type" /> especificado para una propiedad de perfil.  
  
 O bien  
  
 Se especificó una propiedad de perfil con un nombre que coincide con un nombre de propiedad en la clase base especificada en el atributo <see langword="inherits" /> de la sección.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actualiza el origen de datos del perfil con los valores de propiedad de perfil cambiados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Profile.ProfileBase.Save%2A> método escribe valores de propiedad de perfil modificado en el origen de datos. El proveedor de perfiles puede reducir la cantidad de actividad en el origen de datos mediante la realización de actualizaciones sólo cuando la <xref:System.Web.Profile.ProfileBase.IsDirty%2A> propiedad está establecida en `true`. Este es el caso para el valor predeterminado <xref:System.Web.Profile.SqlProfileProvider>. Después de la <xref:System.Web.Profile.ProfileBase.Save%2A> método guarda los valores de propiedad en el origen de datos, <xref:System.Web.Profile.ProfileBase.IsDirty%2A> está establecido en `false`.  
  
 Puede usar el <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento para implementar la lógica personalizada que determina si se ha modificado una propiedad de perfil con un tipo personalizado o un tipo complejo y continuar con el guardado automático para los objetos modificados o cancelar el guardado automático si no se ha modificado ningún objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nombre de la propiedad que se va a establecer.</param>
        <param name="propertyValue">Valor que se asigna a la propiedad.</param>
        <summary>Establece el valor de una propiedad de perfil.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa la <xref:System.Web.Profile.ProfileBase> clase para crear la clase utilizada para el perfil de usuario. Cuando se inicia una aplicación que tiene habilitado el perfil de usuario, ASP.NET crea una nueva clase de tipo `ProfileCommon`, que hereda de la <xref:System.Web.Profile.ProfileBase> clase. Accesos fuertemente tipados se agregan a la `ProfileCommon` clase para cada propiedad definida en la sección de configuración. Los descriptores de acceso fuertemente tipados de la `ProfileCommon` clase llamada la <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> método para pasar la propiedad valores a los <xref:System.Web.Profile.ProfileProvider> se encuentran en el origen de datos.  
  
 Puede usar el <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> método para asignar valores de propiedad en el perfil de usuario para la aplicación por su nombre. Los valores son sin tipo, y se realizará la comprobación de tipos en tiempo de ejecución, no en tiempo de compilación. Para obtener acceso fuertemente tipado a los valores de propiedad de perfil, se puede acceder a la propiedad por su nombre como un miembro de la `Profile` propiedad que está disponible en cada página, por ejemplo, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una página ASP.NET que lee y establece la `ZipCode` propiedad especificada para el perfil de usuario. Para obtener un ejemplo de un archivo Web.config que especifica las propiedades para el perfil de usuario, vea el ejemplo proporcionado para el <xref:System.Web.Profile.ProfileBase> clase.  
  
> [!IMPORTANT]
>  Este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha intentado establecer un valor de propiedad en un perfil anónimo donde el atributo <see langword="allowAnonymous" /> de la propiedad es <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">No hay ninguna propiedad definida para el perfil actual.  
  
 O bien  
  
 El nombre de propiedad de perfil especificado no existe en el perfil actual.  
  
 O bien  
  
 El proveedor de la propiedad de perfil determinada no ha reconocido la propiedad especificada.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Se intentó establecer un valor en una propiedad que estaba marcada como de sólo lectura.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Se intentó asignar un valor a una propiedad utilizando un tipo incompatible.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de usuario del perfil.</summary>
        <value>Nombre de usuario del perfil o identificador de usuario anónimo asignado al perfil.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Profile.ProfileBase.UserName%2A> propiedad devuelve el nombre del usuario autenticado que está asociado el perfil o el identificador de usuario anónimo asignado al perfil si la <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> propiedad es `true`.  
  
 El acceso anónimo para el perfil de usuario se habilita mediante la sección de configuración y la `allowAnonymous` atributo del elemento de configuración que se utiliza para especificar propiedades de perfil.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>