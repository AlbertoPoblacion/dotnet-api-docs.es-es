<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameValueCollection.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53d1d6aad3c24b139bec3904a9e019b3fa0651e47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d1d6aad3c24b139bec3904a9e019b3fa0651e47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Represents a collection of associated <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> keys and <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> values that can be accessed either with the key or with the index.</source>
          <target state="translated">Representa una colección de claves de <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> y valores <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> asociados a los que se puede obtener acceso con la clave o con el índice.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This collection is based on the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class.</source>
          <target state="translated">Esta colección se basa en la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>However, unlike the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, this class stores multiple string values under a single key.</source>
          <target state="translated">Sin embargo, a diferencia de la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, esta clase almacena varios valores de cadena en una sola clave.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This class can be used for headers, query strings and form data.</source>
          <target state="translated">Esta clase puede usarse para encabezados, cadenas de consulta y datos del formulario.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Each element is a key/value pair.</source>
          <target state="translated">Cada elemento es un par de clave/valor.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.</source>
          <target state="translated">Las colecciones de este tipo no conservan el orden de los elemento y ningún orden concreto se garantiza al enumerar la colección.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos de la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</source>
          <target state="translated">En .NET Framework versión 1.0, esta clase utiliza comparaciones de cadenas dependientes de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>However, in .NET Framework version 1.1 and later, this class uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> when comparing strings.</source>
          <target state="translated">Sin embargo, en .NET Framework versión 1.1 y versiones posterior, esta clase usa <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> cuando se comparan cadenas.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>For more information about how culture affects comparisons and sorting, see <bpt id="p1">[</bpt>Performing Culture-Insensitive String Operations<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo afecta la referencia cultural a la ordenación y comparación, vea <bpt id="p1">[</bpt>realizar operaciones de cadena de la referencia cultural<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source><ph id="ph1">`null`</ph> is allowed as a key or as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> se permite como una clave o un valor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%2A&gt;</ph> method does not distinguish between <ph id="ph2">`null`</ph> which is returned because the specified key is not found and <ph id="ph3">`null`</ph> which is returned because the value associated with the key is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%2A&gt;</ph> método no distingue entre <ph id="ph2">`null`</ph> que se devuelve porque no se encuentra la clave especificada y <ph id="ph3">`null`</ph> que se devuelve porque el valor asociado a la clave es <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Estático público (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) miembros de este tipo son seguros para subprocesos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class.</source>
          <target state="translated">Esta implementación no proporciona un sincronizada contenedor (es seguro para subprocesos) para una <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, pero las clases derivadas pueden crear sus propias versiones sincronizadas de la <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> mediante la <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> propiedad de la <ph id="ph4">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial predeterminada y usa el proveedor de código hash y el comparador predeterminados que no distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que se usa para determinar si dos claves son iguales y generar los códigos hash para las claves de la colección.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial predeterminada y usa el objeto <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> objeto es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> objeto combina el comparador y el proveedor de código hash.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que se va a copiar en la nueva instancia <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries from the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.</source>
          <target state="translated">Copia las entradas de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> especificada en una nueva clase <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que tiene la misma capacidad inicial que el número de entradas copiadas, usando el mismo proveedor de códigos hash y el mismo comparador que la colección de origen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The elements of the new <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> are sorted in the same order as the source <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Los elementos de la nueva <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> se ordenan en el mismo orden que el origen <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de elementos de <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated">Número inicial de entradas que <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial especificada y usa el proveedor de códigos hash y el comparador predeterminados que no distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> que proporcionará los códigos hash de todas las claves de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> que se va a utilizar para determinar si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial predeterminada y usa el proveedor de código hash y el comparador especificados.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object can contain.</source>
          <target state="translated">Número inicial de entradas que el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que se usa para determinar si dos claves son iguales y generar los códigos hash para las claves de la colección.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial especificada y usa el objeto <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> objeto es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> objeto combina el comparador y el proveedor de código hash.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el <ph id="ph3">`capacity`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated">Número inicial de entradas que <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que se va a copiar en la nueva instancia <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries from the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">Copia las entradas de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> especificada en una nueva clase <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> con la capacidad inicial especificada o con la misma capacidad inicial que el número de entradas copiadas, la que sea mayor, y con el proveedor de códigos hash y el comparador predeterminados que no distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>If the number of elements in <ph id="ph1">`col`</ph> is greater than <ph id="ph2">`capacity`</ph>, this constructor becomes an O(<ph id="ph3">`n`</ph><ph id="ph4"> + </ph><ph id="ph5">`m`</ph>) operation, where <ph id="ph6">`n`</ph> is <ph id="ph7">`capacity`</ph> and <ph id="ph8">`m`</ph> is the number of elements in <ph id="ph9">`col`</ph>.</source>
          <target state="translated">Si el número de elementos de <ph id="ph1">`col`</ph> es mayor que <ph id="ph2">`capacity`</ph>, este constructor se convierte en una O (<ph id="ph3">`n`</ph><ph id="ph4"> + </ph><ph id="ph5">`m`</ph>) operación, donde <ph id="ph6">`n`</ph> es <ph id="ph7">`capacity`</ph> y <ph id="ph8">`m`</ph> es el número de elementos de <ph id="ph9">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene la información necesaria para serializar la nueva instancia de la <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino de la secuencia serializada asociada a la nueva instancia <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is serializable and uses the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que es serializable y usa las clases <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> especificadas.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated">Número inicial de entradas que <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> que proporcionará los códigos hash de todas las claves de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> que se va a utilizar para determinar si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que está vacía, tiene la capacidad inicial especificada y usa el proveedor de códigos hash y el comparador especificados.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash asigna códigos hash para las claves en el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">El proveedor de código hash predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">El comparador determina si dos claves son iguales.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">El comparador predeterminado es la <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Adds entries to the current <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Agrega entradas al elemento <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the current <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que se va a copiar en el elemento <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries in the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to the current <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Copia las entradas del elemento <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> especificado en el elemento <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If a key in <ph id="ph1">`c`</ph> already exists in the target <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the associated value in <ph id="ph3">`c`</ph> is added to the existing comma-separated list of values associated with the same key in the target <ph id="ph4">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.</source>
          <target state="translated">Si una clave en <ph id="ph1">`c`</ph> ya existe en el destino <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> de instancia, el valor asociado de <ph id="ph3">`c`</ph> se agrega a la lista existente de separados por comas de los valores asociados con la misma clave en el destino <ph id="ph4">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> ya es igual a la capacidad, la capacidad de la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> es menor que la capacidad, este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>The collection is read-only.</source>
          <target state="translated">La colección es de solo lectura.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to add.</source>
          <target state="translated">Clave de <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que se va a agregar.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value of the entry to add.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que se va a agregar.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>Adds an entry with the specified name and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Agrega una entrada con el nombre y el valor especificados a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If the specified key already exists in the target <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the specified value is added to the existing comma-separated list of values in the form <ph id="ph2">`"value1,value2,value3"`</ph>.</source>
          <target state="translated">Si la clave especificada ya existe en el destino <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instancia, el valor especificado se agrega a la lista existente de separados por comas de valores en el formulario <ph id="ph2">`"value1,value2,value3"`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The values are associated with the same key in the target <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.</source>
          <target state="translated">Los valores están asociados con la misma clave en el destino <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> ya es igual a la capacidad, la capacidad de la <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> es menor que la capacidad, este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">La colección es de solo lectura.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>Gets all the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene todas las claves de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains all the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene todas las claves de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>If the collection is empty, this method returns an empty <ph id="ph1">&lt;xref:System.String&gt;</ph> array, not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Si la colección está vacía, este método devuelve una instancia vacía <ph id="ph1">&lt;xref:System.String&gt;</ph> matriz, no <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>The arrays returned by <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.</source>
          <target state="translated">Las matrices devueltas por <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> se almacenan en caché para mejorar el rendimiento y se actualizan automáticamente cuando cambia la colección.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>A derived class can invalidate the cached version by calling <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.</source>
          <target state="translated">Una clase derivada puede invalidar la versión almacenada en caché mediante una llamada a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, con lo cual forzar las matrices de volver a crear.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>Invalidates the cached arrays and removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Invalida las matrices almacenadas en caché y quita todas las entradas de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>The collection is read-only.</source>
          <target state="translated">La colección es de solo lectura.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que constituye el destino de los elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">La matriz <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>dest<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>dest<ept id="p1">&lt;/c&gt;</ept> donde se comienza a copiar.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia la totalidad de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> en una matriz <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">La matriz especificada debe ser de un tipo compatible.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Este método usa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> para copiar los elementos.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="dest" /&gt;</ph>.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="index" /&gt;</ph> hasta el final de la <ph id="ph3">&lt;paramref name="dest" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="dest" /&gt;</ph>.</source>
          <target state="translated">El tipo de la <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> de origen no puede convertirse automáticamente al tipo de la <ph id="ph2">&lt;paramref name="dest" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets the values of a specified entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">Obtiene los valores de una entrada especificada en <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combinados en una lista y separados por comas.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>The zero-based index of the entry that contains the values to get from the collection.</source>
          <target state="translated">Índice de base cero de la entrada que contiene los valores que se van a obtener de la colección.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>Gets the values at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">Obtiene los valores en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combinados en una lista y separados por comas.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a comma-separated list of the values at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene una lista de valores separados por comas en el índice especificado de la <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, si se encuentra; en caso contrario, es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values at the specified index.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores en el índice especificado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> está fuera del intervalo válido de índices de la colección.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry that contains the values to get.</source>
          <target state="translated">Clave de <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que contiene los valores que se van a obtener.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>Gets the values associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">Obtiene los valores asociados a la clave especificada del elemento <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combinados en una lista y separados por comas.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a comma-separated list of the values associated with the specified key from the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene una lista de valores separados por comas asociados a la clave especificada del elemento <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, si se encuentra; en caso contrario, es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Este método devuelve <ph id="ph1">`null`</ph> en los casos siguientes: 1) si no se encuentra la clave especificada; y 2) si se encuentra la clave especificada y su valor asociado es <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">Este método no distingue entre los dos casos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values associated with the specified key.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores asociados a la clave especificada.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>The zero-based index of the key to get from the collection.</source>
          <target state="translated">Índice de base cero de la clave que se va a obtener de la colección.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>Gets the key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene la clave en el índice especificado del elemento <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the key at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene la clave en el índice especificado del elemento <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, si se encuentra; en caso contrario, es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> está fuera del intervalo válido de índices de la colección.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets the values of a specified entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene los valores de una entrada especificada en <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>The zero-based index of the entry that contains the values to get from the collection.</source>
          <target state="translated">Índice de base cero de la entrada que contiene los valores que se van a obtener de la colección.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>Gets the values at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene los valores que se encuentran en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the values at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene los valores en el índice especificado de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, si se encuentra; en caso contrario, es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values at the specified index.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores en el índice especificado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> está fuera del intervalo válido de índices de la colección.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry that contains the values to get.</source>
          <target state="translated">Clave de <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que contiene los valores que se van a obtener.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>Gets the values associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene los valores asociados a la clave especificada de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the values associated with the specified key from the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene los valores asociados a la clave especificada de <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, si se encuentra; en caso contrario, es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Este método devuelve <ph id="ph1">`null`</ph> en los casos siguientes: 1) si no se encuentra la clave especificada; y 2) si se encuentra la clave especificada y su valor asociado es <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">Este método no distingue entre los dos casos.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values associated with the specified key.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores asociados a la clave especificada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contains keys that are not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contiene claves que no son <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contains keys that are not <ph id="ph3">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contiene claves que no son <ph id="ph3">&lt;see langword="null" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>Resets the cached arrays of the collection to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restablece las matrices almacenadas en caché de la colección a <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>The arrays returned by <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.</source>
          <target state="translated">Las matrices devueltas por <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> se almacenan en caché para mejorar el rendimiento y se actualizan automáticamente cuando cambia la colección.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>A derived class can invalidate the cached version by calling <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.</source>
          <target state="translated">Una clase derivada puede invalidar la versión almacenada en caché mediante una llamada a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, con lo cual forzar las matrices de volver a crear.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets or sets the specified entry of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece la entrada especificada de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>The zero-based index of the entry to locate in the collection.</source>
          <target state="translated">Índice de base cero de la entrada que se va a localizar en la colección.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Gets the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene la entrada que se encuentra en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the comma-separated list of values at the specified index of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene la lista de valores separados por comas en el índice especificado de la colección.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>This property cannot be set.</source>
          <target state="translated">No se puede establecer esta propiedad.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>To set the value at a specified index, use <ph id="ph1">`Item[GetKey(index)]`</ph>.</source>
          <target state="translated">Para establecer el valor en un índice especificado, utilice <ph id="ph1">`Item[GetKey(index)]`</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Retrieving the values at the specified index is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values.</source>
          <target state="translated">La recuperación de los valores en el índice especificado es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> está fuera del intervalo válido de índices de la colección.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to locate.</source>
          <target state="translated">Clave <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que se va a localizar.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Gets or sets the entry with the specified key in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece la entrada con la clave especificada en <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the comma-separated list of values associated with the specified key, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene la lista de valores, separados por comas, asociados a la clave especificada, si se encuentra; en caso contrario, es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[name]`</ph>.</source>
          <target state="translated">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: <ph id="ph1">`myCollection[name]`</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value.</source>
          <target state="translated">Si la clave especificada ya existe en la colección, al establecer esta propiedad sobrescribe la lista de valores existentes con el valor especificado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>To append the new value to the existing list of values, use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Para anexar el nuevo valor a la lista existente de valores, utilice el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.</source>
          <target state="translated">Si la clave especificada no existe en la colección, al establecer esta propiedad, crea una nueva entrada con la clave especificada y el valor especificado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Esta propiedad devuelve <ph id="ph1">`null`</ph> en los casos siguientes: 1) si no se encuentra la clave especificada; y 2) si se encuentra la clave especificada y su valor asociado es <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property does not distinguish between the two cases.</source>
          <target state="translated">Esta propiedad no distingue entre los dos casos.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Retrieving or setting the values associated with the specified key is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values.</source>
          <target state="translated">Recuperar o establecer los valores asociados a la clave especificada es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de valores.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The collection is read-only and the operation attempts to modify the collection.</source>
          <target state="translated">La colección es de sólo lectura y la operación ha intentado modificarla.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to remove.</source>
          <target state="translated">Clave <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada que se va a quitar.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>Removes the entries with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Quita las entradas con la clave especificada de la instancia de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> remains unchanged.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> no contiene un elemento con la clave especificada, el <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> permanece sin cambios.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>No exception is thrown.</source>
          <target state="translated">No se inicia ninguna excepción.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">La colección es de solo lectura.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to add the new value to.</source>
          <target state="translated">Clave <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de la entrada a la que se va a agregar el nuevo valor.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La clave puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the new value to add to the specified entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el nuevo valor que se va a agregar a la entrada especificada.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>Sets the value of an entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">Establece el valor de una entrada de <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value.</source>
          <target state="translated">Si la clave especificada ya existe en la colección, este método sobrescribe la lista de valores existentes con el valor especificado.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>To append the new value to the existing list of values, use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Para anexar el nuevo valor a la lista existente de valores, utilice el <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.</source>
          <target state="translated">Si la clave especificada no existe en la colección, este método crea una nueva entrada con la clave especificada y el valor especificado.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">La colección es de solo lectura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>