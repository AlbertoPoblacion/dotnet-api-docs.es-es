<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOrderedDictionary.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5445f2081060cc27f506f6e9a66e446bc9a223852.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">445f2081060cc27f506f6e9a66e446bc9a223852</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Represents an indexed collection of key/value pairs.</source>
          <target state="translated">Representa una colección indizada de pares de clave y valor.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> elements can be accessed either with the key or with the index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> pueden tener acceso a elementos con la clave o con el índice.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> structure.</source>
          <target state="translated">Cada elemento es un par de clave/valor que se almacena en un <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each pair must have a unique key that is not <ph id="ph1">`null`</ph>, but the value can be <ph id="ph2">`null`</ph> and does not have to be unique.</source>
          <target state="translated">Cada par debe tener una clave única que no es <ph id="ph1">`null`</ph>, pero el valor puede ser <ph id="ph2">`null`</ph> y no tienen que ser únicos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interfaz permite a los valores que hay que enumerar y claves independientes, pero no implica ningún orden determinado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`For Each`</ph> en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Dado que cada elemento de la <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, as the following example shows.</source>
          <target state="translated">En su lugar, el tipo de elemento es <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción es un contenedor del enumerador, que permite a solo lectura pero no escribir en la colección.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la implementación de un sencillo <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> tomando como base la <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementada <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">La clase de implementación debe tener un medio para comparar claves.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">Devuelve un enumerador que itera por la colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para toda la colección <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">La instrucción <ph id="ph1">`foreach`</ph> del lenguaje C# (<ph id="ph2">`for each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Por tanto, se usan <ph id="ph1">`foreach`</ph> se recomienda en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> también devuelve el enumerador a esta posición.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">En esta posición, el <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para volver a establecer el valor de <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el primer elemento de la colección, se puede llamar primero a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> y después a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la implementación de un sencillo <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> tomando como base la <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementada <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Este código forma parte de un ejemplo más extenso de código proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which the key/value pair should be inserted.</source>
          <target state="translated">Índice de base cero donde se debe insertar el par de clave y valor.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">Objeto que se va a utilizar como clave del elemento que se va a agregar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">El objeto que se va a usar como valor del elemento que se va a agregar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>Inserts a key/value pair into the collection at the specified index.</source>
          <target state="translated">Inserta un par de clave y valor en la colección, en el índice especificado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido y permite elementos duplicados.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, the <ph id="ph3">`value`</ph> parameter is added to the end of the <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> collection.</source>
          <target state="translated">Si el <ph id="ph1">`index`</ph> es igual al parámetro <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> parámetro se agrega al final de la <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en conjunto, como una tabla hash.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la implementación de un sencillo <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> tomando como base la <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementada <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Este código forma parte de un ejemplo más extenso de código proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">Ya existe un elemento con la misma clave en la colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated">La colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated">La colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> tiene un tamaño fijo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Índice de base cero del elemento que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtiene o establece el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido y permite elementos duplicados.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This property allows you to access a specific element in the collection by using the following syntax:</source>
          <target state="translated">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la implementación de un sencillo <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> tomando como base la <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementada <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Este código forma parte de un ejemplo más extenso de código proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es igual o mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Índice de base cero del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index.</source>
          <target state="translated">Quita el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en conjunto, como una tabla hash.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la implementación de un sencillo <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> tomando como base la <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementada <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Este código forma parte de un ejemplo más extenso de código proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es igual o mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated">La colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated">La colección <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> tiene un tamaño fijo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>