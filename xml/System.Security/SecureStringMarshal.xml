<Type Name="SecureStringMarshal" FullName="System.Security.SecureStringMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa404f34b52e186ed81c47a94d6441196fc531e1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SecureStringMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecureStringMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureStringMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureStringMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStringMarshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona una colección de métodos para asignar memoria no administrada y copiar bloques de memoria no administrados.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">Objeto administrado que se va a copiar.</param>
        <summary>Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</summary>
        <returns>Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y. Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>. Los caracteres de la cadena se copian como caracteres ANSI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="s" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <block subset="none" type="usage">
          <para>Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">Objeto administrado que se va a copiar.</param>
        <summary>Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</summary>
        <returns>Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y. Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> método. Los caracteres de la cadena se copian como caracteres Unicode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="s" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <block subset="none" type="usage">
          <para>Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">Objeto administrado que se va a copiar.</param>
        <summary>Copia el contenido de un <see cref="T:System.Security.SecureString" /> administrado en la memoria no administrada, convirtiéndolo en formato ANSI mientras realiza la copia.</summary>
        <returns>Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y. Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="s" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <block subset="none" type="usage">
          <para>Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">Objeto administrado que se va a copiar.</param>
        <summary>Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en la memoria no administrada.</summary>
        <returns>La dirección, en memoria no administrada, donde se copió <paramref name="s" />, o 0 si <paramref name="s" /> es un objeto <see cref="T:System.Security.SecureString" /> cuya longitud es 0.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="s" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible.</exception>
      </Docs>
    </Member>
  </Members>
</Type>