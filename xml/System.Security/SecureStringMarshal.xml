<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureStringMarshal.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa404f34b52e186ed81c47a94d6441196fc531e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa404f34b52e186ed81c47a94d6441196fc531e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecureStringMarshal">
          <source>Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.</source>
          <target state="translated">Proporciona una colección de métodos para asignar memoria no administrada y copiar bloques de memoria no administrados.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Objeto administrado que se va a copiar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Copia el contenido de un objeto <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied to, or 0 if a null object was supplied.</source>
          <target state="translated">Dirección, en memoria no administrada, donde se copió el parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> o 0 si se suministró un objeto null.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph>.</source>
          <target state="translated">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The characters of the string are copied as ANSI characters.</source>
          <target state="translated">Los caracteres de la cadena se copian como caracteres ANSI.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">No hay suficiente memoria disponible.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Objeto administrado que se va a copiar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Copia el contenido de un objeto <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied to, or 0 if a null object was supplied.</source>
          <target state="translated">Dirección, en memoria no administrada, donde se copió el parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> o 0 si se suministró un objeto null.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> method.</source>
          <target state="translated">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The characters of the string are copied as Unicode characters.</source>
          <target state="translated">Los caracteres de la cadena se copian como caracteres Unicode.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">No hay suficiente memoria disponible.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Objeto administrado que se va a copiar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> into unmanaged memory, converting into ANSI format as it copies.</source>
          <target state="translated">Copia el contenido de un <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> administrado en la memoria no administrada, convirtiéndolo en formato ANSI mientras realiza la copia.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The address, in unmanaged memory, to where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied, or 0 if a null object was supplied.</source>
          <target state="translated">Dirección, en memoria no administrada, donde se copió el parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> o 0 si se suministró un objeto null.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> método resulta útil para el cálculo de referencias personalizado o al mezclar código administrado y.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> method.</source>
          <target state="translated">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">No hay suficiente memoria disponible.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Este método es compatible solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Objeto administrado que se va a copiar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object into unmanaged memory.</source>
          <target state="translated">Copia el contenido de un objeto <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> administrado en la memoria no administrada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where <ph id="ph1">&lt;paramref name="s" /&gt;</ph> was copied, or 0 if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object whose length is 0.</source>
          <target state="translated">La dirección, en memoria no administrada, donde se copió <ph id="ph1">&lt;paramref name="s" /&gt;</ph>, o 0 si <ph id="ph2">&lt;paramref name="s" /&gt;</ph> es un objeto <ph id="ph3">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> cuya longitud es 0.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">No hay suficiente memoria disponible.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>