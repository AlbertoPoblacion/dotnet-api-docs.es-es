<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b37ff083eff27618aa07c0a744562f3f8a613708" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3c0a7-101">Administra el recorrido de pila que determina si todos los autores de llamada de la pila de llamadas tienen los permisos necesarios para tener acceso a un recurso protegido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c0a7-101">Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0a7-102">Código de confianza parcial siempre representa un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-102">Partially trusted code always presents a security risk.</span></span> <span data-ttu-id="3c0a7-103">A veces se puede manipular para realizar acciones en nombre de código malintencionado que no tiene permiso para tener acceso a un recurso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-103">It can sometimes be manipulated to perform actions on behalf of malicious code that does not have permission to access a resource.</span></span> <span data-ttu-id="3c0a7-104">De esta manera, el código malintencionado puede lograr mayor seguridad de acceso que se debe permitir.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-104">In this way, malicious code can achieve higher security access than it should be allowed.</span></span>  
  
 <span data-ttu-id="3c0a7-105">Common language runtime ayuda a proteger el código administrado contra estos ataques ejecutando un recorrido de pila en todas las llamadas.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-105">The common language runtime helps protect managed code from these attacks by running a stack walk on all calls.</span></span> <span data-ttu-id="3c0a7-106">El recorrido de pila requiere que todo el código en la pila de llamadas tenga permiso para tener acceso a un recurso protegido.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-106">The stack walk requires that all code in the call stack has permission to access a protected resource.</span></span> <span data-ttu-id="3c0a7-107">Dado que el código intenta realizar el ataque siempre estará en alguna parte en la pila de llamadas, no podrá superar sus propios permisos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-107">Because the code attempting the attack will always be somewhere in the call stack, it will be unable to exceed its own security permissions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c0a7-108">Afirma que el código de llamada puede tener acceso al recurso identificado por el objeto de permiso actual, incluso si los autores de la llamada situados en una posición más alta de la pila no tienen permiso para tener acceso al recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-108">Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0a7-109">Una llamada a <xref:System.Security.IStackWalk.Assert%2A> se detiene la comprobación de permisos en los llamadores situados en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-109">Calling <xref:System.Security.IStackWalk.Assert%2A> stops the permission check on callers higher in the call stack.</span></span> <span data-ttu-id="3c0a7-110">Por lo tanto, incluso si estos llamadores no tiene los permisos necesarios, pueden acceder a recursos.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-110">Therefore, even if these callers do not have the requisite permissions, they can still access resources.</span></span> <span data-ttu-id="3c0a7-111">Una aserción es efectiva sólo si el código que llama <xref:System.Security.IStackWalk.Assert%2A> pasa la comprobación de seguridad para el permiso que está validando.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-111">An assertion is effective only if the code that calls <xref:System.Security.IStackWalk.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="3c0a7-112">Una llamada a <xref:System.Security.IStackWalk.Assert%2A> es efectivo hasta que el código de llamada devuelve al llamador o hasta que una llamada subsiguiente a <xref:System.Security.IStackWalk.Assert%2A> representa la aserción anterior ineficaces.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-112">A call to <xref:System.Security.IStackWalk.Assert%2A> is effective until the calling code returns to its caller or until a subsequent call to <xref:System.Security.IStackWalk.Assert%2A> renders the previous assertion ineffective.</span></span> <span data-ttu-id="3c0a7-113">Además, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> o <xref:System.Security.CodeAccessPermission.RevertAll%2A> quita una pendiente <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-113">Also, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> removes a pending <xref:System.Security.IStackWalk.Assert%2A>.</span></span>  
  
 <span data-ttu-id="3c0a7-114"><xref:System.Security.IStackWalk.Assert%2A> se omite para un permiso no concedido ya que no se realizará correctamente una demanda para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-114"><xref:System.Security.IStackWalk.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="3c0a7-115">Sin embargo, si el código situado más abajo en la pila de llamadas llama <xref:System.Security.IStackWalk.Demand%2A> para ese permiso, un <xref:System.Security.SecurityException> se produce cuando el recorrido de pila alcanza el código que intentó llamar a <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-115">However, if code lower on the call stack calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.Assert%2A>.</span></span> <span data-ttu-id="3c0a7-116">Esto sucede porque el código que llamó <xref:System.Security.IStackWalk.Assert%2A> no dispone del permiso, aunque intentó <xref:System.Security.IStackWalk.Assert%2A> lo.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-116">This happens because the code that called <xref:System.Security.IStackWalk.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.IStackWalk.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0a7-117">Dado que una llamada a <xref:System.Security.IStackWalk.Assert%2A> quita el requisito de que todo el código en la cadena de llamadas debe disponer de permiso para tener acceso al recurso especificado, lo cual puede provocar vulnerabilidades de seguridad si utiliza incorrectamente o incorrectamente.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-117">Because calling <xref:System.Security.IStackWalk.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="3c0a7-118">Por lo tanto, debe usarse con mucha precaución.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-118">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3c0a7-119">El código de llamada no tiene <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-119">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c0a7-120">Determina en tiempo de ejecución si a todos los autores de llamada de la pila de llamadas se les ha concedido el permiso especificado por el objeto de permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-120">Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0a7-121">Este método se usa normalmente por las bibliotecas seguras para garantizar que los llamadores tienen permiso para tener acceso a un recurso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-121">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="3c0a7-122">Por ejemplo, llama a una clase de archivo en una biblioteca de clases seguras <xref:System.Security.IStackWalk.Demand%2A> para necesaria <xref:System.Security.Permissions.FileIOPermission> antes de realizar una operación de archivo solicitada por el llamador.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-122">For example, a file class in a secure class library calls <xref:System.Security.IStackWalk.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="3c0a7-123">Los permisos del código que llama a este método no se examinan; la comprobación comienza desde el llamador inmediato de dicho código y continúa hacia arriba en la pila.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-123">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="3c0a7-124"><xref:System.Security.IStackWalk.Demand%2A> se realiza correctamente sólo si no hay <xref:System.Security.SecurityException> se genera.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-124"><xref:System.Security.IStackWalk.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3c0a7-125">Un autor de llamada situado más arriba en la pila de llamadas no tiene el permiso especificado por el objeto de permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-125">A caller higher in the call stack does not have the permission specified by the current permission object.</span>
          </span>
          <span data-ttu-id="3c0a7-126">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-126">-or-</span>
          </span>
          <span data-ttu-id="3c0a7-127">Un autor de llamada de la pila de llamadas ha llamado a <see cref="M:System.Security.IStackWalk.Deny" /> en el objeto de permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-127">A caller in the call stack has called <see cref="M:System.Security.IStackWalk.Deny" /> on the current permission object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c0a7-128">Hace que cada <see cref="M:System.Security.IStackWalk.Demand" /> del objeto actual que pase por el código de llamada produzca un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-128">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for the current object that passes through the calling code to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0a7-129">Este método evita que los llamadores situados en la pila de llamadas de acceso al recurso protegido a través del código que llama a este método, incluso si los llamadores tienen permiso para tener acceso a él.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-129">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="3c0a7-130">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-130">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="3c0a7-131"><xref:System.Security.IStackWalk.Deny%2A> puede limitar la responsabilidad del programador o ayudar a evitar vulnerabilidades de seguridad accidental porque ayuda a evitar que el método que llama a <xref:System.Security.IStackWalk.Deny%2A> desde que se va a utilizar para tener acceso al recurso protegido por el permiso denegado.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-131"><xref:System.Security.IStackWalk.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.IStackWalk.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="3c0a7-132">Si llama a un método <xref:System.Security.IStackWalk.Deny%2A> en un permiso y si un <xref:System.Security.IStackWalk.Demand%2A> para ese permiso lo invoque un llamante hacia abajo en la pila de llamadas, dicha comprobación de seguridad se producirá un error cuando alcanza el <xref:System.Security.IStackWalk.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-132">If a method calls <xref:System.Security.IStackWalk.Deny%2A> on a permission, and if a <xref:System.Security.IStackWalk.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.IStackWalk.Deny%2A>.</span></span>  
  
 <span data-ttu-id="3c0a7-133"><xref:System.Security.IStackWalk.Deny%2A> se omite para un permiso no concedido ya que no se realizará correctamente una demanda para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-133"><xref:System.Security.IStackWalk.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3c0a7-134">No se puede invalidar este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3c0a7-134">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c0a7-135">Hace que devuelva error cada método <see cref="M:System.Security.IStackWalk.Demand" /> de todos los objetos excepto del objeto actual que pase a través del código de llamada, incluso si el código situado más arriba en la pila de llamadas dispone de permiso para obtener acceso a otros recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c0a7-135">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0a7-136"><xref:System.Security.IStackWalk.PermitOnly%2A> es similar a <xref:System.Security.IStackWalk.Deny%2A>, ya que ambos originan recorridos de pila se producirá un error cuando se realizarían correctamente en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-136"><xref:System.Security.IStackWalk.PermitOnly%2A> is similar to <xref:System.Security.IStackWalk.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="3c0a7-137">La diferencia es que <xref:System.Security.IStackWalk.Deny%2A> especifica permisos que hará que el recorrido de pila producirá un error, pero <xref:System.Security.IStackWalk.PermitOnly%2A> especifica los permisos que hacen que el recorrido de pila producirá un error.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-137">The difference is that <xref:System.Security.IStackWalk.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.IStackWalk.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="3c0a7-138">Llamar a este método para asegurarse de que el código puede utilizarse para tener acceso solo a los recursos especificados.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-138">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="3c0a7-139"><xref:System.Security.IStackWalk.PermitOnly%2A> se omite para un permiso no concedido ya que no se realizará correctamente una demanda para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-139"><xref:System.Security.IStackWalk.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="3c0a7-140">Sin embargo, si el código situado más abajo en la llamada de la pila más adelante llamadas <xref:System.Security.IStackWalk.Demand%2A> para ese permiso, un <xref:System.Security.SecurityException> se produce cuando el recorrido de pila alcanza el código que intentó llamar a <xref:System.Security.IStackWalk.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-140">However, if code lower on the call stack later calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.PermitOnly%2A>.</span></span> <span data-ttu-id="3c0a7-141">Esto es porque el código que llamó <xref:System.Security.IStackWalk.PermitOnly%2A> no dispone del permiso, aunque haya llamado a <xref:System.Security.IStackWalk.PermitOnly%2A> para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-141">This is because the code that called <xref:System.Security.IStackWalk.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.IStackWalk.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="3c0a7-142">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="3c0a7-142">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>