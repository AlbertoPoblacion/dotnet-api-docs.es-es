<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityElement.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c818d504196f12b9c0fb2d709edba0ae29cba89d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">818d504196f12b9c0fb2d709edba0ae29cba89d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">Representa el modelo de objetos XML para codificar objetos de seguridad.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">Esta clase está diseñada para ser una implementación ligera de un modelo de objetos XML simple para su uso en el sistema de seguridad y no para su uso como un modelo de objetos XML general.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">Esta documentación supone un conocimiento básico de XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The simple XML object model for an element consists of the following parts:</source>
          <target state="translated">El modelo de objetos XML simple para un elemento consta de las siguientes partes:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tag is the element name.</source>
          <target state="translated">La etiqueta es el nombre del elemento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">Los atributos son cero o más pares de atributo de nombre/valor en el elemento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">Los elementos secundarios son cero o más elementos anidados dentro de <ph id="ph1">`&lt;tag&gt;`</ph> y <ph id="ph2">`&lt;/tag&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">Se recomienda encarecidamente que se usa la representación en forma de XML basado en atributos para expresar los elementos de seguridad y sus valores.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">Esto significa que las propiedades de un elemento se expresan como atributos y valores de propiedad se expresan como valores de atributo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">Evite anidar texto dentro de etiquetas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">Para cualquier <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representación en forma de una representación de tipo <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> suele estar disponible.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">Mediante esta representación XML basada en atributos aumenta la legibilidad y permite que facilita la portabilidad WMI de la serialización XML resultante.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Un nombre de atributo debe tener al menos un carácter y no puede ser <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">Si se usa la representación de los valores basados en elementos, elementos con un texto de cadena que es <ph id="ph1">`null`</ph> se representan en el <ph id="ph2">`&lt;tag/&gt;`</ph> formulario; en caso contrario, el texto está delimitado por el <ph id="ph3">`&lt;tag&gt;`</ph> y <ph id="ph4">`&lt;/tag&gt;`</ph> símbolos (tokens).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">Ambas formas se pueden combinar con atributos, que se muestran si está presente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">Las etiquetas, atributos y texto de elementos, si está presente, siempre distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">El formulario XML contiene comillas y secuencias de escape en caso necesario.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>String values that include characters invalid for use in XML result in an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Los valores de cadena que incluyen caracteres no válidos para su uso en XML que se producen en un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">Estas reglas se aplican a todas las propiedades y métodos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">Por motivos de rendimiento, la validez del carácter solo se comprueba cuando el elemento se codifica en formato de texto XML y no en cada conjunto de una propiedad o método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">Métodos estáticos permiten comprobación explícitos cuando sea necesario.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The following example shows the use of members of the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de los miembros de la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nombre de etiqueta de un elemento XML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> con la etiqueta especificada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated">El <ph id="ph1">`tag`</ph> parámetro debe constar de un nombre de etiqueta XML válido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> para quitar caracteres no válidos de la cadena.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The following code shows the use of  the <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> object.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructor para crear un nuevo <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> no es válido en XML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The tag name of the XML element.</source>
          <target state="translated">Nombre de etiqueta del elemento XML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The text content within the element.</source>
          <target state="translated">Contenido del texto en el elemento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag and text.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> con la etiqueta y el texto especificados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">Si el <ph id="ph1">`text`</ph> parámetro es <ph id="ph2">`null`</ph> este constructor produce un elemento idéntico al constructor predeterminado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated">Los parámetros <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> o <ph id="ph2">&lt;paramref name="text" /&gt;</ph> no son válidos en XML.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">El nombre del atributo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">El valor del atributo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">Agrega un atributo de nombre/valor a un elemento XML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">Nombres y valores de atributos sólo deben contener caracteres de atributo XML válidos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>XML attribute names must be unique.</source>
          <target state="translated">Nombres de atributo XML deben ser únicos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> para quitar caracteres no válidos de la cadena.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">No hay ninguna compatibilidad para cadenas entre comillas, por lo que las cadenas de pares nombre/valor no deben contener comillas u otros caracteres que requieren comillas.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> method to add a name/value attribute to an XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> método para agregar un atributo de nombre/valor a un elemento XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Los parámetros <ph id="ph1">&lt;paramref name="name" /&gt;</ph> o <ph id="ph2">&lt;paramref name="value" /&gt;</ph> son <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated">Los parámetros <ph id="ph1">&lt;paramref name="name" /&gt;</ph> o <ph id="ph2">&lt;paramref name="value" /&gt;</ph> no son válidos en XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>An attribute with the name specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter already exists.</source>
          <target state="translated">Ya existe un atributo con el nombre especificado por el parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element to add.</source>
          <target state="translated">Elemento secundario que se va a agregar.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">Agrega un elemento secundario al elemento XML.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">El elemento secundario se agrega a continuación todos los elementos secundarios previamente existentes.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> method to add a child element to the XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> método para agregar un elemento secundario al elemento XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="child" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="child" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">Nombre del atributo que se va a buscar.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">Busca un atributo por su nombre en un elemento XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The value associated with the named attribute, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no attribute with <ph id="ph2">&lt;paramref name="name" /&gt;</ph> exists.</source>
          <target state="translated">Valor asociado al atributo con nombre o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no existe ningún atributo con el nombre <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">Con XML como se indica a continuación, <ph id="ph1">`Attribute("B")`</ph> devolvería "456".</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> method to find an attribute by name.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> método para buscar un atributo por nombre.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">Obtiene o establece los atributos de un elemento XML como pares nombre/valor.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object for the attribute values of the XML element.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> de los valores de atributo del elemento XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Each attribute is stored in the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> as a name/value pair.</source>
          <target state="translated">Cada atributo se almacena en el <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> como un par de nombre/valor.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">Nombres y valores de los atributos deben contener solo caracteres de atributo XML válidos.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> para quitar caracteres no válidos de la cadena.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">No hay ninguna compatibilidad para cadenas entre comillas, por lo que las cadenas de pares nombre/valor no deben contener comillas u otros caracteres que requieren comillas.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> property to get an attribute of an XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> propiedad que se va a obtener un atributo de un elemento XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name or value of the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object is invalid.</source>
          <target state="translated">El nombre o valor del objeto <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">El nombre no es un nombre del atributo XML válido.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">Obtiene o establece la matriz de elementos secundarios del elemento XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">Elementos secundarios solicitados del elemento XML como elementos de seguridad.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contiene <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> aparecerán en primer lugar.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> property to get the array of child elements of the XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> propiedad que se va a obtener la matriz de elementos secundarios del elemento XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>A child of the XML parent node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> es un elemento secundario del nodo XML principal.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Crea y devuelve una copia idéntica del objeto <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>A copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Copia del objeto <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Copy">
          <source>The copy includes both the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> properties.</source>
          <target state="translated">La copia incluye tanto el <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">Objeto de elemento XML con el que se comparará el objeto de elemento XML actual.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">Compara dos objetos de elementos XML para determinar si son iguales.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la etiqueta, los nombres y valores de los atributos, elementos secundarios y campos de texto del elemento XML actual son idénticos a los correspondientes en el parámetro <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; en caso contrario, el valor es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">Si hay elementos secundarios, comparación amplía a ellos de forma recursiva.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">No hay ninguna compatibilidad para comparar diferentes representaciones XML de los mismos caracteres.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> method to compare two XML elements.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> método para comparar dos elementos XML.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">Cadena en la que se crean los caracteres de escape no válidos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Reemplaza caracteres XML no válidos en una cadena por sus equivalentes válidos.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">Cadena de entrada con los caracteres no válidos reemplazados.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Use this method to replace invalid characters in a string before using the string in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">Utilice este método para reemplazar caracteres no válidos en una cadena antes de utilizar la cadena en un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>If invalid characters are used in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> without being escaped, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Si se usan caracteres no válidos en un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> sin caracteres de escape, un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following table shows the invalid XML characters and their escaped equivalents.</source>
          <target state="translated">La siguiente tabla muestra los caracteres XML no válidos y sus secuencias de escape equivalentes.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Invalid XML character</source>
          <target state="translated">Carácter XML no válido</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaced with</source>
          <target state="translated">Reemplazado por</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> method to replace invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> caracteres de método para reemplazar un XML no válido en una cadena con su equivalente XML válido.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">Cadena codificada en XML desde la que se va a crear el elemento de seguridad.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">Crea un elemento de seguridad de una cadena codificada en XML.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> created from the XML.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> creado a partir de XML.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</source>
          <target state="translated">No use comillas simples en la cadena XML; en su lugar, utilice caracteres de escape las comillas dobles.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>For example, instead of "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> use "<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</source>
          <target state="translated">Por ejemplo, en lugar de "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> usar"<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</source>
          <target state="translated">Uso de comillas simples puede dar lugar a que cualquiera que se produzca una excepción o, en algunos casos, las comillas simples se tratan como texto en la cadena.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contiene uno o más caracteres de comillas simples.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The attribute name to test for validity.</source>
          <target state="translated">Nombre del atributo cuya validez se va a comprobar.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">Determina si una cadena es un nombre de atributo válido.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter is a valid XML attribute name; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="name" /&gt;</ph> es un nombre de atributo XML válido; en caso contrario, el valor es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Este método puede utilizarse para probar un atributo antes de agregarlo a un elemento de seguridad.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> method to determine whether a string is a valid attribute name.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> método para determinar si una cadena es un nombre de atributo válido.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The attribute value to test for validity.</source>
          <target state="translated">Valor del atributo cuya validez se va a comprobar.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">Determina si una cadena es un nombre de atributo válido.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid XML attribute value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es un valor de atributo XML válido; en caso contrario, el valor es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Este método puede utilizarse para probar un atributo antes de agregarlo a un elemento de seguridad.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> method to determine whether a string is a valid attribute value.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> método para determinar si una cadena es un valor de atributo válido.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The tag to test for validity.</source>
          <target state="translated">Etiqueta cuya validez se va a comprobar.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">Determina si una cadena es una etiqueta válida.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> parameter is a valid XML tag; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> es una etiqueta de atributo XML válida; en caso contrario, el valor es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This can be used to test a <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> before setting it.</source>
          <target state="translated">Esto puede usarse para probar un <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> antes de establecerla.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> method to determine whether a string is a valid attribute tag.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> método para determinar si una cadena es una etiqueta de atributo válido.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The text to test for validity.</source>
          <target state="translated">Texto cuya validez se va a comprobar.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">Determina si una cadena es válida como texto dentro de un elemento XML.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is a valid XML text element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="text" /&gt;</ph> es un elemento de texto XML válido; en caso contrario, el valor es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This method can be used to test <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> before setting it.</source>
          <target state="translated">Este método puede utilizarse para probar <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> antes de establecerla.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> method to determine whether a string is valid as XML element text.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> método para determinar si una cadena es válida como texto de elemento XML.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Etiqueta que se va a buscar en los elementos secundarios.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>Finds a child by its tag name.</source>
          <target state="translated">Busca un elemento secundario por su nombre de etiqueta.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The first child XML element with the specified tag value, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no child element with <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> exists.</source>
          <target state="translated">El primer elemento XML secundario con el valor de etiqueta especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no existe ningún elemento secundario con <ph id="ph2">&lt;paramref name="tag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">Con XML como se indica a continuación, <ph id="ph1">`SearchForChildByTag("second")`</ph> devolvería el elemento secundario <ph id="ph2">`&lt;second&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> method to find a child by its tag name.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> método para buscar un elemento secundario por su nombre de etiqueta.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Etiqueta que se va a buscar en los elementos secundarios.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">Busca un elemento secundario por su nombre de etiqueta y devuelve el texto que contiene.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">Contenido del texto del primer elemento secundario con el valor de etiqueta especificado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This method is equivalent to the following:</source>
          <target state="translated">Este método es equivalente a la siguiente:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">Con XML como se indica a continuación, <ph id="ph1">`SearchForTextOfTag("second")`</ph> devolvería "text2".</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> method to find a child by its tag name and return the contained text.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> método para buscar un elemento secundario por su nombre de etiqueta y devolver el texto que contiene.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">Obtiene o establece el nombre de etiqueta de un elemento XML.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nombre de etiqueta de un elemento XML.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>In XML, the tag appears in the script as appears below:</source>
          <target state="translated">En XML, la etiqueta que aparece en el script tal como aparece a continuación:</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>If this element has child elements, the children will replace <ph id="ph1">`text`</ph>.</source>
          <target state="translated">Si este elemento tiene elementos secundarios, los elementos secundarios reemplazará <ph id="ph1">`text`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">Asigne sólo cadenas de etiqueta XML válidas para esta propiedad.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> para quitar caracteres no válidos de la cadena.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> property to get the tag name of an XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> propiedad que se va a obtener el nombre de etiqueta de un elemento XML.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La etiqueta es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is not valid in XML.</source>
          <target state="translated">La etiqueta no es válida en XML.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">Obtiene o establece el texto dentro de un elemento XML.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The value of the text within an XML element.</source>
          <target state="translated">Valor del texto dentro de un elemento XML.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">El texto no debe contener caracteres especiales de XML.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> para quitar caracteres no válidos de la cadena.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contiene <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> aparecerán en primer lugar.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> property to get the text of an XML element.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> propiedad que se va a obtener el texto de un elemento XML.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>The text is not valid in XML.</source>
          <target state="translated">El texto no es válido en XML.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">Crea la representación de cadena de un elemento XML y los atributos, elementos secundarios y texto que lo constituyen.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>The XML element and its contents.</source>
          <target state="translated">Elemento XML y su contenido.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.ToString">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">Este método es útil para la depuración para ver la representación XML del elemento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>