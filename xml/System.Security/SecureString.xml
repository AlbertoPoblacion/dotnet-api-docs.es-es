<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureString.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f06352fcacdabe46f8a02266efc7ecb816129c3b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f06352fcacdabe46f8a02266efc7ecb816129c3b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">Representa el texto que debe mantenerse confidencial (por ejemplo, mediante su eliminación de la memoria del equipo cuando ya no se necesite).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is a string type that provides a measure of security.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> es un tipo de cadena que proporciona una medida de seguridad.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">Intenta evitar almacenar cadenas potencialmente confidenciales en la memoria de proceso como texto sin formato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(Para conocer las limitaciones, sin embargo, consulte la <bpt id="p1">[</bpt>¿es seguro SecureString?<ept id="p1">](#HowSecure)</ept> sección.) El valor de una instancia de <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> automáticamente está protegido mediante un mecanismo compatible con la plataforma subyacente cuando se inicializa la instancia o cuando se modifica el valor.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Your application can render the instance immutable and prevent further modification by invoking the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">La aplicación puede volver la instancia inalterable y evitar la modificación posterior al invocar el <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">La longitud máxima de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancia es de 65.536 caracteres.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Cuando haya terminado de utilizar una instancia del tipo, debe eliminar del mismo directa o indirectamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para deshacerse del tipo directamente, llame a su <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método en un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloque.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para deshacerse de él indirectamente, use una construcción de lenguaje como <ph id="ph1">`using`</ph> (en C#) o <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tema de la interfaz.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class and its members are not visible to COM.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase y sus miembros no son visibles para COM.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In this section:</source>
          <target state="translated">En esta sección:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>frente a cadena. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString operations<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Operaciones de SecureString<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>SecureString e interoperabilidad<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>¿Es seguro SecureString?<ept id="p1">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>String versus SecureString</source>
          <target state="translated">Cadena frente a SecureString</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>An instance of the <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated">Una instancia de la <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> clase es inmutable y, cuando ya no necesite, no se pueden programar mediante programación para la recolección; es decir, la instancia es de solo lectura después de crearlo, y no es posible predecir cuándo se eliminarán la instancia de la memoria del equipo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">Dado que <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> las instancias son inmutables, las operaciones que parecen modificar una instancia existente realmente crean una copia del mismo para manipular.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Consequently, if a <ph id="ph1">&lt;xref:System.String&gt;</ph> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">Por lo tanto, si un <ph id="ph1">&lt;xref:System.String&gt;</ph> objeto contiene información confidencial, como una contraseña, tarjeta de crédito o datos personales, existe un riesgo para la información se pueda revelar una vez utilizada, porque la aplicación no puede eliminar los datos de la memoria del equipo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is similar to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object in that it has a text value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto es similar a una <ph id="ph2">&lt;xref:System.String&gt;</ph> porque tiene un valor de texto del objeto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, the value of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method  or by the .NET Framework garbage collector.</source>
          <target state="translated">Sin embargo, el valor de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> está anclado en la memoria de objetos, puede usar un mecanismo de protección, como cifrado, proporcionado por el sistema operativo subyacente, se puede modificar hasta que la aplicación lo marque como de solo lectura y puede eliminarse de la memoria del equipo por la aplicación que llama a la <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> método o por el recolector de elementos no utilizados de .NET Framework.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For a discussion of the limitations of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">Para obtener una explicación de las limitaciones de la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> de clases, consulte la <bpt id="p1">[</bpt>¿es seguro SecureString?<ept id="p1">](#HowSecure)</ept> sección.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Volver al principio<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString operations</source>
          <target state="translated">Operaciones de SecureString</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class includes members that allow you to do the following:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase incluye miembros que le permiten hacer lo siguiente:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Crear una instancia de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by calling its parameterless constructor.</source>
          <target state="translated">Cree instancias de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto mediante una llamada a su constructor sin parámetros.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Add characters to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Agregar caracteres a un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can add a single character at a time to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object  by calling its <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method.</source>
          <target state="translated">Puede agregar un único carácter a la vez a un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto mediante una llamada a su <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object should never be constructed from a <ph id="ph2">&lt;xref:System.String&gt;</ph>, because the sensitive data is already subject to the memory persistence consequences of the immutable <ph id="ph3">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto nunca debe crearse desde un <ph id="ph2">&lt;xref:System.String&gt;</ph>, ya que los datos confidenciales ya están sujeto a las consecuencias de persistencia de memoria de inmutable <ph id="ph3">&lt;xref:System.String&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The best way to construct a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is from a character-at-a-time unmanaged source, such as the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La mejor manera de construir un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto es de un origen no administrado de un carácter a la vez, como el <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Remove characters from a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Quite los caracteres de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can replace an individual character by calling the <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> method, remove an individual character by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> method, or remove all characters from the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance by calling the  <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Puede reemplazar un carácter individual mediante una llamada a la <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> método, quitar un carácter individual mediante una llamada a la <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> método o quitar todos los caracteres de la <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instancia mediante una llamada a la <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Make the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object read-only</source>
          <target state="translated">Realizar la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto de solo lectura</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Once you have defined the string that the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object represents, you call its  <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the string read-only.</source>
          <target state="translated">Una vez haya definido la cadena que el <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> representa el objeto, se llama a su <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> método para crear la cadena de solo lectura.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Get information about the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Obtener información sobre la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has only two members that provide information about the string: its <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property, which indicates the number of UTF16-encoded code units in the string; and the <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, method, which indicates whether the instance is read-only.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase tiene solo dos miembros que proporcionan información acerca de la cadena: su <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> propiedad, lo que indica el número de unidades de código codificado en UTF16 en la cadena; y la <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, método, que indica si la instancia es de solo lectura.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Release the memory allocated to the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance</source>
          <target state="translated">Liberar la memoria asignada a la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancia</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, you release its memory by calling the <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Dado que <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementa la <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interfaz, libere su memoria mediante una llamada a la <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has no members that inspect, compare, or convert the value of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase no tiene ningún miembro que inspeccione, compare o convierta el valor de un <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">La ausencia de estos miembros le ayuda a proteger el valor de la instancia de una exposición accidental o malintencionada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Use appropriate members of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> method, to manipulate the value of a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">Use los miembros adecuados de la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> de la clase, como el <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> método, para manipular el valor de un <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The .NET Framework Class Library commonly uses <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instances in the following ways:</source>
          <target state="translated">La biblioteca de clases de .NET Framework utilizadas comúnmente <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancias de las maneras siguientes:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information to a process by using the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> structure or by calling an overload of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> method that has a parameter of type <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Para proporcionar información de contraseña a un proceso mediante la <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> estructura o llamando a una sobrecarga de la <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> método que tiene un parámetro de tipo <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide network password information by calling a <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> class constructor that has a parameter of type <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> or by using the <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para proporcionar información de contraseña de red mediante una llamada a un <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> constructor de clase que tiene un parámetro de tipo <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> o mediante la <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information for SQL Server Authentication by calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor or retrieving the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para proporcionar información de contraseña de autenticación de SQL Server mediante una llamada a la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor o la recuperación del valor de la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To pass a string to unmanaged code.</source>
          <target state="translated">Para pasar una cadena a código no administrado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Para obtener más información, consulte el <bpt id="p1">[</bpt>SecureString e interoperabilidad<ept id="p1">](#interop)</ept> sección.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Volver al principio<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString and interop</source>
          <target state="translated">SecureString e interoperabilidad</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because the operating system does not  directly support <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, you must convert the value of the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to the required string type before passing the string to a native method.</source>
          <target state="translated">Dado que el sistema operativo no admite directamente <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, debe convertir el valor de la <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> objeto en el tipo de cadena necesario antes de pasar la cadena a un método nativo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class has five methods that do this:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> clase tiene cinco métodos que hacen esto:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, which converts the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, que convierte el <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> cadena de valor a una cadena binaria (BSTR) reconocida COM.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to an ANSI string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, que copia el <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> cadena de valor en una cadena ANSI en memoria no administrada.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to a Unicode string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, que copia el <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> cadena de valor a una cadena Unicode en memoria no administrada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">Cada uno de estos métodos crea una cadena de texto no cifrado en memoria no administrada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">Es responsabilidad del desarrollador a cero y libera esa memoria cuando ya no es necesario.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</source>
          <target state="translated">Cada uno de los métodos de asignación de memoria y la conversión de cadenas tiene un método correspondiente a cero y liberar la memoria asignada:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Allocation and conversion method</source>
          <target state="translated">Método de asignación y conversión</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Zero and free method</source>
          <target state="translated">Cero y free (método)</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Volver al principio<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>How secure is SecureString?</source>
          <target state="translated">¿Es seguro SecureString?</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When created properly, a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance provides more data protection than a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Cuando se crea correctamente, un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancia proporciona más protección de datos que un <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When creating a string from a character-at-a-time source, <ph id="ph1">&lt;xref:System.String&gt;</ph> creates multiple intermediate in memory, whereas  <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> creates just a single instance.</source>
          <target state="translated">Al crear una cadena de un origen de un carácter a la vez, <ph id="ph1">&lt;xref:System.String&gt;</ph> crea varios intermedio en la memoria, mientras que <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> crea una sola instancia.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Garbage collection of <ph id="ph1">&lt;xref:System.String&gt;</ph> objects  is non-deterministic.</source>
          <target state="translated">Colección de elementos no utilizados de <ph id="ph1">&lt;xref:System.String&gt;</ph> objetos es no determinista.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of <ph id="ph1">&lt;xref:System.String&gt;</ph> values when moving and compacting memory.</source>
          <target state="translated">Además, porque no está anclada su memoria, el recolector de elementos no utilizados a realizar copias adicionales de <ph id="ph1">&lt;xref:System.String&gt;</ph> valores al mover y compactar la memoria.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In contrast, the memory allocated to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned,  and that memory can be freed by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">En cambio, la memoria asignada a un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto está anclado y se puede liberar esa memoria mediante una llamada a la <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Although data stored in a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is more secure than data stored in a <ph id="ph2">&lt;xref:System.String&gt;</ph> instance, there are significant limitations on how secure a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance is.</source>
          <target state="translated">Aunque los datos se almacenan en un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancia es más segura que los datos almacenados en una <ph id="ph2">&lt;xref:System.String&gt;</ph> de la instancia, hay limitaciones significativas en el nivel de seguridad un <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> es la instancia.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>These include:</source>
          <target state="translated">Se incluyen los siguientes:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Platform</source>
          <target state="translated">Plataforma</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>On the Windows operating system, the contents of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's internal character array is encrypted.</source>
          <target state="translated">En el sistema operativo Windows, el contenido de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> se cifra la matriz de caracteres interno de la instancia.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">Sin embargo, si debido a falta de API o problemas de administración de claves, cifrado no está disponible en todas las plataformas.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because of this, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is available on Desktop (Windows only), and not on .NET Core.</source>
          <target state="translated">Por este motivo, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> está disponible en el escritorio (sólo Windows) y no en .NET Core.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Duration</source>
          <target state="translated">Duración</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Even if the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementation is able to take advantage of encryption, the plain text assigned to the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> instance may be exposed at various times:</source>
          <target state="translated">Incluso si la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementación es capaz de aprovechar las ventajas del cifrado, el texto sin formato asignado a la <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> instancia puede quedar expuesta en momentos diferentes:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">Dado que Windows no ofrece una implementación de la cadena segura en el nivel de sistema operativo, .NET Framework aún que convertir el valor de cadena segura en su representación de texto sin formato para poder utilizarlo.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Whenever the value of the secure string is modified by methods such as <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">Cada vez que se modifica el valor de la cadena segura mediante métodos como <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, se deben descifrar (es decir, convertir de regreso en texto sin formato), modificar y, a continuación, se vuelven a cifrar.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">Si la cadena segura se utiliza en una llamada de interoperabilidad, se debe convertir a una cadena ANSI, una cadena Unicode o una cadena binaria (BSTR).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Para obtener más información, consulte el <bpt id="p1">[</bpt>SecureString e interoperabilidad<ept id="p1">](#interop)</ept> sección.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The time interval for which the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's value is exposed  is merely shortened in comparison to the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">El intervalo de tiempo para el que el <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> se expone el valor de la instancia se acorta simplemente en comparación con el <ph id="ph2">&lt;xref:System.String&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Storage versus usage</source>
          <target state="translated">Almacenamiento y uso</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>More generally, the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">Por lo general, la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase define un mecanismo de almacenamiento para los valores de cadena que debe estar protegido o confidencial.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Sin embargo, fuera de .NET Framework, donde se admite ningún mecanismo de uso <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">Esto significa que la cadena segura debe convertirse en un formato utilizable (normalmente una forma de texto no cifrado) que puede ser reconocido por su destino, y que el descifrado y la conversión deben aparecer en el espacio de usuario.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Overall, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is more secure than <ph id="ph2">&lt;xref:System.String&gt;</ph> because it limits the exposure of sensitive string data.</source>
          <target state="translated">General, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> es más seguro que <ph id="ph2">&lt;xref:System.String&gt;</ph> porque se limita la exposición de datos de cadena que depende.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">Sin embargo, esas cadenas todavía pueden quedar expuestas a cualquier proceso u operación que tiene acceso a la memoria sin formato, como un proceso malintencionado ejecutándose en el equipo host, un volcado de proceso o un archivo de intercambio visibles para el usuario.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instead of using <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">En lugar de usar <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> para proteger las contraseñas, la alternativa recomendada es utilizar un identificador opaco a las credenciales que se almacenan fuera del proceso.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Volver al principio<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to secure a user’s password for use as a credential to start a new process.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> para proteger la contraseña de un usuario para su uso como una credencial para iniciar un nuevo proceso.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example uses the default (or parameterless) constructor to instantiate a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se utiliza el valor predeterminado (o sin parámetros) constructor para crear instancias de un nuevo <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method to add an array of characters to it.</source>
          <target state="translated">A continuación, llama el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> método para agregar una matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object from the value of a <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto desde el valor de un <ph id="ph2">&lt;xref:System.String&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta instancia.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Operación no permitida en esta plataforma.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>A pointer to an array of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Puntero a una matriz de objetos <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to include in the new instance.</source>
          <target state="translated">Número de elementos de <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> que se van a incluir en la nueva instancia.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class from a subarray of <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> desde una submatriz de objetos <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">Este constructor no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</source>
          <target state="translated">La alternativa conforme a CLS es <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor initializes the new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object to the number of characters in <ph id="ph2">`value`</ph> specified by <ph id="ph3">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">Este constructor inicializa la nueva <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto para el número de caracteres en <ph id="ph2">`value`</ph> especificado por <ph id="ph3">`length`</ph>; a continuación, se cifra el valor de la instancia.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">En C#, se define este constructor solo en el contexto de código no seguro.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The following example instantiates a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by passing its constructor a pointer to a character array.</source>
          <target state="translated">El ejemplo siguiente crea un nuevo <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> objeto pasando su constructor un puntero a una matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> es menor que cero o mayor que 65 536.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Operación no permitida en esta plataforma.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>A character to append to this secure string.</source>
          <target state="translated">Carácter que se va a anexar a esta cadena segura.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">Anexa un carácter al final de la cadena segura actual.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">Si la implementación usa un mecanismo de protección, como el cifrado, el valor de esta cadena segura, si existe, está protegido; <ph id="ph1">`c`</ph> se anexa; a continuación, el nuevo valor de la cadena segura es volver a protegerlo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> métodos afecta al valor de un <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> métodos pueden usarse para recopilar los caracteres de una contraseña.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Esta cadena segura es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">Esta operación haría que esta cadena segura tuviese más de 65 536 caracteres.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">Elimina el valor de la cadena segura actual.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">La memoria del equipo que contiene el valor de esta cadena segura se pone a cero, a continuación, la longitud del valor de esta cadena segura se establece en cero.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> métodos afecta al valor de un <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string is read-only.</source>
          <target state="translated">Esta cadena segura es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">Crea una copia de la cadena segura actual.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>A duplicate of this secure string.</source>
          <target state="translated">Duplicado de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Copy">
          <source>If an instance of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">Si una instancia de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> está marcado como de solo lectura, la copia de esa instancia no será de solo lectura.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Dispose">
          <source>Releases all resources used by the current <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object.</source>
          <target state="translated">Libera todos los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method writes binary zeroes to the allocated memory that contains the value of this <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object, then frees the allocated memory.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> método escribe ceros binarios a la memoria asignada que contiene el valor de este <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> objeto, a continuación, libera la memoria asignada.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recolección<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index position where parameter <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept> is inserted.</source>
          <target state="translated">Posición de índice donde se inserta el parámetro <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The character to insert.</source>
          <target state="translated">Carácter que se va a insertar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">Inserta un carácter en esta cadena segura en la posición de índice especificada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">El índice está basado en cero; el primer carácter de esta cadena segura está en la posición de índice cero.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">Si la implementación usa un mecanismo de protección, como el cifrado, el valor de la cadena segura, si existe, está protegido; <ph id="ph1">`c`</ph> se inserta en la posición de índice especificada; a continuación, el nuevo valor es volver a protegerlo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method yields the same results as the <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method, which inserts a character at the end of a secure string, if the <ph id="ph3">`index`</ph> parameter of <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> is set to the length of this instance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> método produce los mismos resultados que la <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> método, que inserta un carácter al final de una cadena segura, si la <ph id="ph3">`index`</ph> parámetro de <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> se establece en la longitud de esta instancia.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> métodos afecta al valor de un <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Esta cadena segura es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero o mayor que la longitud de la cadena segura en cuestión.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">Esta operación haría que esta cadena segura tuviese más de 65 536 caracteres.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">Indica si esta cadena segura está marcada como de solo lectura.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this secure string is marked read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la cadena segura está marcada como de solo lectura; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>After an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only by the <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method, any attempt to modify the value of the instance throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Después de una instancia de <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> está marcado como de sólo lectura por la <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> método, cualquier intento de modificar el valor de la instancia se inicia genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only before attempting to modify it.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> método para probar si un <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> es de solo lectura antes de intentar modificarla.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">Obtiene el número de caracteres de la cadena segura actual.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects in this secure string.</source>
          <target state="translated">Número de objetos <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property returns the number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects in this instance, not the number of Unicode characters.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> propiedad devuelve el número de <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos en este caso, no el número de caracteres Unicode.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>A Unicode character might be represented by more than one <ph id="ph1">&lt;xref:System.Char&gt;</ph> object.</source>
          <target state="translated">Un carácter Unicode podría estar representado por más de un <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">La longitud máxima de un <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instancia es de 65.536 caracteres.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">Hace que el valor de texto de esta cadena segura sea de solo lectura.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Initialize the text value of an instance of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class with the <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> constructors, and modify the value with the <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> methods.</source>
          <target state="translated">Inicializar el valor de texto de una instancia de la <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> clase con la <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> constructores y modifique el valor con el <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After you have made your final modifications, use the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the value of the instance immutable (read-only).</source>
          <target state="translated">Una vez realizadas las modificaciones finales, use la <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> método para hacer que el valor de la instancia sea inmutable (de solo lectura).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the value is marked as read-only, any further attempt to modify it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Después de que el valor está marcado como de solo lectura, cualquier intento posterior de modificar, se produce un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The effect of invoking <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> is permanent because the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> class provides no means to make the secure string modifiable again.</source>
          <target state="translated">El efecto de invocar <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> es permanente porque la <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> clase no ofrece ningún medio para convertir la cadena segura modificable de nuevo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether an instance of <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> método para comprobar si una instancia de <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> métodos pueden usarse para recopilar los caracteres de una contraseña.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the password is collected, it is made read-only.</source>
          <target state="translated">Después de recopila la contraseña, se realiza de solo lectura.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">Posición de índice de un carácter en esta cadena segura.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">Quita de esta cadena segura el carácter que se encuentra en la posición de índice especificada.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">El índice está basado en cero; el primer carácter de esta instancia está en la posición de índice cero.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">Si la implementación usa un mecanismo de protección, como el cifrado, el valor de esta cadena segura, si existe, está protegido; se quita el carácter que ocupa la posición de índice especificada; a continuación, el nuevo valor es volver a protegerlo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> métodos afecta al valor de un <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> métodos pueden usarse para recopilar los caracteres de una contraseña.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string is read-only.</source>
          <target state="translated">Esta cadena segura es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero o mayor o igual que la longitud de la cadena segura en cuestión.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">Posición de índice de un carácter existente en esta cadena segura.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>A character that replaces the existing character.</source>
          <target state="translated">Carácter que reemplaza al carácter existente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">Reemplaza con otro carácter el carácter existente en la posición de índice especificada.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">El índice está basado en cero; el primer carácter de esta instancia está en la posición de índice cero.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">Si la implementación usa un mecanismo de protección, como el cifrado, el valor de la cadena segura, si existe, está protegido; <ph id="ph1">`c`</ph> se asigna a la posición de índice especificada; a continuación, el nuevo valor es volver a protegerlo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> métodos afecta al valor de un <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Esta cadena segura ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Esta cadena segura es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero o mayor o igual que la longitud de la cadena segura en cuestión.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Error al proteger o desproteger el valor de esta cadena segura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>