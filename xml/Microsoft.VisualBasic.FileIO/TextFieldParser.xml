<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextFieldParser.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac534fefd8e673d5edb9c2fb81e0c3d6c92c4fe6c0b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34fefd8e673d5edb9c2fb81e0c3d6c92c4fe6c0b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Provides methods and properties for parsing structured text files.</source>
          <target state="translated">Proporciona los métodos y propiedades para analizar archivos de texto estructurados.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The <ph id="ph1">`TextFieldParser`</ph> object provides methods and properties for parsing structured text files.</source>
          <target state="translated">La <ph id="ph1">`TextFieldParser`</ph> objeto proporciona métodos y propiedades para analizar archivos de texto estructurados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Parsing a text file with the <ph id="ph1">`TextFieldParser`</ph> is similar to iterating over a text file, while the <ph id="ph2">`ReadFields`</ph> method to extract fields of text is similar to splitting the strings.</source>
          <target state="translated">Análisis de un archivo de texto con el <ph id="ph1">`TextFieldParser`</ph> es similar para recorrer en iteración un archivo de texto, mientras que la <ph id="ph2">`ReadFields`</ph> método para extraer campos de texto es similar a dividir las cadenas.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The <ph id="ph1">`TextFieldParser`</ph> can parse two types of files: delimited or fixed-width.</source>
          <target state="translated">La <ph id="ph1">`TextFieldParser`</ph> puede analizar dos tipos de archivos: delimitados o de ancho fijo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Some properties, such as <ph id="ph1">`Delimiters`</ph> and <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> are meaningful only when working with delimited files, while the <ph id="ph3">`FieldWidths`</ph> property is meaningful only when working with fixed-width files.</source>
          <target state="translated">Algunas propiedades, como <ph id="ph1">`Delimiters`</ph> y <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> solo son significativos cuando se trabaja con archivos delimitados, mientras el <ph id="ph3">`FieldWidths`</ph> propiedad es significativa sólo cuando se trabaja con archivos de ancho fijo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> object.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a delimited text file</source>
          <target state="translated">Leer de un archivo de texto delimitado</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Leer de un archivo de texto de ancho fijo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a text file with multiple formats</source>
          <target state="translated">Leer de un archivo de texto con varios formatos</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto con varios formatos<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>This example parses through a tab-delimited text file, <ph id="ph1">`Bigfile`</ph>.</source>
          <target state="translated">En este ejemplo se analiza mediante un archivo de texto delimitado por tabuladores, <ph id="ph1">`Bigfile`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>The stream to be parsed.</source>
          <target state="translated">Secuencia que se va a analizar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto para analizar el archivo o la secuencia que se representa mediante el <ph id="ph2">`stream`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> es <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">No se pueden leer desde <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> stream to be parsed.</source>
          <target state="translated">Secuencia de <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> que se va a analizar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`reader`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto para analizar el archivo o la secuencia que se representa mediante el <ph id="ph2">`reader`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Ruta de acceso completa al archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto que se va a analizar el archivo especificado por el <ph id="ph2">`path`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> es una cadena vacía.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream to be parsed.</source>
          <target state="translated">Secuencia que se va a analizar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto para analizar el archivo o la secuencia que se representa mediante el <ph id="ph2">`stream`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Cuando se compila un juego de caracteres con una configuración de referencia cultural concreta y se recuperan los mismos caracteres con una configuración cultural diferente, los caracteres no pueden interpretarse y pudieron provocar que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> o <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> es <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">No se pueden leer desde <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Ruta de acceso completa al archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto que se va a analizar el archivo especificado por el <ph id="ph2">`path`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Cuando se compila un juego de caracteres con una configuración de referencia cultural concreta y se recuperan los mismos caracteres con una configuración cultural diferente, los caracteres no pueden interpretarse y pudieron provocar que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> es una cadena vacía o <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> es <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The stream to be parsed.</source>
          <target state="translated">Secuencia que se va a analizar.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indica si se deben buscar marcas de orden de byte al comienzo del archivo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto para analizar el archivo o la secuencia que se representa mediante el <ph id="ph2">`stream`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si el <ph id="ph1">`detectEncoding`</ph> parámetro es <ph id="ph2">`True`</ph>, este constructor intenta detectar la codificación examinando los tres primeros bytes de la secuencia o archivo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Automáticamente reconoce UTF-8, little-endian Unicode y texto Unicode big-endian si el archivo comienza con las marcas de orden de bytes adecuadas.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">En caso contrario, la codificación especificada por <ph id="ph1">`defaultEncoding`</ph> se utiliza.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Cuando se compila un juego de caracteres con una configuración de referencia cultural concreta y se recuperan los mismos caracteres con una configuración cultural diferente, los caracteres no pueden interpretarse y pudieron provocar que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> o <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> es <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">No se pueden leer desde <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Ruta de acceso completa al archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indica si se deben buscar marcas de orden de byte al comienzo del archivo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto que se va a analizar el archivo especificado por el <ph id="ph2">`path`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si el <ph id="ph1">`detectEncoding`</ph> parámetro es <ph id="ph2">`True`</ph>, este constructor intenta detectar la codificación examinando los tres primeros bytes de la secuencia o archivo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Automáticamente reconoce UTF-8, little-endian Unicode y texto Unicode big-endian si el archivo comienza con las marcas de orden de bytes adecuadas.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">En caso contrario, la codificación especificada por <ph id="ph1">`defaultEncoding`</ph> se utiliza.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Cuando se compila un juego de caracteres con una configuración de referencia cultural concreta y se recuperan los mismos caracteres con una configuración cultural diferente, los caracteres no pueden interpretarse y pudieron provocar que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> es una cadena vacía o <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> es <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>The stream to be parsed.</source>
          <target state="translated">Secuencia que se va a analizar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indica si se deben buscar marcas de orden de byte al comienzo del archivo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Indicates whether to leave <bpt id="p1">&lt;c&gt;</bpt>stream<ept id="p1">&lt;/c&gt;</ept> open when the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> object is closed.</source>
          <target state="translated">Indica si debe mantenerse abierto el objeto <bpt id="p1">&lt;c&gt;</bpt>stream<ept id="p1">&lt;/c&gt;</ept> cuando el objeto <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">`TextFieldParser`</ph> objeto para analizar el archivo o la secuencia que se representa mediante el <ph id="ph2">`stream`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si el <ph id="ph1">`detectEncoding`</ph> parámetro es <ph id="ph2">`True`</ph>, este constructor intenta detectar la codificación examinando los tres primeros bytes de la secuencia o archivo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Automáticamente reconoce UTF-8, little-endian Unicode y texto Unicode big-endian si el archivo comienza con las marcas de orden de bytes adecuadas.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">En caso contrario, la codificación especificada por <ph id="ph1">`defaultEncoding`</ph> se utiliza.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Cuando se compila un juego de caracteres con una configuración de referencia cultural concreta y se recuperan los mismos caracteres con una configuración cultural diferente, los caracteres no pueden interpretarse y pudieron provocar que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> o <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> es <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">No se pueden leer desde <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
          <source>Closes the current <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Cierra el actual objeto <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
          <source>This example closes the <ph id="ph1">`TextFieldParser.FileReader`</ph>.</source>
          <target state="translated">En este ejemplo se cierra el <ph id="ph1">`TextFieldParser.FileReader`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>Defines comment tokens.</source>
          <target state="translated">Define los símbolos (token) de comentarios.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</source>
          <target state="translated">Un símbolo (token) de comentario es una cadena que, cuando se encuentra al principio de una línea, indica que dicha línea es un comentario y que el analizador debe omitirla.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A string array that contains all of the comment tokens for the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Matriz de cadenas que contiene todos los tokens de comentario del objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Se trata de un miembro avanzado; no aparece en IntelliSense, a menos que haga clic en el <bpt id="p1">**</bpt>todos los<ept id="p1">**</ept> ficha.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>Zero-length comment tokens are ignored.</source>
          <target state="translated">Se omiten los símbolos de comentario de longitud cero.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>This example specifies that for the <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph> lines beginning with a single quotation mark (') should be ignored.</source>
          <target state="translated">Este ejemplo especifica que, para la <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph> se deben omitir las líneas que comienzan con una comilla simple (').</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A comment token includes white space.</source>
          <target state="translated">Un token de comentario incluye un espacio en blanco.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Defines the delimiters for a text file.</source>
          <target state="translated">Define los delimitadores de un archivo de texto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>A string array that contains all of the field delimiters for the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Matriz de cadenas que contiene todos los delimitadores de campo del objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>This property is meaningful only if the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id="ph2">`FieldType.Delimited`</ph>.</source>
          <target state="translated">Esta propiedad es significativa sólo si la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`FieldType.Delimited`</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Defining the delimiters for a text file can also be accomplished with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</ph> method.</source>
          <target state="translated">Definir los delimitadores para un archivo de texto también puede realizarse con el <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>The following table lists an example of a task involving the <ph id="ph1">`Delimiters`</ph> property.</source>
          <target state="translated">La tabla siguiente muestra un ejemplo de una tarea que implica el <ph id="ph1">`Delimiters`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Read from a delimited text file</source>
          <target state="translated">Leer de un archivo de texto delimitado</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>This example specifies that the delimiter for the <ph id="ph1">`TextFieldParser`</ph> object, <ph id="ph2">`FileReader`</ph>, is a comma (,).</source>
          <target state="translated">Este ejemplo especifica que el delimitador para la <ph id="ph1">`TextFieldParser`</ph> objeto, <ph id="ph2">`FileReader`</ph>, es una coma (,).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>A delimiter value is set to a newline character, an empty string, or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">Un valor delimitador se establece en un carácter de nueva línea, una cadena vacía o <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libera los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libera los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source>Boolean.</source>
          <target state="translated">booleano.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> libera los recursos administrados y no administrados; <ph id="ph2">&lt;see langword="False" /&gt;</ph> libera sólo los recursos no administrados.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libera los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Returns <ph id="ph1">&lt;see langword="True" /&gt;</ph> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="True" /&gt;</ph> si entre la actual posición del cursor y el final del archivo no hay líneas que no estén en blanco ni líneas que no sean comentarios.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if there is no more data to read; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="True" /&gt;</ph> si no quedan más datos para leer; de lo contrario, es <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>This property can be used when reading from files to determine the end of the data being read.</source>
          <target state="translated">Esta propiedad puede utilizarse al leer de archivos para determinar el final de los datos que se va a leer.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`EndOfData`</ph> property.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`EndOfData`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Read from a delimited file</source>
          <target state="translated">Leer de un archivo delimitado</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Read from a fixed-width file</source>
          <target state="translated">Leer de un archivo de ancho fijo</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>This example uses the <ph id="ph1">`EndofData`</ph> property to loop through all the fields in the file with the <ph id="ph2">`TextFieldReader`</ph>, <ph id="ph3">`FileReader`</ph>.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`EndofData`</ph> propiedad recorrer todos los campos en el archivo con el <ph id="ph2">`TextFieldReader`</ph>, <ph id="ph3">`FileReader`</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Returns the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Devuelve la línea que ha causado la excepción <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> más reciente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Línea que ha causado la excepción <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> más reciente.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>If no <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, an empty string is returned.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> se han producido excepciones, se devuelve una cadena vacía.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</ph> property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</ph> propiedad puede utilizarse para mostrar el número de la línea que produjo la excepción.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLine`</ph> property.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`ErrorLine`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Read from a delimited file</source>
          <target state="translated">Leer de un archivo delimitado</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Read from a fixed-width file</source>
          <target state="translated">Leer de un archivo de ancho fijo</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>This example uses the <ph id="ph1">`ErrorLine`</ph> property to display the line causing the current <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`ErrorLine`</ph> propiedad para mostrar la línea que produce actual <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Returns the number of the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Devuelve el número de la línea que ha causado la excepción <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> más reciente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The number of the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Número de la línea que ha causado la excepción <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> más reciente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>If no <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, -1 is returned.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> se han producido excepciones, se devuelve -1.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> propiedad puede utilizarse para mostrar el número de la línea que produjo la excepción.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">Líneas en blanco y los comentarios no se omiten al determinar el número de línea.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLineNumber`</ph> property.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`ErrorLineNumber`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Read from a delimited file</source>
          <target state="translated">Leer de un archivo delimitado</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Read from a fixed-width file</source>
          <target state="translated">Leer de un archivo de ancho fijo</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>This example uses the <ph id="ph1">`ErrorLineNumber`</ph> property to display the location of the line causing the current <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`ErrorLineNumber`</ph> propiedad para mostrar la ubicación de la línea que produce actual <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>Denotes the width of each column in the text file being parsed.</source>
          <target state="translated">Denota el ancho de cada columna del archivo de texto que se está analizando.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>An integer array that contains the width of each column in the text file that is being parsed.</source>
          <target state="translated">Matriz de enteros que contiene el ancho de cada columna del archivo de texto que se está analizando.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>This property is meaningful only if the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id="ph2">`FieldType.FixedWidth`</ph>.</source>
          <target state="translated">Esta propiedad es significativa sólo si la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`FieldType.FixedWidth`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</source>
          <target state="translated">Si la última entrada de la matriz es menor o igual que cero, se supone que el campo de ancho variable.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</ph> method can also be used to set field widths.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</ph> método también se puede utilizar para establecer los anchos de campo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`FieldWidths`</ph> property.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`FieldWidths`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Leer de un archivo de texto de ancho fijo</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>This example reads the file <ph id="ph1">`ParserText.txt`</ph>, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</source>
          <target state="translated">Este ejemplo lee el archivo <ph id="ph1">`ParserText.txt`</ph>, especificando los anchos; la primera columna es de 5 caracteres de ancho, la segunda tiene 10, la tercera es 11 y la cuarta es de ancho variable</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>A width value in any location other than the last entry of the array is less than or equal to zero.</source>
          <target state="translated">Un valor de ancho en cualquier ubicación distinta de la última entrada de la matriz es menor o igual que cero ().</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permite que el objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</source>
          <target state="translated">Denota si los campos están entre comillas al analizarse un archivo delimitado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if fields are enclosed in quotation marks; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="True" /&gt;</ph> si los campos están entre comillas; de lo contrario, es <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Se trata de un miembro avanzado; no aparece en IntelliSense, a menos que haga clic en el <bpt id="p1">**</bpt>todos los<ept id="p1">**</ept> ficha.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>If the property is <ph id="ph1">`True`</ph>, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</source>
          <target state="translated">Si la propiedad es <ph id="ph1">`True`</ph>, el analizador supone que los campos están entre comillas ("") y pueden contener finales de línea.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>If a field is enclosed in quotation marks, for example, <ph id="ph1">`abc, "field2a,field2b", field3`</ph> and this property is <ph id="ph2">`True`</ph>, then all text enclosed in quotation marks will be returned as is; this example would return <ph id="ph3">`abc|field2a,field2b|field3`</ph>.</source>
          <target state="translated">Si un campo está entre comillas, por ejemplo, <ph id="ph1">`abc, "field2a,field2b", field3`</ph> y esta propiedad es <ph id="ph2">`True`</ph>, a continuación, todo el texto entre comillas se devolverá tal cual; en este ejemplo devolvería <ph id="ph3">`abc|field2a,field2b|field3`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>Setting this property to <ph id="ph1">`False`</ph> would make this example return <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>.</source>
          <target state="translated">Si se establece esta propiedad en <ph id="ph1">`False`</ph> haría que este ejemplo devuelto <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>This example sets the <ph id="ph1">`HasFieldsEnclosedInQuotes`</ph> property to <ph id="ph2">`True`</ph> for <ph id="ph3">`myReader`</ph>.</source>
          <target state="translated">Este ejemplo se establece la <ph id="ph1">`HasFieldsEnclosedInQuotes`</ph> propiedad <ph id="ph2">`True`</ph> para <ph id="ph3">`myReader`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>Returns the current line number, or returns -1 if no more characters are available in the stream.</source>
          <target state="translated">Devuelve el actual número de línea o devuelve -1 si no hay más caracteres disponibles en la secuencia.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>The current line number.</source>
          <target state="translated">Número de línea actual.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Se trata de un miembro avanzado; no aparece en IntelliSense, a menos que haga clic en el <bpt id="p1">**</bpt>todos los<ept id="p1">**</ept> ficha.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">Líneas en blanco y los comentarios no se omiten al determinar el número de línea.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</source>
          <target state="translated">En este ejemplo se busca el nombre "Jones" en el archivo de texto y se informa de las líneas se produce en.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Number of characters to read.</source>
          <target state="translated">Número de caracteres que se van a leer.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Reads the specified number of characters without advancing the cursor.</source>
          <target state="translated">Lee el número especificado de caracteres sin avanzar el cursor.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>A string that contains the specified number of characters read.</source>
          <target state="translated">Cadena que contiene el número especificado de caracteres que se van a leer.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The <ph id="ph1">`numberOfChars`</ph> value must be less than the total number of characters in the line.</source>
          <target state="translated">El <ph id="ph1">`numberOfChars`</ph> valor debe ser menor que el número total de caracteres de la línea.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>If it is not, the string returned by <ph id="ph1">`PeekChars`</ph> will be truncated to the length of the line.</source>
          <target state="translated">Si no es así, es la cadena devuelta por <ph id="ph1">`PeekChars`</ph> se truncará a la longitud de la línea.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Blank lines are ignored.</source>
          <target state="translated">Las líneas en blanco se omiten.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>End-of-line characters are not returned.</source>
          <target state="translated">No se devuelven los caracteres de fin de línea.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The <ph id="ph1">`PeekChars`</ph> method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated">El <ph id="ph1">`PeekChars`</ph> método no realiza ningún análisis; un carácter de fin de línea en un campo delimitado se interpreta como el final de la línea real.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`PeekChars`</ph> method.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`PeekChars`</ph> método.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Determine the format of a field before parsing it</source>
          <target state="translated">Determinar el formato de un campo antes de analizarlo</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto con varios formatos<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>This example uses <ph id="ph1">`PeekChars`</ph> to find the end of the data and stop parsing the file at that point.</source>
          <target state="translated">Este ejemplo se utiliza <ph id="ph1">`PeekChars`</ph> para buscar el final de los datos y detiene el análisis del archivo en ese momento.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="numberOfChars" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numberOfChars" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</source>
          <target state="translated">Lee todos los campos en la línea actual, los devuelve como una matriz de cadenas y avanza el cursor a la siguiente línea que contiene datos.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>An array of strings that contains field values for the current line.</source>
          <target state="translated">Matriz de cadenas que contiene los valores de campo de la línea actual.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>In order to allow users to parse text files in multiple formats, the <ph id="ph1">`ReadFields`</ph> method examines the values of <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, and <ph id="ph4">`FieldWidths`</ph>, if they are specified, each time it is called.</source>
          <target state="translated">Para permitir que los usuarios puedan analizar archivos de texto en varios formatos, la <ph id="ph1">`ReadFields`</ph> método examina los valores de <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, y <ph id="ph4">`FieldWidths`</ph>, si se especifica, cada vez que se llama.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Users need to correctly configure the <ph id="ph1">`TextFieldType`</ph> and <ph id="ph2">`FieldWidths`</ph> or <ph id="ph3">`Delimiters`</ph> properties, as appropriate.</source>
          <target state="translated">Los usuarios deben configurar correctamente la <ph id="ph1">`TextFieldType`</ph> y <ph id="ph2">`FieldWidths`</ph> o <ph id="ph3">`Delimiters`</ph> propiedades, según corresponda.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If <ph id="ph1">`TextFieldType`</ph> is set to <ph id="ph2">`Delimited`</ph>, and <ph id="ph3">`Delimiters`</ph> is not set, or if <ph id="ph4">`TextFieldType`</ph> is set to <ph id="ph5">`FixedWidth`</ph> and <ph id="ph6">`FieldWidths`</ph>, an exception is thrown.</source>
          <target state="translated">Si <ph id="ph1">`TextFieldType`</ph> está establecido en <ph id="ph2">`Delimited`</ph>, y <ph id="ph3">`Delimiters`</ph> no se establece, o si <ph id="ph4">`TextFieldType`</ph> está establecido en <ph id="ph5">`FixedWidth`</ph> y <ph id="ph6">`FieldWidths`</ph>, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If <ph id="ph1">`ReadFields`</ph> encounters blank lines, they are skipped and the next non-blank line is returned.</source>
          <target state="translated">Si <ph id="ph1">`ReadFields`</ph> encuentra líneas en blanco, éstas se omiten y se devuelve la siguiente línea en blanco.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If the <ph id="ph1">`ReadFields`</ph> method cannot parse the current line, it raises an exception and does not move to the next line.</source>
          <target state="translated">Si el <ph id="ph1">`ReadFields`</ph> método no puede analizar la línea actual, se produce una excepción y no se mueve a la línea siguiente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>This enables your application to attempt to parse the line again.</source>
          <target state="translated">Esto permite que la aplicación al intentar analizar la línea de nuevo.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ReadFields`</ph> method.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`ReadFields`</ph> método.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Read from a delimited file</source>
          <target state="translated">Leer de un archivo delimitado</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Read from a fixed-width file</source>
          <target state="translated">Leer de un archivo de ancho fijo</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>This example uses the <ph id="ph1">`ReadFields`</ph> method to read from the comma-delimited file <ph id="ph2">`ParserText.txt`</ph>.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`ReadFields`</ph> método para leer desde el archivo delimitado por comas <ph id="ph2">`ParserText.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>The example writes the fields to <ph id="ph1">`Testfile.txt`</ph>.</source>
          <target state="translated">El ejemplo escribe los campos que se <ph id="ph1">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>A field cannot be parsed by using the specified format.</source>
          <target state="translated">No se puede analizar un campo utilizando el formato especificado.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>Returns the current line as a string and advances the cursor to the next line.</source>
          <target state="translated">Devuelve la línea actual como una cadena y avanza el cursor a la siguiente línea.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>The current line from the file or stream.</source>
          <target state="translated">Línea actual del archivo o de la secuencia.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>The <ph id="ph1">`ReadLine`</ph> method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated">El <ph id="ph1">`ReadLine`</ph> método no realiza ningún análisis; un carácter de fin de línea en un campo delimitado se interpreta como el final de la línea real.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source><ph id="ph1">`Nothing`</ph> is returned if the end of the file is reached.</source>
          <target state="translated"><ph id="ph1">`Nothing`</ph> se devuelve si se llega al final del archivo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>This example reads through the file <ph id="ph1">`ParserText.txt`</ph> and writes it to <ph id="ph2">`Testfile.txt`</ph>.</source>
          <target state="translated">Este ejemplo lee el archivo <ph id="ph1">`ParserText.txt`</ph> y lo escribe en <ph id="ph2">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>If <ph id="ph1">`Testfile.txt`</ph> does not exist, it is created by the <ph id="ph2">`WriteAllText`</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`Testfile.txt`</ph> no existe, se crea mediante la <ph id="ph2">`WriteAllText`</ph> método.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>This example writes the fields as a single string; to have each line display on its own line in the destination file, a <ph id="ph1">`VbCrLf`</ph> character should be appended at the end of each line.</source>
          <target state="translated">Este ejemplo escribe los campos como una sola cadena; para que cada línea se muestre en su propia línea en el archivo de destino, un <ph id="ph1">`VbCrLf`</ph> caracteres se deben anexar al final de cada línea.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>Reads the remainder of the text file and returns it as a string.</source>
          <target state="translated">Lee el resto del archivo de texto y lo devuelve como una cadena.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>The remaining text from the file or stream.</source>
          <target state="translated">Texto restante del archivo o de la secuencia.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Se trata de un miembro avanzado; no aparece en IntelliSense, a menos que haga clic en el <bpt id="p1">**</bpt>todos los<ept id="p1">**</ept> ficha.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>If there is nothing more to read because the end of the file has been reached, <ph id="ph1">`Nothing`</ph> is returned.</source>
          <target state="translated">Si no hay nada más que leer porque se alcanzó el final del archivo, <ph id="ph1">`Nothing`</ph> se devuelve.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>The <ph id="ph1">`ReadToEnd`</ph> method does not ignore blank lines and comments.</source>
          <target state="translated">El <ph id="ph1">`ReadToEnd`</ph> método no omite las líneas en blanco y comentarios.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>This example uses the <ph id="ph1">`ReadToEnd`</ph> method to read the entire file <ph id="ph2">`ParserText.txt`</ph> and write it to the file <ph id="ph3">`Testfile.txt`</ph>.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`ReadToEnd`</ph> método para leer todo el archivo <ph id="ph2">`ParserText.txt`</ph> y escribir en el archivo <ph id="ph3">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>If <ph id="ph1">`Testfile.txt`</ph> does not exist, it is created by the <ph id="ph2">`WriteAllText`</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`Testfile.txt`</ph> no existe, se crea mediante la <ph id="ph2">`WriteAllText`</ph> método.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Array of type <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Sets the delimiters for the reader to the specified values, and sets the field type to <ph id="ph1">&lt;see langword="Delimited" /&gt;</ph>.</source>
          <target state="translated">Establece los delimitadores del lector en los valores especificados y establece el tipo de campo en <ph id="ph1">&lt;see langword="Delimited" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this method is set.</source>
          <target state="translated">El contenido existente de la <ph id="ph1">`Delimiters`</ph> propiedad se borra cuando se establece este método.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">Este método proporciona una manera de establecer los delimitadores sin crear una matriz.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>The following table lists an example of a task involving the <ph id="ph1">`SetDelimiters`</ph> method.</source>
          <target state="translated">La tabla siguiente muestra un ejemplo de una tarea que implica el <ph id="ph1">`SetDelimiters`</ph> método.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Parse a text file</source>
          <target state="translated">Analizar un archivo de texto</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source><bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Análisis de archivos de texto con el objeto TextFieldParser<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>This example opens a text field parser and defines the delimiter as <ph id="ph1">`vbTab`</ph>.</source>
          <target state="translated">Este ejemplo abre un analizador de campo de texto y define el delimitador como <ph id="ph1">`vbTab`</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Reemplace la ruta de acceso <ph id="ph1">`C:\logs\test.log`</ph> con la ruta de acceso y el nombre del archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>A delimiter is zero-length.</source>
          <target state="translated">Un delimitador es de longitud cero.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Array of <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Sets the delimiters for the reader to the specified values.</source>
          <target state="translated">Establece los delimitadores para el lector en los valores especificados.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this is set.</source>
          <target state="translated">El contenido existente de la <ph id="ph1">`Delimiters`</ph> propiedad se borra cuando se establece.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">Este método proporciona una manera de establecer los delimitadores sin crear una matriz.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The following table lists example of tasks involving the <ph id="ph1">`SetFieldWidths`</ph> method.</source>
          <target state="translated">En la tabla siguiente recoge ejemplos de tareas que implican la <ph id="ph1">`SetFieldWidths`</ph> método.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Parse a text file.</source>
          <target state="translated">Analizar un archivo de texto.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source><bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Análisis de archivos de texto con el objeto TextFieldParser<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>This example opens a text-field parser and defines the field width as <ph id="ph1">`5`</ph>.</source>
          <target state="translated">Este ejemplo abre un analizador de campo de texto y define el ancho de campo como <ph id="ph1">`5`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Reemplace la ruta de acceso <ph id="ph1">`C:\logs\test.log`</ph> con la ruta de acceso y el nombre del archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The following example opens a text-field parser and defines the field widths as <ph id="ph1">`5`</ph>, <ph id="ph2">`10`</ph>, and variable.</source>
          <target state="translated">En el ejemplo siguiente se abre un analizador de campo de texto y define los anchos de campo como <ph id="ph1">`5`</ph>, <ph id="ph2">`10`</ph>y la variable.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Reemplace la ruta de acceso <ph id="ph1">`C:\logs\test.log`</ph> con la ruta de acceso y el nombre del archivo que se va a analizar.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">Indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>A <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /&gt;</ph> value that indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">Valor de <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /&gt;</ph> que indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>The default value of this property is delimited.</source>
          <target state="translated">El valor predeterminado de esta propiedad está delimitado.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`TextFieldType`</ph> property.</source>
          <target state="translated">En la tabla siguiente se muestra ejemplos de tareas que implican la <ph id="ph1">`TextFieldType`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>See</source>
          <target state="translated">Vea</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a delimited text file</source>
          <target state="translated">Leer de un archivo de texto delimitado</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto delimitado por comas<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Leer de un archivo de texto de ancho fijo</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto de ancho fijo<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a text file with multiple formats</source>
          <target state="translated">Leer de un archivo de texto con varios formatos</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leer archivos de texto con varios formatos<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and specifies that it is delimited.</source>
          <target state="translated">Este ejemplo se crea un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>y especifica que está delimitado.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and specifies that it is fixed-width.</source>
          <target state="translated">Este ejemplo se crea un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>y especifica que es de ancho fijo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>Indicates whether leading and trailing white space should be trimmed from field values.</source>
          <target state="translated">Indica si los espacios en blanco iniciales y finales deben quitarse de los valores de campo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if leading and trailing white space should be trimmed from field values; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="True" /&gt;</ph> si los espacios en blanco iniciales y finales deben quitarse de los valores de campo; de lo contrario, es <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>The default value for this property is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">El valor predeterminado de esta propiedad es <ph id="ph1">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and sets the <ph id="ph3">`TrimWhiteSpace`</ph> property to <ph id="ph4">`True`</ph>.</source>
          <target state="translated">Este ejemplo se crea un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>y establece la <ph id="ph3">`TrimWhiteSpace`</ph> propiedad <ph id="ph4">`True`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>