<Type Name="X509CertificateRecipientServiceCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2942b09f644ccb34fcbbe8f35df017f1662b4849" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37453664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define un certificado utilizado por un servicio para identificarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente código muestra cómo utilizar este método para establecer un certificado para una credencial del servicio.  
  
 [!code-csharp[S_UEX509CertificateRecipientServiceCredential#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/cs/source.cs#6)]
 [!code-vb[S_UEX509CertificateRecipientServiceCredential#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/vb/source.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el certificado que se va a utilizar para representar al servicio que vuelve a comunicarse con el cliente.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que se utiliza para representar al servicio que vuelve a comunicarse con el cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se utiliza para obtener o establecer el certificado utilizado para representar el servicio.  
  
   
  
## Examples  
 El siguiente código muestra cómo utilizar este método para obtener el certificado utilizado en las credenciales de un servicio.  
  
 [!code-csharp[S_UEX509CertificateRecipientServiceCredential#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/cs/source.cs#7)]
 [!code-vb[S_UEX509CertificateRecipientServiceCredential#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se intentó establecer cuando la credencial es de solo lectura.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Especifica el certificado que se debe utilizar para representar al servicio.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCertificate (subjectName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string -&gt; unit" Usage="x509CertificateRecipientServiceCredential.SetCertificate subjectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nombre distintivo del asunto.</param>
        <summary>Especifica el certificado que se debe utilizar para representar el servicio especificando el nombre distintivo (DN) del asunto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el parámetro `subjectName`, vea <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
   
  
## Examples  
 El siguiente código muestra cómo utilizar este método para establecer un certificado para una credencial del servicio a partir de un nombre de asunto.  
  
 [!code-csharp[S_UEX509CertificateRecipientServiceCredential#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/cs/source.cs#4)]
 [!code-vb[S_UEX509CertificateRecipientServiceCredential#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nombre distintivo del asunto.</param>
        <param name="storeLocation">La ubicación del almacén de certificados que el servicio utiliza para obtener el certificado del servicio.</param>
        <param name="storeName">Especifica el nombre del almacén del certificado X.509 que se va a abrir.</param>
        <summary>Especifica el certificado que se debe utilizar para representar el servicio especificando el nombre distintivo (DN) del asunto, el nombre del almacén de certificados y la ubicación de almacenamiento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el parámetro `subjectName`, vea <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Los valores para `storeLocation` están incluidos en la enumeración <xref:System.Security.Cryptography.X509Certificates.StoreLocation>:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: el almacén de certificados asignado al equipo local (predeterminado).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: el almacén de certificados utilizado por el usuario actual.  
  
 Si la aplicación cliente se está ejecutando bajo una cuenta del sistema, entonces el certificado está normalmente en <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si la aplicación cliente se está ejecutando en una cuenta de usuario, entonces el certificado se encuentra normalmente en <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Los valores para `storeName` están incluidos en la enumeración <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 El siguiente código muestra cómo utilizar este método para establecer un certificado para una credencial del servicio.  
  
 [!code-csharp[S_UEX509CertificateRecipientServiceCredential#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/cs/source.cs#5)]
 [!code-vb[S_UEX509CertificateRecipientServiceCredential#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">La ubicación del almacén de certificados que el cliente utiliza para obtener el certificado de cliente.</param>
        <param name="storeName">Especifica el nombre del almacén del certificado X.509 que se va a abrir.</param>
        <param name="findType">Define el tipo de búsqueda de X.509 que se va a ejecutar.</param>
        <param name="findValue">El valor que se va a buscar en el almacén de certificados X.509.</param>
        <summary>Especifica el certificado que se va a utilizar para representar al servicio especificando los parámetros de la consulta como <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> y <paramref name="findValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores para `storeLocation` están incluidos en la enumeración <xref:System.Security.Cryptography.X509Certificates.StoreLocation>:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: el almacén de certificados asignado al equipo local (predeterminado).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: el almacén de certificados utilizado por el usuario actual.  
  
 Si la aplicación cliente se está ejecutando bajo una cuenta del sistema, entonces el certificado está normalmente en <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si la aplicación cliente se está ejecutando en una cuenta de usuario, entonces el certificado se encuentra normalmente en <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Los valores para `storeName` están incluidos en la enumeración <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Los valores para `findType` están incluidos en la enumeración <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 La enumeración normalmente utilizada es <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, que hace una búsqueda sin distinción entre mayúsculas y minúsculas en el nombre del asunto de certificados en el almacén especificado. Ésta puede ser una búsqueda imprecisa. Si más de un certificado se devuelve, a continuación el primero que coincida con la búsqueda se utiliza para representar al cliente.  
  
   
  
## Examples  
 El siguiente código muestra cómo utilizar este método para establecer un certificado para una credencial del servicio.  
  
 [!code-csharp[S_UEX509CertificateRecipientServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/cs/source.cs#2)]
 [!code-vb[S_UEX509CertificateRecipientServiceCredential#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509certificaterecipientservicecredential/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>