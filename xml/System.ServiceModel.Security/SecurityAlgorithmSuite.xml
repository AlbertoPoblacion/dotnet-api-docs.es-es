<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273047e679aef6a68ea353260abff1dfa1131aba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ff301-101">Especifica las propiedades de los algoritmos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff301-101">Specifies properties of algorithms.</span>
      </span>
      <span data-ttu-id="ff301-102">Esta es una clase <see langword="abstract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff301-102">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-103">Las instancias de esta clase se utilizan para especificar las características criptográficas de los algoritmos que se utilizan al proteger los mensajes.</span><span class="sxs-lookup"><span data-stu-id="ff301-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="ff301-104">Las clases derivadas utilizan esta clase para crear instancias de los conjuntos de algoritmos de seguridad y contiene propiedades que describen los algoritmos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="ff301-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="ff301-105">Por ejemplo, el `wsBasicHttp` enlace utiliza una clase derivada interna para especificar las propiedades de sus algoritmos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="ff301-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff301-106">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-107">Las instancias de esta clase están compuestas de propiedades estáticas y las propiedades de solo lectura, por lo que el constructor no inicializa ninguna propiedad.</span><span class="sxs-lookup"><span data-stu-id="ff301-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-108">Obtiene el conjunto de algoritmo de Basic128.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-108">Gets the Basic128 algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-109">El Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />de 128 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-110">De forma predeterminada, AES-128 se utiliza como el algoritmo de cifrado.</span><span class="sxs-lookup"><span data-stu-id="ff301-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-111">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-112">Conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-113"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-114">Obtiene un conjunto de algoritmos que utiliza SHA256 para el resumen de firmas y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-115">Conjunto de algoritmos que utiliza SHA256 para el resumen de signaturas y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-116"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-117">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-118">Conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de signaturas y Basic de 128 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-119"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-120">Obtiene un conjunto de algoritmos que utiliza Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-121">Conjunto de algoritmos que utiliza Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-122">De manera predeterminada, AES-192 se utiliza como el algoritmo de cifrado.</span><span class="sxs-lookup"><span data-stu-id="ff301-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-123">Obtiene un conjunto de algoritmos que usa RSA15 como algoritmo de encapsulado de claves y Basic de 192 bits como algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-124">Un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-125"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-126">Obtiene un conjunto de algoritmos que utiliza SHA256 para el resumen de firmas y Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-127">Conjunto de algoritmos que utiliza SHA256 para el resumen de signaturas y Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-128"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-129">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-130">Un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y Basic de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-131"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-132">Obtiene un conjunto de algoritmos que utiliza Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-133">Un conjunto de algoritmos que utiliza Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-134">De manera predeterminada, AES-256 se utiliza como el algoritmo de cifrado.</span><span class="sxs-lookup"><span data-stu-id="ff301-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff301-135">En el siguiente ejemplo de código se muestra cómo establecer <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="ff301-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-136">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-137">Un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-138"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-139">Obtiene un conjunto de algoritmos que utiliza SHA256 para el resumen de firmas y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-140">Un conjunto de algoritmos que utiliza SHA256 para el resumen de firmas y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-141"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-142">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-143">Conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y Basic de 256 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-144"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-145">Obtiene el conjunto de algoritmos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-145">Gets the default algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-146">El <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> predeterminado es <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, que especifica el Estándar de cifrado avanzado de 256 (AES) bits como el algoritmo de cifrado simétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-147">El <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-148">Obtiene el algoritmo de encapsulado de claves asimétrico predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-148">Gets the default asymmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-149">Algoritmo de encapsulado de claves asimétrico predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-149">The default asymmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-150">Cuando se invalida, proporciona un valor de cadena que se utilizará para la comparación en el método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-151">Obtiene el algoritmo de firmas asimétrico predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-151">Gets the default asymmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-152">Algoritmo de signatura asimétrico predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-152">The default asymmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-153">Cuando se invalida, proporciona un valor de cadena que se utilizará para la comparación en el método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-154">Obtiene el algoritmo de canonización predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-154">Gets the default canonicalization algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-155">Algoritmo de canonización predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-155">The default canonicalization algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-156">Cuando se invalida, proporciona un valor de cadena que se utilizará para la comparación en el método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-157">Obtiene el algoritmo de resumen predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-157">Gets the default digest algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-158">Algoritmo de síntesis predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-158">The default digest algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-159">Cuando se invalida, proporciona un valor de cadena que se utilizará para la comparación en el método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-160">Obtiene el algoritmo de cifrado predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-160">Gets the default encryption algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-161">Algoritmo de cifrado predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-161">The default encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-162">Cuando se invalida, proporciona un valor de cadena que se utilizará para la comparación en el método <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-163">Obtiene la duración de derivación de claves de cifrado predeterminada como un valor <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-164">Longitud de derivación de claves de cifrado predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-164">The default encryption key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-165">El valor devuelto variará, dependiendo de la subclase que lo implementa.</span><span class="sxs-lookup"><span data-stu-id="ff301-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="ff301-166">Para el cifrado `Basic256`, devuelve 256.</span><span class="sxs-lookup"><span data-stu-id="ff301-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-167">Obtiene la duración de derivación de claves de firma predeterminada como un valor <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-168">Longitud de derivación de claves de signatura predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-168">The default signature key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-169">El valor devuelto variará, dependiendo de la subclase que lo implementa.</span><span class="sxs-lookup"><span data-stu-id="ff301-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="ff301-170">Para `Basic256` cifrado, devuelve 192.</span><span class="sxs-lookup"><span data-stu-id="ff301-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-171">Obtiene la duración de claves simétrica predeterminada como un valor <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-172">Longitud de claves simétrica predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-172">The default symmetric key length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-173">El valor devuelto variará, dependiendo de la subclase que lo implementa.</span><span class="sxs-lookup"><span data-stu-id="ff301-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="ff301-174">Para el cifrado `Basic256`, devuelve 256.</span><span class="sxs-lookup"><span data-stu-id="ff301-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-175">Obtiene el algoritmo de encapsulado de claves simétrico predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-175">Gets the default symmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-176">Algoritmo de encapsulado de claves simétrico predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-176">The default symmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-177">Obtiene el algoritmo de signaturas simétrico predeterminado como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-177">Gets the default symmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-178">Algoritmo de signatura simétrico predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-178">The default symmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="ff301-179">La longitud de la clave que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-179">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-180">Indica si el algoritmo asimétrico admite una longitud de clave determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-181">
            <see langword="true" /> si el algoritmo asimétrico admite la longitud de la clave; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-181">
              <see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-182">Las longitudes de clave típicas son 128, 192 y 256 bits.</span><span class="sxs-lookup"><span data-stu-id="ff301-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-183">El algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-183">The algorithm to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-184">Indica si se admite un algoritmo de encapsulado de claves asimétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-184">Indicates whether an asymmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-185">
            <see langword="true" /> si se admite el algoritmo asimétrico de encapsulado de claves; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-185">
              <see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-186">`algorithm` se compara con la cadena devuelta de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-187">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-187">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-188">Indica si se admite un algoritmo de firmas asimétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-188">Indicates whether an asymmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-189">
            <see langword="true" /> si se admite el algoritmo asimétrico de firmas; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-189">
              <see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-190">`algorithm` se compara con la cadena devuelta de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-191">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-191">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-192">Indica si se admite un algoritmo de canonización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-192">Indicates whether a canonicalization algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-193">
            <see langword="true" /> si se admite el algoritmo de canonización; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-193">
              <see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-194">`algorithm` se compara con la cadena devuelta de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-195">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-195">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-196">Indica si se admite un algoritmo de resumen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-196">Indicates whether a digest algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-197">
            <see langword="true" /> si se admite el algoritmo de resumen; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-197">
              <see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-198">`algorithm` se compara con la cadena devuelta de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-199">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-199">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-200">Indica si se admite un algoritmo de cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-200">Indicates whether an encryption algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-201">
            <see langword="true" /> si se admite el algoritmo de cifrado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-201">
              <see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-202">`algorithm` se compara con la cadena devuelta de <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff301-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-203">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-203">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-204">Indica si se admite un algoritmo de derivación de clave de cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-204">Indicates whether an encryption key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-205">
            <see langword="true" /> si se admite el algoritmo de derivación de clave de cifrado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-205">
              <see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-206">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-206">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-207">Indica si se admite un algoritmo de derivación de clave de firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-207">Indicates whether a signature key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-208">
            <see langword="true" /> si se admite el algoritmo de derivación de clave de firma; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-208">
              <see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="ff301-209">La longitud de la clave que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-209">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-210">Cuando se invalida en una clase derivada, indica si se admite una longitud de clave simétrica determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-211">
            <see langword="true" /> si se admite la longitud clave simétrica; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-211">
              <see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-212">`length` se compara con un intervalo de valores que depende de la subclase.</span><span class="sxs-lookup"><span data-stu-id="ff301-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="ff301-213">Por ejemplo, en la subclase `TripleDES`, este método comprueba que `length` está entre 192 y 256, ambos incluidos.</span><span class="sxs-lookup"><span data-stu-id="ff301-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-214">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-214">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-215">Indica si se admite un algoritmo de encapsulado de claves simétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-215">Indicates whether a symmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-216">
            <see langword="true" /> si se admite el algoritmo simétrico de encapsulado de claves; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-216">
              <see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="ff301-217">El nombre del algoritmo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-217">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff301-218">Indica si se admite un algoritmo de firmas simétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-218">Indicates whether a symmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff301-219">
            <see langword="true" /> si se admite el algoritmo simétrico de firmas; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-219">
              <see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-220">Obtiene el conjunto de algoritmos DES (Estándar de cifrado de datos triple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-221">El Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-222"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-223">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y el Estándar de cifrado de datos triple de 192 bit (DES) como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-224">Conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves y el Estándar de cifrado de datos triple (DES) como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-225"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-226">Obtiene un conjunto de algoritmos que utiliza SHA256 para el resumen de firmas y el Estándar de cifrado de datos triple (DES) como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-227">Conjunto de algoritmos que utiliza SHA256 para el resumen de signaturas y el Estándar de cifrado de datos triple (DES) como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-228"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff301-229">Obtiene un conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de firmas y el Estándar de cifrado de datos triple (DES) de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff301-230">Conjunto de algoritmos que utiliza RSA15 como el algoritmo de encapsulado de claves, SHA256 para el resumen de signaturas y el Estándar de cifrado de datos triple (DES) de 192 bits como el algoritmo de cifrado de mensajes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff301-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff301-231"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> devuelto realmente es una subclase interna que invalida algunas de las propiedades que especifican los valores predeterminados así como algunos de los métodos.</span><span class="sxs-lookup"><span data-stu-id="ff301-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>