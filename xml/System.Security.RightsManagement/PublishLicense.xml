<Type Name="PublishLicense" FullName="System.Security.RightsManagement.PublishLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed80a727610000eb6e91e4b54487d4b2fc65f0e2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48621749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PublishLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.PublishLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishLicense" />
  <TypeSignature Language="F#" Value="type PublishLicense = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una licencia de publicación con derechos administrados firmada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense> define los datos de seguridad sobre los derechos, los usuarios y otra información relacionada con la seguridad.  La licencia define cómo un usuario específico en un equipo específico puede usar contenido administrado con derechos especificado.  
  
 El proceso de publicación comienza con el autor del documento, que define la información de derechos en un <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  A continuación, el autor crea un con signo <xref:System.Security.RightsManagement.PublishLicense> mediante una llamada a la <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> método de la <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  El formulario serializado de firmado <xref:System.Security.RightsManagement.PublishLicense> , a continuación, se puede proporcionar a los usuarios finales que puede usar para adquirir un <xref:System.Security.RightsManagement.UseLicense> mediante una llamada a la <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> método de la <xref:System.Security.RightsManagement.PublishLicense>.  El valor devuelto <xref:System.Security.RightsManagement.UseLicense> , a continuación, permite que la aplicación cliente de ejercer los derechos concedidos al usuario.  
  
 Como ocurre con otros <xref:System.Security.RightsManagement> tipos, <xref:System.Security.RightsManagement.PublishLicense> sólo es útil en aplicaciones de plena confianza.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Security.RightsManagement.PublishLicense> utilizando el <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> método.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishLicense (string signedPublishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string signedPublishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signedPublishLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishLicense(System::String ^ signedPublishLicense);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.PublishLicense : string -&gt; System.Security.RightsManagement.PublishLicense" Usage="new System.Security.RightsManagement.PublishLicense signedPublishLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signedPublishLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedPublishLicense">Licencia de publicación firmada y serializada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.PublishLicense" /> desde un objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> concreto serializado y firmado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signedPublishLicense" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">La licencia no es válida.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicense(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicense(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicense : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicense secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Entorno seguro para la activación de la licencia y el enlace.</param>
        <summary>Intenta adquirir <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en un objeto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
        <returns>Objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en el parámetro <paramref name="secureEnvironment" />especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Se produjo un error en la autenticación.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicenseNoUI">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicenseNoUI(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicenseNoUI : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicenseNoUI secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Entorno seguro para la activación de la licencia y el enlace.</param>
        <summary>Intenta adquirir <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en un objeto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
        <returns>Objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en el parámetro <paramref name="secureEnvironment" />especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> método suprime el cuadro de diálogo de autenticación de red de Windows. Si se deniega la solicitud de licencia porque el usuario no tiene permiso, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> evita que se muestre el cuadro de diálogo de autenticación de red. Usar adquisición silenciosa cuando intente para obtener licencias en una tarea en segundo plano o en una interfaz que no es de usuario que pueda mostrar cuadros de diálogo confusos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Se produjo un error en la autenticación.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentId : Guid" Usage="System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de contenido creado por el editor.</summary>
        <value>Identificador de contenido creado por el editor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Creación de los publicadores una <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> para identificar el contenido protegido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptUnsignedPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense(class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UnsignedPublishLicense ^ DecryptUnsignedPublishLicense(System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="member this.DecryptUnsignedPublishLicense : System.Security.RightsManagement.CryptoProvider -&gt; System.Security.RightsManagement.UnsignedPublishLicense" Usage="publishLicense.DecryptUnsignedPublishLicense cryptoProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UnsignedPublishLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="cryptoProvider">Servicio con derechos administrados que se usa para descifrar la licencia.</param>
        <summary>Devuelve una versión de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> descifrada de este objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmado.</summary>
        <returns>Versión descifrada sin firma de esta licencia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> método permite que el propietario de la licencia y los usuarios que se le permitiera <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> para extraer la información original que se cifran cuando el <xref:System.Security.RightsManagement.PublishLicense> se creó.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cryptoProvider" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoName">
      <MemberSignature Language="C#" Value="public string ReferralInfoName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferralInfoName" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReferralInfoName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoName : string" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de contacto del autor o editor del contenido.</summary>
        <value>Nombre de contacto del autor o editor del contenido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta por la <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> propiedad no está cifrada y puede tener acceso incluso cuando el usuario no tiene todavía un <xref:System.Security.RightsManagement.UseLicense>.  La cadena devuelta permite a los usuarios ponerse en contacto con el publicador para solicitar un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoUri">
      <MemberSignature Language="C#" Value="public Uri ReferralInfoUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ReferralInfoUri" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ReferralInfoUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoUri : Uri" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de contacto del autor o editor del contenido.</summary>
        <value>[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de contacto del autor o editor del contenido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta por la <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> propiedad no está cifrada y puede tener acceso incluso cuando el usuario no tiene todavía un <xref:System.Security.RightsManagement.UseLicense>.  La cadena devuelta permite a los usuarios ponerse en contacto con el publicador para solicitar un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="publishLicense.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la cadena [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] serializada que se usó para crear esta licencia.</summary>
        <returns>Cadena [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] serializada que se usó para crear esta licencia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLicenseAcquisitionUrl">
      <MemberSignature Language="C#" Value="public Uri UseLicenseAcquisitionUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UseLicenseAcquisitionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseLicenseAcquisitionUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UseLicenseAcquisitionUrl { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UseLicenseAcquisitionUrl : Uri" Usage="System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se utiliza para adquirir <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se utiliza para adquirir <see cref="T:System.Security.RightsManagement.UseLicense" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> propiedad la usa el <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> método cuando un usuario adquiere un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
  </Members>
</Type>