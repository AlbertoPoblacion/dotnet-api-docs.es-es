<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UseLicense.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5803db9a829116ebfa9f031814373e17787b4eb6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">803db9a829116ebfa9f031814373e17787b4eb6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.RightsManagement.UseLicense">
          <source>Represents a license that enables access to protected rights managed content.</source>
          <target state="translated">Representa una licencia que permite el acceso a contenido administrado con derechos protegidos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.RightsManagement.UseLicense">
          <source>As with other <ph id="ph1">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> is only usable in full trust applications.</source>
          <target state="translated">Como ocurre con otros <ph id="ph1">&lt;xref:System.Security.RightsManagement&gt;</ph> tipos, <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> es solo se puede usar en aplicaciones de plena confianza.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.RightsManagement.UseLicense">
          <source>The following example shows how to use this class to initialize a <ph id="ph1">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar esta clase para inicializar un <ph id="ph1">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source>A use license in serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> form.</source>
          <target state="translated">Licencia de uso en formato <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> serializado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.</source>
          <target state="translated">Obtiene el diccionario de datos de aplicación que contiene los pares de clave y valor pasados de la aplicación de publicación a la aplicación que los utiliza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.</source>
          <target state="translated">Diccionario de datos de aplicación que contiene los pares de clave y valor pasados de la aplicación de publicación a la aplicación que los utiliza.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair "Allow_Server_Editing"/"True".</source>
          <target state="translated">Par de clave/valor de datos que es procesado por un servidor de Rights Management Services (RMS) es el par de cadenas "Allow_Server_Editing" / "True".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>When the issuance license "Allow_Server_Editing"/"True" is set, the service, or any trusted service, can reuse the content key.</source>
          <target state="translated">Cuando la emisión de licencias "Allow_Server_Editing" / "True" se establece, el servicio o cualquier servicio de confianza, puede volver a usar la clave de contenido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>The key/value pair "NOLICCACHE" / "1" controls the Use License embedding policy of consuming applications.</source>
          <target state="translated">El par clave/valor "NOLICCACHE" / "1" controla la incrustación de objetos de directiva de aplicaciones consumidoras de licencia de uso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>When "NOLICCACHE" / "1" is set, applications are expected not to embed the Use License within the rights managed document.</source>
          <target state="translated">Cuando "NOLICCACHE" / "1" está establecido, se espera que las aplicaciones no incrustar la licencia de uso en el documento con derechos administrados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The environment to bind the license to.</source>
          <target state="translated">Entorno al que se va a enlazar la licencia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>Binds the license to a given <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.SecureEnvironment" /&gt;</ph>.</source>
          <target state="translated">Enlaza la licencia a un <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.SecureEnvironment" /&gt;</ph> determinado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.CryptoProvider" /&gt;</ph> instance if the license binding succeeded; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Instancia <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.CryptoProvider" /&gt;</ph> si el enlace de la licencia se realizó correctamente; en caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.</source>
          <target state="translated">Después de la licencia está enlazada a un entorno seguro, la aplicación puede examinar y ejercer los derechos concedidos por la licencia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> instance provides decryption and access to the protected rights managed content.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> instancia proporciona acceso para el contenido administrado con derechos protegidos y el descifrado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The following example shows how to use this method to initialize a <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar este método para inicializar un <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source><ph id="ph1">&lt;paramref name="secureEnvironment" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="secureEnvironment" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source>Gets the content identifier created by the publisher.</source>
          <target state="translated">Obtiene el identificador de contenido creado por el editor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source>The content identifier created by the publisher.</source>
          <target state="translated">Identificador de contenido creado por el editor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.ContentId%2A&gt;</ph> is created by the publisher and can be used to match content to a <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.ContentId%2A&gt;</ph> se crea por el publicador y puede usarse para que coincida con el contenido a un <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> y <ph id="ph3">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source>The license to compare.</source>
          <target state="translated">Licencia que se va a comparar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source>Indicates if this license is equivalent to another given license.</source>
          <target state="translated">Indica si esta licencia es equivalente a otra licencia determinada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if both licenses are the equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si ambas licencias son equivalentes; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.Equals%2A&gt;</ph> tests for equivalence comparing the serialized <ph id="ph2">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> strings specified to the <ph id="ph3">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.Equals%2A&gt;</ph> comprueba la equivalencia comparar serializado <ph id="ph2">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> las cadenas especificadas para el <ph id="ph3">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructores.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>Returns the hash code associated with this license.</source>
          <target state="translated">Devuelve el código hash asociado con esta licencia.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>A hash code for this license.</source>
          <target state="translated">Código hash para esta licencia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>The returned hash code is based on the serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">El código hash devuelto se basa en el número de serie <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> cadena pasada a la <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>Gets the owner of the license.</source>
          <target state="translated">Obtiene el propietario de la licencia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>The owner of the license.</source>
          <target state="translated">Propietario de la licencia.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>The license owner is obtained from the serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Propietario de la licencia se obtiene desde serializado <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> cadena pasada a la <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.ToString">
          <source>Returns the serialized <ph id="ph1">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> string used to create this license.</source>
          <target state="translated">Devuelve la cadena <ph id="ph1">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> serializada utilizada para crear esta licencia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.ToString">
          <source>The serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string originally passed to the <ph id="ph2">&lt;see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /&gt;</ph> constructor.</source>
          <target state="translated">Cadena <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> serializada pasada originalmente al constructor <ph id="ph2">&lt;see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>