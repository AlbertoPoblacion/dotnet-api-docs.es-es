<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringType.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50bc039c008a3823cbc470f2f4f13655ccfc1ed00.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bc039c008a3823cbc470f2f4f13655ccfc1ed00</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>This class has been deprecated as of Visual Basic 2005.</source>
          <target state="translated">Esta clase ha quedado obsoleta en Visual Basic 2005.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>This class provides methods for manipulating data that potentially represents a <ph id="ph1">`String`</ph> value.</source>
          <target state="translated">Esta clase proporciona métodos para manipular los datos que representan potencialmente un <ph id="ph1">`String`</ph> valor.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
          <source><ph id="ph1">&lt;see langword="Byte" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Byte" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified <ph id="ph2">&lt;see langword="Byte" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Byte" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="Char" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Char" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified <ph id="ph2">&lt;see langword="Char" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Char" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
          <source>Date to convert to a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Fecha que se va a convertir en un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified date.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde a la fecha especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> and optional number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> especificado y la información de formato numérico opcional.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
          <source><ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source><ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> and number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Decimal" /&gt;</ph> especificado y la información de formato numérico.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Double" /&gt;</ph> and optional number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Double" /&gt;</ph> especificado y la información de formato numérico opcional.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
          <source><ph id="ph1">&lt;see langword="Double" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Double" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Double" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Double" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source><ph id="ph1">&lt;see langword="Double" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Double" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Double" /&gt;</ph> and number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Double" /&gt;</ph> especificado y la información de formato numérico.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Integer" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
          <source><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> (64-bit integer).</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> especificado (entero de 64 bits).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
          <source>Object to convert to a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Objeto que se va a convertir en un valor <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to the specified object.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al objeto especificado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
          <source><ph id="ph1">&lt;see langword="Int616" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Int616" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Int16" /&gt;</ph> (16-bit integer).</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Int16" /&gt;</ph> especificado (entero de 16 bits).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Single" /&gt;</ph> and optional number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Single" /&gt;</ph> especificado y la información de formato numérico opcional.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.CompilerServices.StringType">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
          <source><ph id="ph1">&lt;see langword="Single" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Single" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Single" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que corresponde al valor de tipo <ph id="ph2">&lt;see langword="Single" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source><ph id="ph1">&lt;see langword="Sinble" /&gt;</ph> to convert to a <ph id="ph2">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Sinble" /&gt;</ph> que se va a convertir a un valor <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Globalization.NumberFormatInfo" /&gt;</ph> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value that corresponds to a specified <ph id="ph2">&lt;see langword="Single" /&gt;</ph> and number format information.</source>
          <target state="translated">Devuelve un valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se corresponde con el valor <ph id="ph2">&lt;see langword="Single" /&gt;</ph> especificado y la información de formato numérico.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> value corresponding to <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> correspondiente a <ph id="ph2">&lt;paramref name="Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>String variable to modify.</source>
          <target state="translated">Variable de cadena que se va a modificar.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Location in the <bpt id="p1">&lt;c&gt;</bpt>sDest<ept id="p1">&lt;/c&gt;</ept> parameter to begin overwriting from.</source>
          <target state="translated">Ubicación en el parámetro <bpt id="p1">&lt;c&gt;</bpt>sDest<ept id="p1">&lt;/c&gt;</ept> desde la que se comienza a sobrescribir.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>The index is 1-based.</source>
          <target state="translated">El índice es de base 1.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Maximum number of characters from the <bpt id="p1">&lt;c&gt;</bpt>sInsert<ept id="p1">&lt;/c&gt;</ept> parameter to use, starting from the first character.</source>
          <target state="translated">Número máximo de caracteres del parámetro <bpt id="p1">&lt;c&gt;</bpt>sInsert<ept id="p1">&lt;/c&gt;</ept> que se van a usar, a partir del primer carácter.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>String value to overwrite the <bpt id="p1">&lt;c&gt;</bpt>sDest<ept id="p1">&lt;/c&gt;</ept> parameter with.</source>
          <target state="translated">Valor de cadena con el que se va a sobrescribir el parámetro <bpt id="p1">&lt;c&gt;</bpt>sDest<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>Overwrites the <ph id="ph1">&lt;paramref name="sDest" /&gt;</ph> parameter with the contents of the <ph id="ph2">&lt;paramref name="sInsert" /&gt;</ph> parameter.</source>
          <target state="translated">Sobrescribe el parámetro <ph id="ph1">&lt;paramref name="sDest" /&gt;</ph> con el contenido del parámetro <ph id="ph2">&lt;paramref name="sInsert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>String to compare with <bpt id="p1">&lt;c&gt;</bpt>sRight<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Cadena que se va a comparar con <bpt id="p1">&lt;c&gt;</bpt>sRight<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>String to compare with <bpt id="p1">&lt;c&gt;</bpt>sLeft<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Cadena que se va a comparar con <bpt id="p1">&lt;c&gt;</bpt>sLeft<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive comparison; otherwise <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si se va a realizar una comparación sin distinguir mayúsculas de minúsculas; de lo contrario, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Compares two strings.</source>
          <target state="translated">Compara dos cadenas.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>Condition</source>
          <target state="translated">Condición</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>zero</source>
          <target state="translated">cero</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>The two strings are equal.</source>
          <target state="translated">Las dos cadenas son iguales.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>less than zero</source>
          <target state="translated">menor que cero</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="sLeft" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="sRight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sLeft" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="sRight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>greater than zero</source>
          <target state="translated">mayor que cero</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="sLeft" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="sRight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sLeft" /&gt;</ph> es mayor que <ph id="ph2">&lt;paramref name="sRight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Esta clase es compatible con el compilador de Visual Basic y no está diseñada para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Cualquier expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression conforming to the pattern-matching conventions described in Like Operator.</source>
          <target state="translated">Expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies how to compare strings to patterns, according to the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph>.</source>
          <target state="translated">Especifica cómo comparar las cadenas con los modelos, según <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Can be <ph id="ph1">&lt;see langword="vbBinaryCompare" /&gt;</ph> for binary comparison or <ph id="ph2">&lt;see langword="vbTextCompare" /&gt;</ph> for comparison based on a case-insensitive text sort order determined by your system's <ph id="ph3">&lt;see langword="LocaleID" /&gt;</ph> value.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="vbBinaryCompare" /&gt;</ph> para la comparación binaria o <ph id="ph2">&lt;see langword="vbTextCompare" /&gt;</ph> para la basada en un criterio de ordenación de texto sin distinción entre mayúsculas y minúsculas determinado por el valor <ph id="ph3">&lt;see langword="LocaleID" /&gt;</ph> del sistema.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Compares the parameters <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> and returns the same results as the <ph id="ph3">&lt;see langword="Like" /&gt;</ph> operator.</source>
          <target state="translated">Compara los parámetros <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> y <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> y devuelve los mismos resultados que el operador <ph id="ph3">&lt;see langword="Like" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>A <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que indica si la cadena se ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If the value in string satisfies the pattern contained in pattern, result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If the string does not satisfy the pattern, result is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Si la cadena no se ajusta al modelo, el resultado es <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If both string and pattern are empty strings, the result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This method compares the parameters <ph id="ph1">`Source`</ph> and <ph id="ph2">`Pattern`</ph> and returns the same results as the <bpt id="p1">[</bpt>Like Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</source>
          <target state="translated">Este método compara los parámetros <ph id="ph1">`Source`</ph> y <ph id="ph2">`Pattern`</ph> y devuelve los mismos resultados que la <bpt id="p1">[</bpt>operador Like<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The result is a Boolean value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">El resultado es un valor booleano que indica si la cadena ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Cualquier expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression conforming to the pattern-matching conventions described in Like Operator.</source>
          <target state="translated">Expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>Compares the parameters <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> and returns the same results as the <ph id="ph3">&lt;see langword="Like" /&gt;</ph> operator, using binary comparison.</source>
          <target state="translated">Compara los parámetros <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> y <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> y devuelve los mismos resultados que el operador <ph id="ph3">&lt;see langword="Like" /&gt;</ph>, mediante la comparación binaria.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que indica si la cadena se ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>If the value in string satisfies the pattern contained in pattern, result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>If the string does not satisfy the pattern, result is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Si la cadena no se ajusta al modelo, el resultado es <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>If both string and pattern are empty strings, the result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>This method compares the parameters <ph id="ph1">`Source`</ph> and <ph id="ph2">`Pattern`</ph> and returns the same results as the <bpt id="p1">[</bpt>Like Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</source>
          <target state="translated">Este método compara los parámetros <ph id="ph1">`Source`</ph> y <ph id="ph2">`Pattern`</ph> y devuelve los mismos resultados que la <bpt id="p1">[</bpt>operador Like<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>The result is a Boolean value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">El resultado es un valor booleano que indica si la cadena ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
          <source>This method is similar to <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> except that it always performs a case-sensitive binary comparison.</source>
          <target state="translated">Este método es similar a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> salvo que siempre realiza una comparación binaria entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Cualquier expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression conforming to the pattern-matching conventions described in Like Operator.</source>
          <target state="translated">Expresión <ph id="ph1">&lt;see langword="String" /&gt;</ph> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>Compares the parameters <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> and returns the same results as the <ph id="ph3">&lt;see langword="Like" /&gt;</ph> operator, using text comparison.</source>
          <target state="translated">Compara los parámetros <ph id="ph1">&lt;paramref name="Source" /&gt;</ph> y <ph id="ph2">&lt;paramref name="Pattern" /&gt;</ph> y devuelve los mismos resultados que el operador <ph id="ph3">&lt;see langword="Like" /&gt;</ph>, mediante la comparación de texto.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que indica si la cadena se ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>If the value in string satisfies the pattern contained in pattern, result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>If the string does not satisfy the pattern, result is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Si la cadena no se ajusta al modelo, el resultado es <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>If both string and pattern are empty strings, the result is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>This method compares the parameters <ph id="ph1">`Source`</ph> and <ph id="ph2">`Pattern`</ph> and returns the same results as the <bpt id="p1">[</bpt>Like Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</source>
          <target state="translated">Este método compara los parámetros <ph id="ph1">`Source`</ph> y <ph id="ph2">`Pattern`</ph> y devuelve los mismos resultados que la <bpt id="p1">[</bpt>operador Like<ept id="p1">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>The result is a <ph id="ph1">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.</source>
          <target state="translated">El resultado es un <ph id="ph1">`Boolean`</ph> valor que indica si o no la cadena ajusta al modelo.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
          <source>This method is similar to <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's <ph id="ph2">`LocaleID`</ph> value.</source>
          <target state="translated">Este método es similar a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> salvo que siempre realiza una comparación basada en un criterio de ordenación de texto entre mayúsculas y minúsculas determinado por el sistema <ph id="ph2">`LocaleID`</ph> valor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>