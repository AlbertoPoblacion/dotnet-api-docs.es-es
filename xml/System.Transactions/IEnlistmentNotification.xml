<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnlistmentNotification.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58cc94d2e8fdf95496872362fe50ab41f553e0db5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cc94d2e8fdf95496872362fe50ab41f553e0db5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.IEnlistmentNotification">
          <source>Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">Describe una interfaz que un administrador de recursos debe implementar para proporcionar devoluciones de llamada de notificación de confirmación en dos fases para el administrador de transacciones al inscribirse para la participación.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</source>
          <target state="translated">En orden para un administrador de recursos participar en una transacción, debe dar de alta en la transacción mediante el Administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> class defines a set of methods whose names begin with <ph id="ph2">`Enlist`</ph> that provide this functionality.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> define un conjunto de métodos cuyos nombres comienzan con <ph id="ph2">`Enlist`</ph> que proporcionan esta funcionalidad.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>The different <ph id="ph1">`Enlist`</ph> methods correspond to the different types of enlistment that a resource maanger may have.</source>
          <target state="translated">Los diferentes <ph id="ph1">`Enlist`</ph> métodos corresponden a los distintos tipos de inscripción que puede tener un administrador de recursos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">Esta clase describe una interfaz que un administrador de recursos debe implementar para proporcionar devoluciones de llamada de notificación de confirmación en dos fases para el Administrador de transacciones al inscribirse para la participación.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>For each resource manager's implementation of the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, you should enlist it using the <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Transactions.Transaction&gt;</ph> class, depending on whether your resource is volatile or durable.</source>
          <target state="translated">Para la implementación de cada administrador de recursos de la <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interfaz, debe darla mediante el <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> método o la <ph id="ph3">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> método de la <ph id="ph4">&lt;xref:System.Transactions.Transaction&gt;</ph> (clase), dependiendo de si el recurso es volátil o durable.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>For more information on enlistment and 2PC, see <bpt id="p1">[</bpt>Enlisting Resources as Participants in a Transaction<ept id="p1">](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)</ept> and <bpt id="p2">[</bpt>Committing a Transaction in Single-Phase and Multi-Phase<ept id="p2">](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)</ept> respectively.</source>
          <target state="translated">Para obtener más información sobre la inscripción y 2PC, vea <bpt id="p1">[</bpt>dar de alta los recursos como los participantes en una transacción<ept id="p1">](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)</ept> y <bpt id="p2">[</bpt>confirmar una transacción en una fase y en varias fases<ept id="p2">](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)</ept> respectivamente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</source>
          <target state="translated">El Administrador de transacciones informa del objeto inscrito en distintas fases del protocolo de confirmación en dos fases mediante los métodos siguientes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>Method</source>
          <target state="translated">Método</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</source>
          <target state="translated">El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la primera fase de una transacción, cuando el Administrador de transacciones solicita a los participantes si pueden confirmar la transacción.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.</source>
          <target state="translated">El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si la transacción está confirmada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</source>
          <target state="translated">Mediante el Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si se anula la transacción (que es, revierte).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</source>
          <target state="translated">El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si la transacción está en duda.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>You should be aware that notifications might not be sent sequentially, or in a particular order.</source>
          <target state="translated">Debe tener en cuenta que no puede enviarse notificaciones de forma secuencial o en un orden concreto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IEnlistmentNotification">
          <source>The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra una implementación de esta interfaz, así como la inscripción del objeto como un participante en una transacción usando el <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> object used to send a response to the transaction manager.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> utilizado para enviar una respuesta al administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>Notifies an enlisted object that a transaction is being committed.</source>
          <target state="translated">Notifica a un objeto inscrito que se confirma una transacción.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</source>
          <target state="translated">El Administrador de transacciones llama a este método de un objeto inscrito durante la segunda fase de una confirmación, cuando indica a todos los participantes para confirmar la transacción.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method on the <ph id="ph2">`enlistment`</ph> parameter.</source>
          <target state="translated">El Administrador de recursos debe realizar las operaciones necesarias para finalizar la transacción y, a continuación, informar a la memoria de traducción que ha terminado mediante una llamada a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método en el <ph id="ph2">`enlistment`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>If the resource manager has enlisted durably, but does not respond by calling <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method, the transaction manager is unsure that the resource manager has received the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> call.</source>
          <target state="translated">Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> llamar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>If <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">Esto hace que no se puedan reclamar recursos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>In the case of a transaction managed by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">En el caso de una transacción administrada por <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
          <source>Therefore, it is crucial that you call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method once your resource manager is done with your prepare work.</source>
          <target state="translated">Por lo tanto, es fundamental que se llama a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> object used to send a response to the transaction manager.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> utilizado para enviar una respuesta al administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>Notifies an enlisted object that the status of a transaction is in doubt.</source>
          <target state="translated">Notifica a un objeto inscrito que el estado de una transacción está en duda.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</source>
          <target state="translated">Se llama a este método para los recursos volátiles cuando el Administrador de transacciones ha invocado una operación de confirmación de fase única a un solo recurso duradero y, a continuación, la conexión con el recurso duradero se perdió antes de obtener el resultado de la transacción.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>At that point, the transaction outcome cannot be safely determined.</source>
          <target state="translated">En ese momento, el resultado de la transacción no se puede determinar con seguridad.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>As <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> is considered to be a final state for a transaction, you should not call <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> after calling <ph id="ph4">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph>.</source>
          <target state="translated">Como <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> es considera que es un estado final de una transacción, no debe llamar <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> después de llamar a <ph id="ph4">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</source>
          <target state="translated">La implementación de este método para el recurso volátil debería realizar cualquier operación de recuperación o contención entienda en los datos afectados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>It must also call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method on the on the <ph id="ph2">`enlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">También debe llamar a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método en la en la <ph id="ph2">`enlistment`</ph> parámetro cuando ha finalizado su trabajo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>If the resource manager has enlisted durably, but does not respond by calling <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method, the transaction manager is unsure that the resource manager has received the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> call.</source>
          <target state="translated">Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> llamar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>If <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">Esto hace que no se puedan reclamar recursos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>In the case of a transaction managed by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">En el caso de una transacción administrada por <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
          <source>Therefore, it is crucial that you call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method once your resource manager is done with your prepare work.</source>
          <target state="translated">Por lo tanto, es fundamental que se llama a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.PreparingEnlistment" /&gt;</ph> object used to send a response to the transaction manager.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.PreparingEnlistment" /&gt;</ph> utilizado para enviar una respuesta al administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>Notifies an enlisted object that a transaction is being prepared for commitment.</source>
          <target state="translated">Notifica a un objeto inscrito que se prepara una transacción para la confirmación.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</source>
          <target state="translated">El Administrador de transacciones llama a este método de un recurso dada de alta manager durante la fase 1 de un compromiso, cuando solicita a los participantes si pueden confirmar la transacción.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>When you are implementing a durable resource manager, you should log your prepare record during this phase.</source>
          <target state="translated">La hora de implementar un administrador de recursos duradero, debería registrar el registro de preparación durante esta fase.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>The record should contain all the necessary information to perform recovery.</source>
          <target state="translated">El registro debe contener toda la información necesaria para realizar la recuperación.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>This includes the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;</ph> property, which is passed to the transaction manager in the <ph id="ph2">&lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt;</ph> method during recovery.</source>
          <target state="translated">Esto incluye la <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;</ph> propiedad, que se pasa al administrador de transacciones en el <ph id="ph2">&lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt;</ph> método durante la recuperación.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">Para obtener más información sobre recuperación, vea <bpt id="p1">[</bpt>realizar recuperación<ept id="p1">](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>Your resource manager should complete all work that must be finished before calling the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> method of the <ph id="ph2">`preparingEnlistment`</ph> parameter to indicate its vote for commitment.</source>
          <target state="translated">El Administrador de recursos debe completar todo el trabajo que debe finalizar antes de llamar a la <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> método de la <ph id="ph2">`preparingEnlistment`</ph> parámetro para indicar su voto para la confirmación.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</source>
          <target state="translated">Debe asegurarse de que esto se lleva a cabo antes de recibir cualquier notificación de la fase 2 como confirmar, deshacer o en duda.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>This is because phase 2 notifications can happen inline on the same thread that called the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> method in phase 1.</source>
          <target state="translated">Esto es porque las notificaciones de la fase 2 pueden realizar en línea en el mismo subproceso que llamó la <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> método en la fase 1.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>As such, you should not do any work after the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</source>
          <target state="translated">Como tal, no debería realizar ningún trabajo después de la llamada a <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> (por ejemplo, liberando bloqueos) que debería esperar que se habrían completado antes de recibir las notificaciones de la fase 2.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>You can also call the method of the <ph id="ph1">`preparingEnlistment`</ph> parameter to indicate a vote for rollback.</source>
          <target state="translated">También puede llamar al método de la <ph id="ph1">`preparingEnlistment`</ph> parámetro para indicar un voto para deshacer.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method of the <ph id="ph2">`preparingEnlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">Si desea que el objeto sólo observe y reaccione ante el progreso de la transacción, sin participar en ella, la implementación de este método debe llamar a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método de la <ph id="ph2">`preparingEnlistment`</ph> parámetro cuando ha finalizado su trabajo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
          <source>By doing so, your resource manager would not receive any phase 2 notification.</source>
          <target state="translated">Al hacerlo, el Administrador de recursos no recibiría cualquier notificación de la fase 2.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> object used to send a response to the transaction manager.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> utilizado para enviar una respuesta al administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>Notifies an enlisted object that a transaction is being rolled back (aborted).</source>
          <target state="translated">Notifica a un objeto inscrito que se deshace (se anula) una transacción.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</source>
          <target state="translated">El Administrador de transacciones llama a este método de un objeto inscrito cuando la transacción se deshace (se anula) debido a la incapacidad de uno o varios participantes de la transacción para confirmar la transacción.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method on the <ph id="ph2">`enlistment`</ph> parameter.</source>
          <target state="translated">El Administrador de recursos debe realizar las operaciones necesarias para finalizar la transacción y, a continuación, informar a la memoria de traducción que ha terminado mediante una llamada a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método en el <ph id="ph2">`enlistment`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>If the resource manager has enlisted durably, but does not respond by calling <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method, the transaction manager is unsure that the resource manager has received the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> call.</source>
          <target state="translated">Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> llamar.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>If <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">Esto hace que no se puedan reclamar recursos.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>In the case of a transaction managed by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">En el caso de una transacción administrada por <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
          <source>Therefore, it is crucial that you call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method once your resource manager is done with your prepare work.</source>
          <target state="translated">Por lo tanto, es fundamental que se llama a la <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>