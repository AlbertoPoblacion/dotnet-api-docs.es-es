<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cc94d2e8fdf95496872362fe50ab41f553e0db5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Describe una interfaz que un administrador de recursos debe implementar para proporcionar devoluciones de llamada de notificación de confirmación en dos fases para el administrador de transacciones al inscribirse para la participación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En orden para un administrador de recursos participar en una transacción, debe dar de alta en la transacción mediante el Administrador de transacciones. La clase <xref:System.Transactions.Transaction> define un conjunto de métodos cuyos nombres comienzan con `Enlist` que proporcionan esta funcionalidad. Los diferentes `Enlist` métodos corresponden a los distintos tipos de inscripción que puede tener un administrador de recursos.  
  
 Esta clase describe una interfaz que un administrador de recursos debe implementar para proporcionar devoluciones de llamada de notificación de confirmación en dos fases para el Administrador de transacciones al inscribirse para la participación. Para la implementación de cada administrador de recursos de la <xref:System.Transactions.IEnlistmentNotification> interfaz, debe darla mediante el <xref:System.Transactions.Transaction.EnlistVolatile%2A> método o la <xref:System.Transactions.Transaction.EnlistDurable%2A> método de la <xref:System.Transactions.Transaction> (clase), dependiendo de si el recurso es volátil o durable. Para obtener más información sobre la inscripción y 2PC, vea [dar de alta los recursos como los participantes en una transacción](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) y [confirmar una transacción en una fase y en varias fases](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectivamente.  
  
 El Administrador de transacciones informa del objeto inscrito en distintas fases del protocolo de confirmación en dos fases mediante los métodos siguientes.  
  
|Método|Descripción|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la primera fase de una transacción, cuando el Administrador de transacciones solicita a los participantes si pueden confirmar la transacción.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si la transacción está confirmada.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Mediante el Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si se anula la transacción (que es, revierte).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|El Administrador de transacciones utiliza este método de un objeto inscrito como una devolución de llamada durante la segunda fase de una transacción si la transacción está en duda.|  
  
> [!NOTE]
>  Debe tener en cuenta que no puede enviarse notificaciones de forma secuencial o en un orden concreto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una implementación de esta interfaz, así como la inscripción del objeto como un participante en una transacción usando el <xref:System.Transactions.Transaction.EnlistVolatile%2A> método.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
        <summary>Notifica a un objeto inscrito que se confirma una transacción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El Administrador de transacciones llama a este método de un objeto inscrito durante la segunda fase de una confirmación, cuando indica a todos los participantes para confirmar la transacción.  
  
 El Administrador de recursos debe realizar las operaciones necesarias para finalizar la transacción y, a continuación, informar a la memoria de traducción que ha terminado mediante una llamada a la <xref:System.Transactions.Enlistment.Done%2A> método en el `enlistment` parámetro.  
  
 Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <xref:System.Transactions.Enlistment.Done%2A> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <xref:System.Transactions.IEnlistmentNotification.Commit%2A> llamar. Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.  Si <xref:System.Transactions.Enlistment.Done%2A> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema. Esto hace que no se puedan reclamar recursos. En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC. En el caso de una transacción administrada por <xref:System.Transactions>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos. Por lo tanto, es fundamental que se llama a la <xref:System.Transactions.Enlistment.Done%2A> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
        <summary>Notifica a un objeto inscrito que el estado de una transacción está en duda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método para los recursos volátiles cuando el Administrador de transacciones ha invocado una operación de confirmación de fase única a un solo recurso duradero y, a continuación, la conexión con el recurso duradero se perdió antes de obtener el resultado de la transacción. En ese momento, el resultado de la transacción no se puede determinar con seguridad.  
  
 Como <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> es considera que es un estado final de una transacción, no debe llamar <xref:System.Transactions.IEnlistmentNotification.Commit%2A> o <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> después de llamar a <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  La implementación de este método para el recurso volátil debería realizar cualquier operación de recuperación o contención entienda en los datos afectados.  También debe llamar a la <xref:System.Transactions.Enlistment.Done%2A> método en la en la `enlistment` parámetro cuando ha finalizado su trabajo.  
  
 Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <xref:System.Transactions.Enlistment.Done%2A> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> llamar. Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.  Si <xref:System.Transactions.Enlistment.Done%2A> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema. Esto hace que no se puedan reclamar recursos. En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC. En el caso de una transacción administrada por <xref:System.Transactions>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos. Por lo tanto, es fundamental que se llama a la <xref:System.Transactions.Enlistment.Done%2A> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Objeto <see cref="T:System.Transactions.PreparingEnlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
        <summary>Notifica a un objeto inscrito que se prepara una transacción para la confirmación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El Administrador de transacciones llama a este método de un recurso dada de alta manager durante la fase 1 de un compromiso, cuando solicita a los participantes si pueden confirmar la transacción.  
  
 La hora de implementar un administrador de recursos duradero, debería registrar el registro de preparación durante esta fase. El registro debe contener toda la información necesaria para realizar la recuperación. Esto incluye la <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> propiedad, que se pasa al administrador de transacciones en el <xref:System.Transactions.TransactionManager.Reenlist%2A> método durante la recuperación. Para obtener más información sobre recuperación, vea [realizar recuperación](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 El Administrador de recursos debe completar todo el trabajo que debe finalizar antes de llamar a la <xref:System.Transactions.PreparingEnlistment.Prepared%2A> método de la `preparingEnlistment` parámetro para indicar su voto para la confirmación. Debe asegurarse de que esto se lleva a cabo antes de recibir cualquier notificación de la fase 2 como confirmar, deshacer o en duda. Esto es porque las notificaciones de la fase 2 pueden realizar en línea en el mismo subproceso que llamó la <xref:System.Transactions.PreparingEnlistment.Prepared%2A> método en la fase 1. Como tal, no debería realizar ningún trabajo después de la llamada a <xref:System.Transactions.PreparingEnlistment.Prepared%2A> (por ejemplo, liberando bloqueos) que debería esperar que se habrían completado antes de recibir las notificaciones de la fase 2.  
  
 También puede llamar al método de la `preparingEnlistment` parámetro para indicar un voto para deshacer.  
  
 Si desea que el objeto sólo observe y reaccione ante el progreso de la transacción, sin participar en ella, la implementación de este método debe llamar a la <xref:System.Transactions.Enlistment.Done%2A> método de la `preparingEnlistment` parámetro cuando ha finalizado su trabajo. Al hacerlo, el Administrador de recursos no recibiría cualquier notificación de la fase 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
        <summary>Notifica a un objeto inscrito que se deshace (se anula) una transacción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El Administrador de transacciones llama a este método de un objeto inscrito cuando la transacción se deshace (se anula) debido a la incapacidad de uno o varios participantes de la transacción para confirmar la transacción.  
  
 El Administrador de recursos debe realizar las operaciones necesarias para finalizar la transacción y, a continuación, informar a la memoria de traducción que ha terminado mediante una llamada a la <xref:System.Transactions.Enlistment.Done%2A> método en el `enlistment` parámetro.  
  
 Si el Administrador de recursos ha inscrito de forma duradera, pero no responde llamando <xref:System.Transactions.Enlistment.Done%2A> método, el Administrador de transacciones está seguro de que el Administrador de recursos haya recibido el <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> llamar. Por lo tanto, el Administrador de transacciones sigue esperando una respuesta y mantiene información relevante para esta transacción.  Si <xref:System.Transactions.Enlistment.Done%2A> es nunca se llama, este fragmento de información se conserva indefinidamente en memoria o en un recurso de todo el sistema. Esto hace que no se puedan reclamar recursos. En el caso de una transacción distribuida, esto podría rellenar finalmente el registro MSDTC que detiene el proceso MSDTC. En el caso de una transacción administrada por <xref:System.Transactions>, esto da como resultado un aumento gradual y continuo del consumo de memoria de proceso del Administrador de recursos. Por lo tanto, es fundamental que se llama a la <xref:System.Transactions.Enlistment.Done%2A> método una vez que el Administrador de recursos se realiza con el trabajo de preparación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>