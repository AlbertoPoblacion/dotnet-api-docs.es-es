<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionInterop.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c5a3c47603fe26921fe6e788b26bf42be3976258.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5a3c47603fe26921fe6e788b26bf42be3976258</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>Facilitates interaction between <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> and components that were previously written to interact with MSDTC, COM+, or <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated">Facilita la interacción entre <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> y componentes que se han escrito previamente para interactuar con MSDTC, COM+ o <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This class provides methods for transaction propagation.</source>
          <target state="translated">Esta clase proporciona métodos para la propagación de la transacción.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>For more information on how this process works, see <bpt id="p1">[</bpt>Transaction Propagation<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo funciona este proceso, consulte <bpt id="p1">[</bpt>propagación de transacción<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).</source>
          <target state="translated">Utilice los métodos proporcionados por esta clase, se puede ocupar de dos tipos de propagaciones de transacción, exportación e importación (modelo de inserción) y transmisor y receptor (modelo de extracción).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Export/Import (push model) propagation involves these steps,</source>
          <target state="translated">La propagación de exportación/importación (modelo de inserción) implica estos pasos:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, obtain the "whereabouts" of the transaction manager of that machine by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> method.</source>
          <target state="translated">En el equipo remoto, obtenga la "situación" del Administrador de transacciones de la máquina mediante una llamada a la <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>You can then cache this piece of information on the client machine for future usage.</source>
          <target state="translated">A continuación, puede almacenar en caché este fragmento de información en el equipo cliente para uso futuro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the whereabouts to the client machine using any preferred method</source>
          <target state="translated">Enviar los datos que contiene la ubicación en el equipo cliente mediante el método preferido</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, use the whereabouts to "export" the transaction to the remote machine and generate a transaction "cookie".</source>
          <target state="translated">En el equipo cliente, utilice la situación para "Exportar" la transacción en el equipo remoto y generar una "cookie" de la transacción.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is done by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> and passing in the remote machine's whereabouts.</source>
          <target state="translated">Esto se realiza mediante una llamada a <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> y pasar de la situación del equipo remoto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the transaction "cookie" to the remote machine using any preferred method</source>
          <target state="translated">Enviar los datos que contiene la transacción "cookie" en el equipo remoto mediante el método preferido</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the transaction "cookie" to obtain a clone of the client transaction by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">En el equipo remoto, use la transacción "cookie" para obtener un clon de la transacción del cliente mediante una llamada a la <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the clone transaction to enlist the resource manager using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">En el equipo remoto, utilice el clon de la transacción para dar de alta el Administrador de recursos mediante el <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> métodos de la <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver (pull model) propagation involves these steps,</source>
          <target state="translated">La propagación de transmisor y receptor (modelo de extracción) implica estos pasos:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, using the transaction generates a corresponding "propagation token" by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">En el equipo cliente, utilizando la transacción genera un correspondiente "token de propagación" mediante una llamada a <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the "propagation token" of the transaction to the remote machine using any preferred method</source>
          <target state="translated">Enviar los datos que contiene el "token de propagación" de la transacción en el equipo remoto mediante el método preferido</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the "propagation token" to obtain a clone of the client transaction by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">En el equipo remoto, use el token de propagación de"" para obtener un clon de la transacción del cliente mediante una llamada a <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.</source>
          <target state="translated">El modelo de transmisor y receptor proporciona un mejor rendimiento en escenarios donde el token de transacción se envía a un equipo remoto, pero el equipo remoto no puede utilizar para obtener la transacción.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is because the transaction is not propagated until <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> is called.</source>
          <target state="translated">Esto es porque no se propaga la transacción hasta que <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.</source>
          <target state="translated">Otra ventaja es que el token de propagación puede enviarse a cualquier equipo remoto, mientras que la cookie de exportación puede utilizarse únicamente en el equipo que ha proporcionado la situación.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.</source>
          <target state="translated">Sin embargo, también tenga en cuenta que la situación de los administradores de transacciones remoto se encapsula en todos los tokens de propagación, lo que supera las cookies de transacción correspondiente en el modelo de exportación e importación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This type uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>Tenga en cuenta<ept id="p1">**</ept> este tipo usa <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> evitar que se va a llama desde código de confianza; sin embargo, únicamente el llamador inmediato debe poseer el <ph id="ph2">`FullTrust`</ph> conjunto de permisos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance to be marshaled.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> de la que se van a calcular las referencias.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Obtiene una instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> que representa <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> que representa <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> used by <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated">La instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> es compatible con el formulario no administrado de <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> que utiliza MSDTC y con el formulario administrado de <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> que <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph> utiliza.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object to be marshaled.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> del que se van a calcular las referencias.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Transforms a transaction object into an export transaction cookie.</source>
          <target state="translated">Transforma un objeto de transacción en una cookie de transacción de exportación.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>An export transaction cookie representing the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object.</source>
          <target state="translated">Cookie de transacción de exportación que representa el objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Call this method if you want to export a transaction.</source>
          <target state="translated">Llamar a este método si desea exportar una transacción.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">`transaction`</ph> that is passed along is marshaled into a transaction cookie.</source>
          <target state="translated">El <ph id="ph1">`transaction`</ph> que se pasa junto se calculan las referencias en una cookie de transacción.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>You can then send the transaction cookie to the destination process.</source>
          <target state="translated">A continuación, puede enviar la cookie de transacción para el proceso de destino.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>This is referred to as propagating the transaction between processes or systems.</source>
          <target state="translated">Esto se conoce como la propagación de la transacción entre procesos o sistemas.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The propagation is considered to be a push model where the local transaction is pushed to the destination.</source>
          <target state="translated">La propagación se considera un modelo de inserción donde la transacción local se inserta en el destino.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Therefore, information contained in <ph id="ph1">`whereabouts`</ph> must describe the destination transaction manager.</source>
          <target state="translated">Por lo tanto, la información contenida en <ph id="ph1">`whereabouts`</ph> debe describir el Administrador de transacciones de destino.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre distintos modelos de propagación, vea la sección Comentarios de la clase <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from a specified <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">Genera un objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> a partir de un objeto <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that represents the given <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> dado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>The <ph id="ph1">`transactionNative`</ph> is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> used by <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">`transactionNative`</ph> es compatible con el formato no administrado de <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> utiliza MSDTC y con el formulario administrado de <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> utilizando <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified an export cookie.</source>
          <target state="translated">Genera un objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> a partir de la cookie de exportación especificada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified export cookie.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> generado a partir de la cookie de exportación especificada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre distintos modelos de propagación, vea la sección Comentarios de la clase <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance from the specified transmitter propagation token.</source>
          <target state="translated">Genera una instancia de <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> a partir del token de propagación de transmisor especificado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified transmitter propagation token.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> generado a partir del token de propagación de transmisor especificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This method, together with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> method, provide functionality for "pull" propagation, in which the transaction is "pulled" from the remote machine when this method is called to unmarshal the transaction.</source>
          <target state="translated">Este método, junto con el <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> método, proporcionar la funcionalidad de propagación de "extracción", en la que la transacción se "extrae" desde el equipo remoto cuando se llama a este método para deserializar la transacción.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre distintos modelos de propagación, vea la sección Comentarios de la clase <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>The deserialization of a transaction fails because the transaction manager cannot be contacted.</source>
          <target state="translated">En la deserialización de una transacción se produce un error porque no se puede establecer contacto con el administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This may be caused by network firewall or security settings.</source>
          <target state="translated">La causa puede ser la existencia de un firewall de red o la configuración de seguridad.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>A transaction to be marshaled into a propagation token.</source>
          <target state="translated">Transacción para la que se van a calcular las referencias en un token de propagación.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>Generates a propagation token for the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Genera un token de propagación para el objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>This method, together with the <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction.</source>
          <target state="translated">Este método, junto con el método <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph>, proporciona funciones para la propagación de transmisor y receptor, en la que se "extrae" la transacción del equipo remoto cuando se llama a este último para deserializar la transacción.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>For more information on different propagation models, see <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph> class.</source>
          <target state="translated">Para más información sobre distintos modelos de propagación, vea la clase <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>Gets the Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated">Obtiene la situación del administrador de transacciones distribuidas que <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> utiliza.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated">Obtiene la situación del administrador de transacciones distribuidas que <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> utiliza.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts contains an address that describes the location of a transaction manager.</source>
          <target state="translated">La situación contiene una dirección que describe la ubicación de un administrador de transacciones.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</source>
          <target state="translated">Esto permite a dos administradores de transacciones comunicarse entre sí y de ese modo propagar una transacción de un sistema al otro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The information returned by this method can be used to provide location information for push model transaction propagation with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">La información devuelta por este método puede utilizarse para proporcionar información de ubicación para la propagación de transacción del modelo de inserción con la <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre distintos modelos de propagación, vea la sección Comentarios de la clase <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>The type of the distributed transaction processor.</source>
          <target state="translated">Tipo de procesador de la transacción distribuida.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>This value is used for the <ph id="ph1">`Transaction.PromoterType`</ph> property if the transaction is or will be promoted to MSDTC and the <ph id="ph2">`Transaction.GetPromotedToken`</ph> method will return an MSDTC transaction propagation token for the <ph id="ph3">`byte[]`</ph> result.</source>
          <target state="translated">Este valor se utiliza para la <ph id="ph1">`Transaction.PromoterType`</ph> propiedad si la transacción es o se promoverá a MSDTC y el <ph id="ph2">`Transaction.GetPromotedToken`</ph> método devolverá un token de propagación de transacciones de MSDTC para el <ph id="ph3">`byte[]`</ph> resultado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>