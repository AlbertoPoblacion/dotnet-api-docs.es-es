<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JavaScriptTypeResolver.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe8e0e840500610030d7c1d33f78c4810df879fe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe8e0e840500610030d7c1d33f78c4810df879fe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>Provides the abstract base class for implementing a custom type resolver.</source>
          <target state="translated">Proporciona la clase base abstracta para implementar una resolución personalizada de tipos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class provides the services for:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> clase ofrece los servicios para:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>Converting managed type information to a string value through the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> method.</source>
          <target state="translated">Convertir los información de tipo para un valor de cadena a través de la <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>Resolving a string value back to the appropriate managed type through the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> method.</source>
          <target state="translated">Resolver un valor de cadena a la correspondiente administrados tipo a través de la <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> objeto serializa tipos personalizados, puede incluir en la cadena serializada de JavaScript Object Notation (JSON) un valor que contiene información de tipos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>During deserialization, <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</source>
          <target state="translated">Durante la deserialización, <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> puede entonces referencia administra este valor de cadena para determinar el tipo al que se convertirá la cadena JSON.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>If you provide a type resolver to the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, the serializer will use the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</source>
          <target state="translated">Si proporciona una resolución de tipo para el <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instancia, el serializador utilizará el <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> métodos para la asignación entre el tipo administrado y el valor de cadena durante el proceso de serialización y deserialización, respectivamente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class is the base class for the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.SimpleTypeResolver&gt;</ph> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> clase es la clase base para la <ph id="ph2">&lt;xref:System.Web.Script.Serialization.SimpleTypeResolver&gt;</ph> (clase), que proporciona una implementación de un tipo de resolución que utiliza el nombre completo de ensamblado del tipo administrado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>The following example demonstrates how to create a custom type resolver.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear a una resolución de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
          <source>When you implement a type resolver, the string that is returned by the <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /&gt;</ph> method must map back to the same managed type when the string value is passed to the <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Cuando se implementa una resolución de tipos, la cadena devuelta por la <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /&gt;</ph> método debe asignar al mismo tipo administrado cuando el valor de cadena se pasa a la <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
          <source>The name of the managed type.</source>
          <target state="translated">Nombre del tipo administrado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
          <source>When overridden in a derived class, returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that is associated with the specified type name.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve el objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> asociado al nombre de tipo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that is associated with the specified type name.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> asociado al nombre de tipo especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
          <source>When a type resolver is associated with a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, the serializer uses the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</source>
          <target state="translated">Cuando una resolución de tipo está asociada con un <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instancia, el serializador utiliza el <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A&gt;</ph> método cuando se recorre en iteración una cadena JSON determinar el específico administrado tipo al que se debe convertir el tipo JSON.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
          <source>Given a string value, the type resolver must return a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the corresponding managed type.</source>
          <target state="translated">Dado un valor de cadena, la resolución de tipos debe devolver un <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> tipo de objeto que representa el correspondiente administrado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
          <source>The managed type to be resolved.</source>
          <target state="translated">Tipo administrado que se va a resolver.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
          <source>When overridden in a derived class, returns the type name for the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve el nombre de tipo del objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
          <source>The name of the specified managed type.</source>
          <target state="translated">Nombre del tipo administrado especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> method returns either <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, then the type resolver does not support the type.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A&gt;</ph> método devuelve <ph id="ph2">`null`</ph> o <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, a continuación, la resolución de tipos no es compatible con el tipo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>