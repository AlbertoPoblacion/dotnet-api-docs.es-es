<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe8e0e840500610030d7c1d33f78c4810df879fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona la clase base abstracta para implementar una resolución personalizada de tipos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> clase ofrece los servicios para:  
  
-   Convertir los información de tipo para un valor de cadena a través de la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método.  
  
-   Resolver un valor de cadena a la correspondiente administrados tipo a través de la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método.  
  
 Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> objeto serializa tipos personalizados, puede incluir en la cadena serializada de JavaScript Object Notation (JSON) un valor que contiene información de tipos. Durante la deserialización, <xref:System.Web.Script.Serialization.JavaScriptSerializer> puede entonces referencia administra este valor de cadena para determinar el tipo al que se convertirá la cadena JSON.  
  
 Si proporciona una resolución de tipo para el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia, el serializador utilizará el <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> y <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> métodos para la asignación entre el tipo administrado y el valor de cadena durante el proceso de serialización y deserialización, respectivamente.  
  
 El <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> clase es la clase base para la <xref:System.Web.Script.Serialization.SimpleTypeResolver> (clase), que proporciona una implementación de un tipo de resolución que utiliza el nombre completo de ensamblado del tipo administrado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear a una resolución de tipos personalizado.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Cuando se implementa una resolución de tipos, la cadena devuelta por la <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> método debe asignar al mismo tipo administrado cuando el valor de cadena se pasa a la <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> método.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Nombre del tipo administrado.</param>
        <summary>Cuando se invalida en una clase derivada, devuelve el objeto <see cref="T:System.Type" /> asociado al nombre de tipo especificado.</summary>
        <returns>Objeto <see cref="T:System.Type" /> asociado al nombre de tipo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando una resolución de tipo está asociada con un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia, el serializador utiliza el <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método cuando se recorre en iteración una cadena JSON determinar el específico administrado tipo al que se debe convertir el tipo JSON.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dado un valor de cadena, la resolución de tipos debe devolver un <see cref="T:System.Type" /> tipo de objeto que representa el correspondiente administrado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo administrado que se va a resolver.</param>
        <summary>Cuando se invalida en una clase derivada, devuelve el nombre de tipo del objeto <see cref="T:System.Type" /> especificado.</summary>
        <returns>Nombre del tipo administrado especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método devuelve `null` o <xref:System.String.Empty>, a continuación, la resolución de tipos no es compatible con el tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>