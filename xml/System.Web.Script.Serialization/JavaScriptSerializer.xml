<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d714dfba7e3eb394ee2a8bfb486881b99bcb3a6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase se utiliza internamente por la capa de comunicación asincrónica para serializar y deserializar los datos que se pasan entre el explorador y el servidor Web. No se puede tener acceso a esa instancia del serializador. Sin embargo, esta clase expone una API pública. Por lo tanto, puede usar la clase cuando desea trabajar con JavaScript Object Notation (JSON) en código administrado.  
  
 Para serializar un objeto, use el <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> método. Para deserializar una cadena JSON, utilice el <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> o <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> métodos. Para serializar y deserializar tipos que no admite de forma nativa <xref:System.Web.Script.Serialization.JavaScriptSerializer>, implementar convertidores personalizados mediante el <xref:System.Web.Script.Serialization.JavaScriptConverter> clase. A continuación, registre los convertidores mediante el <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> método.  
  
## <a name="mapping-between-managed-types-and-json"></a>Asignación entre tipos administrados y JSON  
 En la tabla siguiente se muestra la asignación entre tipos administrados y JSON para el proceso de serialización. Estos tipos administrados son compatibles de forma nativa con <xref:System.Web.Script.Serialization.JavaScriptSerializer>. Al deserializar una cadena JSON a un tipo administrado, se aplica la misma asignación. Sin embargo, la deserialización puede ser asimétrica; No todos los tipos administrados serializables se pueden deserializar en JSON.  
  
> [!NOTE]
>  Una matriz multidimensional se serializa como una matriz unidimensional y se debe usar como una matriz plana.  
  
|Tipo administrado|Equivalente JSON|  
|------------------|---------------------|  
|<xref:System.String> (Codificación UTF-8 solo).|String|  
|<xref:System.Char>|String|  
|Único carácter null (por ejemplo, \0)|Null|  
|<xref:System.Boolean>|booleano. Representados en JSON como `true` o `false`|  
|`null` (`null` las referencias a objetos y <xref:System.Nullable> los tipos de valor).|Un valor de cadena es null|  
|<xref:System.DBNull>|Un valor de cadena es null|  
|Los tipos primitivos numéricos (o compatibles con numérico): <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, y <xref:System.Single>. Se usa la representación de cadena de referencia cultural invariable.|número|  
|<xref:System.DateTime>|Objeto de fecha, representado en JSON como "\\/Date (número de tics)\\/". El número de pasos es un valor largo positivo o negativo que indica el número de pasos (en milisegundos) que han transcurrido desde medianoche 01 de enero de 1970 UTC.<br /><br /> El máximo admitido es el valor de fecha <xref:System.DateTime.MaxValue> (31/12/9999 11:59:59 P.M.) y el valor de fecha mínimo admitido es <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 A.M.).|  
|Enumeraciones de tipo entero|Entero equivalente del valor de enumeración|  
|Los tipos que implementan <xref:System.Collections.IEnumerable> o <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> no que también son implementaciones de <xref:System.Collections.IDictionary> o <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Esto incluye tipos como <xref:System.Array>, <xref:System.Collections.ArrayList>, y <xref:System.Collections.Generic.List%601>.|Matriz que se usa la sintaxis de matriz JSON|  
|Los tipos que implementan <xref:System.Collections.IDictionary> o <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Esto incluye tipos como <xref:System.Collections.Generic.Dictionary%602> y <xref:System.Collections.Hashtable>.|Objeto de JavaScript que usa la sintaxis de diccionario JSON|  
|Personalizado tipos concretos de (no abstractas) que tienen las propiedades de instancia públicos que tienen obtención los descriptores de acceso o campos de instancia públicos.<br /><br /> Tenga en cuenta que las propiedades públicas de solo escritura, la propiedad pública o atributos de campo público marcan con <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, y se omiten las propiedades indizadas públicas en estos tipos.|Objeto de JavaScript que usa la sintaxis de diccionario JSON. Una propiedad de metadatos especial denominada "__type" se incluye para garantizar la correcta deserialización. Asegúrese de que las propiedades de instancia pública tienen get y establecer los descriptores de acceso para garantizar la correcta deserialización.|  
|<xref:System.Guid>|Representación de cadena de un GUID|  
|<xref:System.Uri>|Representación de cadena del valor devuelto de <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 El primer ejemplo proporciona una ilustración simple de cómo serializar y deserializar los objetos de datos. Requiere una persona que se indican a continuación los nombres de clase.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 En el ejemplo siguiente se muestra un proyecto más complicado y completando que usa el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase para guardar y restaurar el estado de un objeto mediante el uso de serialización de JSON. Este código usa un convertidor personalizado que se proporciona para el <xref:System.Web.Script.Serialization.JavaScriptConverter> clase.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una instancia de la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase sin un solucionador de tipos no incluye las propiedades de metadatos de tipo (denominadas "__type") en la cadena JSON serializada. Una propiedad de metadatos de tipo se usa por la <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> y <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> escriba métodos para determinar administrado adecuado al que se convertirá la cadena JSON. Para obtener información acerca de las resoluciones de tipo, vea el <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">The custom type-resolver object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando serializa un objeto, el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase utiliza la `resolver` parámetro para determinar el valor adecuado para incluir en la cadena JSON serializada para la propiedad de metadatos de tipo ("__type"). De forma similar, cuando la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase está deserializando una cadena JSON, resuelve el valor de propiedad de metadatos de tipo para el tipo administrado adecuado mediante el uso de la instancia de la resolución.  
  
 Puede establecer el `resolver` parámetro `null`, que es equivalente a llamar a la <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor.  
  
 La instancia de <xref:System.Web.Script.Serialization.JavaScriptSerializer> que se usa la capa de comunicación asincrónica para invocar servicios Web desde el script de cliente utiliza una resolución de tipos especial. Esta resolución de tipos restringe los tipos que se pueden deserializar a los definidos en la firma del método del servicio Web o las que tienen el <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> aplicado. No se puede modificar a esta resolución de tipo integrado mediante programación.  
  
> [!IMPORTANT]
>  Mediante una instancia de este objeto inicializado con una resolución de tipo personalizada puede presentar un riesgo de seguridad. Este objeto se usa solo con datos de confianza. Para obtener más información, consulte [validación de datos](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="targetType">The type to convert the object to.</param>
        <summary>Converts the specified object to the specified type.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia es serializar un tipo para el que se registra un convertidor personalizado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método para obtener el diccionario de pares nombre/valor que se convertirá en una cadena con formato JSON.  
  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> método también puede producir excepciones si el gráfico de objetos es demasiado complejo, o si las instancias de registradas <xref:System.Web.Script.Serialization.JavaScriptConverter> haya provocado la recursividad del convertidor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo al que <c>obj</c> se convertirá.</typeparam>
        <param name="obj">The object to convert.</param>
        <summary>Converts the given object to the specified type.</summary>
        <returns>The object that has been converted to the target type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> método intenta convertir la instancia del objeto representado por `obj` a una instancia de tipo `T`. Durante esta conversión no hay ninguna garantía de que se mantiene la igualdad de referencia de objeto. Por lo tanto, no se puede suponer que `obj` y `T` hacen referencia al mismo objeto.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> está pensado para utilizarse si implementa una clase que deriva de <xref:System.Web.Script.Serialization.JavaScriptConverter>. El código del convertidor debe ser podría tomar un valor que se encuentra en el diccionario que el serializador pasa a él y, a continuación, convertir ese valor en una instancia del tipo `T`. En lugar de volver a implementar el código de conversión personalizada para llevar a cabo esta tarea, puede llamar a la <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> método desde el código del convertidor.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> método para obtener un <xref:System.Web.UI.WebControls.ListItem> objeto de un valor en el diccionario que se pasa al convertidor. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.  -or-  It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to deserialize.</param>
        <param name="targetType">The type of the resulting object.</param>
        <summary>Converts a JSON-formatted string to an object of the specified type.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método de deserialización no intenta convertir la raíz del gráfico de objetos a un tipo específico, la forma en que el <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo del objeto resultante.</typeparam>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> método es equivalente a usar primero la <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> método para obtener un gráfico de objetos y, a continuación, intenta convertir el resultado al tipo `T`.  
  
 Durante la deserialización, resolución de tipos actual del serializador se hace referencia, que determina el tipo administrado que se usará al convertir los elementos que están anidados dentro de matrices y tipos de diccionario. Como resultado, el proceso de deserialización recorre en iteración los elementos anidados de `input`. Para obtener más información acerca de las resoluciones de tipo, consulte el <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> clase.  
  
   
  
## Examples  
El ejemplo siguiente proporciona una ilustración simple de cómo serializar y deserializar los objetos de datos.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Requiere una clase denominada `Person`, que se muestra en el ejemplo siguiente. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object graph.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método de deserialización no intenta convertir la raíz del gráfico de objetos a un tipo específico, igual que con el <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
        <value>Longitud máxima de las cadenas JSON. El valor predeterminado es 2097152 caracteres, lo que equivale a 4 MB de datos de cadena Unicode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> propiedad aplica solo cuando se crea explícitamente una instancia de la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase. Use el `jsonSerialization` elemento del archivo de configuración para establecer la longitud máxima para la instancia de serializador interno que se usa la capa de comunicación asincrónica. Para obtener más información acerca de los elementos de configuración para la serialización, vea [Cómo: configurar servicios de ASP.NET en Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
        <value>Número de niveles de objeto.  El valor predeterminado es 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> propiedad hace referencia al número de niveles en la jerarquía de objetos que <xref:System.Web.Script.Serialization.JavaScriptSerializer> procesará en los casos siguientes:  
  
-   Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase está deserializando una cadena JSON.  
  
-   Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase caminando un gráfico de objetos durante la serialización.  
  
 El valor de <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> se aplica solo cuando se crea explícitamente una instancia de la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase. Use el `jsonSerialization` elemento del archivo de configuración para establecer el número de niveles de objeto para procesar para la instancia de serializador interno que se usa la capa de comunicación asincrónica. Para obtener más información acerca de los elementos de configuración para la serialización, vea [Cómo: configurar servicios de ASP.NET en Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">An array that contains the custom converters to be registered.</param>
        <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede registrar uno o varios convertidores personalizados con un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia utilizando el <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> método. Cuando se registran los convertidores personalizados, <xref:System.Web.Script.Serialization.JavaScriptSerializer> utiliza los convertidores para serializar los tipos administrados y para deserializar las cadenas JSON en tipos administrados.  
  
 Varios convertidores se pueden registrar con el mismo <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia y estos convertidores pueden indicar la compatibilidad con el mismo tipo. Como resultado, el último convertidor que se registra para un tipo específico es lo que se usará en <xref:System.Web.Script.Serialization.JavaScriptSerializer> para serializar el tipo.  
  
 Para obtener más información sobre los convertidores personalizados, vea el <xref:System.Web.Script.Serialization.JavaScriptConverter> clase.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo registrar un convertidor personalizado con un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts an object to a JSON string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <summary>Converts an object to a JSON string.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia es serializar un tipo para el que se registra un convertidor personalizado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método para obtener el diccionario de pares nombre/valor que se convertirá en una cadena JSON.  
  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> método también puede producir excepciones si el gráfico de objetos es demasiado complejo, o si las instancias de registradas <xref:System.Web.Script.Serialization.JavaScriptConverter> haya provocado la recursividad del convertidor.  
  
   
  
## Examples  
El ejemplo siguiente proporciona una ilustración simple de cómo serializar y deserializar los objetos de datos.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Requiere una clase denominada `Person`, que se muestra en el ejemplo siguiente. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
        <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia es serializar un tipo para el que se registra un convertidor personalizado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método para obtener el diccionario de pares nombre/valor que se convertirá en una cadena JSON.  
  
 El <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> método también puede producir excepciones si el gráfico de objetos es demasiado complejo, o si las instancias de registradas <xref:System.Web.Script.Serialization.JavaScriptConverter> haya provocado la recursividad del convertidor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>