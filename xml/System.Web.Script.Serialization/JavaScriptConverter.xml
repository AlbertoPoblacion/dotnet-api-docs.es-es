<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ea8ad96cdf88d631517133675ad9e52cbb3dbb2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46680945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase base abstracta para un convertidor de tipos personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Script.Serialization.JavaScriptConverter> clase le permite implementar serialización y deserialización de procesos para tipos administrados que no admite de forma nativa la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase. También puede usar <xref:System.Web.Script.Serialization.JavaScriptConverter> cuando necesite más control sobre el proceso de serialización y deserialización.  
  
 El <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propiedad indica los tipos que proporciona servicios para convertidor de un convertidor personalizado.  
  
 Para indicar que debe usarse un convertidor personalizado por el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia, debe registrar el convertidor con la instancia. Si usas el <xref:System.Web.Script.Serialization.JavaScriptSerializer> directamente la clase, debe usar el <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> método para registrar el convertidor. En caso contrario, si se están invocando los métodos Web de ECMAScript (JavaScript) y desea usar el convertidor personalizado, puede registrarlo mediante la adición de un `converters` elemento en el archivo de configuración. Para obtener más información, consulte [Cómo: configurar servicios de ASP.NET en Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia es serializar un tipo para los que tiene un convertidor personalizado registrado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método. De forma similar, cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia está deserializando una cadena de JavaScript Object Notation (JSON) y reconoce que un tipo dentro de una cadena JSON tiene un convertidor personalizado asociado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> método.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear un convertidor personalizado para el <xref:System.Web.UI.WebControls.ListItemCollection> clase.  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Al heredar de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, es necesario invalidar los miembros siguientes:. 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> proporciona el <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método que se usará en los implementadores de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. El código del convertidor debe ser podría tomar un valor que se encuentra en el diccionario que el serializador pasa a él y, a continuación, convertir ese valor en un objeto de tipo <paramref name="T" />. En lugar de volver a implementar el código de conversión personalizada para lograr esto, puede llamar a la <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método.</para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Servicios Web en AJAX de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">Instancia de <see cref="T:System.Collections.Generic.IDictionary`2" /> de los datos de propiedad almacenados como pares de nombre y valor.</param>
        <param name="type">Tipo del objeto resultante.</param>
        <param name="serializer">Instancia de <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</param>
        <summary>Cuando se invalida en una clase derivada, convierte el diccionario proporcionado en un objeto del tipo especificado.</summary>
        <returns>El objeto deserializado.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> método recorre en iteración los valores de la <paramref name="dictionary" /> parámetro para construir una instancia del tipo solicitado en el <paramref name="type" /> parámetro. Aunque un convertidor de tipos puede usar directamente los valores de <paramref name="dictionary" />, le recomendamos que use el implementador de convertidor el <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método en su lugar. El convertidor debe llamar a este método para el <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instancia disponible desde el <paramref name="serializer" /> parámetro.  
  
El <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método permite que el convertidor pasar un valor de propiedad de <paramref name="dictionary" />y, a continuación, devolver un valor del tipo esperado. En algunos casos, un convertidor de tipos para un tipo personalizado podría trabajar con propiedades que ellos mismos han registrado los convertidores de tipos (por ejemplo, un tipo tiene una propiedad de tipo B y el tipo B también está asociado con un convertidor personalizado). En ese caso, invocar <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> asegura que convertidores personalizados será invocado para los datos de propiedad que se encuentra en el diccionario de forma recursiva. Cuando el convertidor se recorre en iteración todas las entradas del diccionario, devuelve una instancia construida de tipo de destino.  
  
Si el convertidor detecta un problema durante la deserialización, debe iniciar una <see cref="T:System.InvalidOperationException" /> error que describe el problema.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">El objeto que se va a serializar.</param>
        <param name="serializer">Objeto responsable de la serialización.</param>
        <summary>Cuando se invalida en una clase derivada, crea un diccionario de pares de nombre/valor.</summary>
        <returns>Objeto que contiene los pares de clave y valor que representan los datos del objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al serializar un tipo para el que se registra un convertidor personalizado, el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia invoca el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El valor devuelto de <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> debe ser un <see cref="T:System.Collections.Generic.IDictionary`2" /> instancia con cero o más pares de nombre-valor que representan los datos de un objeto va a convertir en JSON. El propio convertidor no serializa los datos como JSON. En su lugar, un diccionario de pares de nombre-valor que contienen los nombres de propiedad (la clave de cadena para el diccionario) y la propiedad correspondiente basa el convertidor de valores (el valor de objeto en el diccionario). El <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instancia convierte posteriormente a JSON.  
  
Si el convertidor encuentra una excepción, debe producir una <see cref="T:System.InvalidOperationException" /> error que describe el problema.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene una colección de los tipos admitidos.</summary>
        <value>Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa los tipos admitidos por el convertidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> listas de propiedades de los tipos que son compatibles con el convertidor. En tiempo de ejecución un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia utiliza esta propiedad para determinar la asignación de tipos administrados a sus convertidores personalizados correspondientes.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo invalidar el <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propiedad en una clase derivada. En este ejemplo, el convertidor admite solo la <xref:System.Web.UI.WebControls.ListItemCollection> tipo. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Serialization.JavaScriptConverter> clase.  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> siempre debe devolver que una colección y la colección deben contener al menos una entrada.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>