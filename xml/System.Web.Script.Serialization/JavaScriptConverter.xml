<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1e7934d8d1587adff38812ec02ac2e9499101eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="39038-101">Proporciona una clase base abstracta para un convertidor de tipos personalizado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="39038-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39038-102">El <xref:System.Web.Script.Serialization.JavaScriptConverter> clase le permite implementar la serialización y deserialización de procesos para tipos administrados que no admite de forma nativa la <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase.</span><span class="sxs-lookup"><span data-stu-id="39038-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="39038-103">También puede usar <xref:System.Web.Script.Serialization.JavaScriptConverter> cuando se necesita más control sobre el proceso de serialización y deserialización.</span><span class="sxs-lookup"><span data-stu-id="39038-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="39038-104">El <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propiedad indica los tipos para los que un convertidor personalizado proporciona servicios para convertidor.</span><span class="sxs-lookup"><span data-stu-id="39038-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="39038-105">Para indicar que se debe utilizar un convertidor personalizado el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia, debe registrar el convertidor con la instancia.</span><span class="sxs-lookup"><span data-stu-id="39038-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="39038-106">Si usas el <xref:System.Web.Script.Serialization.JavaScriptSerializer> clase directamente, debe usar el <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> método para registrar el convertidor.</span><span class="sxs-lookup"><span data-stu-id="39038-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="39038-107">En caso contrario, si se están invocando métodos Web de ECMAScript (JavaScript) y desea usar el convertidor personalizado, puede registrarlo mediante la adición de un `converters` elemento en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="39038-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="39038-108">Para obtener más información, consulte [Cómo: configurar servicios de ASP.NET en Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="39038-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="39038-109">Cuando el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia está serializando un tipo para el que posee un convertidor personalizado registrado, las llamadas de serializador el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39038-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="39038-110">De forma similar, cuando la <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia deserializa una cadena JavaScript Object Notation (JSON) y reconoce que un tipo dentro de una cadena JSON tiene un convertidor personalizado asociado con él, el serializador llama el <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39038-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39038-111">En el ejemplo siguiente se muestra cómo crear un convertidor personalizado para la <xref:System.Web.UI.WebControls.ListItemCollection> clase.</span><span class="sxs-lookup"><span data-stu-id="39038-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="39038-112">Al heredar de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, es necesario invalidar los miembros siguientes:.</span>
        <span class="sxs-lookup">
          <span data-stu-id="39038-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span>
        </span>  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <span data-ttu-id="39038-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> proporciona el <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método que va a utilizar los implementadores de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span><span class="sxs-lookup"><span data-stu-id="39038-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span><span data-ttu-id="39038-114">El código del convertidor debe poder tomar un valor que se encuentra en el diccionario que el serializador que se pasa a él y, a continuación, convertir ese valor en un objeto de tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="39038-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span><span data-ttu-id="39038-115">En lugar de volver a implementar el código de conversión personalizada para lograr esto, se puede llamar a la <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="39038-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39038-116">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-116">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="39038-117">Instancia de <see cref="T:System.Collections.Generic.IDictionary`2" /> de los datos de propiedad almacenados como pares de nombre y valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-117">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="39038-118">Tipo del objeto resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-118">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="39038-119">Instancia de <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-119">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39038-120">Cuando se invalida en una clase derivada, convierte el diccionario proporcionado en un objeto del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-120">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39038-121">El objeto deserializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-121">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39038-122">El <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> método recorre en iteración los valores de la <paramref name="dictionary" /> parámetro para construir una instancia del tipo solicitado en el <paramref name="type" /> parámetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-122">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span>
            </span>
            <span data-ttu-id="39038-123">Aunque un convertidor puede utilizar directamente los valores de <paramref name="dictionary" />, le recomendamos que use el implementador de convertidor el <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método en su lugar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-123">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span>
            </span>
            <span data-ttu-id="39038-124">El convertidor debe llamar a este método para el <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instancia disponible de la <paramref name="serializer" /> parámetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-124">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span>
            </span>
            <span data-ttu-id="39038-125">El <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método permite que el convertidor pasar un valor de propiedad de <paramref name="dictionary" />y, a continuación, devuelve un valor del tipo esperado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-125">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span>
            </span>
            <span data-ttu-id="39038-126">En algunos casos, un convertidor para un tipo personalizado podría estar trabajando con propiedades que ellos mismos registraron convertidores (por ejemplo, un tipo tiene una propiedad de tipo B y tipo B también está asociado a un convertidor personalizado).</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-126">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span>
            </span>
            <span data-ttu-id="39038-127">En ese caso, invocar <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> se asegura de que los convertidores personalizados será invoca para los datos de propiedad que se encuentra en el diccionario de forma recursiva.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-127">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span>
            </span>
            <span data-ttu-id="39038-128">Cuando el convertidor se recorre en iteración todas las entradas en el diccionario, devuelve una instancia construida del tipo de destino.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-128">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span>
            </span>
            <span data-ttu-id="39038-129">Si el convertidor encuentra un problema durante la deserialización, debe iniciar una <see cref="T:System.InvalidOperationException" /> error que describe el problema.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-129">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="39038-130">El objeto que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-130">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="39038-131">Objeto responsable de la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-131">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39038-132">Cuando se invalida en una clase derivada, crea un diccionario de pares de nombre/valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-132">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39038-133">Objeto que contiene los pares de clave y valor que representan los datos del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-133">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39038-134">Al serializar un tipo para el que se registra un convertidor personalizado, el <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia, se invoca el <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39038-134">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39038-135">El valor devuelto de <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> debe ser un <see cref="T:System.Collections.Generic.IDictionary`2" /> instancia con cero o más pares de nombre/valor que representan los datos de un objeto se convierta en JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-135">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</span>
            </span>
            <span data-ttu-id="39038-136">El propio convertidor no serializa los datos como JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-136">The converter itself does not serialize data as JSON.</span>
            </span>
            <span data-ttu-id="39038-137">En su lugar, el convertidor genera un diccionario de pares de nombre-valor que contienen los nombres de propiedad (la clave de cadena para el diccionario) y la propiedad correspondiente de valores (el valor del objeto en el diccionario).</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-137">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span>
            </span>
            <span data-ttu-id="39038-138">El <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instancia convierte posteriormente a JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-138">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span>
            </span>
            <span data-ttu-id="39038-139">Si el convertidor encuentra una excepción, debe iniciar una <see cref="T:System.InvalidOperationException" /> error que describe el problema.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-139">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39038-140">Cuando se invalida en una clase derivada, obtiene una colección de los tipos admitidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-140">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39038-141">Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa los tipos admitidos por el convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39038-141">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39038-142">El <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> listas de propiedades de los tipos que son compatibles con el convertidor.</span><span class="sxs-lookup"><span data-stu-id="39038-142">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="39038-143">En tiempo de ejecución un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instancia utiliza esta propiedad para determinar la asignación de tipos administrados a sus convertidores personalizados correspondientes.</span><span class="sxs-lookup"><span data-stu-id="39038-143">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39038-144">En el ejemplo siguiente se muestra cómo invalidar el <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propiedad en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="39038-144">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="39038-145">En este ejemplo, el convertidor solo admite la <xref:System.Web.UI.WebControls.ListItemCollection> tipo.</span><span class="sxs-lookup"><span data-stu-id="39038-145">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="39038-146">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.Script.Serialization.JavaScriptConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="39038-146">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39038-147">
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> siempre debe devolver que una colección y la colección deben contener al menos una entrada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39038-147">
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>