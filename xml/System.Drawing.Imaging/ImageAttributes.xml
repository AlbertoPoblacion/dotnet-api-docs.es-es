<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53521a97bb774ffe1b82116a1805c12253fc6112" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49126771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contiene información acerca de la manipulación de los colores de los mapas de bits y de los metarchivos durante la representación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene varios valores de ajuste de color, como matrices de ajuste de color, matrices de ajuste de escala de grises, valores de corrección gamma, tablas de mapa de colores y los valores de umbral de color. Durante la representación, los colores pueden se corregido, oscurecer, aclarar y quitar. Para aplicar dichas manipulaciones, inicialice un <xref:System.Drawing.Imaging.ImageAttributes> objeto y pase la ruta de acceso de los que <xref:System.Drawing.Imaging.ImageAttributes> objeto (junto con la ruta de acceso de un <xref:System.Drawing.Image>) a la <xref:System.Drawing.Graphics.DrawImage%2A> método.  
  
   
  
## Examples  
 El siguiente ejemplo toma una imagen que es un color (0.2, 0.0, 0.4, 1.0) y duplica el componente rojo, suma 0.2 a los componentes rojos, verde y azules  
  
 La siguiente ilustración muestra la imagen original a la izquierda y la imagen transformada de la derecha.  
  
 ![Colores](~/add/media/colortrans1.png "colores")  
  
 El código en el ejemplo siguiente utiliza los siguientes pasos para realizar el cambio de color:  
  
1.  Inicializar un <xref:System.Drawing.Imaging.ColorMatrix> objeto.  
  
2.  Crear un <xref:System.Drawing.Imaging.ImageAttributes> objeto y pase el <xref:System.Drawing.Imaging.ColorMatrix> de objeto para el <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> método de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
3.  Pase el <xref:System.Drawing.Imaging.ImageAttributes> de objeto para el <xref:System.Drawing.Graphics.DrawImage%2A> método de un <xref:System.Drawing.Graphics> objeto.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/44df4556-a433-49c0-ac0f-9a12063a5860">Cómo: Utilizar una matriz de Color para transformar un Color único</related>
    <related type="Article" href="http://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Cambiar el color de las imágenes</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la tabla de reasignación de colores del pincel de este objeto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una tabla de reasignación de colores de la categoría predeterminada, una tabla de reasignación de colores diferentes para la categoría de mapa de bits y una tabla de reasignación de colores diferentes para la categoría de pincel.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de pincel, la configuración predeterminada se aplica a la categoría de pincel.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, supongamos que se especifica una tabla de reasignación predeterminada que convierte el rojo a verde y especifique un valor gamma de predeterminado de 1.8. Si se llama a la <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> método, la tabla de reasignación de forma predeterminada (de rojo a verde) y el valor gamma predeterminado (1,8) no se aplicarán a pinceles. Si se llama a más adelante el <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> método, la categoría de pincel no revertirá a la tabla de reasignación de forma predeterminada; en su lugar, no tendrá la categoría de pincel a ninguna tabla de reasignación. De forma similar, la categoría de pincel no volverá al valor gamma de forma predeterminada; en su lugar, la categoría de pincel no tendrán ningún valor gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la clave de color (intervalo de transparencia).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la clave de color (intervalo de transparencia) de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una clave de color de la categoría predeterminada, una clave de color diferente para la categoría de mapa de bits y una clave de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya clave de color se borra.</param>
        <summary>Borra la clave de color (intervalo de transparencia) de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una clave de color de la categoría predeterminada, una clave de color diferente para la categoría de mapa de bits y una clave de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, supongamos que se especifica una clave del color predeterminada que hace que cualquier color con un componente rojo de 200 a 255 sea transparente, y especifique un valor de gamma predeterminado de 1,8. Si establece la clave del color de la categoría de lápiz mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> método, la clave de color y el valor gamma predeterminado no se aplicarán a las plumas. Si desactiva la clave de color más adelante mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> método, la categoría de lápiz no volverá a la clave de color predeterminado; en su lugar, la categoría de lápiz no tendrán ninguna clave de color. De forma similar, la categoría de lápiz no volverá al valor gamma de forma predeterminada; en su lugar, la categoría de lápiz no tendrán ningún valor gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la matriz de ajuste de color.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la matriz de ajuste de color de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una matriz de ajuste de color de la categoría predeterminada, una matriz de ajuste de color diferente para la categoría de mapa de bits y una matriz de ajuste de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, a continuación, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya matriz de ajuste de color se borra.</param>
        <summary>Borra la matriz de ajuste de color de una categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una matriz de ajuste de color de la categoría predeterminada, una matriz de ajuste de color diferente para la categoría de mapa de bits y una matriz de ajuste de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, a continuación, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una matriz de ajuste de color y un valor gamma de la categoría predeterminada. Si se establece una matriz de ajuste de color para la categoría de lápiz mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> método, la matriz de ajuste de color predeterminado no se aplicará a las plumas. Si más adelante borra la matriz de ajuste de color mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> método, la categoría de lápiz no revertirá a la matriz de ajuste predeterminado; en su lugar, no tendrá la categoría de lápiz a ninguna matriz de ajuste. De forma similar, la categoría de lápiz no volverá al valor gamma de forma predeterminada; en su lugar, la categoría de lápiz no tendrán ningún valor gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deshabilita la corrección gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deshabilita la corrección gamma de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya corrección gamma se deshabilita.</param>
        <summary>Deshabilita la corrección gamma de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, a continuación, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica un valor gamma y una matriz de ajuste de color para la categoría predeterminada. Si establece el valor gamma de la categoría de lápiz mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> método, el valor gamma predeterminado no se aplicará a las plumas. Si desactiva el valor gamma más adelante mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> método, la categoría de lápiz no volverá al valor gamma predeterminado; en su lugar, la categoría de lápiz no tendrán ningún valor gamma. De forma similar, la categoría de lápiz no revertirá a la matriz de ajuste de color predeterminado; en su lugar, la categoría de lápiz no tendrán ninguna matriz de ajuste de color.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la configuración de <see langword="NoOp" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la configuración de <see langword="NoOp" /> para la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 Puede deshabilitar el ajuste de color de la categoría predeterminada mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> método. Posteriormente, se puede restaurar el ajuste de color de la categoría predeterminada mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> método. El ajuste de color, a continuación, se devuelve a la que estaba vigente antes de llamar a <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya configuración de <see langword="NoOp" /> se borra.</param>
        <summary>Borra la configuración de <see langword="NoOp" /> para la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 Puede deshabilitar el ajuste de color de una categoría determinada mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> método. Posteriormente, se puede restaurar el ajuste de color de esa categoría mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> método. El ajuste de color, a continuación, se devuelve a la que estaba vigente antes de llamar a <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la configuración del canal de salida CMYK (aguamarina-fucsia-amarillo-negro).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la configuración del canal de salida CMYK (aguamarina-fucsia-amarillo-negro) para la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un canal de salida de la categoría predeterminada y un canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya configuración de canal de salida se borra.</param>
        <summary>Borra la configuración del canal de salida (aguamarina-fucsia-amarillo-negro) para la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un canal de salida de la categoría predeterminada y un canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica un canal de salida y una matriz de ajuste de la categoría predeterminada. Si establece el canal de salida para la categoría de mapa de bits mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método el valor predeterminado, el canal de salida no se aplicará a los mapas de bits. Si desactiva el mapa de bits más adelante el canal de salida mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> método, la categoría de mapa de bits no volverá al canal de salida predeterminado; en su lugar, la categoría de mapa de bits no tendrán ninguna configuración de canal de salida. De forma similar, la categoría de mapa de bits no volverá a la matriz de ajuste de color predeterminado; en su lugar, la categoría de mapa de bits no tendrán ninguna matriz de ajuste de color.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la configuración de perfil de color del canal de salida.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la configuración de perfil de color del canal de salida de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un perfil del canal de salida de la categoría predeterminada y un perfil de canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya configuración de perfil del canal de salida se borra.</param>
        <summary>Borra la configuración de perfil de color del canal de salida de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un perfil del canal de salida de la categoría predeterminada y un perfil de canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica un perfil de canal de salida y una matriz de ajuste de la categoría predeterminada. Si establece el perfil del canal de salida para la categoría de mapa de bits mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> método, el valor predeterminado el perfil del canal de salida no se aplicará a los mapas de bits. Si desactiva posteriormente el mapa de bits de salida de perfil del canal mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> método, la categoría de mapa de bits no volverá al perfil de canal de salida predeterminado; en su lugar, la categoría de mapa de bits no tendrán ninguna configuración de perfil del canal de salida. De forma similar, la categoría de mapa de bits no volverá a la matriz de ajuste de color predeterminado; en su lugar, la categoría de mapa de bits no tendrán ninguna matriz de ajuste de color.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra la tabla de reasignación de colores.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra la tabla de reasignación de colores de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una tabla de reasignación de la categoría predeterminada, una tabla de reasignación diferentes para la categoría de mapa de bits y una tabla de reasignación diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya tabla de reasignación se borra.</param>
        <summary>Borra la tabla de reasignación de colores de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una tabla de reasignación de la categoría predeterminada, una tabla de reasignación diferentes para la categoría de mapa de bits y una tabla de reasignación diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, a continuación, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una tabla de reasignación y un valor gamma de la categoría predeterminada. Si establece la tabla de reasignación de la categoría de lápiz mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> método, la tabla de reasignación de forma predeterminada no se aplicará a las plumas. Si desactiva la tabla de reasignación más adelante mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> método, la categoría de lápiz no revertirá a la tabla de reasignación de forma predeterminada; en su lugar, no tendrá la categoría de lápiz a ninguna tabla de reasignación. De forma similar, la categoría de lápiz no volverá al valor gamma de forma predeterminada; en su lugar, la categoría de lápiz no tendrán ningún valor gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra el valor de umbral.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra el valor de umbral de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El umbral es un valor comprendido entre 0 y 1 que especifica un punto de corte para cada componente de color. Por ejemplo, supongamos que el umbral se establece en 0,7, y está representando un color cuyo rojo, verdes y azules de los componentes son 230, 50 y 220, respectivamente. El componente rojo (230) es mayor que 0.7x255, por lo que se cambiará a 255 (intensidad). El componente verde (50) es menor que 0.7x255, por lo que el componente verde se cambiará a 0. El componente azul (220) es mayor que 0.7x255, por lo que el componente azul se cambiará a 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un umbral para la categoría predeterminada, un umbral diferente para la categoría de mapa de bits y un umbral diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyo umbral se borra.</param>
        <summary>Borra el valor de umbral de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El umbral es un valor comprendido entre 0 y 1 que especifica un punto de corte para cada componente de color. Por ejemplo, supongamos que el umbral se establece en 0,7, y está representando un color cuyo rojo, verdes y azules de los componentes son 230, 50 y 220, respectivamente. El componente rojo (230) es mayor que 0.7x55, por lo que se cambiará a 255 (intensidad). El componente verde (50) es menor que 0.7x255, por lo que el componente verde se cambiará a 0. El componente azul (220) es mayor que 0.7x255, por lo que el componente azul se cambiará a 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un umbral para la categoría predeterminada, un umbral diferente para la categoría de mapa de bits y un umbral diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica un umbral y un valor gamma de la categoría predeterminada. Si establece el umbral para la categoría de lápiz mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> método, el umbral predeterminado no se aplicará a las plumas. Si desactiva el umbral más adelante mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> método, la categoría de lápiz no volverá al umbral predeterminado; en su lugar, la categoría de lápiz no tendrán ningún umbral. De forma similar, la categoría de lápiz no volverá al valor gamma de forma predeterminada; en su lugar, la categoría de lápiz no tendrán ningún valor gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia exacta de este objeto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <returns>Objeto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> que crea esta clase, convertido en objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos utilizados por este objeto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> cuando haya terminado de usar <xref:System.Drawing.Imaging.ImageAttributes>. El método <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> deja el <xref:System.Drawing.Imaging.ImageAttributes> en un estado no utilizable. Después de llamar a <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Drawing.Imaging.ImageAttributes> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Drawing.Imaging.ImageAttributes> estaba ocupando. Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Realice siempre una llamada a <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Drawing.Imaging.ImageAttributes>. En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Drawing.Imaging.ImageAttributes> del objeto `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">
          <see cref="T:System.Drawing.Imaging.ColorPalette" /> que en la entrada contiene la paleta que se va a ajustar y en la salida contiene la paleta ajustada.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyos valores de ajuste se van a aplicar a la paleta.</param>
        <summary>Ajusta los colores de una paleta según los valores de ajuste de una categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una tabla de reasignación de colores de la categoría predeterminada, una tabla de reasignación de colores diferentes para la categoría de mapa de bits y una tabla de reasignación de colores diferentes para la categoría de lápiz.  
  
 Cuando se llama a la <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> método, puede especificar la categoría de ajuste que se utiliza para ajustar los colores de paleta. Por ejemplo, si se pasa <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> a la <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> método, el ajuste de configuración de la categoría de mapa de bits se utiliza para ajustar los colores de paleta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Matriz de objetos <see cref="T:System.Drawing.Imaging.ColorMap" />.</param>
        <summary>Establece la tabla de reasignación de colores de la categoría de pincel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabla de reasignación de colores es una matriz de <xref:System.Drawing.Imaging.ColorMap> estructuras. Cada <xref:System.Drawing.Imaging.ColorMap> estructura tiene dos <xref:System.Drawing.Color> objetos: uno que especifica un color antiguo y otro que especifica un nuevo color correspondiente. Durante la representación, cualquier color que coincide con uno de los colores antiguos en la tabla de reasignación se cambia al color nuevo correspondiente.  
  
 Una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> método tiene el mismo efecto que pasar <xref:System.Drawing.Imaging.ColorAdjustType.Brush> a la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> método. La tabla de reasignación especificada se aplica a los elementos de los metarchivos que se rellenan con un pincel.  
  
 Este método está pensado para usarse solo con metarchivos.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Crea un solo elemento <xref:System.Drawing.Imaging.ColorMap> matriz que contiene rojo como color antiguo y verde como color nuevo.  
  
2.  Pasa esta matriz en otra recién creada <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la clave de color (intervalo de transparencia).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valor de clave de color bajo.</param>
        <param name="colorHigh">Valor de clave de color alto.</param>
        <summary>Establece la clave de color de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método establece los valores máximo y mínimo de clave de color para que una gama de colores se pueden hacer transparente. Cualquier color que tiene cada uno de sus tres componentes entre los componentes correspondientes de las claves de altos y bajos de color (rojo, verde, azul) se hace transparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una clave de color de la categoría predeterminada, una clave de color diferente para la categoría de mapa de bits y una clave de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valor de clave de color bajo.</param>
        <param name="colorHigh">Valor de clave de color alto.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya clave de color se establece.</param>
        <summary>Establece la clave de color (intervalo de transparencia) de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método establece los valores máximo y mínimo de clave de color para que una gama de colores se pueden hacer transparente. Cualquier color que tiene cada uno de sus tres componentes entre los componentes correspondientes de las claves de altos y bajos de color (rojo, verde, azul) se hace transparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una clave de color de la categoría predeterminada, una clave de color diferente para la categoría de mapa de bits y una clave de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece la clave del color para la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Se abre un <xref:System.Drawing.Image> que utiliza el archivo Circle.bmp y lo dibuja en la pantalla.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> objeto y establece su clave de color mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> método.  
  
3.  Dibuja la imagen en la pantalla con la clave del color de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la matriz de ajuste de color y de escala de grises.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <param name="grayMatrix">Matriz de ajuste de escala de grises.</param>
        <summary>Establece la matriz de ajuste de color y de escala de grises de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar matrices de ajuste de la categoría predeterminada, las matrices de ajuste diferentes para la categoría de mapa de bits y matrices de ajuste siendo diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> es equivalente a llamar al método el <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> método y pasando <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> para el `flags` parámetro. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Especifica que se ajustan todos los colores (incluso los grises) mediante la matriz de ajuste de color, no la matriz de ajuste de escala de grises. Por lo tanto, la matriz de ajuste de escala de grises pasada a este método tiene ningún efecto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <param name="grayMatrix">Matriz de ajuste de escala de grises.</param>
        <param name="flags">Elemento de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> que especifica el tipo de imagen y el color que se verán afectados por las matrices de ajuste de color y de ajuste de escala de grises.</param>
        <summary>Establece la matriz de ajuste de color y de escala de grises de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar matrices de ajuste de la categoría predeterminada, las matrices de ajuste diferentes para la categoría de mapa de bits y matrices de ajuste siendo diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <param name="grayMatrix">Matriz de ajuste de escala de grises.</param>
        <param name="mode">Elemento de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> que especifica el tipo de imagen y el color que se verán afectados por las matrices de ajuste de color y de ajuste de escala de grises.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyas matrices de ajuste de color y de escala de grises se establecen.</param>
        <summary>Establece la matriz de ajuste de color y de escala de grises de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar matrices de ajuste de la categoría predeterminada, las matrices de ajuste diferentes para la categoría de mapa de bits y matrices de ajuste siendo diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si establece las matrices de ajuste de color y escala de grises de la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la matriz de ajuste de color.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <summary>Establece la matriz de ajuste de color de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una matriz de ajuste de color de la categoría predeterminada, una matriz de ajuste de color diferente para la categoría de mapa de bits y una matriz de ajuste de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> es equivalente a llamar al método el <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> método y pasando <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> para el `flags` parámetro. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Especifica que se ajustan todos los colores (incluso los grises) mediante la matriz de ajuste de color  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Crea una imagen de un rectángulo que tiene todos los valores establecidos en 128, lo que se rellena con un color gris medio sólido un rectángulo de color. El código, a continuación, dibuja la imagen del rectángulo en la pantalla.  
  
2.  Crea un <xref:System.Drawing.Imaging.ColorMatrix> y establece su <xref:System.Drawing.Drawing2D.Matrix> ubicación 1,75, para resaltar el componente rojo de la imagen.  
  
3.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> objeto y llama a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> método.  
  
4.  Dibuja la imagen (un segundo rectángulo) en la pantalla mediante el <xref:System.Drawing.Imaging.ColorMatrix> simplemente lo establecido en el <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
 Tenga en cuenta que el segundo rectángulo tiene el color rojo resaltado.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Cambiar el color de las imágenes</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <param name="flags">Elemento de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> que especifica el tipo de imagen y el color que se verán afectados por la matriz de ajuste de color.</param>
        <summary>Establece la matriz de ajuste de color de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una matriz de ajuste de color de la categoría predeterminada, una matriz de ajuste de color diferente para la categoría de mapa de bits y una matriz de ajuste de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> método.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Cambiar el color de las imágenes</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matriz de ajuste de color.</param>
        <param name="mode">Elemento de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> que especifica el tipo de imagen y el color que se verán afectados por la matriz de ajuste de color.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya matriz de ajuste de color se establece.</param>
        <summary>Establece la matriz de ajuste de color de una categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una matriz de ajuste de color de la categoría predeterminada, una matriz de ajuste de color diferente para la categoría de mapa de bits y una matriz de ajuste de color diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece la matriz de ajuste de color para la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>. Para ejecutar este ejemplo, pegue el código en un formulario de Windows y la llamada `RotateColors` desde el formulario <xref:System.Windows.Forms.Control.Paint> método de control de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el valor gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Valor de corrección gamma.</param>
        <summary>Establece el valor gamma de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores típicos para el `gamma` parámetro están comprendidos entre 1,0 y 2.2; sin embargo, los valores de 0,1 a 5.0 podrían resultar útiles en algunas circunstancias.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Los valores de gamma fuera del intervalo normal pueden ser útiles para los monitores CRT antiguos o monitores que se encuentran en condiciones de iluminación inusuales, como los entornos industriales.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. Además, deberá cambiar la ruta de acceso del archivo de imagen a una ruta de acceso y nombre de imagen válido en el sistema. El código realiza las siguientes acciones:  
  
1.  Se abre un <xref:System.Drawing.Image> que utiliza el archivo Camera.jpg y lo dibuja en la pantalla con el valor predeterminado de gamma.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> objeto y establece su valor de gamma 2.2 mediante una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> método.  
  
3.  Dibuja la imagen (una segunda cámara) en la pantalla con el valor gamma que acaba de establecer en el <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Valor de corrección gamma.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyo valor gamma se establece.</param>
        <summary>Establece el valor gamma de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores típicos para el `gamma` parámetro están comprendidos entre 1,0 y 2.2; sin embargo, los valores de 0,1 a 5.0 podrían resultar útiles en algunas circunstancias.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece el valor gamma de la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
 Los valores de gamma fuera del intervalo normal pueden ser útiles para los monitores CRT antiguos o monitores que se encuentran en condiciones de iluminación inusuales, como los entornos industriales.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Desactiva el ajuste de color.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desactiva el ajuste de color de la categoría predeterminada. Se puede llamar al método <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> para restaurar los valores de ajuste de color anteriores a la llamada al método <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Se abre un <xref:System.Drawing.Image> que utiliza el archivo Camera.jpg.  
  
2.  Establece el valor gamma de la <xref:System.Drawing.Imaging.ImageAttributes> objeto 0.25.  
  
3.  Dibuja la imagen en la pantalla.  
  
4.  Llama al método <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
5.  Dibuja la imagen (una segunda cámara) en la pantalla; Sin embargo, dado que el <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> se llamó al método, el valor gamma de establecer los valores predeterminados con un valor de 1.0 y la imagen se dibuja en la pantalla con el valor gamma predeterminado.  
  
 Tenga en cuenta que la imagen de la izquierda es muy pálida (gamma de 0,25) y la imagen de la derecha tiene más contraste (gamma de 1,0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya corrección de color se desactiva.</param>
        <summary>Desactiva el ajuste de color de la categoría especificada. Se puede llamar al método <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> para restaurar los valores de ajuste de color anteriores a la llamada al método <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un valor gamma de la categoría predeterminada, un valor diferente de gamma para la categoría de mapa de bits y un valor gamma diferente para la categoría de lápiz.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el canal de salida CMYK (aguamarina-fucsia-amarillo-negro).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Elemento de <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> que especifica el canal de salida.</param>
        <summary>Establece la configuración del canal de salida CMYK (aguamarina-fucsia-amarillo-negro) para la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método para convertir una imagen en un espacio de colores CMYK y examinar las intensidades de uno de los canales de color CMYK. Por ejemplo, suponga que crea un <xref:System.Drawing.Imaging.ImageAttributes> de objeto y establecer su canal de salida de mapa de bits <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Si se pasa la ruta de acceso de ese <xref:System.Drawing.Imaging.ImageAttributes> de objeto para el <xref:System.Drawing.Graphics.DrawImage%2A> método, se calcula el componente de color aguamarina de cada píxel, y cada píxel de la imagen representada es un tono de gris que indica la intensidad de su canal de color aguamarina. De forma similar, puede representar imágenes que indican la intensidad de los canales de fucsia, amarillo y negro.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un canal de salida de la categoría predeterminada y un canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Para ejecutar este ejemplo, pegue el código siguiente en un formulario de Windows. Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llamadas `ShowOutputChannels`, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Elemento de <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> que especifica el canal de salida.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyo canal de salida se establece.</param>
        <summary>Establece el canal de salida CMYK (aguamarina-fucsia-amarillo-negro) para la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método para convertir una imagen en un espacio de colores CMYK y examinar las intensidades de uno de los canales de color CMYK. Por ejemplo, suponga que crea un <xref:System.Drawing.Imaging.ImageAttributes> de objeto y establecer su canal de salida de mapa de bits <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Si se pasa la ruta de acceso de ese <xref:System.Drawing.Imaging.ImageAttributes> de objeto para el <xref:System.Drawing.Graphics.DrawImage%2A> método, se calcula el componente de color aguamarina de cada píxel, y cada píxel de la imagen representada es un tono de gris que indica la intensidad de su canal de color aguamarina. De forma similar, puede representar imágenes que indican la intensidad de los canales de fucsia, amarillo y negro.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un canal de salida de la categoría predeterminada y un canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece el canal de salida para la categoría de mapa de bits pasando <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a los mapas de bits.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Para ejecutar este ejemplo, pegue el código siguiente en un formulario de Windows. Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llamadas `ShowOutputChannels`, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el archivo del perfil de color del canal de salida.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nombre de la ruta de acceso de un archivo de perfil de color. Si el archivo de perfil de color está en el directorio %SystemRoot%\System32\Spool\Drivers\Color, este parámetro puede ser el nombre de archivo. En caso contrario, este parámetro debe ser el nombre completo de la ruta de acceso.</param>
        <summary>Establece el archivo de perfil de color del canal de salida de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> y <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> métodos para convertir una imagen en un espacio de colores CMYK (aguamarina-fucsia-amarillo-negro) y examinar las intensidades de uno de lo CMYK canales de color. Por ejemplo, suponga que escribir código que realiza los pasos siguientes:  
  
1.  Crear un <xref:System.Drawing.Image>.  
  
2.  Crear un <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
3.  Pasar <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
4.  Pase el nombre de ruta de acceso de un archivo de perfil de color para el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> método de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
5.  Pasar las rutas de acceso de la <xref:System.Drawing.Image> y <xref:System.Drawing.Imaging.ImageAttributes> objetos a la <xref:System.Drawing.Graphics.DrawImage%2A> método.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilizará el archivo de perfil de color para calcular el componente de color aguamarina de cada píxel de la imagen, y cada píxel de la imagen representada será un tono de gris que indica la intensidad de su canal de color aguamarina.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un archivo de perfil de color del canal de salida de la categoría predeterminada y un archivo de perfil de color del canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nombre de la ruta de acceso de un archivo de perfil de color. Si el archivo de perfil de color está en el directorio %SystemRoot%\System32\Spool\Drivers\Color, este parámetro puede ser el nombre de archivo. En caso contrario, este parámetro debe ser el nombre completo de la ruta de acceso.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyo archivo de perfil de color del canal de salida se establece.</param>
        <summary>Establece el archivo de perfil de color del canal de salida de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> y <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> métodos para convertir una imagen en un espacio de colores CMYK (aguamarina-fucsia-amarillo-negro) y examinar las intensidades de uno de lo CMYK canales de color. Por ejemplo, suponga que escribir código que realiza los pasos siguientes:  
  
1.  Crear un <xref:System.Drawing.Image>.  
  
2.  Crear un <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
3.  Pasar <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> método de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
4.  Pase el nombre de ruta de acceso de un archivo de perfil de color para el <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> método de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
5.  Pasar las rutas de acceso de la <xref:System.Drawing.Image> y <xref:System.Drawing.Imaging.ImageAttributes> objetos a la <xref:System.Drawing.Graphics.DrawImage%2A> método.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilizará el archivo de perfil de color para calcular el componente de color aguamarina de cada píxel de la imagen, y cada píxel de la imagen representada será un tono de gris que indica la intensidad de su canal de color aguamarina.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un archivo de perfil de color del canal de salida de la categoría predeterminada y un archivo de perfil de color del canal de salida diferente para la categoría de mapa de bits.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de mapa de bits, la configuración predeterminada se aplica a la categoría de mapa de bits.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece el archivo de perfil de color del canal de salida para la categoría de mapa de bits pasando <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> a la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a los mapas de bits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la tabla de reasignación de colores.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Matriz de pares de colores de tipo <see cref="T:System.Drawing.Imaging.ColorMap" />. Cada par de colores contiene un color existente (el primer valor), y el color al que se va a asignar (el segundo valor).</param>
        <summary>Establece la tabla de reasignación de colores de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabla de reasignación de colores es una matriz de <xref:System.Drawing.Imaging.ColorMap> estructuras. Cada <xref:System.Drawing.Imaging.ColorMap> estructura tiene dos <xref:System.Drawing.Color> objetos: uno que especifica un color antiguo y otro que especifica un nuevo color correspondiente. Durante la representación, cualquier color que coincide con uno de los colores antiguos en la tabla de reasignación se cambia al color nuevo correspondiente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una reasignación de colores para la categoría predeterminada, una tabla de reasignación de colores de la categoría de mapa de bits y una tabla de reasignación de colores diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Crea una imagen (un círculo rojo), lo guarda como Circle2.jpg, abre esa imagen y dibuja en la pantalla.  
  
2.  Crea una asignación de colores que se asigna el color rojo a color verde.  
  
3.  Dibuja la imagen creada anteriormente a la pantalla, pero esta vez utilizando el mapa de colores.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Matriz de pares de colores de tipo <see cref="T:System.Drawing.Imaging.ColorMap" />. Cada par de colores contiene un color existente (el primer valor), y el color al que se va a asignar (el segundo valor).</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuya tabla de reasignación de colores se establece.</param>
        <summary>Establece la tabla de reasignación de colores de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabla de reasignación de colores es una matriz de <xref:System.Drawing.Imaging.ColorMap> estructuras. Cada <xref:System.Drawing.Imaging.ColorMap> estructura tiene dos <xref:System.Drawing.Color> objetos: uno que especifica un color antiguo y otro que especifica un nuevo color correspondiente. Durante la representación, cualquier color que coincide con uno de los colores antiguos en la tabla de reasignación se cambia al color nuevo correspondiente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar una reasignación de colores para la categoría predeterminada, una tabla de reasignación de colores de la categoría de mapa de bits y una tabla de reasignación de colores diferentes para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece la tabla de reasignación de colores para la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el umbral (intervalo de transparencia).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Número real que especifica el valor del umbral.</param>
        <summary>Establece el umbral (intervalo de transparencia) de la categoría predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El umbral es un valor comprendido entre 0 y 1 que especifica un punto de corte para cada componente de color. Por ejemplo, supongamos que el umbral se establece en 0,7, y está representando un color cuyo rojo, verdes y azules de los componentes son 230, 50 y 220, respectivamente. El componente rojo (230) es mayor que 0.7x255, por lo que se cambiará a 255 (intensidad). El componente verde (50) es menor que 0.7x255, por lo que el componente verde se cambiará a 0. El componente azul (220) es mayor que 0.7x255, por lo que el componente azul se cambiará a 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un umbral para la categoría predeterminada, un umbral para la categoría de mapa de bits y un umbral diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Se abre un <xref:System.Drawing.Image> y lo dibuja en la pantalla.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> objeto y establece su umbral mediante el <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> método.  
  
3.  Dibuja la imagen en la pantalla según el umbral de la <xref:System.Drawing.Imaging.ImageAttributes> objeto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Valor de umbral comprendido entre 0,0 y 1,0 que se usa como punto de interrupción para ordenar los colores que se van a asignar a un valor máximo o un valor mínimo.</param>
        <param name="type">Elemento de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> que especifica la categoría cuyo umbral de color se establece.</param>
        <summary>Establece el umbral (intervalo de transparencia) de la categoría especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El umbral es un valor comprendido entre 0 y 1 que especifica un punto de corte para cada componente de color. Por ejemplo, supongamos que el umbral se establece en 0,7, y está representando un color cuyo rojo, verdes y azules de los componentes son 230, 50 y 220, respectivamente. El componente rojo (230) es mayor que 0.7x255, por lo que se cambiará a 255 (intensidad). El componente verde (50) es menor que 0.7x255, por lo que el componente verde se cambiará a 0. El componente azul (220) es mayor que 0.7x255, por lo que el componente azul se cambiará a 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objeto tiene valores de color y escala de grises de cinco categorías de ajuste: de forma predeterminada, mapa de bits, pincel, lápiz y texto. Por ejemplo, puede especificar un umbral para la categoría predeterminada, un umbral para la categoría de mapa de bits y un umbral diferente para la categoría de lápiz.  
  
 La configuración predeterminada de ajuste de color y escala de grises se aplica a todas las categorías que no tienen configuración propia. Por ejemplo, si no se especifica ningún valor de ajuste para la categoría de lápiz, la configuración predeterminada se aplica a la categoría de lápiz.  
  
 Tan pronto como se especifica un ajuste de color o configuración de escala de grises de una categoría determinada, los valores de ajuste predeterminado ya no se aplican a esa categoría. Por ejemplo, imagine que especifica una colección de valores de ajuste de la categoría predeterminada. Si se establece el umbral para la categoría de lápiz pasando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> a la <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> método, ninguno de los valores de ajuste predeterminado se aplicará a las plumas.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el modo de ajuste.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> que especifica cómo se colocan en forma de mosaico las copias repetidas de una imagen dentro de un área.</param>
        <summary>Establece el modo de ajuste que se usa para decidir el modo de colocar una textura en forma de mosaico dentro de una forma, o en los límites de la misma. Un textura se coloca en mosaico dentro de una forma para rellenarla si la textura es más pequeña que la forma que va a rellenar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada a la <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> es equivalente a llamar al método <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> y pasando <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> para el `color` parámetro. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Especifica el color de los píxeles que están fuera de la imagen representada. Este color es visible si el parámetro de modo que se establece en <xref:System.Drawing.Drawing2D.WrapMode.Clamp> y el rectángulo de origen pasado a la <xref:System.Drawing.Graphics.DrawImage%2A> método es mayor que la propia imagen.  
  
   
  
## Examples  
 El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos. El código realiza las siguientes acciones:  
  
1.  Se abre un <xref:System.Drawing.Image> desde el Circle3.jpg archivos (un círculo pequeño relleno de rojo) y lo dibuja en la pantalla.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> objeto y establece el <xref:System.Drawing.Drawing2D.WrapMode> enumeración <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Crea un <xref:System.Drawing.TextureBrush> con la imagen del archivo Circle3.jpg.  
  
4.  Dibuja un rectángulo en la pantalla que se rellena con los círculos pequeños y de color rojo.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> que especifica cómo se colocan en forma de mosaico las copias repetidas de una imagen dentro de un área.</param>
        <param name="color">Objeto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> que especifica el color de los píxeles que están fuera de la imagen representada. Este color se ve si el valor del parámetro de modo se establece en <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> y el rectángulo de origen pasado a <see cref="Overload:System.Drawing.Graphics.DrawImage" /> es mayor que la propia imagen.</param>
        <summary>Establece el modo y el color de ajuste que se usan para decidir la forma de colocar una textura tipo mosaico a través de una forma, o en los límites de la misma. Un textura se coloca en mosaico dentro de una forma para rellenarla si la textura es más pequeña que la forma que va a rellenar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> que especifica cómo se colocan en forma de mosaico las copias repetidas de una imagen dentro de un área.</param>
        <param name="color">Objeto Color que especifica el color de los píxeles que están fuera de la imagen representada. Este color se ve si el valor del parámetro de modo se establece en <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> y el rectángulo de origen pasado a <see cref="Overload:System.Drawing.Graphics.DrawImage" /> es mayor que la propia imagen.</param>
        <param name="clamp">Este parámetro no produce resultado alguno. Se debe establecer en <see langword="false" />.</param>
        <summary>Establece el modo y el color de ajuste que se usan para decidir la forma de colocar una textura tipo mosaico a través de una forma, o en los límites de la misma. Un textura se coloca en mosaico dentro de una forma para rellenarla si la textura es más pequeña que la forma que va a rellenar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>