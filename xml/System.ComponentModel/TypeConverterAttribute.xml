<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverterAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051f2a34118aeea4bc90482c2958972edd18ee3134ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a34118aeea4bc90482c2958972edd18ee3134ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Specifies what type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Especifica el tipo que se debe utilizar como convertidor para el objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class you use for conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La clase que se utiliza para la conversión debe heredar de <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> propiedad para obtener el nombre de la clase que proporciona la conversión de datos para el objeto de este atributo está enlazado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre atributos, vea <bpt id="p1">[</bpt>Atributos<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Para obtener más información sobre los convertidores de tipos, vea la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase base y <bpt id="p1">[</bpt>Cómo: implementar un convertidor de tipos<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to your type.</source>
          <target state="translated">Para establecer un convertidor de tipos en una clase personalizada que proporciona el comportamiento de conversión de tipos para XAML, se aplica el <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> al tipo de atributo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The argument of the attribute references your type converter implementation.</source>
          <target state="translated">El argumento del atributo hace referencia a la implementación de convertidor de tipos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</source>
          <target state="translated">El convertidor de tipos debe ser capaz de aceptar valores de una cadena que se usa para atributos o texto de inicialización en marcado XAML y convertir esa cadena en el tipo de destino previsto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>TypeConverters and XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>clases TypeConverter y XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</source>
          <target state="translated">En lugar de aplicar a todos los valores de un tipo, un comportamiento del convertidor de tipos para XAML también se puede establecer en una propiedad concreta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In this case, you apply <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the property definition (the outer definition, not the specific <ph id="ph2">`get`</ph> and <ph id="ph3">`set`</ph> definitions).</source>
          <target state="translated">En este caso, aplicar <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> a la definición de propiedad (la definición externa, no específico del <ph id="ph2">`get`</ph> y <ph id="ph3">`set`</ph> definiciones).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the <ph id="ph2">`get`</ph> method accessor that supports the XAML usage.</source>
          <target state="translated">Un comportamiento del convertidor de tipos para el uso XAML de un miembro adjuntable personalizado puede asignarse aplicando <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> a la <ph id="ph2">`get`</ph> descriptor de acceso de método que admite el uso de XAML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">Para más información, consulte la <bpt id="p1">[</bpt>información general sobre propiedades adjuntas<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</source>
          <target state="translated">Para los casos de serialización de XAML complejos que requieren el estado adicional del runtime de objeto, considere la posibilidad de definir un serializador de valor además de un convertidor de tipos y un atributo ambas clases de soporte en sus tipos personalizados o miembros personalizados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The following example declares <ph id="ph1">`MyClass`</ph> to use the type converter called <ph id="ph2">`MyClassConverter`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se declara <ph id="ph1">`MyClass`</ph> para usar el convertidor de tipos denominado <ph id="ph2">`MyClassConverter`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>This example assumes that <ph id="ph1">`MyClassConverter`</ph> has been implemented elsewhere.</source>
          <target state="translated">En este ejemplo se da por supuesto que <ph id="ph1">`MyClassConverter`</ph> se ha implementado en otra parte.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class implementing the converter (<ph id="ph1">`MyClassConverter`</ph>) must inherit from the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">La clase que implementa el convertidor (<ph id="ph1">`MyClassConverter`</ph>) debe heredar de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The next example creates an instance of <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea una instancia de <ph id="ph1">`MyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Then it gets the attributes for the class, and prints the name of the type converter used by <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">A continuación, obtiene los atributos de la clase y se imprime el nombre del convertidor de tipo utilizado por <ph id="ph1">`MyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class with the default type converter, which is an empty string ("").</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> con el convertidor de tipos predeterminado, que es una cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La clase que proporciona la conversión de datos debe heredar de <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">Nombre completo de la clase que se utiliza para la conversión de datos del objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type name as the data converter for the object this attribute is bound to.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> utilizando el nombre de tipo especificado como convertidor de datos para el objeto al que este atributo está enlazado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La clase que proporciona la conversión de datos debe heredar de <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de la clase de convertidor que se utiliza para la conversión de datos del objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type as the data converter for the object this attribute is bound to.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> utilizando el tipo especificado como convertidor de datos para el objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La clase que proporciona la conversión de datos debe heredar de <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>Gets the fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Obtiene el nombre completo de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se utilizará como convertidor del objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</source>
          <target state="translated">Obtiene el nombre completo de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se utilizará como convertidor del objeto al que está enlazado este atributo, o una cadena vacía ("") si no existe ninguno.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The default value is an empty string ("").</source>
          <target state="translated">El valor predeterminado es una cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.TypeConverterAttribute.Default">
          <source>Specifies the type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Especifica el tipo que se debe utilizar como convertidor para el objeto al que está enlazado este atributo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">Objeto que contiene el valor cuya equivalencia se va a comprobar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor del objeto especificado es igual al del objeto <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> actual; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Devuelve el código hash de esta instancia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">Código hash para el objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> actual.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>