<Type Name="License" FullName="System.ComponentModel.License">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef83b66bd26d90519e645e087fb5eee7b37d0df4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842028" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class License : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit License extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.License" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class License&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class License abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type License = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b21a5-101">Proporciona la clase base <see langword="abstract" /> para todas las licencias.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b21a5-101">Provides the <see langword="abstract" /> base class for all licenses.</span>
      </span>
      <span data-ttu-id="b21a5-102">Las licencias se conceden a una instancia específica de un componente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b21a5-102">A license is granted to a specific instance of a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21a5-103">Deben llamar todos los componentes <xref:System.ComponentModel.License.Dispose%2A> de las licencias concede cuando se elimine o finalice el componente.</span><span class="sxs-lookup"><span data-stu-id="b21a5-103">All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses they grant when the component is disposed or finalized.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="b21a5-104">
        <para>Al heredar de <see cref="T:System.ComponentModel.License" />, debe reemplazar los miembros siguientes: <see cref="P:System.ComponentModel.License.LicenseKey" /> y <see cref="M:System.ComponentModel.License.Dispose" />.  Para obtener más información acerca de las licencias, consulte [Cómo: licencia de componentes y controles](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b21a5-104">
          <para>When you inherit from <see cref="T:System.ComponentModel.License" />, you must override the following members: <see cref="P:System.ComponentModel.License.LicenseKey" /> and <see cref="M:System.ComponentModel.License.Dispose" />.  For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected License ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.License.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; License();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b21a5-105">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.License" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a5-105">Initializes a new instance of the <see cref="T:System.ComponentModel.License" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.License.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="license.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b21a5-106">Cuando se reemplaza en una clase derivada, elimina los recursos utilizados por la licencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a5-106">When overridden in a derived class, disposes of the resources used by the license.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21a5-107">Deben llamar todos los componentes <xref:System.ComponentModel.License.Dispose%2A> para las licencias que conceden cuando se elimina o finaliza el componente.</span><span class="sxs-lookup"><span data-stu-id="b21a5-107">All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses that they grant when the component is disposed of or finalized.</span></span>  
  
 <span data-ttu-id="b21a5-108">Un <xref:System.ComponentModel.LicenseProvider> puede usar las licencias que concede para realizar un seguimiento de su uso.</span><span class="sxs-lookup"><span data-stu-id="b21a5-108">A <xref:System.ComponentModel.LicenseProvider> can use the licenses it grants to track its usage.</span></span>  
  
 <span data-ttu-id="b21a5-109">Llame a <xref:System.ComponentModel.License.Dispose%2A> cuando haya terminado de usar <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="b21a5-109">Call <xref:System.ComponentModel.License.Dispose%2A> when you are finished using the <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="b21a5-110">El método <xref:System.ComponentModel.License.Dispose%2A> deja el <xref:System.ComponentModel.License> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="b21a5-110">The <xref:System.ComponentModel.License.Dispose%2A> method leaves the <xref:System.ComponentModel.License> in an unusable state.</span></span> <span data-ttu-id="b21a5-111">Después de llamar a <xref:System.ComponentModel.License.Dispose%2A>, debe liberar todas las referencias a la <xref:System.ComponentModel.License> por lo que la memoria ocupaba puede ser reclamada por la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="b21a5-111">After calling <xref:System.ComponentModel.License.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.License> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b21a5-112">Realice siempre una llamada a <xref:System.ComponentModel.License.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="b21a5-112">Always call <xref:System.ComponentModel.License.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="b21a5-113">En caso contrario, los recursos de la <xref:System.ComponentModel.License> no es se liberarán hasta que llame al conjunto de elementos no utilizados los <xref:System.ComponentModel.License> destructor del objeto.</span><span class="sxs-lookup"><span data-stu-id="b21a5-113">Otherwise, the resources the <xref:System.ComponentModel.License> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.License> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="LicenseKey">
      <MemberSignature Language="C#" Value="public abstract string LicenseKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseKey" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.License.LicenseKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LicenseKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LicenseKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LicenseKey : string" Usage="System.ComponentModel.License.LicenseKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b21a5-114">Cuando se reemplaza en una clase derivada, obtiene la clave de licencia concedida a este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a5-114">When overridden in a derived class, gets the license key granted to this component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b21a5-115">Clave de licencia concedida a este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b21a5-115">A license key granted to this component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21a5-116">Un <xref:System.ComponentModel.LicenseProvider> puede utilizar cualquier cadena de caracteres Unicode como una clave de licencia.</span><span class="sxs-lookup"><span data-stu-id="b21a5-116">A <xref:System.ComponentModel.LicenseProvider> can use any Unicode character string as a license key.</span></span> <span data-ttu-id="b21a5-117">El <xref:System.ComponentModel.License.LicenseKey%2A> debe tratarse como una cookie opaca, es decir, una cookie con una estructura interna deliberadamente oculta.</span><span class="sxs-lookup"><span data-stu-id="b21a5-117">The <xref:System.ComponentModel.License.LicenseKey%2A> should be treated as an opaque cookie, that is, a cookie with a deliberately hidden internal structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>