<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76e2ef2904fad8c0af535c0ea033bed68b166577" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="49c83-101">Origen del evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49c83-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="49c83-102">Objeto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contiene los datos del evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49c83-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="49c83-103">Representa el método que controlará el evento *MethodName*<see langword="Completed" /> de una operación asincrónica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49c83-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49c83-104">Cuando se crea un delegado <xref:System.ComponentModel.AsyncCompletedEventHandler>, se identifica el método que controlará el evento.</span><span class="sxs-lookup"><span data-stu-id="49c83-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="49c83-105">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="49c83-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="49c83-106">Se llama al método de controlador de eventos cada vez que se produce el evento, a menos que se quite al delegado.</span><span class="sxs-lookup"><span data-stu-id="49c83-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="49c83-107">Para obtener más información sobre los delegados de controladores de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="49c83-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="49c83-108">Para un método asincrónico, denominado *MethodName*, en el componente, tendrá un correspondiente *MethodName* `Completed` eventos y una función opcional *MethodName* `CompletedEventArgs` clase.</span><span class="sxs-lookup"><span data-stu-id="49c83-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="49c83-109">Para un componente que admite varias invocaciones simultáneas de sus métodos asincrónicos, el cliente puede proporcionar un token único o Id. de tarea, para distinguir qué tarea asincrónica está generando eventos concretos.</span><span class="sxs-lookup"><span data-stu-id="49c83-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="49c83-110">El cliente <xref:System.ComponentModel.AsyncCompletedEventHandler> puede leer el <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> propiedad para determinar qué tarea está indicando su finalización.</span><span class="sxs-lookup"><span data-stu-id="49c83-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="49c83-111">Su implementación debe utilizar el <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> para crear un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que asocia la tarea del cliente identificadores con las tareas asincrónicas pendientes.</span><span class="sxs-lookup"><span data-stu-id="49c83-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49c83-112">Para obtener un ejemplo de código de la <xref:System.ComponentModel.AsyncCompletedEventHandler> delegado, vea el ejemplo de la <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="49c83-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>