<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncCompletedEventHandler.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5344a8cdc3c68ead566ccc404bbd4a2419f8ead86.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">344a8cdc3c68ead566ccc404bbd4a2419f8ead86</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The source of the event.</source>
          <target state="translated">Origen del evento.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>Represents the method that will handle the <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph> event of an asynchronous operation.</source>
          <target state="translated">Representa el método que controlará el evento <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph> de una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>When you create an <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated">Cuando se crea un delegado <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph>, se identifica el método que controlará el evento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The event-handler method is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">Se llama al método de controlador de eventos cada vez que se produce el evento, a menos que se quite al delegado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">Para obtener más información sobre los delegados de controladores de eventos, vea <bpt id="p1">[</bpt>NIB: delegados y eventos<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For an asynchronous method, called <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>, in your component, you will have a corresponding <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept><ph id="ph1">`Completed`</ph> event, and an optional <bpt id="p3">*</bpt>MethodName<ept id="p3">*</ept><ph id="ph2">`CompletedEventArgs`</ph> class.</source>
          <target state="translated">Para un método asincrónico, denominado <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>, en el componente, tendrá un correspondiente <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept> <ph id="ph1">`Completed`</ph> eventos y una función opcional <bpt id="p3">*</bpt>MethodName<ept id="p3">*</ept> <ph id="ph2">`CompletedEventArgs`</ph> clase.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</source>
          <target state="translated">Para un componente que admite varias invocaciones simultáneas de sus métodos asincrónicos, el cliente puede proporcionar un token único o Id. de tarea, para distinguir qué tarea asincrónica está generando eventos concretos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The client's <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> can read the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType&gt;</ph> property to determine which task is reporting completion.</source>
          <target state="translated">El cliente <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> puede leer el <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType&gt;</ph> propiedad para determinar qué tarea está indicando su finalización.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>Your implementation should use the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType&gt;</ph> to create an <ph id="ph2">&lt;xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType&gt;</ph> that associates the client's task IDs with pending asynchronous tasks.</source>
          <target state="translated">Su implementación debe utilizar el <ph id="ph1">&lt;xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType&gt;</ph> para crear un <ph id="ph2">&lt;xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType&gt;</ph> que asocia la tarea del cliente identificadores con las tareas asincrónicas pendientes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For a code example of the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegate, see the example in the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Para obtener un ejemplo de código de la <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegado, vea el ejemplo de la <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType&gt;</ph> clase.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>