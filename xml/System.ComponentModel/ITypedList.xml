<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypedList.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ae1b812b22292721f7b8e6e474b15516e5215709.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae1b812b22292721f7b8e6e474b15516e5215709</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ITypedList">
          <source>Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</source>
          <target state="translated">Proporciona funcionalidad para detectar el esquema de una lista enlazable, donde las propiedades disponibles para el enlace se diferencian de las propiedades públicas del objeto al que se va a enlazar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Use this interface if, for instance, you are using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that represents a <ph id="ph2">`customer`</ph> table, you want to bind to the properties on the <ph id="ph3">`customer`</ph> object that the <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> represents, not the properties of the <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph>.</source>
          <target state="translated">Utilizar esta interfaz, por ejemplo, si se usa un <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> objeto que representa un <ph id="ph2">`customer`</ph> tabla, que desea enlazar a las propiedades el <ph id="ph3">`customer`</ph> objeto que la <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> representa, no las propiedades de la <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>This interface is not required for design-time support of a bindable list.</source>
          <target state="translated">Esta interfaz no es necesaria para la compatibilidad en tiempo de diseño de una lista enlazable.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Binding to data can occur either at run time or in a designer, but there are rules for both.</source>
          <target state="translated">El enlace a datos puede producirse en tiempo de ejecución o en un diseñador, pero existen reglas para ambos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>At run time, you can bind to data in any of the following:</source>
          <target state="translated">En tiempo de ejecución, puede enlazar a datos en cualquiera de las siguientes acciones:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Implementer of <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id="ph3">&lt;xref:System.Type&gt;</ph> is anything but <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</source>
          <target state="translated">Implementador de <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, siempre y cuando tenga un fuertemente tipado <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> propiedad (es decir, el <ph id="ph3">&lt;xref:System.Type&gt;</ph> es distinto <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>You can accomplish this by making the default implementation of <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.</source>
          <target state="translated">Puede hacerlo mediante la realización de la implementación predeterminada de <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> privada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>If you want to create an <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Si desea crear un <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> que sigue las reglas de una colección fuertemente tipada, debe derivar de <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Implementer of <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">Implementador de <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>In a designer, you can initialize binding to <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.</source>
          <target state="translated">En un diseñador, se puede inicializar el enlace a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> objetos siguiendo las mismas reglas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>For more information on binding to a data source, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre cómo enlazar a un origen de datos, vea la <ph id="ph1">&lt;xref:System.Windows.Forms.Binding?displayProperty=nameWithType&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar el <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>A generic type named <ph id="ph1">`SortableBindingList`</ph> derives from the <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> class and implements the <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface.</source>
          <target state="translated">Un tipo genérico denominado <ph id="ph1">`SortableBindingList`</ph> se deriva de la <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> clase e implementa el <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">Para obtener una lista de código completo, vea <bpt id="p1">[</bpt>Cómo: implementar la interfaz ITypedList<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects to find in the collection as bindable.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que se encuentran en la colección como enlazables.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the properties on each item used to bind data.</source>
          <target state="translated">Devuelve el <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que representa las propiedades de cada elemento utilizado para enlazar datos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the properties on each item used to bind data.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que representa las propiedades de cada elemento utilizado para enlazar datos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>If the <ph id="ph1">`listAccessors`</ph> parameter is not <ph id="ph2">`null`</ph>, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`listAccessors`</ph> parámetro no es <ph id="ph2">`null`</ph>, suele contener un descriptor de propiedad que identifica una lista de contenedores que desea recuperar para el objeto que implementa <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>For example, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing two tables, <ph id="ph2">`myCustomers`</ph> and <ph id="ph3">`myOrders`</ph>, with a relationship between them called <ph id="ph4">`myCustOrders`</ph>.</source>
          <target state="translated">Por ejemplo, un <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> que contiene dos tablas, <ph id="ph2">`myCustomers`</ph> y <ph id="ph3">`myOrders`</ph>, con una relación entre ellas denominada <ph id="ph4">`myCustOrders`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>If you create a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object to view <ph id="ph2">`myCustomers`</ph>, then calling the <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with <ph id="ph4">`null`</ph> returns the property descriptors for the columns in <ph id="ph5">`myCustomers`</ph>.</source>
          <target state="translated">Si crea un <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> objeto para ver <ph id="ph2">`myCustomers`</ph>, a continuación, llamar a la <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> método con <ph id="ph4">`null`</ph> devuelve los descriptores de propiedades para las columnas de <ph id="ph5">`myCustomers`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>As a result, one of the returned property descriptors is a property descriptor for <ph id="ph1">`myCustOrders`</ph>, just as calling the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with a list accessor array containing the property descriptors for <ph id="ph3">`myCustOrders`</ph> will return the property descriptors for <ph id="ph4">`myOrders`</ph>.</source>
          <target state="translated">Como resultado, uno de los descriptores de propiedades que se devuelven es un descriptor de propiedad para <ph id="ph1">`myCustOrders`</ph>, solo si se llama como el <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> método con una matriz de descriptor de acceso de la lista que contiene los descriptores de propiedades para <ph id="ph3">`myCustOrders`</ph> devolverá los descriptores de propiedades para <ph id="ph4">`myOrders`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar el <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">Para obtener una lista de código completo, vea <bpt id="p1">[</bpt>Cómo: implementar la interfaz ITypedList<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects, for which the list name is returned.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>, para la que se devuelve el nombre de lista.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>Returns the name of the list.</source>
          <target state="translated">Devuelve el nombre de la lista.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>The name of the list.</source>
          <target state="translated">Nombre de la lista.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>This method is used only in the design-time framework and by the obsolete <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
          <target state="translated">Este método se usa solo en el marco de tiempo de diseño y el atributo obsolete <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar el <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">Para obtener una lista de código completo, vea <bpt id="p1">[</bpt>Cómo: implementar la interfaz ITypedList<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>