<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa1d975469cbb2c8aef9b0292567601e5016ea4c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c39af-101">Proporciona funcionalidad para detectar el esquema de una lista enlazable, donde las propiedades disponibles para el enlace se diferencian de las propiedades públicas del objeto al que se va a enlazar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c39af-101">Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39af-102">Utilizar esta interfaz, por ejemplo, si se usa un <xref:System.Data.DataView> objeto que representa un `customer` tabla, que desea enlazar a las propiedades el `customer` objeto que la <xref:System.Data.DataView> representa, no las propiedades de la <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="c39af-102">Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="c39af-103">Esta interfaz no es necesaria para la compatibilidad en tiempo de diseño de una lista enlazable.</span><span class="sxs-lookup"><span data-stu-id="c39af-103">This interface is not required for design-time support of a bindable list.</span></span>  
  
 <span data-ttu-id="c39af-104">El enlace a datos puede producirse en tiempo de ejecución o en un diseñador, pero existen reglas para ambos.</span><span class="sxs-lookup"><span data-stu-id="c39af-104">Binding to data can occur either at run time or in a designer, but there are rules for both.</span></span> <span data-ttu-id="c39af-105">En tiempo de ejecución, puede enlazar a datos en cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c39af-105">At run time, you can bind to data in any of the following:</span></span>  
  
-   <xref:System.Array>  
  
-   <span data-ttu-id="c39af-106">Implementador de <xref:System.Collections.IList>, siempre y cuando tenga un fuertemente tipado <xref:System.Collections.IList.Item%2A> propiedad (es decir, el <xref:System.Type> es distinto <xref:System.Object>).</span><span class="sxs-lookup"><span data-stu-id="c39af-106">Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>).</span></span> <span data-ttu-id="c39af-107">Puede hacerlo mediante la realización de la implementación predeterminada de <xref:System.Collections.IList.Item%2A> privada.</span><span class="sxs-lookup"><span data-stu-id="c39af-107">You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private.</span></span> <span data-ttu-id="c39af-108">Si desea crear un <xref:System.Collections.IList> que sigue las reglas de una colección fuertemente tipada, debe derivar de <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="c39af-108">If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.</span></span>  
  
-   <span data-ttu-id="c39af-109">Implementador de <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="c39af-109">Implementer of <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 <span data-ttu-id="c39af-110">En un diseñador, se puede inicializar el enlace a <xref:System.ComponentModel.Component> objetos siguiendo las mismas reglas.</span><span class="sxs-lookup"><span data-stu-id="c39af-110">In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.</span></span>  
  
 <span data-ttu-id="c39af-111">Para obtener más información sobre cómo enlazar a un origen de datos, vea la <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="c39af-111">For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c39af-112">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.ComponentModel.ITypedList> interfaz.</span><span class="sxs-lookup"><span data-stu-id="c39af-112">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="c39af-113">Un tipo genérico denominado `SortableBindingList` se deriva de la <xref:System.ComponentModel.BindingList%601> clase e implementa el <xref:System.ComponentModel.ITypedList> interfaz.</span><span class="sxs-lookup"><span data-stu-id="c39af-113">A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="c39af-114">Para obtener una lista de código completo, vea [Cómo: implementar la interfaz ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="c39af-114">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="c39af-115">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se van a buscar en la colección como enlazables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-115">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable.</span>
          </span>
          <span data-ttu-id="c39af-116">Puede ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-116">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c39af-117">Devuelve la colección <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada uno de los elementos utilizados para enlazar datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-117">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c39af-118">Colección <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada uno de los elementos utilizados para enlazar datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-118">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39af-119">Si el `listAccessors` parámetro no es `null`, suele contener un descriptor de propiedad que identifica una lista de contenedores que desea recuperar para el objeto que implementa <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="c39af-119">If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>.</span></span> <span data-ttu-id="c39af-120">Por ejemplo, un <xref:System.Data.DataSet> que contiene dos tablas, `myCustomers` y `myOrders`, con una relación entre ellas denominada `myCustOrders`.</span><span class="sxs-lookup"><span data-stu-id="c39af-120">For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`.</span></span> <span data-ttu-id="c39af-121">Si crea un <xref:System.Data.DataView> objeto para ver `myCustomers`, a continuación, llamar a la <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> método con `null` devuelve los descriptores de propiedades para las columnas de `myCustomers`.</span><span class="sxs-lookup"><span data-stu-id="c39af-121">If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`.</span></span> <span data-ttu-id="c39af-122">Como resultado, uno de los descriptores de propiedades que se devuelven es un descriptor de propiedad para `myCustOrders`, solo si se llama como el <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> método con una matriz de descriptor de acceso de la lista que contiene los descriptores de propiedades para `myCustOrders` devolverá los descriptores de propiedades para `myOrders`.</span><span class="sxs-lookup"><span data-stu-id="c39af-122">As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c39af-123">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c39af-123">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method.</span></span> <span data-ttu-id="c39af-124">Para obtener una lista de código completo, vea [Cómo: implementar la interfaz ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="c39af-124">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="c39af-125">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />, para la que se devuelve el nombre de lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-125">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned.</span>
          </span>
          <span data-ttu-id="c39af-126">Puede ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-126">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c39af-127">Devuelve el nombre de la lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-127">Returns the name of the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c39af-128">Nombre de la lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c39af-128">The name of the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39af-129">Este método se usa solo en el marco de tiempo de diseño y el atributo obsolete <xref:System.Windows.Forms.DataGrid> control.</span><span class="sxs-lookup"><span data-stu-id="c39af-129">This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c39af-130">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.ComponentModel.ITypedList.GetListName%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c39af-130">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method.</span></span> <span data-ttu-id="c39af-131">Para obtener una lista de código completo, vea [Cómo: implementar la interfaz ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="c39af-131">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>