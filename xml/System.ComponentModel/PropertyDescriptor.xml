<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyDescriptor.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e059b64b5fedee627a7dad23bafc67c4252df0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e059b64b5fedee627a7dad23bafc67c4252df0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">Proporciona una abstracción de una propiedad en una clase.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">Una descripción de una propiedad está formada por un nombre, sus atributos, la clase del componente que está asociada la propiedad y el tipo de la propiedad.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> provides the following properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> proporciona las propiedades y los métodos siguientes:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contains the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contiene el <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> para esta propiedad.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indicates whether this property should be localized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indica si esta propiedad se debe traducir.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> returns an editor of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> Devuelve un editor del tipo especificado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> also provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> También proporciona las siguientes <ph id="ph2">`abstract`</ph> propiedades y métodos:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contains the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contiene el tipo del componente que está enlazada esta propiedad.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indicates whether this property is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indica si esta propiedad es de solo lectura.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> gets the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> Obtiene el tipo de la propiedad.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indicates whether resetting the component changes the value of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indica si al restablecer el componente cambia el valor del componente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> returns the current value of the property on a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> Devuelve el valor actual de la propiedad en un componente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> resets the value for this property of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> Restablece el valor de esta propiedad del componente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> sets the value of the component to a different value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> Establece el valor del componente en un valor diferente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indicates whether the value of this property needs to be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indica si el valor de esta propiedad debe conservarse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">Normalmente, el <ph id="ph1">`abstract`</ph> los miembros se implementan mediante reflexión.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de la reflexión, vea los temas de <bpt id="p1">[</bpt>reflexión<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">El siguiente ejemplo de código se basa en el ejemplo de la <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It prints the information (category, description, display name) of the text of a button in a text box.</source>
          <target state="translated">Imprime la información (categoría, descripción, nombre para mostrar) del texto de un botón en un cuadro de texto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">Se supone que <ph id="ph1">`button1`</ph> y <ph id="ph2">`textbox1`</ph> se han creado instancias en un formulario.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar un descriptor de propiedad personalizada que proporciona un contenedor alrededor de una propiedad de solo lectura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> is used in a custom designer to provide a read-only property descriptor for the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> se usa en un diseñador personalizado para proporcionar un descriptor de propiedad de solo lectura para el control <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code examples show how to use the <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> in a custom designer.</source>
          <target state="translated">Ejemplos de código siguientes muestran cómo usar el <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> en un diseñador personalizado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the property and its attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que contiene el nombre de la propiedad y sus atributos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con el nombre y los atributos del <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> containing the name of the member and its attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que contiene el nombre del miembro y sus atributos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array containing the attributes you want to associate with the property.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que contiene los atributos que se desea asociar a la propiedad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con el nombre del <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado y los atributos de <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> y la matriz <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">Este constructor anexa los atributos de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> matriz a los atributos de la <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">Nombre de la propiedad.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the property attributes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que contiene los atributos de la propiedad.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the specified name and attributes.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con el nombre y los atributos especificados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">Componente para el cual se va a agregar el controlador.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">Delegado que se va a agregar como agente de escucha.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Habilita la notificación a otros objetos cuando cambia esta propiedad.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="component" /&gt;</ph> o <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">Componente cuya capacidad de restablecerse se va a probar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, devuelve si al restablecer un objeto cambia su valor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si al restablecer el componente cambia su valor; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, este método se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, este método busca un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds one, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">Si encuentra uno, compara el valor del atributo con el valor actual de la propiedad.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>It returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> when the default value does not match the property's current value.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> cuando el valor predeterminado no coincide con el valor la propiedad actual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</source>
          <target state="translated">Si este método no se puede encontrar un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, busca un método "ShouldPersistMyProperty" que es necesario implementar por sí mismo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns what "ShouldPersistMyProperty" returns.</source>
          <target state="translated">Si lo encuentra, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> devuelve qué devuelve "ShouldPersistMyProperty".</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</source>
          <target state="translated">En caso contrario, busca un método "ResetMyProperty" que es necesario implementar por sí mismo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si lo encuentra, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> devuelve <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Si no encuentra un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, un método "ShouldPersistMyProperty", o un método "ResetMyProperty", entonces se devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el tipo de componente al que está enlazada esta propiedad.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que está enlazada esta propiedad.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> o al método <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>, el objeto especificado puede ser una instancia de este tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propiedad se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">Obtiene el convertidor de tipos de esta propiedad.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que se utiliza para convertir el <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> de esta propiedad.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo que se va a crear.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">Crea una instancia del tipo especificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A new instance of the type.</source>
          <target state="translated">Nueva instancia del tipo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> looks for a constructor that takes the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> Busca un constructor que toma el tipo especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">Si encuentra un constructor, se pasa el tipo de la propiedad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">Convertidores y editores utilizan este método para crear versiones de un componente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">Este método permite que un único componente para reutilizarse en más de un tipo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>for access to private class members and metadata.</source>
          <target state="translated">Para obtener acceso a los miembros de clase privada y metadatos.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>The object to compare to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar con <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">Compara esto con otro objeto para ver si son equivalentes.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si los valores son equivalentes; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that lists the attributes in the parent class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que enumera los atributos de la clase principal.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Initially, this is empty.</source>
          <target state="translated">Inicialmente, se encuentra vacío.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Adds the attributes of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to the specified list of attributes in the parent class.</source>
          <target state="translated">Agrega los atributos de <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> a la lista de atributos especificada en la clase principal.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">Para atributos duplicados, se conservará la última que agrega a la lista.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Returns the default <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Devuelve el valor predeterminado de <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A collection of property descriptor.</source>
          <target state="translated">Colección de descriptor de propiedad.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">Este método pasa <ph id="ph1">`null`</ph> tanto para el <ph id="ph2">`instance`</ph> parámetro y el <ph id="ph3">`filter`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`instance`</ph> parámetro puede diferir de las propiedades de una clase, porque el contenedor puede agregar o quitar propiedades si el <ph id="ph2">`instance`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`filter`</ph> puede mezclar parámetro <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, la propiedad debe ser una coincidencia exacta que se incluirá en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and it is the default property, it will be included in the returned array, even if there is no instance of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si especifica un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> y es la propiedad predeterminada, se incluirá en la matriz devuelta, aunque no hay ninguna instancia de <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> utilizando una matriz especificada de atributos como filtro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades que coinciden con los atributos especificados.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">Este método pasa <ph id="ph1">`null`</ph> para el <ph id="ph2">`instance`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`instance`</ph> parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`instance`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`filter`</ph> puede mezclar parámetro <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, la propiedad debe ser una coincidencia exacta que se incluirá en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si especifica un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instancia y es la propiedad predeterminada, se incluirá en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> para un objeto especificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades del componente especificado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">Este método pasa <ph id="ph1">`null`</ph> para el <ph id="ph2">`filter`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`instance`</ph> parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`instance`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`filter`</ph> puede mezclar parámetro <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, la propiedad debe ser una coincidencia exacta que se incluirá en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si especifica un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instancia y es la propiedad predeterminada, se incluirá en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> de un objeto dado utilizando como filtro una matriz especificada de atributos.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades que coinciden con los atributos especificados del componente especificado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`instance`</ph> parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`instance`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`filter`</ph> puede mezclar parámetro <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, la propiedad debe ser una coincidencia exacta que se incluirá en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si especifica un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instancia y es la propiedad predeterminada, se incluirá en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Generally, child properties should be returned by implementing the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returned from this property.</source>
          <target state="translated">Por lo general, propiedades secundarias deben devolverse implementando el <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> miembro de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> devuelto por esta propiedad.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">Tipo base del editor que se utiliza para diferenciar entre varios editores compatibles con una propiedad.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">Obtiene un editor del tipo especificado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">Instancia del tipo de editor solicitado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún editor.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Devuelve el código hash de este objeto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>The hash code for this object.</source>
          <target state="translated">El código hash de este objeto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the invocation target.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del destino de la invocación.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The potential invocation target.</source>
          <target state="translated">Destino de la invocación potencial.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">Este método devuelve el objeto que se debe utilizar durante la invocación de miembros.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that should be used during invocation of members.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se debe utilizar durante la invocación de miembros.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">Normalmente, el valor devuelto será el mismo que el <ph id="ph1">`instance`</ph> pasado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> method may return a different value.</source>
          <target state="translated">Si alguien asocia otro objeto a esta instancia, o si la instancia es un descriptor de tipos personalizado, el <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> método puede devolver un valor diferente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">Nombre calificado con el ensamblado del tipo que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>Returns a type using its name.</source>
          <target state="translated">Devuelve un tipo mediante su nombre.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that matches the given type name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a match cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que coincide con el nombre de tipo especificado, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se encuentra ninguna coincidencia.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>To find the appropriate type, this method first checks the assembly of the type that this <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> references.</source>
          <target state="translated">Para buscar el tipo apropiado, este método comprueba primero el ensamblado del tipo que el control <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>If it does not find the type in the assembly, it calls <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si no encuentra el tipo en el ensamblado, llama a <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">Componente con la propiedad cuyo valor se va a recuperar.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el valor actual de la propiedad de un componente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The value of a property for a given component.</source>
          <target state="translated">Valor de una propiedad de un componente dado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, este método se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>This method automatically calls the pre-change method, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, and post-change method, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</source>
          <target state="translated">Este método llama automáticamente al método previo al cambio, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>y después del cambio (método), <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</source>
          <target state="translated">Cuando se reemplaza este método, obtiene el valor actual de la propiedad invocando un método "GetMyProperty" que se debe implementar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>An exception in that method should pass through.</source>
          <target state="translated">Debe pasar una excepción en ese método.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">Componente para el que se recuperan controladores de eventos.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>Retrieves the current set of <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event handlers for a specific component</source>
          <target state="translated">Recupera el conjunto actual de controladores de eventos <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> para un componente concreto</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>A combined multicast event handler, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no event handlers are currently assigned to <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</source>
          <target state="translated">Un controlador de eventos de multidifusión combinado, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si ningún controlador de eventos está asignado actualmente a <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si esta propiedad se debe traducir, según se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el miembro está marcado con el valor <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> establecido en <ph id="ph3">&lt;see langword="true" /&gt;</ph>; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>When a property is marked with the <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id="ph2">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">Cuando se marca una propiedad con el <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> establecido en <ph id="ph2">`true`</ph> y se utiliza en un diseñador visual, sus valores se guardan en un archivo de recursos.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">Si marca una propiedad con el atributo y, a continuación, establezca la propiedad en el código, no se usan archivos de recursos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si esta propiedad es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propiedad es de sólo lectura; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>The object that raises the event.</source>
          <target state="translated">Objeto que genera el evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>Raises the <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event that you implemented.</source>
          <target state="translated">Provoca el evento <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> que se ha implementado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">La implementación del descriptor de propiedad debe llamar a este método cuando cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el tipo de propiedad.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de propiedad.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propiedad se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to remove the handler for.</source>
          <target state="translated">Componente para el cual se va a quitar el controlador.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">Delegado que se va a quitar como agente de escucha.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Habilita la notificación a otros objetos cuando cambia esta propiedad.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="component" /&gt;</ph> o <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">Componente cuyo valor de propiedad se va a restablecer en el valor predeterminado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, restablece el valor predeterminado de esta propiedad del componente.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, este método se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method determines the value to reset the property to in the following order of precedence:</source>
          <target state="translated">Este método determina el valor para restablecer la propiedad en el siguiente orden de prioridad:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">No hay una propiedad sombreada de esta propiedad.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> for this property.</source>
          <target state="translated">Hay un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> para esta propiedad.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">Hay un método "ResetMyProperty" que se ha implementado, donde "MyProperty" es el nombre de la propiedad que se pasa a él.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">Este método crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automáticamente en el orden siguiente:</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> método para crear un nuevo <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> para representar los cambios.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> método para indicar que ha comenzado la transacción y los cambios están a punto de producirse.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">El método restablece la propiedad en el valor determinado por el orden de comprobación de este método.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> método para indicar que se han producido los cambios.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is completed.</source>
          <target state="translated">Las llamadas al método <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> para indicar que se ha completado la transacción.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">El propósito de la transacción es compatible con <ph id="ph1">`Undo`</ph> y <ph id="ph2">`Redo`</ph> funcionalidad.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, este método busca un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds one, it sets the value of the property to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> it found.</source>
          <target state="translated">Si encuentra uno, Establece el valor de la propiedad a la <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> se encuentra.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ResetMyProperty" method that you need to implement.</source>
          <target state="translated">Si este método no se puede encontrar un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, busca un método "ResetMyProperty" que es necesario implementar.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this is found, the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> method invokes it.</source>
          <target state="translated">Si lo encuentra, el <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> método lo invoca.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> cannot find a <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> no se puede encontrar un <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> o un método "ResetMyProperty" que se haya implementado, no realiza una operación.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si esta propiedad se debe serializar, según se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">Uno de los valores de enumeración de <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> que especifica si esta propiedad se debe serializar.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">Componente con el valor de propiedad que se va a establecer.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">Nuevo valor.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, establece el valor del componente en otro diferente.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, este método se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">Este método crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automáticamente en el orden siguiente:</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> método para crear un nuevo <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> para representar los cambios.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> método para indicar que ha comenzado la transacción y los cambios están a punto de producirse.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">El método restablece la propiedad en el valor determinado por el orden de comprobación de este método.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">Las llamadas al método el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> método para indicar que se han producido los cambios.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is complete.</source>
          <target state="translated">Las llamadas al método <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> para indicar que la transacción ha finalizado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">El propósito de la transacción es compatible con <ph id="ph1">`Undo`</ph> y <ph id="ph2">`Redo`</ph> funcionalidad.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</source>
          <target state="translated">Cuando se reemplaza este método, se debe establecer el valor de la propiedad invocando el método "SetMyProperty" adecuado que se debe implementar.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>If the value specified is not valid, the component should throw an exception, which is passed up.</source>
          <target state="translated">Si el valor especificado no es válido, el componente debería iniciar una excepción, que se pasa hacia arriba.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</source>
          <target state="translated">La propiedad debe diseñarse para que un método "GetMyProperty" (que se ha implementado) después de un método "SetMyProperty" devuelva el valor pasado al método "SetMyProperty" no produce una excepción.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">Componente con la propiedad cuya persistencia se va a examinar.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, determina un valor que indica si el valor de esta propiedad debe almacenarse.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se debe almacenar la propiedad; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, este método se implementa mediante reflexión.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, this method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current value of the property is different from its default value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, este método devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor actual de la propiedad es diferente de su valor predeterminado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>It looks for a default value by first looking for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Busca un valor predeterminado buscando primero un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If the method finds this attribute, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">Si el método encuentra este atributo, compara el valor del atributo con el valor actual de la propiedad.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</source>
          <target state="translated">Si este método no se puede encontrar un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, busca un método "ShouldSerializeMyProperty" que es necesario implementar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If it is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> invokes it.</source>
          <target state="translated">Si lo encuentra, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> lo invoca.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si este método no se puede encontrar un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> o un método "ShouldSerializeMyProperty", no podrá crear optimizaciones y devolverá <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> class implements special serialization logic for inherited components.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> clase implementa la lógica de serialización especial para los componentes heredados.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">Obtiene un valor que indica si las notificaciones de cambios de valores para esta propiedad se pueden originar fuera del descriptor de propiedades.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if value change notifications may originate from outside the property descriptor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si las notificaciones de cambios de valores se pueden originar fuera del descriptor de propiedades; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> propiedad indica si las notificaciones de cambio de valor de esta propiedad pueden originarse fuera el descriptor de propiedad, como en el propio componente o si las notificaciones se originarán únicamente en las llamadas directas a intentó la <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>For example, the component may implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph2">`name.Changed`</ph> event for this property.</source>
          <target state="translated">Por ejemplo, el componente puede implementar la <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> tener explícito o interfaz <ph id="ph2">`name.Changed`</ph> eventos para esta propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>