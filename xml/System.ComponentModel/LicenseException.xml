<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LicenseException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e17db79ab1a3f82c5c245927abf11f77f5494cda.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e17db79ab1a3f82c5c245927abf11f77f5494cda</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicenseException">
          <source>Represents the exception thrown when a component cannot be granted a license.</source>
          <target state="translated">Representa la excepción que se produce cuando no se puede conceder una licencia a un componente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType&gt;</ph> method throws <ph id="ph2">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> when a component cannot obtain a valid license.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType&gt;</ph> método inicie una excepción <ph id="ph2">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> cuando un componente no puede obtener una licencia válida.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.</source>
          <target state="translated">Esto se produce cuando un componente o no tiene licencia, o tiene licencia pero no se puede conceder una licencia válida.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>For more information on licensing, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las licencias, consulte <bpt id="p1">[</bpt>Cómo: licencia de componentes y controles<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>The following code example shows how to catch a <ph id="ph1">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> and interpret its content.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo detectar un <ph id="ph1">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> e interpretar su contenido.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>In the sample, the application calls the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> that is not licensed.</source>
          <target state="translated">En el ejemplo, la aplicación llama a la <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph> método para un <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> que no tiene licencia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.</source>
          <target state="translated">Tras detectar la excepción, el ejemplo obtiene el mensaje de error correspondiente, el tipo de componente que no se ha concedido una licencia, el seguimiento de pila y el origen de la excepción.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>This example requires that you have specified the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> by marking the <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> with a <ph id="ph3">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph> attribute.</source>
          <target state="translated">Este ejemplo requiere que haya especificado el <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> marcando el <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> con un <ph id="ph3">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>For more information on how to do this, see the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre cómo hacerlo, consulte la <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicenseException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type of component that was denied a license.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> correspondiente al tipo de componente al que se ha denegado una licencia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to be used for deserialization.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que se va a utilizar para la deserialización.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination to be used for deserialization.</source>
          <target state="translated">Destino que se va a utilizar para la deserialización.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class with the given <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> con los objetos <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>dados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Instancia del componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> correspondiente al tipo y a la instancia del componente al que se ha denegado una licencia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Instancia del componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>The exception message to display.</source>
          <target state="translated">Mensaje de excepción que se va a mostrar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> correspondiente al tipo y a la instancia del componente al que se ha denegado una licencia, junto con un mensaje que se va a mostrar.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Instancia del componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>The exception message to display.</source>
          <target state="translated">Mensaje de excepción que se va a mostrar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the original exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que representa la excepción original.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> correspondiente al tipo y a la instancia del componente al que se ha denegado una licencia, junto con un mensaje que se va a mostrar y la excepción original que se ha producido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to be used for deserialization.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que se va a utilizar para la deserialización.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination to be used for deserialization.</source>
          <target state="translated">Destino que se va a utilizar para la deserialización.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with information about the exception.</source>
          <target state="translated">Establece el objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> con información sobre la excepción.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.LicenseException.LicensedType">
          <source>Gets the type of the component that was not granted a license.</source>
          <target state="translated">Obtiene el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.LicenseException.LicensedType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que no se ha concedido una licencia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>