<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a90ef799e4d00c36c06e1d73fd90e9c03baeab9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Agrega funcionalidad transaccional al agregar un nuevo elemento a una colección.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.ICancelAddNew> interfaz permite que una colección agregar un nuevo elemento de forma extensible. El nuevo elemento posteriormente puede confirmado o revertido. El <xref:System.ComponentModel.IBindingList.AddNew%2A> método de la colección se utiliza para agregar provisionalmente el elemento, que posteriormente se transfieran a través de las siguientes operaciones:  
  
-   El <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> método confirmará explícitamente la adición pendiente.  
  
-   Realizar otra operación de colección, como una inserción, eliminación o movimiento confirmará implícitamente la adición pendiente.  
  
-   El <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> método revertirá la adición pendiente si no ha confirmado.  
  
> [!NOTE]
>  En algunos escenarios, como el enlace de datos complejos de Windows Forms, puede recibir la colección <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> o <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> llama para los elementos que no sea el elemento recién agregado. (Cada elemento normalmente es una fila en una vista de datos). Omita estas llamadas; Cancelar o confirmar el nuevo elemento solo cuando se especifica el índice del elemento.  
  
 Hay dos modelos que permiten la adición transaccional de un elemento a una colección enlazada a datos:  
  
-   El modelo antiguo se basa directamente en una colección que implementa el <xref:System.ComponentModel.IBindingList> interfaz y está enlazado a datos directamente mediante la <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> clase. El <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, y <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> métodos de la <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> son responsables de la compatibilidad transaccional para agregar nuevos elementos de la clase. Sin embargo, esta funcionalidad depende de los elementos que admiten el comportamiento transaccional a través de la <xref:System.ComponentModel.IEditableObject> interfaz. Si los elementos no admiten esta interfaz, el elemento se agregarán siempre a la lista, independientemente de las llamadas subsiguientes a <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.  
  
-   El modelo más reciente admite un escenario de enlace de datos más sólido a través del genérico <xref:System.ComponentModel.BindingList%601> clase que implementa el <xref:System.ComponentModel.IBindingList> y <xref:System.ComponentModel.ICancelAddNew> interfaces. En este caso, la compatibilidad transaccional se administra mediante el <xref:System.ComponentModel.BindingList%601> colección directamente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Índice del elemento previamente agregado a la colección.</param>
        <summary>Descarta un nuevo elemento pendiente de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> método revierte una adición pendiente (<xref:System.ComponentModel.IBindingList.AddNew%2A>) de un elemento previamente agregado a la colección en la posición `itemIndex`. El parámetro de índice es necesario porque varios elementos nuevos pueden estar pendientes al mismo tiempo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Índice del elemento previamente agregado a la colección.</param>
        <summary>Confirma un nuevo elemento pendiente en la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> confirma una adición pendiente (<xref:System.ComponentModel.IBindingList.AddNew%2A>) de un elemento previamente agregado a la colección en la posición `itemIndex`. El parámetro de índice es necesario porque varios elementos nuevos pueden estar pendientes al mismo tiempo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>