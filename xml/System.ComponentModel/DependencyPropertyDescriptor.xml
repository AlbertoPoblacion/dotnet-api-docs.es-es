<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyPropertyDescriptor.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b92ae7ae04745f0947cc4f73be429fa86e1532f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b92ae7ae04745f0947cc4f73be429fa86e1532f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Provides an extension of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that accounts for the additional property characteristics of a dependency property.</source>
          <target state="translated">Proporciona una extensión de <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que se tiene en cuenta para las características de propiedad adicionales de una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>This class is primarily used by designer applications.</source>
          <target state="translated">Esta clase se utiliza principalmente por aplicaciones de diseñador.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</source>
          <target state="translated">Estas aplicaciones pueden necesitar informar de las características de la propiedad de dependencia a través de ventanas de propiedades u otras herramientas que se usa para editar los valores de propiedad.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>In order to check a specific property to determine whether it has <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> available to serve as a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, call either <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para comprobar una propiedad específica para determinar si tiene <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> disponibles para que actúe como un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, llame a <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, o <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If either method returns <ph id="ph1">`null`</ph>, then the property is not a dependency property.</source>
          <target state="translated">Si cualquiera de estos métodos devuelven <ph id="ph1">`null`</ph>, a continuación, la propiedad no es una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If the method returns a valid <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , then the property is a dependency property.</source>
          <target state="translated">Si el método devuelve un válido <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , entonces la propiedad es una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">Componente para el cual se va a agregar el controlador.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">Delegado que se va a agregar como agente de escucha.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Habilita la notificación a otros objetos cuando cambia esta propiedad.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>Gets the collection of attributes for this member.</source>
          <target state="translated">Obtiene la colección de atributos de este miembro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> collection of attributes.</source>
          <target state="translated">Colección de atributos <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">Componente cuya capacidad de restablecerse se va a probar.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>Returns whether resetting an object changes its value.</source>
          <target state="translated">Devuelve un valor que indica si al restablecer un objeto, cambia su valor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si al restablecer el componente cambia su valor; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>Gets the name of the category that the member belongs to, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene el nombre de la categoría a la que pertenece el miembro, tal como se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>The name of the category to which the member belongs.</source>
          <target state="translated">Nombre de la categoría a la que pertenece el miembro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, the category name is set to the default category, <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, el nombre de categoría se establece en la categoría predeterminada, <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>Gets the type of the component this property is bound to.</source>
          <target state="translated">Obtiene el tipo del componente al que está enlazada esta propiedad.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de componente al que está enlazada esta propiedad.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>When <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> o <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>, el objeto especificado puede ser una instancia de este tipo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">Obtiene el convertidor de tipos de esta propiedad.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que se utiliza para convertir el <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> de esta propiedad.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>This property may be <ph id="ph1">`null`</ph> in cases where the attributed <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> is not a public class.</source>
          <target state="translated">Esta propiedad puede ser <ph id="ph1">`null`</ph> en casos donde los atributos <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> no es una clase pública.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>Returns the dependency property identifier.</source>
          <target state="translated">Devuelve el identificador de la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>The dependency property identifier.</source>
          <target state="translated">Identificador de la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>This property may be <ph id="ph1">`null`</ph> if a <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> instance was created for a property that is not a dependency property.</source>
          <target state="translated">Esta propiedad puede ser <ph id="ph1">`null`</ph> si un <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> se creó la instancia para una propiedad que no es una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>Gets the description of the member, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene la descripción del miembro tal como se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>The description of the member.</source>
          <target state="translated">Descripción del miembro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, the property value is set to the default, which is an empty string ("").</source>
          <target state="translated">Si no hay ningún objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, el valor de propiedad se establece en el valor predeterminado, que es una cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Obtiene o establece una devolución de llamada que los diseñadores usan para modificar el valor vigente de una propiedad de dependencia antes de que el valor de propiedad de dependencia se almacene en el motor de propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Devolución de llamada que los diseñadores usan para modificar el valor vigente de una propiedad de dependencia antes de que el valor de propiedad de dependencia se almacene en el motor de propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>Gets whether this member should be set only at design time, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene si este miembro debe establecerse sólo en tiempo de diseño según se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this member should be set only at design time; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the member can be set during run time.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si este miembro debe establecerse sólo en tiempo de diseño; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el miembro puede establecerse en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, the return value is the default, which is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, el valor que se devuelve es el valor predeterminado, siendo éste <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>Gets the name that can be displayed in a window, such as a Properties window.</source>
          <target state="translated">Obtiene el nombre que se puede mostrar en una ventana, como la ventana Propiedades.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>The name to display for the property.</source>
          <target state="translated">Nombre que se va a mostrar para la propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> to compare with the current instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> instances for equality.</source>
          <target state="translated">Compara dos instancias de <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para determinar si sus valores son iguales.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si los valores son equivalentes; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para el nombre de propiedad especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">El nombre registrado de una propiedad de dependencia o una propiedad adjunta.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del objeto que posee la definición de propiedad.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del objeto para el que se desea establecer la propiedad.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para el nombre de propiedad especificado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> solicitado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated">El <ph id="ph1">`name`</ph> pueden hacer referencia a una propiedad de dependencia o una propiedad adjunta y es el <ph id="ph2">`name`</ph> parámetro que se pasa a la <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> llamada que define la propiedad en cuestión.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> se pasa el tipo de objeto que posee la propiedad, de nuevo como a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> es el tipo de objeto que desea establecer la propiedad.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Para las propiedades de dependencia, <ph id="ph1">`ownerType`</ph> y <ph id="ph2">`targetType`</ph> son del mismo tipo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Para las propiedades asociadas, suelen ser diferentes.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">El nombre registrado de una propiedad de dependencia o una propiedad adjunta.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del objeto que posee la definición de propiedad.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del objeto para el que se desea establecer la propiedad.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Specifies to ignore the property type.</source>
          <target state="translated">Especifica que debe omitirse el tipo de propiedad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para el nombre de propiedad especificado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> solicitado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated">El <ph id="ph1">`name`</ph> pueden hacer referencia a una propiedad de dependencia o una propiedad adjunta y es el <ph id="ph2">`name`</ph> parámetro que se pasa a la <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> llamada que define la propiedad en cuestión.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> se pasa el tipo de objeto que posee la propiedad, de nuevo como a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> es el tipo de objeto que desea establecer la propiedad.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Para las propiedades de dependencia, <ph id="ph1">`ownerType`</ph> y <ph id="ph2">`targetType`</ph> son del mismo tipo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Para las propiedades asociadas, suelen ser diferentes.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> based either on a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> or a provided type, depending on the signature used.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> basándose en el objeto <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> especificado o el tipo proporcionado, según la signatura utilizada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to check.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para el objeto <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>If the property described by <ph id="ph1">&lt;paramref name="property" /&gt;</ph> is a dependency property, returns a valid <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Si la propiedad descrita por el parámetro <ph id="ph1">&lt;paramref name="property" /&gt;</ph> es una propiedad de dependencia, devuelve una clase <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> válida.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Otherwise, returns a <ph id="ph1">&lt;see langword="null" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">De lo contrario, devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>This method is the primary method used by designer applications to obtain a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> on basis of checking all properties for a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método es el método principal usado por aplicaciones de diseñador para obtener un <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> en función de la comprobación de todas las propiedades de un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The identifier for a dependency property.</source>
          <target state="translated">Identificador de una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The type of the object where the property is set.</source>
          <target state="translated">Tipo del objeto en el que está establecida la propiedad.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided dependency property and target type.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para un tipo de destino y una propiedad de dependencia proporcionados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for the provided dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para la propiedad de dependencia proporcionada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The <ph id="ph1">`dependencyProperty`</ph> may refer to a dependency property or an attached property.</source>
          <target state="translated">El <ph id="ph1">`dependencyProperty`</ph> pueden hacer referencia a una propiedad de dependencia o una propiedad adjunta.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> es el tipo de objeto que desea establecer la propiedad.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For dependency properties, that type is equivalent to the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> for the <ph id="ph2">`dependencyProperty`</ph>.</source>
          <target state="translated">Para las propiedades de dependencia, que el tipo es equivalente a la <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> para el <ph id="ph2">`dependencyProperty`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For attached properties the <ph id="ph1">`targetType`</ph> is typically some other <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> type.</source>
          <target state="translated">Para propiedades adjuntas el <ph id="ph1">`targetType`</ph> suele ser otro <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades que coinciden con los atributos especificados del componente especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">Tipo base del editor que se utiliza para diferenciar entre varios editores compatibles con una propiedad.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">Obtiene un editor del tipo especificado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">Instancia del tipo de editor solicitado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún editor.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Devuelve el código hash de este objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>The hash code for <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> is based both on the identifier for a dependency property and on the type on which it is set.</source>
          <target state="translated">El código hash de <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> se basa en el identificador para una propiedad de dependencia y el tipo en el que se establece.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>This implementation assures that a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</source>
          <target state="translated">Esta implementación garantiza que un <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> no devuelve el mismo código hash para las propiedades que son heredadas por las clases derivadas posibles muchos o para las propiedades que en caso contrario, se reasignará a través del sistema de propiedad incorrecto.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The component instance.</source>
          <target state="translated">Instancia del componente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>Resturns the current value of the property on a component.</source>
          <target state="translated">Devuelve el valor actual de la propiedad en un componente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The requested value.</source>
          <target state="translated">Valor solicitado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source>Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</source>
          <target state="translated">Obtiene un valor que indica si la propiedad está registrada como una propiedad adjunta y se usa de modo adjunto.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is an attached property; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si la propiedad es una propiedad adjunta; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>Gets a value that indicates the value of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> on the property.</source>
          <target state="translated">Obtiene un valor que indica el valor de <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> was specified on the property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se especificó <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> en la propiedad; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si esta propiedad se debe traducir, según se especifica en <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> constructor of the value true; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el miembro está marcado con el constructor <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> del valor true; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Gets a value indicating whether this property is read-only.</source>
          <target state="translated">Obtiene un valor que indica si esta propiedad es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propiedad es de sólo lectura; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Dependency properties are registered as read-only using particular method calls, and by convention the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</source>
          <target state="translated">Propiedades de dependencia se registran como de solo lectura mediante llamadas al método concreto y por convención la <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> propiedades de contenedor que son las propiedades vistas mediante la reflexión y los descriptores también deben ser de solo lectura.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</source>
          <target state="translated">Sin embargo, puesto que se trata de una convención y no es un requisito para compilar, puede volver a comprobar el estado de solo lectura del identificador de propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>To do this, get the identifier (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) value for this <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> and then check the value of <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</source>
          <target state="translated">Para ello, obtenga el identificador (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) valor de este <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> y, a continuación, compruebe el valor de <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> is on the identifier itself, not metadata.</source>
          <target state="translated">Tenga en cuenta que el <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> se encuentra en el identificador, no los metadatos.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Gets the metadata associated with the dependency property.</source>
          <target state="translated">Obtiene los metadatos asociados a la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The dependency property metadata.</source>
          <target state="translated">Metadatos de la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The value can be <ph id="ph1">`null`</ph> if there is  no metadata or if the property is not a dependency property.</source>
          <target state="translated">El valor puede ser <ph id="ph1">`null`</ph> si no hay ningún metadato o si la propiedad no es una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Metadata that has matching concepts in <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> attributes is re-exposed as attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> collection.</source>
          <target state="translated">Metadatos que tienen la coincidencia de los conceptos en <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> atributos se vuelven a exponer como atributos en el <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>Gets the represented <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated">Obtiene la clase <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representada de la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> that the dependency property was registered with.</source>
          <target state="translated">Esta propiedad devuelve el <ph id="ph1">&lt;xref:System.Type&gt;</ph> que la propiedad de dependencia se registró con.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">Componente para el cual se va a agregar el controlador.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">Delegado que se va a agregar como agente de escucha.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Habilita la notificación a otros objetos cuando cambia esta propiedad.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">Componente cuyo valor de propiedad se va a restablecer en el valor predeterminado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>Resets the value for this property of the component to the default value.</source>
          <target state="translated">Restablece el valor de esta propiedad del componente en el valor predeterminado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">Componente con el valor de propiedad que se va a establecer.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">Nuevo valor.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Sets the value of the component to a different value.</source>
          <target state="translated">Establece el valor del componente en otro valor.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Este método se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">Componente con la propiedad cuya persistencia se va a examinar.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Indicates whether the value of this property needs to be persisted by serialization processes.</source>
          <target state="translated">Indica si se debe conservar el valor de esta propiedad mediante procesos de serialización.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se debe almacenar la propiedad; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Indica si las notificaciones de cambio de valor de esta propiedad pueden originarse fuera del descriptor de la propiedad (por ejemplo, en el propio componente) o si se originarán únicamente en las llamadas directas al método <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si las notificaciones de esta propiedad pueden originarse fuera del descriptor de la propiedad (por ejemplo, en el propio componente).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if notifications will only originate from direct calls made to <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="false" /&gt;</ph> si las notificaciones se originarán únicamente en las llamadas directas realizadas al método <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>For example, for the <ph id="ph1">`true`</ph> case, the component may implement the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph3">`propertyName.Changed`</ph> event for this property.</source>
          <target state="translated">Por ejemplo, para la <ph id="ph1">`true`</ph> caso, el componente puede implementar la <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> tener explícito o interfaz <ph id="ph3">`propertyName.Changed`</ph> eventos para esta propiedad.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propiedad se basa en subyacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Convierte el valor de esta instancia en la representación de cadena equivalente.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Returns the <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph> value.</source>
          <target state="translated">Devuelve el valor de <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>