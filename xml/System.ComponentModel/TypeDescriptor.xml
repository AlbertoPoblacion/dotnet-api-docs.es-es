<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptor.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5968d329f2f177601a519db6bf1860db9d9f3c359.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">968d329f2f177601a519db6bf1860db9d9f3c359</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">Proporciona información sobre las características de un componente, como sus atributos, propiedades y eventos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> namespace, and the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">.NET Framework proporciona dos maneras de acceder a los metadatos en un tipo: la reflexión API se proporciona en el <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> espacio de nombres y la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method of the root <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
          <target state="translated">Reflexión es un mecanismo general disponible para todos los tipos porque su base se establece en el <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> método de la raíz <ph id="ph2">&lt;xref:System.Object&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">La información que devuelve para un tipo no es extensible, en que no se puede modificar después de la compilación del tipo de destino.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obtener más información, vea los temas de <bpt id="p1">[</bpt>reflexión<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>In contrast, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> is an extensible inspection mechanism for components: those classes that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated">En cambio, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> es un mecanismo de inspección extensible para componentes: las clases que implementan la <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">A diferencia de la reflexión, no inspecciona los métodos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> can be dynamically extended by several services available through the target component's <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> se puede extender dinámicamente mediante varios servicios disponibles a través del componente de destino <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The following table shows these services.</source>
          <target state="translated">La tabla siguiente muestran estos servicios.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Service name</source>
          <target state="translated">Nombre del servicio</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another class, such as <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, to provide extra properties to a component.</source>
          <target state="translated">Habilita otra clase, como <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, para proporcionar propiedades adicionales a un componente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another object to modify the standard metadata that is exposed by a component.</source>
          <target state="translated">Permite que otro objeto modificar los metadatos estándar que exponen un componente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Permite que una clase completa y dinámicamente especificar sus propios metadatos, reemplazando el mecanismo de inspección estándar de <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The extensibility provided by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> allows the design-time representation of a component to differ from its actual run-time representation, which makes <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> useful for building design-time infrastructure.</source>
          <target state="translated">La extensibilidad proporcionada por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> permite la representación en tiempo de diseño de un componente difiera de su representación de tiempo de ejecución real, lo que hace <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> útil para la creación de infraestructura en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>All the methods in <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> are <ph id="ph2">`static`</ph>.</source>
          <target state="translated">Todos los métodos de <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> son <ph id="ph2">`static`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">No se puede crear una instancia de esta clase y esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">Puede establecer la propiedad y valores de dos formas diferentes de los eventos: especificar las credenciales en la clase del componente o cambiarlos en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Because you can set these values two ways, the overloaded methods of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">Dado que puede establecer estos valores de los métodos sobrecargados de dos maneras <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> toman dos tipos diferentes de parámetros: un tipo de clase o una instancia de objeto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>When you want to access <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">Si desea obtener acceso a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> información y tiene una instancia del objeto, utilice el método que llama a un componente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">Utilice el método que llama al tipo de clase sólo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Propiedades y eventos se almacenan en caché por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para acelerar el proceso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">Normalmente, son constantes durante la vigencia de un objeto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>If this is the case, then the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method must be called to update the cache.</source>
          <target state="translated">Si este es el caso, el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> método debe llamarse para actualizar la memoria caché.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds class-level attributes to the target component.</source>
          <target state="translated">Agrega atributos de nivel de clase para el componente de destino.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a agregar a la clase del componente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">Agrega atributos de nivel de clase para la instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> recién creado que se usó para agregar los atributos especificados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> método agrega atributos de nivel de clase a la instancia especificada de un componente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">Dado que se trata de un requisito común de las aplicaciones que usan el <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Diseñador de Windows Forms y la ventana Propiedades, este método proporciona un acceso directo mediante la creación de un proveedor de descripción de tipo que combina los atributos proporcionados con los atributos que ya existen en la clase.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">El valor devuelto es el proveedor de descripciones de tipo que se usó para agregar los atributos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">Este proveedor se puede pasar después a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método cuando ya no son necesarios los atributos agregados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a agregar a la clase del componente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">Agrega atributos de nivel de clase para el tipo de componente de destino.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> recién creado que se usó para agregar los atributos especificados.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified type of a component.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> método agrega atributos de nivel de clase para el tipo de un componente especificado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">Dado que se trata de un requisito común de las aplicaciones que usan el <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Diseñador de Windows Forms y la ventana Propiedades, este método proporciona un acceso directo mediante la creación de un proveedor de descripción de tipo que combina los atributos proporcionados con los atributos que ya existen en la clase.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">El valor devuelto es el proveedor de descripciones de tipo que se usó para agregar los atributos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">Este proveedor se puede pasar después a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método cuando ya no son necesarios los atributos agregados.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">El tipo base del editor para agregar la tabla de editor.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">Si ya existe una tabla de este tipo, este método no hará nada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> que se va a agregar.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">Agrega una tabla de editor para el tipo base del editor determinado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> method adds an editor table for the given editor base type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> método agrega una tabla de editor para el tipo base del editor determinado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">Normalmente, los editores se especifican como metadatos en un componente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">Sin embargo, si no hay metadatos para un editor solicitado base tipo puede encontrarse en el componente, el asociado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> buscará una tabla de editor para el tipo de editor, si no se encuentra uno.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">Una vez que se ha agregado una tabla de editor a un descriptor de tipos, no se puede quitar y pertenece al descriptor de tipos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">El descriptor de tipo libremente puede realizar modificaciones en esta tabla.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">El formato de una tabla de editor utiliza tipos de datos como claves y los editores como valores.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">La parte del valor de una entrada en la tabla representa una instancia del editor.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>It can have one of three values.</source>
          <target state="translated">Puede tener uno de tres valores.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">Si contiene una cadena, el descriptor de tipo asumirá que se trata de un nombre completo de un tipo y, a continuación, carga el tipo para el objeto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">Si contiene un tipo, se creará una instancia de este tipo para obtener un editor.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">Por último, la parte de valor puede contener una instancia del editor de valores reales.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">Si el descriptor de tipo resuelve un editor en una instancia, almacenará la instancia en la tabla para un uso futuro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos a la lista de proveedores para este descriptor de tipos.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a agregar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos para una sola instancia de un componente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método agrega un proveedor de descripción de tipo que proporciona información de tipo para una única instancia de un componente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If a provider is added by this method, the provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will not be called because the instance already exists.</source>
          <target state="translated">Si se agrega un proveedor de este método, el proveedor del <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> método no se llamará porque la instancia ya existe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">Este método no mantiene una referencia completa al componente, por lo que no impide que el componente finalizando.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">Es posible agregar varios proveedores de descripción de tipos para el mismo tipo u objeto.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">Si esto ocurre, se utilizará exclusivamente el primer tipo proveedor de descripciones encontrado que proporciona información de tipo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">Puesto que los proveedores de información de tipo se almacenan en una pila, el último proveedor agregado será la primera de ellas consultada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">Este comportamiento permite la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> proveedores de descripción de tipos de métodos que se usarán para insertar y extraer según sea necesario para escenarios concretos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> method on the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">Si realiza correctamente, este método llama a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> método en el <ph id="ph2">`instance`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">Resultados de las dos versiones de este método con ámbitos diferentes.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> método que toma un <ph id="ph2">&lt;xref:System.Object&gt;</ph> parámetro afecta únicamente a esa única instancia del componente especificado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">En cambio, la otra sobrecarga, que toma un <ph id="ph1">&lt;xref:System.Type&gt;</ph> parámetro, afecta a todas las instancias del componente descrito por ese tipo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método si tiene que llamar desde código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a agregar.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos para una clase de componente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método agrega un proveedor de descripción de tipo que proporciona información de tipo para la clase especificada, las clases derivadas y todas las instancias de estos tipos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated">El <ph id="ph1">`type`</ph> parámetro puede ser cualquier tipo, incluida una interfaz.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">Por ejemplo, para proporcionar información de instancia para todos los componentes y tipo personalizado, especifique <ph id="ph1">`typeof(IComponent)`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">Pasar <ph id="ph1">`typeof(object)`</ph> llamará al proveedor para proporcionar información de tipo para todos los tipos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">Este método no mantiene una referencia completa a cualquier objeto, por lo que no impide que los objetos finalizando.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">Es posible agregar varios proveedores de descripción de tipos para el mismo tipo u objeto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">Si esto ocurre, se utilizará exclusivamente el primer tipo proveedor de descripciones encontrado que proporciona información de tipo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">Dado que los proveedores de información de tipo se almacenan en una pila, el último proveedor agregado será la primera de ellas consultada.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">Este comportamiento permite la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> proveedores de descripción de tipos de métodos que se usarán para insertar y extraer según sea necesario para escenarios concretos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> method on the <ph id="ph2">`type`</ph> parameter.</source>
          <target state="translated">Si realiza correctamente, este método llama a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> método en el <ph id="ph2">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">Resultados de las dos versiones de este método con ámbitos diferentes.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> método que toma un <ph id="ph2">&lt;xref:System.Object&gt;</ph> parámetro afecta únicamente a esa única instancia del componente especificado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">En cambio, la otra sobrecarga, que toma un <ph id="ph1">&lt;xref:System.Type&gt;</ph> parámetro, afecta a todas las instancias del componente descrito por ese tipo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método si tiene que llamar desde código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos a la lista de proveedores para este descriptor de tipos.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a agregar.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos para una sola instancia de un componente.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Se puede llamar a este método desde el código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> está definido, el llamador puede registrar un proveedor para la instancia especificada si su tipo es también parcialmente confiable.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método si no es necesario llamar a código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">Para acceder al registro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">Tipo asociado: el <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que requiere el ensamblado que define el <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> tipo del parámetro.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a agregar.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">Agrega un proveedor de descripción de tipos para una clase de componente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Se puede llamar a este método desde el código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> está definido, el llamador puede registrar un proveedor para el tipo especificado si también es de confianza parcial.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método si no es necesario llamar a código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">Para acceder al registro.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Tipo asociado: el <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que requiere el ensamblado que define <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">Obtiene o establece el proveedor de la información de tipo de Modelo de objetos componentes (COM) del componente de destino.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> instance representing the COM type information provider.</source>
          <target state="translated">Una instancia de <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> que representa el proveedor de información de tipos COM.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface are obsolete.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> propiedad y el <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interfaz están obsoletos.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property.</source>
          <target state="translated">Para obtener más información, vea la propiedad <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">Obtiene el tipo del objeto del Modelo de objetos componentes (COM) representado por el componente de destino.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the COM object represented by this component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> for non-COM objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del objeto del COM representado por este componente o <ph id="ph2">&lt;see langword="null" /&gt;</ph> para objetos que no son del COM.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property returns a type that can be passed to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method to define a type description provider for COM types.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> propiedad devuelve un tipo que puede pasarse a la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método para definir un proveedor de descripción de tipos para los tipos COM.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property and other members in this class replace the functionality in the obsolete <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> propiedad y otros miembros de esta clase reemplazan la funcionalidad en el atributo obsolete <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>To implement a mapping layer between a COM object and <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, add a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> to handle type <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</source>
          <target state="translated">Para implementar un nivel de asignación entre un objeto COM y <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, agregue un <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> para controlar el tipo <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> principal.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> secundario.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">Crea una asociación principal-secundario entre dos objetos.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method creates an association between a primary and a secondary object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> método crea una asociación entre un elemento principal y un objeto secundario.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">Una vez creada una asociación, un diseñador u otro mecanismo de filtrado puede agregar propiedades que se enrutan a cualquiera de los objetos en el conjunto de propiedades del objeto primario.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>When a property invocation is made against the primary object, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">Cuando se realiza una llamada a una propiedad en el objeto principal, el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> se llamará el método para resolver la instancia del objeto real que está relacionada con su parámetro de tipo.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no evita que cualquiera de los objetos que se finalizan y recolección de elementos no utilizados reclame.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is equal to <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> es igual a <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that specifies the component to associate with the designer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> que especifica el componente que se va a asociar al diseñador.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of designer to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de diseñador que se va a crear.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">Crea una instancia del diseñador asociada al componente especificado y del tipo especificado del diseñador.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph> that is an instance of the designer for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no designer can be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph> que es una instancia del diseñador para el componente, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún diseñador.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If this method cannot find a valid <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, it searches up the class hierarchy for a designer.</source>
          <target state="translated">Si este método no puede encontrar un válido <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, busca hacia arriba en la jerarquía de clase para un diseñador.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si no encuentra un diseñador en la jerarquía de clases, devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new event descriptor that is identical to an existing event descriptor.</source>
          <target state="translated">Crea un descriptor de eventos nuevo que es idéntico a otro existente.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">El tipo de componente para el que se va a crear el nuevo evento.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The existing event information.</source>
          <target state="translated">Información del evento existente.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The new attributes.</source>
          <target state="translated">Los nuevos atributos.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</source>
          <target state="translated">Crea un descriptor de eventos nuevo que es idéntico a otro existente, cuando se pasa al <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> existente.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">Un nuevo <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> que ha combinado los atributos de metadatos especificados con los atributos de metadatos existentes.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Obligatorio para inspeccionar a los miembros no públicos del componente.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Vincular el acceso a petición necesario para <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> tipo <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the component the event lives on.</source>
          <target state="translated">Tipo del componente en el que se encuentra el evento.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">Nombre del evento.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">Tipo de delegado que controla el evento.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The attributes for this event.</source>
          <target state="translated">Atributos para este evento.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">Crea un nuevo descriptor de eventos que es idéntico a otro existente generando dinámicamente la información del descriptor desde un evento especificado en un tipo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that is bound to a type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> enlazado a un tipo.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Obligatorio para inspeccionar a los miembros no públicos del componente.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Vincular el acceso a petición necesario para <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> tipo <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The service provider that provides a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> service.</source>
          <target state="translated">El proveedor de servicios que ofrece un servicio <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of object to create.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>que se va a crear.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">Matriz opcional de tipos de parámetros que se pasarán al constructor del objeto.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an array of zero length.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> o una matriz de longitud cero.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">Matriz opcional de valores de parámetros que se pasarán al constructor del objeto.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the number of elements must be the same as <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Si no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, el número de elementos debe ser el mismo que <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">Crea un objeto que puede sustituir a otro tipo de datos.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An instance of the substitute data type if an associated <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> is found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Instancia del tipo de datos de sustituto si se encuentra un asociado <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>; en caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will search for a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> that is associated with the specified <ph id="ph3">`objectType`</ph> data type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> método buscará un <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> que está asociado con los valores especificados <ph id="ph3">`objectType`</ph> tipo de datos.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">Este método primero intenta obtener un proveedor de descripción de tipos desde el <ph id="ph1">`provider`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</source>
          <target state="translated">Si se produce un error, busca en sus propias tablas internas para un proveedor (estas entradas se crean a través de las llamadas anteriores a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">Si encuentra un proveedor, este método va a delegar la llamada de creación a ese objeto.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="args" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> when <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> is not <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>, o <ph id="ph3">&lt;paramref name="args" /&gt;</ph> es <ph id="ph4">&lt;see langword="null" /&gt;</ph> cuando <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> no es <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> and <ph id="ph2">&lt;paramref name="args" /&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> y <ph id="ph2">&lt;paramref name="args" /&gt;</ph> tienen un número diferente de elementos.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class does not provide a substitute instance, this method should call the base implementation.</source>
          <target state="translated">Si la clase derivada no proporciona una instancia suplente, este método debe llamar a la implementación base.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new property descriptor for an existing property of a component.</source>
          <target state="translated">Crea un nuevo descriptor de propiedad para una propiedad existente de un componente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente del que es miembro la propiedad.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The existing property descriptor.</source>
          <target state="translated">El descriptor de la propiedad existente.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">Los nuevos atributos de esta propiedad.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> and attribute array.</source>
          <target state="translated">Crea un nuevo descriptor de propiedad a partir de un descriptor de propiedad existente, usando el <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> especificado existente y la matriz de atributos.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">Un nuevo <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que tiene los atributos de metadatos especificados combinados con los atributos de metadatos existentes.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Obligatorio para inspeccionar a los miembros no públicos del componente.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Vincular el acceso a petición necesario para <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> tipo <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente del que es miembro la propiedad.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">Nombre de la propiedad.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">Los nuevos atributos de esta propiedad.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">Crea y enlaza de forma dinámica un descriptor de propiedad a un tipo, mediante el nombre de propiedad especificado, el tipo y la matriz de atributos.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que está enlazado al tipo especificado y que tiene los atributos de metadatos especificados combinados con los atributos de metadatos existentes.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Obligatorio para inspeccionar a los miembros no públicos del componente.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Vincular el acceso a petición necesario para <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> tipo <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The primary object of the association.</source>
          <target state="translated">El objeto principal de la asociación.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">Devuelve una instancia del tipo asociado al objeto principal especificado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <ph id="ph1">&lt;paramref name="primary" /&gt;</ph> if no specified association exists.</source>
          <target state="translated">Si existe una asociación, instancia del tipo secundario que se ha asociado al objeto principal; de lo contrario, si no hay ninguna asociación especificada, <ph id="ph1">&lt;paramref name="primary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method, then the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">Si se ha realizado una asociación anterior el <ph id="ph1">`type`</ph> parámetro con el <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> método, la <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> método devuelve el objeto secundario correcto para invocar el tipo solicitado.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> searches for a compatible designer for <ph id="ph2">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">En caso contrario, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> busca un diseñador compatible para <ph id="ph2">`type`</ph> y devuelve el diseñador si encuentra alguno.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Este método nunca devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no impide que el objeto primario o secundario que se va a finalizar y recolección de elementos no utilizados reclame.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of attributes for a component or a type.</source>
          <target state="translated">Devuelve la colección de atributos para un componente o un tipo.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">El componente para el que desea obtener atributos.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">Devuelve la colección de atributos para el componente especificado.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> containing the attributes for the component.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> que contiene los atributos para el componente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>, este método devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original component's source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">Los atributos devueltos por la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> método puede modificarse dinámicamente de origen del componente original enumerar proveedores extensores (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filtrar servicios (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>) y filtros de atributo.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Cuando se define un atributo personalizado con <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> establecido en <ph id="ph2">`true`</ph>, es necesario reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad para que sea único.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Si todas las instancias del atributo son únicas, reemplazar <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> para devolver la identidad de objeto del atributo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Si sólo algunas instancias del atributo son únicas, devolver un valor de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> que devolvería igualdad en esos casos.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para estos atributos, devolver el valor del parámetro de constructor de la <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">La implementación predeterminada de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> devuelve la identidad de tipo independientemente del valor de la <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para devolver varias instancias de un <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> de atributo de la <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, el atributo debe reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> method.</source>
          <target state="translated">Para obtener un ejemplo de este método, consulte el <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">Devuelve una colección de atributos para el tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the type of the component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> con los atributos del tipo del componente.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Si el componente es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, este método devolverá una colección vacía.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For attributes with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">Para los atributos con <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> establecido en <ph id="ph2">`true`</ph>, la colección de atributos quita las instancias duplicadas.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>These are instances in which the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property returns equal values.</source>
          <target state="translated">Se trata de instancias en las que el <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad devuelve valores iguales.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Cuando se define un atributo personalizado con <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> establecido en <ph id="ph2">`true`</ph>, es necesario reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad para que sea único.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Si todas las instancias del atributo son únicas, reemplazar <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> para devolver la identidad de objeto del atributo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Si sólo algunas instancias del atributo son únicas, devolver un valor de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> que devolvería igualdad en esos casos.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para estos atributos, devolver el valor del parámetro de constructor de la <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">La implementación predeterminada de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> devuelve la identidad de tipo independientemente del valor de la <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para devolver varias instancias de un <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> de atributo de la <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, el atributo debe reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">El componente para el que desea obtener atributos.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a baseline set of attributes from the custom type descriptor if <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para usar un conjunto de línea de base de atributos del descriptor de tipos personalizado si <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> es de tipo <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">Devuelve una colección de atributos para el componente especificado y un valor booleano que indica que se ha creado un descriptor de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> con los atributos del componente.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Si el componente es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, este método devolverá una colección vacía.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original components source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">Los atributos devueltos por la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> método puede modificarse dinámicamente desde el origen inicial de componentes enumerar proveedores extensores (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filtrar servicios (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>) y filtros de atributo.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Cuando se define un atributo personalizado con <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> establecido en <ph id="ph2">`true`</ph>, es necesario reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad para que sea único.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Si todas las instancias del atributo son únicas, reemplazar <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> para devolver la identidad de objeto del atributo.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Si sólo algunas instancias del atributo son únicas, devolver un valor de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> que devolvería igualdad en esos casos.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para estos atributos, devolver el valor del parámetro de constructor de la <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">La implementación predeterminada de <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> devuelve la identidad de tipo independientemente del valor de la <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para devolver varias instancias de un <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> de atributo de la <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, el atributo debe reemplazar el <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the class for the specified component.</source>
          <target state="translated">Devuelve el nombre de la clase del componente especificado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> para el que se desea obtener el nombre de clase.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">Devuelve el nombre de la clase para el componente especificado usando el descriptor de tipo predeterminado.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre de la clase para el componente especificado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">Normalmente, este método devuelve el completo <ph id="ph1">&lt;xref:System.Type&gt;</ph> nombre para el <ph id="ph2">`component`</ph> tipo de parámetro.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>If <ph id="ph1">`component`</ph> implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> implementa <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, puede devolver un nombre alternativo.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Este método es equivalente a sobrecargado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> método con un segundo parámetro de <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">Devuelve el nombre de la clase del tipo especificado.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre de la clase para el tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">Este método utiliza el descriptor de tipos personalizado almacenado en caché para el tipo especificado para detectar el nombre de clase asociada.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> para el que se desea obtener el nombre de clase.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">Devuelve el nombre de la clase especifica usando el descriptor de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre de la clase para el componente especificado.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">Normalmente, este método devuelve el completo <ph id="ph1">&lt;xref:System.Type&gt;</ph> nombre para el <ph id="ph2">`component`</ph> tipo de parámetro.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> parámetro implementa <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, puede devolver un nombre alternativo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the specified component.</source>
          <target state="translated">Devuelve el nombre del componente especificado.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> para el que se desea obtener el nombre de clase.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">Devuelve el nombre del componente especificado usando el descriptor de tipo predeterminado.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the specified component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre del componente especificado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay ningún nombre de componente.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">Normalmente, este método devuelve el nombre para el sitio del componente, si existe alguno.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Este método es equivalente a sobrecargado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> método con un segundo parámetro de <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">Este método se utiliza en tiempo de diseño para recuperar el nombre de una instancia de un componente.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> para el que se desea obtener el nombre de clase.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">Devuelve el nombre del componente especificado usando el descriptor de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The name of the class for the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">Nombre de la clase para el componente especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no hay ningún nombre de componente.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">Este método se utiliza en tiempo de diseño para recuperar el nombre de una instancia de un componente.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">Normalmente, este método devuelve el nombre para el sitio del componente, si existe alguno.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>If the component implements the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, it can return an alternate name.</source>
          <target state="translated">Si el componente implementa la <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interfaz, puede devolver un nombre alternativo.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a type converter for a component or a type.</source>
          <target state="translated">Devuelve un convertidor de tipos para un componente o un tipo.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A component to get the converter for.</source>
          <target state="translated">Componente para el que obtener el convertidor.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">Devuelve un convertidor de tipos para el tipo del componente especificado.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el componente especificado.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method locates an appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Este método busca un convertidor de tipos apropiado buscando un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Si no encuentra un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Este método es equivalente a sobrecargado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> método con un segundo parámetro de <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Para obtener un ejemplo del uso de este método, consulte la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">Devuelve un convertidor de tipos para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>This method looks for the appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Este método busca el convertidor de tipos apropiado buscando un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Si no encuentra un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A component to get the converter for.</source>
          <target state="translated">Componente para el que obtener el convertidor.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">Devuelve un convertidor de tipos para el tipo del componente especificado con un descriptor de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el componente especificado.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>This method looks for the appropriate type converter by trying to find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Este método busca el convertidor de tipos adecuada, intentando encontrar un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Si no encuentra un <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default event for a component or type.</source>
          <target state="translated">Devuelve el evento predeterminado para un componente o tipo.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>The component to get the event for.</source>
          <target state="translated">Componente para el que obtener el evento.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">Devuelve el evento predeterminado para el componente especificado.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con el evento predeterminado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay eventos.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Este método es equivalente a sobrecargado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> método con un segundo parámetro de <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">Devuelve el evento predeterminado para el tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con el evento predeterminado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay eventos.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>The component to get the event for.</source>
          <target state="translated">Componente para el que obtener el evento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">Devuelve el evento predeterminado para un componente con un descriptor de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con el evento predeterminado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay eventos.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default property for a component.</source>
          <target state="translated">Devuelve la propiedad predeterminada de un componente.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>The component to get the default property for.</source>
          <target state="translated">Componente para el que obtener la propiedad predeterminada.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">Devuelve la propiedad predeterminada para el componente especificado.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con la propiedad predeterminada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay propiedades.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> parámetro es <ph id="ph2">`null`</ph>, este método devuelve <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class to get the property for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa la clase de la que se va a obtener la propiedad.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">Devuelve la propiedad predeterminada para el tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con la propiedad predeterminada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay propiedades.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`componentType`</ph> parámetro es <ph id="ph2">`null`</ph>, este método devuelve <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>The component to get the default property for.</source>
          <target state="translated">Componente para el que obtener la propiedad predeterminada.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">Devuelve la propiedad predeterminada para el componente especificado con un descriptor de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> con la propiedad predeterminada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay propiedades.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> parámetro es <ph id="ph2">`null`</ph>, este método devuelve <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns an editor with the specified base type.</source>
          <target state="translated">Devuelve un editor con el tipo base especificado.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The component to get the editor for.</source>
          <target state="translated">Componente para el que se obtendrá el editor.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo base del editor que se desea buscar.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">Obtiene un editor con el tipo base especificado para el componente especificado.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Instancia del editor que se puede convertir al tipo de editor especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede encontrar ningún editor del tipo solicitado.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">El tipo de <ph id="ph1">`editorBaseType`</ph> suele ser <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, pero también puede utilizar otros tipos (por ejemplo, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> y <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">Puede definir varios editores para una propiedad.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">Utilice este método para seleccionar el editor que desea utilizar.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="component" /&gt;</ph> o <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you are trying to find.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo base del editor que se intenta buscar.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">Devuelve un editor con el tipo base especificado para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>An instance of the editor object that can be cast to the given base type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Instancia del objeto de editor que se puede convertir al tipo base especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede encontrar ningún editor del tipo solicitado.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">El tipo de <ph id="ph1">`editorBaseType`</ph> suele ser <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, pero también puede utilizar otros tipos (por ejemplo <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> y <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">Puede definir varios editores para un tipo.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">Utilice este método para seleccionar el que desea usar.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="type" /&gt;</ph> o <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The component to get the editor for.</source>
          <target state="translated">Componente para el que se obtendrá el editor.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo base del editor que se desea buscar.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">Marca que indica si se debe considerar la información de descripción de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">Devuelve un editor con el tipo base especificado y con un descriptor de tipos personalizado para el componente especificado.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Instancia del editor que se puede convertir al tipo de editor especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede encontrar ningún editor del tipo solicitado.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">El tipo de <ph id="ph1">`editorBaseType`</ph> suele ser <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, pero también puede utilizar otros tipos (por ejemplo <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> y <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">Puede definir varios editores para una propiedad.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">Utilice este método para seleccionar el editor que desea utilizar.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="component" /&gt;</ph> o <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of events for a component or type.</source>
          <target state="translated">Devuelve la colección de eventos para un componente o tipo.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>A component to get the events for.</source>
          <target state="translated">Componente para el que se van a obtener eventos.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">Devuelve la colección de eventos para el componente especificado.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos para este componente.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">Recupera una colección de eventos que el determinado <ph id="ph1">`component`</ph> proporciona la instancia del parámetro.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">Esta colección puede diferir del conjunto de eventos de que la clase proporciona.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> se basa en un parámetro, el sitio puede agregar o quitar eventos adicionales.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, a continuación, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">Para obtener un ejemplo de este método, consulte el <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">Devuelve la colección de eventos para un tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos para este componente.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`componentType`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A component to get the events for.</source>
          <target state="translated">Componente para el que se van a obtener eventos.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se puede utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve la colección de eventos de un componente especificado usando una matriz de atributos especificada como filtro.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos que coinciden con los atributos especificados de este componente.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Los eventos para el <ph id="ph1">`component`</ph> parámetro puede diferir de los eventos de una clase, porque el sitio puede agregar o quitar eventos si el <ph id="ph2">`component`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz puede tener una combinación de <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> se trata como un carácter comodín; coincide con cualquier evento que tiene el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Si un evento no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, el evento no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en el evento.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">Componente para el que se van a obtener eventos.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">Devuelve la colección de eventos para un componente especificado con un descriptor de tipos personalizado.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos para este componente.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">Este método recupera una colección de eventos que el determinado <ph id="ph1">`component`</ph> proporciona la instancia del parámetro.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">Este puede ser diferente del conjunto de eventos de que la clase proporciona.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> se basa en un parámetro, el sitio puede agregar o quitar eventos adicionales.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se puede utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve la colección de eventos de un tipo de componente especificado usando una matriz de atributos especificada como filtro.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos que coinciden con los atributos especificados de este componente.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz de parámetros puede tener una combinación de <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> se trata como un carácter comodín; coincide con cualquier evento que tiene el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Si un evento no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, el evento no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en el evento.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`componentType`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">Componente para el que se van a obtener eventos.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">Devuelve la colección de eventos de un componente especificado usando una matriz de atributos especificada como filtro y usando un descriptor de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> con los eventos que coinciden con los atributos especificados de este componente.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Los eventos para el <ph id="ph1">`component`</ph> parámetro puede diferir de los eventos de una clase, porque el sitio puede agregar o quitar eventos si el <ph id="ph2">`component`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz de parámetros puede tener una combinación de <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> se trata como un carácter comodín; coincide con cualquier evento que tiene el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Si un evento no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, el evento no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en el evento.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to find the name for.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> para el que se va a buscar el nombre.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">Devuelve el nombre completo del componente.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The fully qualified name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">Nombre completo del componente especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si el componente no tiene nombre.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>In many cases, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> method will return the same value as the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> method.</source>
          <target state="translated">En muchos casos, el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> método devolverá el mismo valor que el <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">Sin embargo, si el componente reside en un contenedor anidado o tiene otra semántica anidada, puede devolver un nombre completo distinto.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of properties on a component or type.</source>
          <target state="translated">Devuelve la colección de propiedades sobre un componente o tipo.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">Devuelve la colección de propiedades para un componente especificado.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades del componente especificado.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">Las propiedades de un componente pueden diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el componente está ubicado.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method to access the properties of a control.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método para tener acceso a las propiedades de un control.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component to get properties for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el componente para el que se van a obtener propiedades.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">Devuelve la colección de propiedades para un tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified type of component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades de un tipo de componente especificado.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`componentType`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve la colección de propiedades de un componente especificado usando como filtro una matriz de atributos especificada.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades que coinciden con los atributos especificados del componente especificado.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`component`</ph> parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`component`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz de parámetros se utiliza para filtrar la matriz.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Si <ph id="ph1">`attributes`</ph> tiene un atributo de forma predeterminada, la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar el <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para no tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">Devuelve la colección de propiedades de un componente especificado usando el descriptor de tipo predeterminado.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades de un componente especificado.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Las propiedades de la <ph id="ph1">`component`</ph> parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`component`</ph> se basa en un parámetro.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si <ph id="ph1">`component`</ph> es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">Devuelve la colección de propiedades de un tipo de componente especificado usando como filtro una matriz de atributos especificada.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades que coinciden con los atributos especificados de este tipo de componente.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz de parámetros se utiliza para filtrar la matriz.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Si <ph id="ph1">`attributes`</ph> tiene un atributo de forma predeterminada, la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`componentType`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo implementar el <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">Componente cuyas propiedades se van a obtener.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se va a utilizar como filtro.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">Devuelve la colección de propiedades de un componente especificado usando una matriz de atributos especificada como filtro y usando un descriptor de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con los eventos que coinciden con los atributos especificados del componente especificado.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">Las propiedades de un <ph id="ph1">`component`</ph> pueden diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el <ph id="ph2">`component`</ph> sitúa.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz de parámetros se utiliza para filtrar la matriz.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de la <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Si <ph id="ph1">`attributes`</ph> tiene un atributo de forma predeterminada, la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Si el <ph id="ph1">`component`</ph> parámetro es <ph id="ph2">`null`</ph>, se devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> es un objeto remoto entre procesos.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the type description provider for the component or type.</source>
          <target state="translated">Devuelve el proveedor de descripciones de tipos para el componente o tipo.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">Devuelve el proveedor de descripciones de tipos para el componente especificado.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified component.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> asociado al componente especificado.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> método siempre devolverá un proveedor de descripción de tipo.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">Incluso el valor predeterminado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementación se basa en un <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">Devuelve el proveedor de descripciones de tipos para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> asociado al tipo especificado.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> método siempre devolverá un proveedor de descripción de tipo.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">Incluso el valor predeterminado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementación se basa en un <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se puede utilizar para llevar a cabo la reflexión.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given an object.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se puede utilizar para llevar a cabo la reflexión teniendo en cuenta un objeto.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para el objeto especificado.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> método es una versión de bajo nivel de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> se utiliza normalmente para realizar la reflexión estándar en un objeto cuando ningún descriptor de tipos personalizados puede encontrarse para él.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given a class type.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se puede utilizar para realizar la reflexión teniendo en cuenta un tipo de clase.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la clase especificada.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> método es una versión de bajo nivel de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> se utiliza normalmente para realizar la reflexión estándar contra una clase cuando no puede encontrarse ningún descriptor de tipos personalizado para él.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">Obtiene un tipo que representa un proveedor de descripción de tipos para todos los tipos de interfaz.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents a custom type description provider for all interface types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa un proveedor de descripción de tipo personalizado para todos los tipos de interfaz.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that you can pass to the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods to define a type description provider for interface types.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> propiedad obtiene un <ph id="ph2">&lt;xref:System.Type&gt;</ph> objeto que se puede pasar a la <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> métodos para definir un proveedor de descripción de tipos para tipos de interfaz.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Clears the properties and events from the cache.</source>
          <target state="translated">Borra las propiedades y los eventos de la memoria caché.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">Componente para el que han cambiado las propiedades o eventos.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">Borra las propiedades y eventos para el componente especificado de la memoria caché.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Propiedades y eventos se almacenan en caché por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para acelerar el proceso.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">Normalmente, son constantes durante la vigencia de un objeto.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">En este caso, debe llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method is used only at design time.</source>
          <target state="translated">Este método sólo se usa en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>It is not used during run time.</source>
          <target state="translated">No se utiliza en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">Este método también provoca un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento cuando cambian las propiedades o los eventos de un componente.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">Este evento sólo se desencadena si se produjo una llamada anterior a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> método que la información almacenada en caché.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">Para obtener un ejemplo del uso de este método, consulte la <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that represents the assembly to refresh.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> que representa el ensamblado que se va a actualizar.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this assembly will be refreshed.</source>
          <target state="translated">Se actualizará cada <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de este ensamblado.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">Borra las propiedades y eventos para el ensamblado especificado de la memoria caché.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Propiedades y eventos se almacenan en caché por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para acelerar el proceso.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">Normalmente, son constantes durante la vigencia de un objeto.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method is used only at design time.</source>
          <target state="translated">Este método sólo se usa en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>It is not used during run time.</source>
          <target state="translated">No se utiliza en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific assembly to cache the information first.</source>
          <target state="translated">Antes de realizar una llamada a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> método para borrar la memoria caché, debe llamar a la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método para que el ensamblado específico para almacenar en caché la información en primer lugar.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">Este método también provoca un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para notificar a todas las clases que desean recibir una notificación cuando la propiedad de conjunto de cambios de un componente.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> that represents the module to refresh.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> que representa el módulo que se va a actualizar.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this module will be refreshed.</source>
          <target state="translated">Se actualizará cada <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de este módulo.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">Borra las propiedades y eventos para el módulo especificado de la memoria caché.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Propiedades y eventos se almacenan en caché por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para acelerar el proceso.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">Normalmente, son constantes durante la vigencia de un objeto.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method is used only at design time.</source>
          <target state="translated">Este método sólo se usa en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>It is not used during run time.</source>
          <target state="translated">No se utiliza en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific module to cache the information first.</source>
          <target state="translated">Antes de realizar una llamada a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> método para borrar la memoria caché, debe llamar a la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método para que el módulo específico para almacenar en caché la información en primer lugar.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">Este método también provoca un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para notificar a todas las clases que desean recibir una notificación cuando la propiedad de conjunto de cambios de un componente.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">Borra las propiedades y los eventos para el tipo especificado de la memoria caché.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Propiedades y eventos se almacenan en caché por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para acelerar el proceso.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">Normalmente, son constantes durante la vigencia de un objeto.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method is used only at design time.</source>
          <target state="translated">Este método sólo se usa en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>It is not used during run time.</source>
          <target state="translated">No se utiliza en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">Este método también provoca un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento cuando cambian las propiedades o los eventos de un componente.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">Este evento sólo se desencadena si se produjo una llamada anterior a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> método que la información almacenada en caché.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">Se produce cuando se borra la memoria caché para un componente.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For an example of using this event, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">Para obtener un ejemplo del uso de este evento, vea la <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> principal.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> secundario.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Removes an association between two objects.</source>
          <target state="translated">Quita una asociación entre dos objetos.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> method removes an association between two objects formed by the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> método quita una asociación entre dos objetos se forma el <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no tiene influencia cuando se finaliza o recolección de elementos no utilizados reclame cualquiera de los objetos.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in an association.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> principal de una asociación.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">Quita todas las asociaciones de un objeto principal.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> method removes all associations between a primary object and all of its secondary objects, created by calls to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> método quita todas las asociaciones entre un objeto principal y todos sus objetos secundarios, creados mediante llamadas a la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no tiene influencia cuando se finaliza o recolección de elementos no utilizados reclame principal de los objetos secundarios.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">Quita un proveedor de descripción de tipo agregado previamente.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a quitar.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">Quita un proveedor de descripción de tipos agregado previamente que está asociado al objeto especificado.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Este método quita un proveedor de descripción de tipos agregado previamente con el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">Si se quita un proveedor hace un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para el objeto asociado.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método si tiene que llamar desde código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a quitar.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">Quita un proveedor de descripción de tipos agregado previamente que está asociado al tipo especificado.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">Este método quita un proveedor de descripción de tipos agregado previamente con el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">Si se quita un proveedor hace un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para el tipo asociado.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método si tiene que llamar desde código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">Quita un proveedor de descripción de tipo agregado previamente.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a quitar.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Instancia del componente de destino.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">Quita un proveedor de descripción de tipos agregado previamente que está asociado al objeto especificado.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Este método quita un proveedor de descripción de tipos agregado previamente con el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">Si se quita un proveedor hace un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para el objeto asociado.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Se puede llamar a este método desde el código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> está definido, el llamador puede registrar un proveedor para la instancia especificada si su tipo es también parcialmente confiable.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> método si no es necesario llamar a código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">Para acceder al registro.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">Tipo asociado: el <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que requiere el ensamblado que define el <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> tipo del parámetro.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> que se va a quitar.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del componente de destino.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">Quita un proveedor de descripción de tipos agregado previamente que está asociado al tipo especificado.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">Este método quita un proveedor de descripción de tipos agregado previamente con el <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">Si se quita un proveedor hace un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> evento para el tipo asociado.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Se puede llamar a este método desde el código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> está definido, el llamador puede anular el registro de un proveedor para el tipo especificado si también es de confianza parcial.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> método si no es necesario llamar a código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">Para acceder al registro.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Tipo asociado: el <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que requiere el ensamblado que define <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that contains the descriptors to sort.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que contiene los descriptores que se van a ordenar.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">Ordena los descriptores usando el nombre del descriptor.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>