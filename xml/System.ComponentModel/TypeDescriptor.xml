<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b8fe91c09ff1fd148d4a705bf84c204e251f96e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36700759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="58bae-101">Proporciona información sobre las características de un componente, como sus atributos, propiedades y eventos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58bae-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span>
      </span>
      <span data-ttu-id="58bae-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58bae-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-103">.NET Framework proporciona dos maneras de acceder a los metadatos en un tipo: la reflexión API se proporciona en el <xref:System.Reflection?displayProperty=nameWithType> espacio de nombres y la <xref:System.ComponentModel.TypeDescriptor> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="58bae-104">Reflexión es un mecanismo general disponible para todos los tipos porque su base se establece en el <xref:System.Object.GetType%2A> método de la raíz <xref:System.Object> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="58bae-105">La información que devuelve para un tipo no es extensible, en que no se puede modificar después de la compilación del tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="58bae-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="58bae-106">Para obtener más información, vea los temas de [reflexión](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="58bae-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="58bae-107">En cambio, <xref:System.ComponentModel.TypeDescriptor> es un mecanismo de inspección extensible para componentes: las clases que implementan la <xref:System.ComponentModel.IComponent> interfaz.</span><span class="sxs-lookup"><span data-stu-id="58bae-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="58bae-108">A diferencia de la reflexión, no inspecciona los métodos.</span><span class="sxs-lookup"><span data-stu-id="58bae-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="58bae-109"><xref:System.ComponentModel.TypeDescriptor> se puede extender dinámicamente mediante varios servicios disponibles a través del componente de destino <xref:System.ComponentModel.Component.Site%2A>.</span><span class="sxs-lookup"><span data-stu-id="58bae-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="58bae-110">La tabla siguiente muestran estos servicios.</span><span class="sxs-lookup"><span data-stu-id="58bae-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="58bae-111">Nombre del servicio</span><span class="sxs-lookup"><span data-stu-id="58bae-111">Service name</span></span>|<span data-ttu-id="58bae-112">Descripción</span><span class="sxs-lookup"><span data-stu-id="58bae-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="58bae-113">Habilita otra clase, como <xref:System.Windows.Forms.ToolTip>, para proporcionar propiedades adicionales a un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="58bae-114">Permite que otro objeto modificar los metadatos estándar que exponen un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="58bae-115">Permite que una clase completa y dinámicamente especificar sus propios metadatos, reemplazando el mecanismo de inspección estándar de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="58bae-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="58bae-116">La extensibilidad proporcionada por <xref:System.ComponentModel.TypeDescriptor> permite la representación en tiempo de diseño de un componente difiera de su representación de tiempo de ejecución real, lo que hace <xref:System.ComponentModel.TypeDescriptor> útil para la creación de infraestructura en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="58bae-117">Todos los métodos de <xref:System.ComponentModel.TypeDescriptor> son `static`.</span><span class="sxs-lookup"><span data-stu-id="58bae-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="58bae-118">No se puede crear una instancia de esta clase y esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="58bae-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="58bae-119">Puede establecer la propiedad y valores de dos formas diferentes de los eventos: especificar las credenciales en la clase del componente o cambiarlos en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="58bae-120">Dado que puede establecer estos valores de los métodos sobrecargados de dos maneras <xref:System.ComponentModel.TypeDescriptor> toman dos tipos diferentes de parámetros: un tipo de clase o una instancia de objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="58bae-121">Si desea obtener acceso a <xref:System.ComponentModel.TypeDescriptor> información y tiene una instancia del objeto, utilice el método que llama a un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="58bae-122">Utilice el método que llama al tipo de clase sólo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-123">Propiedades y eventos se almacenan en caché por <xref:System.ComponentModel.TypeDescriptor> para acelerar el proceso.</span><span class="sxs-lookup"><span data-stu-id="58bae-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="58bae-124">Normalmente, son constantes durante la vigencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="58bae-125">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="58bae-126">Si este es el caso, el <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> método debe llamarse para actualizar la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="58bae-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-127">Agrega atributos de nivel de clase para el componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-127">Adds class-level attributes to the target component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58bae-128">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-128">An instance of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-129">Matriz de objetos <see cref="T:System.Attribute" /> que se va a agregar a la clase del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-129">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-130">Agrega atributos de nivel de clase para la instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-130">Adds class-level attributes to the target component instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-131">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> recién creado que se usó para agregar los atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-131">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-132">El <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> método agrega atributos de nivel de clase a la instancia especificada de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-132">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="58bae-133">Dado que es un requisito común de las aplicaciones que usan el Diseñador de Windows Forms de Visual Studio y la ventana Propiedades, este método proporciona un acceso directo mediante la creación de un proveedor de descripción de tipo que combina los atributos proporcionados con los atributos que ya existe en la clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-133">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="58bae-134">El valor devuelto es el proveedor de descripciones de tipo que se usó para agregar los atributos.</span><span class="sxs-lookup"><span data-stu-id="58bae-134">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="58bae-135">Este proveedor se puede pasar después a la <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método cuando ya no son necesarios los atributos agregados.</span><span class="sxs-lookup"><span data-stu-id="58bae-135">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-136">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-136">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-137">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-137">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-138">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-138">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-139">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-139">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-140">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-140">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-141">Matriz de objetos <see cref="T:System.Attribute" /> que se va a agregar a la clase del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-141">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-142">Agrega atributos de nivel de clase para el tipo de componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-142">Adds class-level attributes to the target component type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-143">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> recién creado que se usó para agregar los atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-143">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-144">El <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> método agrega atributos de nivel de clase para el tipo de un componente especificado.</span><span class="sxs-lookup"><span data-stu-id="58bae-144">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="58bae-145">Dado que es un requisito común de las aplicaciones que usan el Diseñador de Windows Forms de Visual Studio y la ventana Propiedades, este método proporciona un acceso directo mediante la creación de un proveedor de descripción de tipo que combina los atributos proporcionados con los atributos que ya existe en la clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-145">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="58bae-146">El valor devuelto es el proveedor de descripciones de tipo que se usó para agregar los atributos.</span><span class="sxs-lookup"><span data-stu-id="58bae-146">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="58bae-147">Este proveedor se puede pasar después a la <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método cuando ya no son necesarios los atributos agregados.</span><span class="sxs-lookup"><span data-stu-id="58bae-147">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-148">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-148">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-149">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-149">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-150">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-151">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-151">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="58bae-152">El tipo base del editor para agregar la tabla de editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-152">The editor base type to add the editor table for.</span>
          </span>
          <span data-ttu-id="58bae-153">Si ya existe una tabla de este tipo, este método no hará nada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-153">If a table already exists for this type, this method will do nothing.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="58bae-154">
            <see cref="T:System.Collections.Hashtable" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-154">The <see cref="T:System.Collections.Hashtable" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-155">Agrega una tabla de editor para el tipo base del editor determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-155">Adds an editor table for the given editor base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-156">El <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> método agrega una tabla de editor para el tipo base del editor determinado.</span><span class="sxs-lookup"><span data-stu-id="58bae-156">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="58bae-157">Normalmente, los editores se especifican como metadatos en un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-157">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="58bae-158">Sin embargo, si no hay metadatos para un editor solicitado base tipo puede encontrarse en el componente, el asociado <xref:System.ComponentModel.TypeDescriptor> buscará una tabla de editor para el tipo de editor, si no se encuentra uno.</span><span class="sxs-lookup"><span data-stu-id="58bae-158">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="58bae-159">Una vez que se ha agregado una tabla de editor a un descriptor de tipos, no se puede quitar y pertenece al descriptor de tipos.</span><span class="sxs-lookup"><span data-stu-id="58bae-159">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="58bae-160">El descriptor de tipo libremente puede realizar modificaciones en esta tabla.</span><span class="sxs-lookup"><span data-stu-id="58bae-160">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="58bae-161">El formato de una tabla de editor utiliza tipos de datos como claves y los editores como valores.</span><span class="sxs-lookup"><span data-stu-id="58bae-161">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="58bae-162">La parte del valor de una entrada en la tabla representa una instancia del editor.</span><span class="sxs-lookup"><span data-stu-id="58bae-162">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="58bae-163">Puede tener uno de tres valores.</span><span class="sxs-lookup"><span data-stu-id="58bae-163">It can have one of three values.</span></span> <span data-ttu-id="58bae-164">Si contiene una cadena, el descriptor de tipo asumirá que se trata de un nombre completo de un tipo y, a continuación, carga el tipo para el objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-164">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="58bae-165">Si contiene un tipo, se creará una instancia de este tipo para obtener un editor.</span><span class="sxs-lookup"><span data-stu-id="58bae-165">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="58bae-166">Por último, la parte de valor puede contener una instancia del editor de valores reales.</span><span class="sxs-lookup"><span data-stu-id="58bae-166">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="58bae-167">Si el descriptor de tipo resuelve un editor en una instancia, almacenará la instancia en la tabla para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="58bae-167">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-168">Agrega un proveedor de descripción de tipos a la lista de proveedores para este descriptor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-168">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-169">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-169">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="58bae-170">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-170">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-171">Agrega un proveedor de descripción de tipos para una sola instancia de un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-171">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-172">El <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método agrega un proveedor de descripción de tipo que proporciona información de tipo para una única instancia de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-172">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="58bae-173">Si se agrega un proveedor de este método, el proveedor del <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> método no se llamará porque la instancia ya existe.</span><span class="sxs-lookup"><span data-stu-id="58bae-173">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="58bae-174">Este método no mantiene una referencia completa al componente, por lo que no impide que el componente finalizando.</span><span class="sxs-lookup"><span data-stu-id="58bae-174">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="58bae-175">Es posible agregar varios proveedores de descripción de tipos para el mismo tipo u objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-175">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="58bae-176">Si esto ocurre, se utilizará exclusivamente el primer tipo proveedor de descripciones encontrado que proporciona información de tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-176">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="58bae-177">Puesto que los proveedores de información de tipo se almacenan en una pila, el último proveedor agregado será la primera de ellas consultada.</span><span class="sxs-lookup"><span data-stu-id="58bae-177">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="58bae-178">Este comportamiento permite la <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> y <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> proveedores de descripción de tipos de métodos que se usarán para insertar y extraer según sea necesario para escenarios concretos.</span><span class="sxs-lookup"><span data-stu-id="58bae-178">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="58bae-179">Si realiza correctamente, este método llama a la <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> método en el `instance` parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-179">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-180">Resultados de las dos versiones de este método con ámbitos diferentes.</span><span class="sxs-lookup"><span data-stu-id="58bae-180">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="58bae-181">El <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> método que toma un <xref:System.Object> parámetro afecta únicamente a esa única instancia del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="58bae-181">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="58bae-182">En cambio, la otra sobrecarga, que toma un <xref:System.Type> parámetro, afecta a todas las instancias del componente descrito por ese tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-182">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="58bae-183">Use la <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método si tiene que llamar desde código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-183">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-184">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-184">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-185">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-185">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-186">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-187">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-187">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-188">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-188">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-189">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-189">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-190">Agrega un proveedor de descripción de tipos para una clase de componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-190">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-191">El <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método agrega un proveedor de descripción de tipo que proporciona información de tipo para la clase especificada, las clases derivadas y todas las instancias de estos tipos.</span><span class="sxs-lookup"><span data-stu-id="58bae-191">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-192">El `type` parámetro puede ser cualquier tipo, incluida una interfaz.</span><span class="sxs-lookup"><span data-stu-id="58bae-192">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="58bae-193">Por ejemplo, para proporcionar información de instancia para todos los componentes y tipo personalizado, especifique `typeof(IComponent)`.</span><span class="sxs-lookup"><span data-stu-id="58bae-193">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="58bae-194">Pasar `typeof(object)` llamará al proveedor para proporcionar información de tipo para todos los tipos.</span><span class="sxs-lookup"><span data-stu-id="58bae-194">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="58bae-195">Este método no mantiene una referencia completa a cualquier objeto, por lo que no impide que los objetos finalizando.</span><span class="sxs-lookup"><span data-stu-id="58bae-195">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="58bae-196">Es posible agregar varios proveedores de descripción de tipos para el mismo tipo u objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-196">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="58bae-197">Si esto ocurre, se utilizará exclusivamente el primer tipo proveedor de descripciones encontrado que proporciona información de tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-197">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="58bae-198">Dado que los proveedores de información de tipo se almacenan en una pila, el último proveedor agregado será la primera de ellas consultada.</span><span class="sxs-lookup"><span data-stu-id="58bae-198">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="58bae-199">Este comportamiento permite la <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> y <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> proveedores de descripción de tipos de métodos que se usarán para insertar y extraer según sea necesario para escenarios concretos.</span><span class="sxs-lookup"><span data-stu-id="58bae-199">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="58bae-200">Si realiza correctamente, este método llama a la <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> método en el `type` parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-200">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-201">Resultados de las dos versiones de este método con ámbitos diferentes.</span><span class="sxs-lookup"><span data-stu-id="58bae-201">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="58bae-202">El <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> método que toma un <xref:System.Object> parámetro afecta únicamente a esa única instancia del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="58bae-202">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="58bae-203">En cambio, la otra sobrecarga, que toma un <xref:System.Type> parámetro, afecta a todas las instancias del componente descrito por ese tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-203">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="58bae-204">Use la <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método si tiene que llamar desde código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-204">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-205">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-205">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-206">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-206">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-207">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-207">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-208">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-208">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-209">Agrega un proveedor de descripción de tipos a la lista de proveedores para este descriptor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-209">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-210">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-210">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="58bae-211">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-211">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-212">Agrega un proveedor de descripción de tipos para una sola instancia de un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-212">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-213">Se puede llamar a este método desde el código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-213">This method can be called from partially trusted code.</span></span> <span data-ttu-id="58bae-214">Si <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> está definido, el llamador puede registrar un proveedor para la instancia especificada si su tipo es también parcialmente confiable.</span><span class="sxs-lookup"><span data-stu-id="58bae-214">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="58bae-215">Use la <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método si no es necesario llamar a código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-215">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-216">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-216">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="58bae-217">Para acceder al registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-217">For registry access.</span>
          </span>
          <span data-ttu-id="58bae-218">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-218">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-219">Enumeración asociada: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-219">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="58bae-220">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-221">Tipo asociado: el <see cref="T:System.Security.PermissionSet" /> que requiere el ensamblado que define el <paramref name="instance" /> tipo del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-221">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-222">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-222">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-223">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-223">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-224">Agrega un proveedor de descripción de tipos para una clase de componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-224">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-225">Se puede llamar a este método desde el código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-225">This method can be called from partially trusted code.</span></span> <span data-ttu-id="58bae-226">Si <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> está definido, el llamador puede registrar un proveedor para el tipo especificado si también es de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-226">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="58bae-227">Use la <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método si no es necesario llamar a código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-227">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-228">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-228">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="58bae-229">Para acceder al registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-229">For registry access.</span>
          </span>
          <span data-ttu-id="58bae-230">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-230">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-231">Enumeración asociada: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-231">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="58bae-232">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-233">Tipo asociado: el <see cref="T:System.Security.PermissionSet" /> que requiere el ensamblado que define <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-233">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-234">Obtiene o establece el proveedor de la información de tipo de Modelo de objetos componentes (COM) del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-234">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58bae-235">Una instancia de <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> que representa el proveedor de información de tipos COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-235">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-236">El <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> propiedad y el <xref:System.ComponentModel.IComNativeDescriptorHandler> interfaz están obsoletos.</span><span class="sxs-lookup"><span data-stu-id="58bae-236">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="58bae-237">Para obtener más información, vea la propiedad <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="58bae-237">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-238">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-238">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-239">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-239">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-240">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-240">Associated state:</span>
          </span>
        </permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-241">Obtiene el tipo del objeto del Modelo de objetos componentes (COM) representado por el componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-241">Gets the type of the Component Object Model (COM) object represented by the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58bae-242">
            <see cref="T:System.Type" /> del objeto del COM representado por este componente o <see langword="null" /> para objetos que no son del COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-242">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-243">El <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> propiedad devuelve un tipo que puede pasarse a la <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método para definir un proveedor de descripción de tipos para los tipos COM.</span><span class="sxs-lookup"><span data-stu-id="58bae-243">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="58bae-244">El <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> propiedad y otros miembros de esta clase reemplazan la funcionalidad en el atributo obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="58bae-244">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="58bae-245">Para implementar un nivel de asignación entre un objeto COM y <xref:System.ComponentModel.TypeDescriptor>, agregue un <xref:System.ComponentModel.TypeDescriptionProvider> para controlar el tipo <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="58bae-245">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="58bae-246">
            <see cref="T:System.Object" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-246">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="58bae-247">
            <see cref="T:System.Object" /> secundario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-247">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-248">Crea una asociación principal-secundario entre dos objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-248">Creates a primary-secondary association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-249">El <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> método crea una asociación entre un elemento principal y un objeto secundario.</span><span class="sxs-lookup"><span data-stu-id="58bae-249">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="58bae-250">Una vez creada una asociación, un diseñador u otro mecanismo de filtrado puede agregar propiedades que se enrutan a cualquiera de los objetos en el conjunto de propiedades del objeto primario.</span><span class="sxs-lookup"><span data-stu-id="58bae-250">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="58bae-251">Cuando se realiza una llamada a una propiedad en el objeto principal, el <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> se llamará el método para resolver la instancia del objeto real que está relacionada con su parámetro de tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-251">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="58bae-252">Un <xref:System.WeakReference> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no evita que cualquiera de los objetos que se finalizan y recolección de elementos no utilizados reclame.</span><span class="sxs-lookup"><span data-stu-id="58bae-252">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-253">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-253">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58bae-254">
            <paramref name="primary" /> es igual a <paramref name="secondary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-254">
              <paramref name="primary" /> is equal to <paramref name="secondary" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-255">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-255">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-256">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-256">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-257">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-257">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-258">
            <see cref="T:System.ComponentModel.IComponent" /> que especifica el componente que se va a asociar al diseñador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-258">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="58bae-259">
            <see cref="T:System.Type" /> que representa el tipo de diseñador que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-259">A <see cref="T:System.Type" /> that represents the type of designer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-260">Crea una instancia del diseñador asociada al componente especificado y del tipo especificado del diseñador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-260">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-261">
            <see cref="T:System.ComponentModel.Design.IDesigner" /> que es una instancia del diseñador para el componente, o <see langword="null" /> si no se encuentra ningún diseñador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-261">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-262">Si este método no puede encontrar un válido <xref:System.ComponentModel.DesignerAttribute>, busca hacia arriba en la jerarquía de clase para un diseñador.</span><span class="sxs-lookup"><span data-stu-id="58bae-262">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="58bae-263">Si no encuentra un diseñador en la jerarquía de clases, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="58bae-263">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-264">Crea un descriptor de eventos nuevo que es idéntico a otro existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-264">Creates a new event descriptor that is identical to an existing event descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-265">El tipo de componente para el que se va a crear el nuevo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-265">The type of the component for which to create the new event.</span>
          </span>
        </param>
        <param name="oldEventDescriptor">
          <span data-ttu-id="58bae-266">Información del evento existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-266">The existing event information.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-267">Los nuevos atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-267">The new attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-268">Crea un descriptor de eventos nuevo que es idéntico a otro existente, cuando se pasa al <see cref="T:System.ComponentModel.EventDescriptor" /> existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-268">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-269">Un nuevo <see cref="T:System.ComponentModel.EventDescriptor" /> que ha combinado los atributos de metadatos especificados con los atributos de metadatos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-269">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="58bae-270">Obligatorio para inspeccionar a los miembros no públicos del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-270">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="58bae-271">Vincular el acceso a petición necesario para <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> tipo <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-271">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-272">Tipo del componente en el que se encuentra el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-272">The type of the component the event lives on.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="58bae-273">Nombre del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-273">The name of the event.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-274">Tipo de delegado que controla el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-274">The type of the delegate that handles the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-275">Atributos para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-275">The attributes for this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-276">Crea un nuevo descriptor de eventos que es idéntico a otro existente generando dinámicamente la información del descriptor desde un evento especificado en un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-276">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-277">
            <see cref="T:System.ComponentModel.EventDescriptor" /> enlazado a un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-277">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="58bae-278">Obligatorio para inspeccionar a los miembros no públicos del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-278">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="58bae-279">Vincular el acceso a petición necesario para <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> tipo <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-279">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-280">El proveedor de servicios que ofrece un servicio <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-280">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span>
          </span>
          <span data-ttu-id="58bae-281">Este parámetro puede ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-281">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="58bae-282">Objeto <see cref="T:System.Type" />que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-282">The <see cref="T:System.Type" /> of object to create.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="58bae-283">Matriz opcional de tipos de parámetros que se pasarán al constructor del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-283">An optional array of parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="58bae-284">Este parámetro puede ser <see langword="null" /> o una matriz de longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-284">This parameter can be <see langword="null" /> or an array of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="58bae-285">Matriz opcional de valores de parámetros que se pasarán al constructor del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-285">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
          <span data-ttu-id="58bae-286">Si no es <see langword="null" />, el número de elementos debe ser el mismo que <c>argTypes</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-286">If not <see langword="null" />, the number of elements must be the same as <c>argTypes</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-287">Crea un objeto que puede sustituir a otro tipo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-287">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-288">Instancia del tipo de datos de sustituto si se encuentra un asociado <see cref="T:System.ComponentModel.TypeDescriptionProvider" />; en caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-288">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-289">El <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> método buscará un <xref:System.ComponentModel.TypeDescriptionProvider> que está asociado con los valores especificados `objectType` tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="58bae-289">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="58bae-290">Este método primero intenta obtener un proveedor de descripción de tipos desde el `provider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-290">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="58bae-291">Si se produce un error, busca en sus propias tablas internas para un proveedor (estas entradas se crean a través de las llamadas anteriores a <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span><span class="sxs-lookup"><span data-stu-id="58bae-291">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="58bae-292">Si encuentra un proveedor, este método va a delegar la llamada de creación a ese objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-292">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-293">
            <paramref name="objectType" /> es <see langword="null" />, o <paramref name="args" /> es <see langword="null" /> cuando <paramref name="argTypes" /> no es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-293">
              <paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58bae-294">
            <paramref name="argTypes" /> y <paramref name="args" /> tienen un número diferente de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-294">
              <paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="58bae-295">
            <para>Si la clase derivada no proporciona una instancia suplente, este método debe llamar a la implementación base.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-295">
              <para>If the derived class does not provide a substitute instance, this method should call the base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-296">Crea un nuevo descriptor de propiedad para una propiedad existente de un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-296">Creates a new property descriptor for an existing property of a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-297">
            <see cref="T:System.Type" /> del componente del que es miembro la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-297">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="oldPropertyDescriptor">
          <span data-ttu-id="58bae-298">El descriptor de la propiedad existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-298">The existing property descriptor.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-299">Los nuevos atributos de esta propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-299">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-300">Crea un nuevo descriptor de propiedad a partir de un descriptor de propiedad existente, usando el <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificado existente y la matriz de atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-300">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-301">Un nuevo <see cref="T:System.ComponentModel.PropertyDescriptor" /> que tiene los atributos de metadatos especificados combinados con los atributos de metadatos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-301">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="58bae-302">Obligatorio para inspeccionar a los miembros no públicos del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-302">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="58bae-303">Vincular el acceso a petición necesario para <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> tipo <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-303">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-304">
            <see cref="T:System.Type" /> del componente del que es miembro la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-304">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="58bae-305">Nombre de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-305">The name of the property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-306">
            <see cref="T:System.Type" /> de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-306">The <see cref="T:System.Type" /> of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-307">Los nuevos atributos de esta propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-307">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-308">Crea y enlaza de forma dinámica un descriptor de propiedad a un tipo, mediante el nombre de propiedad especificado, el tipo y la matriz de atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-308">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-309">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> que está enlazado al tipo especificado y que tiene los atributos de metadatos especificados combinados con los atributos de metadatos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-309">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="58bae-310">Obligatorio para inspeccionar a los miembros no públicos del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-310">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="58bae-311">Vincular el acceso a petición necesario para <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> tipo <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-311">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-312">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-312">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="primary">
          <span data-ttu-id="58bae-313">El objeto principal de la asociación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-313">The primary object of the association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-314">Devuelve una instancia del tipo asociado al objeto principal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-314">Returns an instance of the type associated with the specified primary object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-315">Si existe una asociación, instancia del tipo secundario que se ha asociado al objeto principal; de lo contrario, si no hay ninguna asociación especificada, <paramref name="primary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-315">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-316">Si se ha realizado una asociación anterior el `type` parámetro con el <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> método, la <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> método devuelve el objeto secundario correcto para invocar el tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="58bae-316">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="58bae-317">En caso contrario, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> busca un diseñador compatible para `type` y devuelve el diseñador si encuentra alguno.</span><span class="sxs-lookup"><span data-stu-id="58bae-317">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="58bae-318">Este método nunca devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="58bae-318">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="58bae-319">Un <xref:System.WeakReference> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no impide que el objeto primario o secundario que se va a finalizar y recolección de elementos no utilizados reclame.</span><span class="sxs-lookup"><span data-stu-id="58bae-319">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-320">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-320">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-321">Devuelve la colección de atributos para un componente o un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-321">Returns the collection of attributes for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-322">El componente para el que desea obtener atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-322">The component for which you want to get attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-323">Devuelve la colección de atributos para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-323">Returns the collection of attributes for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-324">Objeto <see cref="T:System.ComponentModel.AttributeCollection" /> que contiene los atributos para el componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-324">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span>
          </span>
          <span data-ttu-id="58bae-325">Si <paramref name="component" /> es <see langword="null" />, este método devuelve una colección vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-325">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-326">Los atributos devueltos por la <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> método puede modificarse dinámicamente de origen del componente original enumerar proveedores extensores (<xref:System.ComponentModel.IExtenderProvider>), filtrar servicios (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>) y filtros de atributo.</span><span class="sxs-lookup"><span data-stu-id="58bae-326">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="58bae-327">Cuando se define un atributo personalizado con <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> establecido en `true`, es necesario reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad para que sea único.</span><span class="sxs-lookup"><span data-stu-id="58bae-327">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="58bae-328">Si todas las instancias del atributo son únicas, reemplazar <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> para devolver la identidad de objeto del atributo.</span><span class="sxs-lookup"><span data-stu-id="58bae-328">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="58bae-329">Si sólo algunas instancias del atributo son únicas, devolver un valor de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> que devolvería igualdad en esos casos.</span><span class="sxs-lookup"><span data-stu-id="58bae-329">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="58bae-330">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</span><span class="sxs-lookup"><span data-stu-id="58bae-330">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="58bae-331">Para estos atributos, devolver el valor del parámetro de constructor de la <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-331">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-332">La implementación predeterminada de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> devuelve la identidad de tipo independientemente del valor de la <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-332">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="58bae-333">Para devolver varias instancias de un <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> de atributo de la <xref:System.ComponentModel.AttributeCollection>, el atributo debe reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-333">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-334">Para obtener un ejemplo de este método, consulte el <xref:System.ComponentModel.AttributeCollection.Matches%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-334">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-335">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-335">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-336">Devuelve una colección de atributos para el tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-336">Returns a collection of attributes for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-337">
            <see cref="T:System.ComponentModel.AttributeCollection" /> con los atributos del tipo del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-337">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span>
          </span>
          <span data-ttu-id="58bae-338">Si el componente es <see langword="null" />, este método devolverá una colección vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-338">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-339">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-339">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-340">Para los atributos con <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> establecido en `true`, la colección de atributos quita las instancias duplicadas.</span><span class="sxs-lookup"><span data-stu-id="58bae-340">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="58bae-341">Se trata de instancias en las que el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad devuelve valores iguales.</span><span class="sxs-lookup"><span data-stu-id="58bae-341">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="58bae-342">Cuando se define un atributo personalizado con <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> establecido en `true`, es necesario reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad para que sea único.</span><span class="sxs-lookup"><span data-stu-id="58bae-342">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="58bae-343">Si todas las instancias del atributo son únicas, reemplazar <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> para devolver la identidad de objeto del atributo.</span><span class="sxs-lookup"><span data-stu-id="58bae-343">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="58bae-344">Si sólo algunas instancias del atributo son únicas, devolver un valor de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> que devolvería igualdad en esos casos.</span><span class="sxs-lookup"><span data-stu-id="58bae-344">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="58bae-345">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</span><span class="sxs-lookup"><span data-stu-id="58bae-345">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="58bae-346">Para estos atributos, devolver el valor del parámetro de constructor de la <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-346">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-347">La implementación predeterminada de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> devuelve la identidad de tipo independientemente del valor de la <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-347">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="58bae-348">Para devolver varias instancias de un <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> de atributo de la <xref:System.ComponentModel.AttributeCollection>, el atributo debe reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-348">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-349">El componente para el que desea obtener atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-349">The component for which you want to get attributes.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-350">
            <see langword="true" /> para usar un conjunto de línea de base de atributos del descriptor de tipos personalizado si <c>component</c> es de tipo <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-350">
              <see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <c>component</c> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-351">Devuelve una colección de atributos para el componente especificado y un valor booleano que indica que se ha creado un descriptor de tipos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-351">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-352">
            <see cref="T:System.ComponentModel.AttributeCollection" /> con los atributos del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-352">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span>
          </span>
          <span data-ttu-id="58bae-353">Si el componente es <see langword="null" />, este método devolverá una colección vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-353">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-354">Los atributos devueltos por la <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> método puede modificarse dinámicamente desde el origen inicial de componentes enumerar proveedores extensores (<xref:System.ComponentModel.IExtenderProvider>), filtrar servicios (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>) y filtros de atributo.</span><span class="sxs-lookup"><span data-stu-id="58bae-354">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="58bae-355">Cuando se define un atributo personalizado con <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> establecido en `true`, es necesario reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad para que sea único.</span><span class="sxs-lookup"><span data-stu-id="58bae-355">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="58bae-356">Si todas las instancias del atributo son únicas, reemplazar <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> para devolver la identidad de objeto del atributo.</span><span class="sxs-lookup"><span data-stu-id="58bae-356">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="58bae-357">Si sólo algunas instancias del atributo son únicas, devolver un valor de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> que devolvería igualdad en esos casos.</span><span class="sxs-lookup"><span data-stu-id="58bae-357">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="58bae-358">Por ejemplo, algunos atributos tienen un parámetro de constructor que actúa como una clave única.</span><span class="sxs-lookup"><span data-stu-id="58bae-358">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="58bae-359">Para estos atributos, devolver el valor del parámetro de constructor de la <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-359">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58bae-360">La implementación predeterminada de <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> devuelve la identidad de tipo independientemente del valor de la <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-360">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="58bae-361">Para devolver varias instancias de un <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> de atributo de la <xref:System.ComponentModel.AttributeCollection>, el atributo debe reemplazar el <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-361">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-362">Devuelve el nombre de la clase del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-362">Returns the name of the class for the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-363">
            <see cref="T:System.Object" /> para el que se desea obtener el nombre de clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-363">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-364">Devuelve el nombre de la clase para el componente especificado usando el descriptor de tipo predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-364">Returns the name of the class for the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-365">
            <see cref="T:System.String" /> que contiene el nombre de la clase para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-365">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-366">Normalmente, este método devuelve el completo <xref:System.Type> nombre para el `component` tipo de parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-366">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="58bae-367">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</span><span class="sxs-lookup"><span data-stu-id="58bae-367">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="58bae-368">Si `component` implementa <xref:System.ComponentModel.ICustomTypeDescriptor>, puede devolver un nombre alternativo.</span><span class="sxs-lookup"><span data-stu-id="58bae-368">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="58bae-369">Este método es equivalente a sobrecargado <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> método con un segundo parámetro de `false`.</span><span class="sxs-lookup"><span data-stu-id="58bae-369">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-370">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-370">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-371">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-371">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-372">Devuelve el nombre de la clase del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-372">Returns the name of the class for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-373">
            <see cref="T:System.String" /> que contiene el nombre de la clase para el tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-373">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-374">Este método utiliza el descriptor de tipos personalizado almacenado en caché para el tipo especificado para detectar el nombre de clase asociada.</span><span class="sxs-lookup"><span data-stu-id="58bae-374">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-375">
            <paramref name="componentType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-375">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-376">
            <see cref="T:System.Object" /> para el que se desea obtener el nombre de clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-376">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-377">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-377">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-378">Devuelve el nombre de la clase especifica usando el descriptor de tipo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-378">Returns the name of the class for the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-379">
            <see cref="T:System.String" /> que contiene el nombre de la clase para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-379">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-380">Normalmente, este método devuelve el completo <xref:System.Type> nombre para el `component` tipo de parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-380">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="58bae-381">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</span><span class="sxs-lookup"><span data-stu-id="58bae-381">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="58bae-382">Si el `component` parámetro implementa <xref:System.ComponentModel.ICustomTypeDescriptor>, puede devolver un nombre alternativo.</span><span class="sxs-lookup"><span data-stu-id="58bae-382">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-383">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-383">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-384">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-384">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-385">Devuelve el nombre del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-385">Returns the name of the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-386">
            <see cref="T:System.Object" /> para el que se desea obtener el nombre de clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-386">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-387">Devuelve el nombre del componente especificado usando el descriptor de tipo predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-387">Returns the name of the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-388">
            <see cref="T:System.String" /> que contiene el nombre del componente especificado o <see langword="null" /> si no hay ningún nombre de componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-388">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-389">Normalmente, este método devuelve el nombre para el sitio del componente, si existe alguno.</span><span class="sxs-lookup"><span data-stu-id="58bae-389">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="58bae-390">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</span><span class="sxs-lookup"><span data-stu-id="58bae-390">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="58bae-391">Este método es equivalente a sobrecargado <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> método con un segundo parámetro de `false`.</span><span class="sxs-lookup"><span data-stu-id="58bae-391">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="58bae-392">Este método se utiliza en tiempo de diseño para recuperar el nombre de una instancia de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-392">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-393">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-393">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-394">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-394">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-395">
            <see cref="T:System.Object" /> para el que se desea obtener el nombre de clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-395">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-396">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-396">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-397">Devuelve el nombre del componente especificado usando el descriptor de tipo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-397">Returns the name of the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-398">Nombre de la clase para el componente especificado o <see langword="null" /> si no hay ningún nombre de componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-398">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-399">Este método se utiliza en tiempo de diseño para recuperar el nombre de una instancia de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-399">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="58bae-400">Normalmente, este método devuelve el nombre para el sitio del componente, si existe alguno.</span><span class="sxs-lookup"><span data-stu-id="58bae-400">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="58bae-401">Por ejemplo, el nombre de clase para un botón es "System.Windows.Forms.Button".</span><span class="sxs-lookup"><span data-stu-id="58bae-401">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="58bae-402">Si el componente implementa la <xref:System.ComponentModel.ICustomTypeDescriptor> interfaz, puede devolver un nombre alternativo.</span><span class="sxs-lookup"><span data-stu-id="58bae-402">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-403">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-403">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-404">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-404">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-405">Devuelve un convertidor de tipos para un componente o un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-405">Returns a type converter for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-406">Componente para el que obtener el convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-406">A component to get the converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-407">Devuelve un convertidor de tipos para el tipo del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-407">Returns a type converter for the type of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-408">Objeto <see cref="T:System.ComponentModel.TypeConverter" /> para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-408">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-409">Este método busca un convertidor de tipos apropiado buscando un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="58bae-409">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="58bae-410">Si no encuentra un <xref:System.ComponentModel.TypeConverterAttribute>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</span><span class="sxs-lookup"><span data-stu-id="58bae-410">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="58bae-411">Este método es equivalente a sobrecargado <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método con un segundo parámetro de `false`.</span><span class="sxs-lookup"><span data-stu-id="58bae-411">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-412">Para obtener un ejemplo del uso de este método, consulte la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-412">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-413">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-413">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-414">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-414">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-415">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-415">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-416">Devuelve un convertidor de tipos para el tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-416">Returns a type converter for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-417">
            <see cref="T:System.ComponentModel.TypeConverter" /> para el tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-417">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-418">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-418">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-419">Este método busca el convertidor de tipos apropiado buscando un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="58bae-419">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="58bae-420">Si no encuentra un <xref:System.ComponentModel.TypeConverterAttribute>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</span><span class="sxs-lookup"><span data-stu-id="58bae-420">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-421">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-421">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-422">Componente para el que obtener el convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-422">A component to get the converter for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-423">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-423">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-424">Devuelve un convertidor de tipos para el tipo del componente especificado con un descriptor de tipos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-424">Returns a type converter for the type of the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-425">Objeto <see cref="T:System.ComponentModel.TypeConverter" /> para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-425">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-426">Este método busca el convertidor de tipos adecuada, intentando encontrar un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="58bae-426">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="58bae-427">Si no encuentra un <xref:System.ComponentModel.TypeConverterAttribute>, recorre la jerarquía de clases base de la clase hasta que encuentra un tipo primitivo.</span><span class="sxs-lookup"><span data-stu-id="58bae-427">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-428">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-428">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-429">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-429">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-430">Devuelve el evento predeterminado para un componente o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-430">Returns the default event for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-431">Componente para el que obtener el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-431">The component to get the event for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-432">Devuelve el evento predeterminado para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-432">Returns the default event for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-433">
            <see cref="T:System.ComponentModel.EventDescriptor" /> con el evento predeterminado o <see langword="null" /> si no hay eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-433">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-434">Este método es equivalente a sobrecargado <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> método con un segundo parámetro de `false`.</span><span class="sxs-lookup"><span data-stu-id="58bae-434">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-435">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-435">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-436">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-436">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-437">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-437">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-438">Devuelve el evento predeterminado para el tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-438">Returns the default event for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-439">
            <see cref="T:System.ComponentModel.EventDescriptor" /> con el evento predeterminado o <see langword="null" /> si no hay eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-439">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-440">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-440">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-441">
            <paramref name="componentType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-441">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-442">Componente para el que obtener el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-442">The component to get the event for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-443">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-443">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-444">Devuelve el evento predeterminado para un componente con un descriptor de tipos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-444">Returns the default event for a component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-445">
            <see cref="T:System.ComponentModel.EventDescriptor" /> con el evento predeterminado o <see langword="null" /> si no hay eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-445">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-446">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-446">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-447">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-447">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-448">Devuelve la propiedad predeterminada de un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-448">Returns the default property for a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-449">Componente para el que obtener la propiedad predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-449">The component to get the default property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-450">Devuelve la propiedad predeterminada para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-450">Returns the default property for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-451">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la propiedad predeterminada o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-451">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-452">Si el `component` parámetro es `null`, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="58bae-452">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-453">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-453">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-454">
            <see cref="T:System.Type" /> que representa la clase de la que se va a obtener la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-454">A <see cref="T:System.Type" /> that represents the class to get the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-455">Devuelve la propiedad predeterminada para el tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-455">Returns the default property for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-456">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la propiedad predeterminada o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-456">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-457">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-457">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-458">Si el `componentType` parámetro es `null`, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="58bae-458">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-459">Componente para el que obtener la propiedad predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-459">The component to get the default property for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-460">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-460">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-461">Devuelve la propiedad predeterminada para el componente especificado con un descriptor de tipos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-461">Returns the default property for the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-462">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la propiedad predeterminada o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-462">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-463">Si el `component` parámetro es `null`, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="58bae-463">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-464">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-464">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-465">Devuelve un editor con el tipo base especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-465">Returns an editor with the specified base type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-466">Componente para el que se obtendrá el editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-466">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="58bae-467">
            <see cref="T:System.Type" /> que representa el tipo base del editor que se desea buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-467">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-468">Obtiene un editor con el tipo base especificado para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-468">Gets an editor with the specified base type for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-469">Instancia del editor que se puede convertir al tipo de editor especificado o <see langword="null" /> si no se puede encontrar ningún editor del tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-469">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-470">El tipo de `editorBaseType` suele ser <xref:System.Drawing.Design.UITypeEditor>, pero también puede utilizar otros tipos (por ejemplo, <xref:System.ComponentModel.ComponentEditor> y <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="58bae-470">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="58bae-471">Puede definir varios editores para una propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-471">You can define multiple editors for a property.</span></span> <span data-ttu-id="58bae-472">Utilice este método para seleccionar el editor que desea utilizar.</span><span class="sxs-lookup"><span data-stu-id="58bae-472">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-473">El valor de <paramref name="component" /> o <paramref name="editorBaseType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-473">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-474">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-474">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-475">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-475">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="58bae-476">
            <see cref="T:System.Type" /> que representa el tipo base del editor que se intenta buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-476">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-477">Devuelve un editor con el tipo base especificado para el tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-477">Returns an editor with the specified base type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-478">Instancia del objeto de editor que se puede convertir al tipo base especificado o <see langword="null" /> si no se puede encontrar ningún editor del tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-478">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-479">El tipo de `editorBaseType` suele ser <xref:System.Drawing.Design.UITypeEditor>, pero también puede utilizar otros tipos (por ejemplo <xref:System.ComponentModel.ComponentEditor> y <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="58bae-479">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="58bae-480">Puede definir varios editores para un tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-480">You can define multiple editors for a type.</span></span> <span data-ttu-id="58bae-481">Utilice este método para seleccionar el que desea usar.</span><span class="sxs-lookup"><span data-stu-id="58bae-481">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="58bae-482">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-482">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-483">El valor de <paramref name="type" /> o <paramref name="editorBaseType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-483">
              <paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-484">Componente para el que se obtendrá el editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-484">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="58bae-485">
            <see cref="T:System.Type" /> que representa el tipo base del editor que se desea buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-485">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-486">Marca que indica si se debe considerar la información de descripción de tipo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-486">A flag indicating whether custom type description information should be considered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-487">Devuelve un editor con el tipo base especificado y con un descriptor de tipos personalizado para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-487">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-488">Instancia del editor que se puede convertir al tipo de editor especificado o <see langword="null" /> si no se puede encontrar ningún editor del tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-488">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-489">El tipo de `editorBaseType` suele ser <xref:System.Drawing.Design.UITypeEditor>, pero también puede utilizar otros tipos (por ejemplo <xref:System.ComponentModel.ComponentEditor> y <xref:System.ComponentModel.InstanceCreationEditor>).</span><span class="sxs-lookup"><span data-stu-id="58bae-489">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="58bae-490">Puede definir varios editores para una propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-490">You can define multiple editors for a property.</span></span> <span data-ttu-id="58bae-491">Utilice este método para seleccionar el editor que desea utilizar.</span><span class="sxs-lookup"><span data-stu-id="58bae-491">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-492">El valor de <paramref name="component" /> o <paramref name="editorBaseType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-492">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-493">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-493">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-494">Devuelve la colección de eventos para un componente o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-494">Returns the collection of events for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-495">Componente para el que se van a obtener eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-495">A component to get the events for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-496">Devuelve la colección de eventos para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-496">Returns the collection of events for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-497">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos para este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-497">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-498">Recupera una colección de eventos que el determinado `component` proporciona la instancia del parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-498">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="58bae-499">Esta colección puede diferir del conjunto de eventos de que la clase proporciona.</span><span class="sxs-lookup"><span data-stu-id="58bae-499">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="58bae-500">Si el `component` se basa en un parámetro, el sitio puede agregar o quitar eventos adicionales.</span><span class="sxs-lookup"><span data-stu-id="58bae-500">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="58bae-501">Si `component` es `null`, a continuación, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-501">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-502">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-502">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-503">Para obtener un ejemplo de este método, consulte el <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-503">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-504">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-504">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-505">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-505">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-506">Devuelve la colección de eventos para un tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-506">Returns the collection of events for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-507">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos para este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-507">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-508">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-508">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-509">Si el `componentType` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-509">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-510">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-510">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-511">Componente para el que se van a obtener eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-511">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-512">Matriz de tipo <see cref="T:System.Attribute" /> que se puede utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-512">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-513">Devuelve la colección de eventos de un componente especificado usando una matriz de atributos especificada como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-513">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-514">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos que coinciden con los atributos especificados de este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-514">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-515">Los eventos para el `component` parámetro puede diferir de los eventos de una clase, porque el sitio puede agregar o quitar eventos si el `component` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-515">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="58bae-516">El `attributes` matriz puede tener una combinación de <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="58bae-516">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="58bae-517">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-517">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-518">A <xref:System.Type> se trata como un carácter comodín; coincide con cualquier evento que tiene el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="58bae-518">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="58bae-519">Si un evento no tiene un <xref:System.Attribute> de la misma clase, el evento no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-519">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-520">Si el atributo es una instancia de la <xref:System.Attribute> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-520">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-521">Si un <xref:System.Attribute> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en el evento.</span><span class="sxs-lookup"><span data-stu-id="58bae-521">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="58bae-522">Si `component` es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-522">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-523">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-523">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-524">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-524">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-525">Componente para el que se van a obtener eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-525">A component to get the events for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-526">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-526">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-527">Devuelve la colección de eventos para un componente especificado con un descriptor de tipos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-527">Returns the collection of events for a specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-528">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos para este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-528">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-529">Este método recupera una colección de eventos que el determinado `component` proporciona la instancia del parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-529">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="58bae-530">Este puede ser diferente del conjunto de eventos de que la clase proporciona.</span><span class="sxs-lookup"><span data-stu-id="58bae-530">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="58bae-531">Si el `component` se basa en un parámetro, el sitio puede agregar o quitar eventos adicionales.</span><span class="sxs-lookup"><span data-stu-id="58bae-531">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="58bae-532">Si `component` es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-532">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-533">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-533">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-534">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-534">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-535">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-535">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-536">Matriz de tipo <see cref="T:System.Attribute" /> que se puede utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-536">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-537">Devuelve la colección de eventos de un tipo de componente especificado usando una matriz de atributos especificada como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-537">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-538">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos que coinciden con los atributos especificados de este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-538">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-539">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-539">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-540">El `attributes` matriz de parámetros puede tener una combinación de <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="58bae-540">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="58bae-541">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-541">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-542">A <xref:System.Type> se trata como un carácter comodín; coincide con cualquier evento que tiene el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="58bae-542">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="58bae-543">Si un evento no tiene un <xref:System.Attribute> de la misma clase, el evento no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-543">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-544">Si el atributo es una instancia de la <xref:System.Attribute> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-544">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-545">Si un <xref:System.Attribute> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en el evento.</span><span class="sxs-lookup"><span data-stu-id="58bae-545">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="58bae-546">Si el `componentType` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-546">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-547">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-547">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-548">Componente para el que se van a obtener eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-548">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-549">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-549">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-550">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-550">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-551">Devuelve la colección de eventos de un componente especificado usando una matriz de atributos especificada como filtro y usando un descriptor de tipo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-551">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-552">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con los eventos que coinciden con los atributos especificados de este componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-552">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-553">Los eventos para el `component` parámetro puede diferir de los eventos de una clase, porque el sitio puede agregar o quitar eventos si el `component` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-553">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="58bae-554">El `attributes` matriz de parámetros puede tener una combinación de <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="58bae-554">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="58bae-555">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-555">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-556">A <xref:System.Type> se trata como un carácter comodín; coincide con cualquier evento que tiene el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="58bae-556">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="58bae-557">Si un evento no tiene un <xref:System.Attribute> de la misma clase, el evento no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-557">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-558">Si el atributo es una instancia de la <xref:System.Attribute> (clase), el evento debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-558">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-559">Si un <xref:System.Attribute> se especificó la instancia y es el evento predeterminado, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en el evento.</span><span class="sxs-lookup"><span data-stu-id="58bae-559">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="58bae-560">Si `component` es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-560">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-561">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-561">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-562">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-562">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-563">Objeto <see cref="T:System.ComponentModel.Component" /> para el que se va a buscar el nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-563">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-564">Devuelve el nombre completo del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-564">Returns the fully qualified name of the component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-565">Nombre completo del componente especificado o <see langword="null" /> si el componente no tiene nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-565">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-566">En muchos casos, el <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> método devolverá el mismo valor que el <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-566">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="58bae-567">Sin embargo, si el componente reside en un contenedor anidado o tiene otra semántica anidada, puede devolver un nombre completo distinto.</span><span class="sxs-lookup"><span data-stu-id="58bae-567">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-568">
            <paramref name="component" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-568">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-569">Devuelve la colección de propiedades sobre un componente o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-569">Returns the collection of properties on a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-570">Componente cuyas propiedades se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-570">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-571">Devuelve la colección de propiedades para un componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-571">Returns the collection of properties for a specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-572">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-572">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-573">Las propiedades de un componente pueden diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el componente está ubicado.</span><span class="sxs-lookup"><span data-stu-id="58bae-573">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="58bae-574">Si el `component` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-574">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-575">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-575">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-576">En el ejemplo de código siguiente se muestra el uso de la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método para tener acceso a las propiedades de un control.</span><span class="sxs-lookup"><span data-stu-id="58bae-576">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="58bae-577">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.ComponentModel.Design.ComponentDesigner> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-577">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-578">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-578">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-579">
            <see cref="T:System.Type" /> que representa el componente para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-579">A <see cref="T:System.Type" /> that represents the component to get properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-580">Devuelve la colección de propiedades para un tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-580">Returns the collection of properties for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-581">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades de un tipo de componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-581">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-582">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-582">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-583">Si el `componentType` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-583">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-584">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-584">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-585">Componente cuyas propiedades se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-585">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-586">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-586">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-587">Devuelve la colección de propiedades de un componente especificado usando como filtro una matriz de atributos especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-587">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-588">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades que coinciden con los atributos especificados del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-588">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-589">Las propiedades de la `component` parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `component` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-589">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="58bae-590">El `attributes` matriz de parámetros se utiliza para filtrar la matriz.</span><span class="sxs-lookup"><span data-stu-id="58bae-590">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="58bae-591">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-591">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-592">Si una propiedad no tiene un <xref:System.Attribute> de la misma clase, la propiedad no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-592">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-593">Si el atributo es una instancia de la <xref:System.Attribute> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-593">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-594">Si un <xref:System.Attribute> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-594">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="58bae-595">Si `attributes` tiene un atributo de forma predeterminada, la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</span><span class="sxs-lookup"><span data-stu-id="58bae-595">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="58bae-596">Si `component` es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-596">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-597">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-597">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-598">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-598">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="58bae-599">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Windows.Forms.Design.PropertyTab> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-599">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-600">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-600">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-601">Componente cuyas propiedades se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-601">A component to get the properties for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-602">Es <see langword="true" /> para no tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-602">
              <see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-603">Devuelve la colección de propiedades de un componente especificado usando el descriptor de tipo predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-603">Returns the collection of properties for a specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-604">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades de un componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-604">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-605">Las propiedades de la `component` parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `component` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="58bae-605">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="58bae-606">Si `component` es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-606">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-607">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-607">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-608">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-608">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="58bae-609">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-609">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-610">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-610">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-611">Devuelve la colección de propiedades de un tipo de componente especificado usando como filtro una matriz de atributos especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-611">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-612">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades que coinciden con los atributos especificados de este tipo de componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-612">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-613">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-613">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-614">El `attributes` matriz de parámetros se utiliza para filtrar la matriz.</span><span class="sxs-lookup"><span data-stu-id="58bae-614">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="58bae-615">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-615">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-616">Si una propiedad no tiene un <xref:System.Attribute> de la misma clase, la propiedad no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-616">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-617">Si el atributo es una instancia de la <xref:System.Attribute> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-617">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-618">Si un <xref:System.Attribute> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-618">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="58bae-619">Si `attributes` tiene un atributo de forma predeterminada, la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</span><span class="sxs-lookup"><span data-stu-id="58bae-619">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="58bae-620">Si el `componentType` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-620">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-621">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-621">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-622">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-622">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="58bae-623">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Windows.Forms.Design.PropertyTab> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-623">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-624">Componente cuyas propiedades se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-624">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58bae-625">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-625">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="58bae-626">Es <see langword="true" /> para tener en cuenta la información de descripción de tipos personalizada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-626">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-627">Devuelve la colección de propiedades de un componente especificado usando una matriz de atributos especificada como filtro y usando un descriptor de tipo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-627">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-628">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con los eventos que coinciden con los atributos especificados del componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-628">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-629">Las propiedades de un `component` pueden diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `component` sitúa.</span><span class="sxs-lookup"><span data-stu-id="58bae-629">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="58bae-630">El `attributes` matriz de parámetros se utiliza para filtrar la matriz.</span><span class="sxs-lookup"><span data-stu-id="58bae-630">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="58bae-631">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="58bae-631">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="58bae-632">Si una propiedad no tiene un <xref:System.Attribute> de la misma clase, la propiedad no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-632">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-633">Si el atributo es una instancia de la <xref:System.Attribute> (clase), la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="58bae-633">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="58bae-634">Si un <xref:System.Attribute> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="58bae-634">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="58bae-635">Si `attributes` tiene un atributo de forma predeterminada, la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método que coincide con el caso cuando la propiedad no tiene el atributo aplicado.</span><span class="sxs-lookup"><span data-stu-id="58bae-635">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="58bae-636">Si el `component` parámetro es `null`, se devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="58bae-636">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="58bae-637">No se garantiza el orden de la colección devuelta para ser idénticos entre las llamadas, por lo que siempre el pedido antes de su uso.</span><span class="sxs-lookup"><span data-stu-id="58bae-637">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58bae-638">
            <paramref name="component" /> es un objeto remoto entre procesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-638">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-639">Devuelve el proveedor de descripciones de tipos para el componente o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-639">Returns the type description provider for the component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58bae-640">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-640">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-641">Devuelve el proveedor de descripciones de tipos para el componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-641">Returns the type description provider for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-642">Objeto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> asociado al componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-642">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-643">El <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> método siempre devolverá un proveedor de descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-643">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="58bae-644">Incluso el valor predeterminado <xref:System.ComponentModel.TypeDescriptor> implementación se basa en un <xref:System.ComponentModel.TypeDescriptionProvider>.</span><span class="sxs-lookup"><span data-stu-id="58bae-644">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-645">
            <paramref name="instance" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-645">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-646">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-646">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-647">Devuelve el proveedor de descripciones de tipos para el tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-647">Returns the type description provider for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-648">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> asociado al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-649">El <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> método siempre devolverá un proveedor de descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="58bae-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="58bae-650">Incluso el valor predeterminado <xref:System.ComponentModel.TypeDescriptor> implementación se basa en un <xref:System.ComponentModel.TypeDescriptionProvider>.</span><span class="sxs-lookup"><span data-stu-id="58bae-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-651">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-651">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-652">Devuelve un objeto <see cref="T:System.Type" /> que se puede utilizar para llevar a cabo la reflexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-652">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58bae-653">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-653">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-654">Devuelve un objeto <see cref="T:System.Type" /> que se puede utilizar para llevar a cabo la reflexión teniendo en cuenta un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-654">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-655">
            <see cref="T:System.Type" /> para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-655">A <see cref="T:System.Type" /> for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-656">El <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> método es una versión de bajo nivel de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-656">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="58bae-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> se utiliza normalmente para realizar la reflexión estándar en un objeto cuando ningún descriptor de tipos personalizados puede encontrarse para él.</span><span class="sxs-lookup"><span data-stu-id="58bae-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-658">
            <paramref name="instance" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-658">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-659">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-659">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-660">Devuelve un objeto <see cref="T:System.Type" /> que se puede utilizar para realizar la reflexión teniendo en cuenta un tipo de clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58bae-661">
            <see cref="T:System.Type" /> de la clase especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-661">A <see cref="T:System.Type" /> of the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-662">El <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> método es una versión de bajo nivel de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="58bae-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> se utiliza normalmente para realizar la reflexión estándar contra una clase cuando no puede encontrarse ningún descriptor de tipos personalizado para él.</span><span class="sxs-lookup"><span data-stu-id="58bae-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-664">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-664">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-665">Obtiene un tipo que representa un proveedor de descripción de tipos para todos los tipos de interfaz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-665">Gets a type that represents a type description provider for all interface types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58bae-666">
            <see cref="T:System.Type" /> que representa un proveedor de descripción de tipo personalizado para todos los tipos de interfaz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-666">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-667">El <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> propiedad obtiene un <xref:System.Type> objeto que se puede pasar a la <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> métodos para definir un proveedor de descripción de tipos para tipos de interfaz.</span><span class="sxs-lookup"><span data-stu-id="58bae-667">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-668">Borra las propiedades y los eventos de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-668">Clears the properties and events from the cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="58bae-669">Componente para el que han cambiado las propiedades o eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-669">A component for which the properties or events have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-670">Borra las propiedades y eventos para el componente especificado de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-670">Clears the properties and events for the specified component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-671">Propiedades y eventos se almacenan en caché por <xref:System.ComponentModel.TypeDescriptor> para acelerar el proceso.</span><span class="sxs-lookup"><span data-stu-id="58bae-671">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="58bae-672">Normalmente, son constantes durante la vigencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-672">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="58bae-673">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-673">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="58bae-674">En este caso, debe llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-674">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="58bae-675">Este método sólo se usa en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-675">This method is used only at design time.</span></span> <span data-ttu-id="58bae-676">No se utiliza en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="58bae-676">It is not used during run time.</span></span>  
  
 <span data-ttu-id="58bae-677">Este método también provoca un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento cuando cambian las propiedades o los eventos de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-677">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="58bae-678">Este evento sólo se desencadena si se produjo una llamada anterior a la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> o <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> método que la información almacenada en caché.</span><span class="sxs-lookup"><span data-stu-id="58bae-678">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-679">Para obtener un ejemplo del uso de este método, consulte la <xref:System.ComponentModel.RefreshEventHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-679">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="58bae-680">
            <see cref="T:System.Reflection.Assembly" /> que representa el ensamblado que se va a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-680">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span>
          </span>
          <span data-ttu-id="58bae-681">Se actualizará cada <see cref="T:System.Type" /> de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-681">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-682">Borra las propiedades y eventos para el ensamblado especificado de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-682">Clears the properties and events for the specified assembly from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-683">Propiedades y eventos se almacenan en caché por <xref:System.ComponentModel.TypeDescriptor> para acelerar el proceso.</span><span class="sxs-lookup"><span data-stu-id="58bae-683">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="58bae-684">Normalmente, son constantes durante la vigencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-684">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="58bae-685">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-685">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="58bae-686">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-686">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="58bae-687">Este método sólo se usa en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-687">This method is used only at design time.</span></span> <span data-ttu-id="58bae-688">No se utiliza en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="58bae-688">It is not used during run time.</span></span>  
  
 <span data-ttu-id="58bae-689">Antes de realizar una llamada a la <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> método para borrar la memoria caché, debe llamar a la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método para que el ensamblado específico para almacenar en caché la información en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="58bae-689">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="58bae-690">Este método también provoca un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para notificar a todas las clases que desean recibir una notificación cuando la propiedad de conjunto de cambios de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-690">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module">
          <span data-ttu-id="58bae-691">
            <see cref="T:System.Reflection.Module" /> que representa el módulo que se va a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-691">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span>
          </span>
          <span data-ttu-id="58bae-692">Se actualizará cada <see cref="T:System.Type" /> de este módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-692">Each <see cref="T:System.Type" /> in this module will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-693">Borra las propiedades y eventos para el módulo especificado de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-693">Clears the properties and events for the specified module from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-694">Propiedades y eventos se almacenan en caché por <xref:System.ComponentModel.TypeDescriptor> para acelerar el proceso.</span><span class="sxs-lookup"><span data-stu-id="58bae-694">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="58bae-695">Normalmente, son constantes durante la vigencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-695">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="58bae-696">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-696">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="58bae-697">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-697">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="58bae-698">Este método sólo se usa en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-698">This method is used only at design time.</span></span> <span data-ttu-id="58bae-699">No se utiliza en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="58bae-699">It is not used during run time.</span></span>  
  
 <span data-ttu-id="58bae-700">Antes de realizar una llamada a la <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> método para borrar la memoria caché, debe llamar a la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> método para que el módulo específico para almacenar en caché la información en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="58bae-700">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="58bae-701">Este método también provoca un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para notificar a todas las clases que desean recibir una notificación cuando la propiedad de conjunto de cambios de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-701">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58bae-702">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-702">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-703">Borra las propiedades y los eventos para el tipo especificado de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-703">Clears the properties and events for the specified type of component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-704">Llame a esta versión de este método solo cuando no tiene una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-704">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="58bae-705">Propiedades y eventos se almacenan en caché por <xref:System.ComponentModel.TypeDescriptor> para acelerar el proceso.</span><span class="sxs-lookup"><span data-stu-id="58bae-705">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="58bae-706">Normalmente, son constantes durante la vigencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-706">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="58bae-707">Sin embargo, los proveedores y diseñadores extensores pueden cambiar el conjunto de propiedades en un objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-707">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="58bae-708">Si es así, puede llamar a este método para borrar los descriptores de eventos y propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="58bae-708">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="58bae-709">Este método sólo se usa en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="58bae-709">This method is used only at design time.</span></span> <span data-ttu-id="58bae-710">No se utiliza en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="58bae-710">It is not used during run time.</span></span>  
  
 <span data-ttu-id="58bae-711">Este método también provoca un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento cuando cambian las propiedades o los eventos de un componente.</span><span class="sxs-lookup"><span data-stu-id="58bae-711">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="58bae-712">Este evento sólo se desencadena si se produjo una llamada anterior a la <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> o <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> método que la información almacenada en caché.</span><span class="sxs-lookup"><span data-stu-id="58bae-712">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-713">Se produce cuando se borra la memoria caché para un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-713">Occurs when the cache for a component is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-714">Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="58bae-714">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58bae-715">Para obtener un ejemplo del uso de este evento, vea la <xref:System.ComponentModel.RefreshEventHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="58bae-715">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="58bae-716">
            <see cref="T:System.Object" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-716">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="58bae-717">
            <see cref="T:System.Object" /> secundario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-717">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-718">Quita una asociación entre dos objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-718">Removes an association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-719">El <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> método quita una asociación entre dos objetos se forma el <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-719">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="58bae-720">Un <xref:System.WeakReference> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no tiene influencia cuando se finaliza o recolección de elementos no utilizados reclame cualquiera de los objetos.</span><span class="sxs-lookup"><span data-stu-id="58bae-720">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-721">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-721">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-722">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-722">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-723">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-723">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-724">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-724">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="58bae-725">
            <see cref="T:System.Object" /> principal de una asociación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-725">The primary <see cref="T:System.Object" /> in an association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-726">Quita todas las asociaciones de un objeto principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-726">Removes all associations for a primary object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-727">El <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> método quita todas las asociaciones entre un objeto principal y todos sus objetos secundarios, creados mediante llamadas a la <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-727">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="58bae-728">Un <xref:System.WeakReference> se utiliza para mantener la asociación entre el objeto principal y secundario; por lo tanto, este método no tiene influencia cuando se finaliza o recolección de elementos no utilizados reclame principal de los objetos secundarios.</span><span class="sxs-lookup"><span data-stu-id="58bae-728">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-729">
            <paramref name="primary" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-729">
              <paramref name="primary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-730">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-730">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-731">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-731">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-732">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-732">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-733">Quita un proveedor de descripción de tipo agregado previamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-733">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-734">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-734">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="58bae-735">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-735">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-736">Quita un proveedor de descripción de tipos agregado previamente que está asociado al objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-736">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-737">Este método quita un proveedor de descripción de tipos agregado previamente con el <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-737">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="58bae-738">Si se quita un proveedor hace un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para el objeto asociado.</span><span class="sxs-lookup"><span data-stu-id="58bae-738">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="58bae-739">Use la <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método si tiene que llamar desde código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-739">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-740">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-740">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-741">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-741">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-742">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-742">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-743">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-743">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-744">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-744">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-745">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-745">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-746">Quita un proveedor de descripción de tipos agregado previamente que está asociado al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-746">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-747">Este método quita un proveedor de descripción de tipos agregado previamente con el <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-747">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="58bae-748">Si se quita un proveedor hace un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para el tipo asociado.</span><span class="sxs-lookup"><span data-stu-id="58bae-748">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="58bae-749">Use la <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método si tiene que llamar desde código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-749">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-750">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-750">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="58bae-751">Para obtener acceso completo a los recursos del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-751">for full access to system resources.</span>
          </span>
          <span data-ttu-id="58bae-752">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-752">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="58bae-753">Estado asociado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-753">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58bae-754">Quita un proveedor de descripción de tipo agregado previamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-754">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-755">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-755">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="58bae-756">Instancia del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-756">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-757">Quita un proveedor de descripción de tipos agregado previamente que está asociado al objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-757">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-758">Este método quita un proveedor de descripción de tipos agregado previamente con el <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-758">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="58bae-759">Si se quita un proveedor hace un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para el objeto asociado.</span><span class="sxs-lookup"><span data-stu-id="58bae-759">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="58bae-760">Se puede llamar a este método desde el código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-760">This method can be called from partially trusted code.</span></span> <span data-ttu-id="58bae-761">Si <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> está definido, el llamador puede registrar un proveedor para la instancia especificada si su tipo es también parcialmente confiable.</span><span class="sxs-lookup"><span data-stu-id="58bae-761">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="58bae-762">Use la <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> método si no es necesario llamar a código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-762">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-763">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-763">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="58bae-764">Para acceder al registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-764">For registry access.</span>
          </span>
          <span data-ttu-id="58bae-765">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-765">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-766">Enumeración asociada: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-766">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="58bae-767">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-767">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-768">Tipo asociado: el <see cref="T:System.Security.PermissionSet" /> que requiere el ensamblado que define el <paramref name="instance" /> tipo del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-768">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="58bae-769">
            <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-769">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58bae-770">
            <see cref="T:System.Type" /> del componente de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-770">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-771">Quita un proveedor de descripción de tipos agregado previamente que está asociado al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-771">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58bae-772">Este método quita un proveedor de descripción de tipos agregado previamente con el <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método.</span><span class="sxs-lookup"><span data-stu-id="58bae-772">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="58bae-773">Si se quita un proveedor hace un <xref:System.ComponentModel.TypeDescriptor.Refreshed> evento para el tipo asociado.</span><span class="sxs-lookup"><span data-stu-id="58bae-773">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="58bae-774">Se puede llamar a este método desde el código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-774">This method can be called from partially trusted code.</span></span> <span data-ttu-id="58bae-775">Si <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> está definido, el llamador puede anular el registro de un proveedor para el tipo especificado si también es de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-775">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="58bae-776">Use la <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> método si no es necesario llamar a código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="58bae-776">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-777">Uno o ambos parámetros son <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-777">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="58bae-778">Para acceder al registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-778">For registry access.</span>
          </span>
          <span data-ttu-id="58bae-779">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-779">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-780">Enumeración asociada: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-780">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="58bae-781">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-781">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="58bae-782">Tipo asociado: el <see cref="T:System.Security.PermissionSet" /> que requiere el ensamblado que define <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-782">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos">
          <span data-ttu-id="58bae-783">
            <see cref="T:System.Collections.IList" /> que contiene los descriptores que se van a ordenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-783">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58bae-784">Ordena los descriptores usando el nombre del descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-784">Sorts descriptors using the name of the descriptor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58bae-785">
            <paramref name="infos" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58bae-785">
              <paramref name="infos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>