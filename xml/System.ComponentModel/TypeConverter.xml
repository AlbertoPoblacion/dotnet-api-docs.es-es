<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29784c7bb8db50596e86f55caea973624c84e3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f4c24-101">Proporciona un modo unificado para convertir los tipos de valores en otros tipos, así como para obtener acceso a valores estándar y a subpropiedades.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4c24-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-102">El tipo de convertidor más común es que convierte a y desde una representación de texto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="f4c24-103">El convertidor de tipos para una clase se enlaza a la clase con un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="f4c24-104">A menos que se reemplace este atributo, todas las clases que heredan de esta clase usa el mismo convertidor de tipos como clase base.</span><span class="sxs-lookup"><span data-stu-id="f4c24-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4c24-105">Por motivos de sistema de tipo general, no tener acceso a un convertidor de tipos directamente.</span><span class="sxs-lookup"><span data-stu-id="f4c24-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="f4c24-106">En su lugar, tener acceso al convertidor apropiado utilizando <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="f4c24-107">Para obtener más información, vea los ejemplos de código proporcionados.</span><span class="sxs-lookup"><span data-stu-id="f4c24-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="f4c24-108">**Tenga en cuenta** para propósitos de XAML, un procesador XAML busca la <xref:System.ComponentModel.TypeConverterAttribute> directamente, en lugar de pasar a través de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="f4c24-109">Para los casos donde desea una <xref:System.ComponentModel.TypeDescriptor> instancia desde el código o en el crea una instancia compartida en WPF recursos, es aceptable construirlo directamente sin hacer referencia a <xref:System.ComponentModel.TypeDescriptor> u otro sistema de reflexión y el tipo que se admiten.</span><span class="sxs-lookup"><span data-stu-id="f4c24-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="f4c24-110">Las clases derivadas de <xref:System.ComponentModel.TypeConverter> se suele hacer referencia como parte de cómo un procesador XAML convierte un valor de texto de inicialización o el atributo de marcado (que es una cadena en Sí) y genera un objeto para ver una representación de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="f4c24-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="f4c24-111">Los autores de tipo personalizado que se va a admitir un comportamiento de conversión de tipos para XAML normalmente implementan una <xref:System.ComponentModel.TypeConverter> clase que es compatible con su propia y exclusiva `ConvertFrom` comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="f4c24-112">Este comportamiento permite la conversión de tipo de la cadena proporcionada como un valor de atributo XAML y proporciona un procesador XAML con la compatibilidad necesaria para crear un objeto de la cadena, por lo que el objeto se puede generar en un gráfico de objetos analizado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="f4c24-113">Tipos personalizados o los miembros de tipos personalizados se indican aplicando <xref:System.ComponentModel.TypeConverterAttribute> a las definiciones, con el atributo hace referencia a personalizado <xref:System.ComponentModel.TypeConverter> implementación.</span><span class="sxs-lookup"><span data-stu-id="f4c24-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="f4c24-114">Para obtener más información, consulte [convertidores de tipos para información general sobre XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="f4c24-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c24-115">En el ejemplo de código siguiente se muestra cómo crear una instancia de un convertidor de tipos y enlazarla a una clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="f4c24-116">La clase que implementa el convertidor, `MyClassConverter`, debe heredar de la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f4c24-117">Si tiene una propiedad que tiene una enumeración, compruebe si un valor de enumeración es válido antes de establecer la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f4c24-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="f4c24-118">El siguiente ejemplo de código requiere que una enumeración denominada `MyPropertyEnum` se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="f4c24-119">Otro uso frecuente de convertidor de tipo es convertir un objeto en una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="f4c24-120">En el ejemplo de código siguiente se imprime el nombre de la <xref:System.Drawing.Color> almacenado en la variable `c`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="f4c24-121">También puede utilizar un convertidor de tipos para convertir un valor de su nombre, como se muestra en el ejemplo de código siguiente.</span><span class="sxs-lookup"><span data-stu-id="f4c24-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="f4c24-122">En el siguiente ejemplo de código, puede utilizar un convertidor de tipos para imprimir el conjunto de valores estándares que admite el objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="f4c24-123">Heredar de <see cref="T:System.ComponentModel.TypeConverter" /> para implementar sus propios requisitos de conversión.</span>
        <span class="sxs-lookup">
          <span data-stu-id="f4c24-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="f4c24-124">Al heredar de esta clase, puede invalidar los métodos siguientes:</span>
        <span class="sxs-lookup">
          <span data-stu-id="f4c24-124">When you inherit from this class, you can override the following methods:</span>
        </span>  
  
-   <span data-ttu-id="f4c24-125">Para admitir la conversión de tipo personalizado, invalide el <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, y <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="f4c24-126">Para convertir tipos que deben volver a crear el objeto para cambiar su valor, reemplace el <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> y <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="f4c24-127">Para convertir tipos que admiten propiedades, reemplace el <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> y <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span><span data-ttu-id="f4c24-128">Si la clase que está convirtiendo no tiene propiedades y debe implementar propiedades, puede usar el <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> clase como base para implementar los descriptores de propiedades.</span><span class="sxs-lookup"><span data-stu-id="f4c24-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span><span data-ttu-id="f4c24-129">Al heredar de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, es necesario reemplazar el <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> y <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="f4c24-130">Para convertir tipos que admiten valores estándar, reemplace el <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> y <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span><block subset="none" type="note"><para><span data-ttu-id="f4c24-131">El tipo derivado puede marcarse como <see langword="internal" /> o <see langword="private" />, pero se puede crear una instancia de su tipo con la <see cref="T:System.ComponentModel.TypeDescriptor" /> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span><span data-ttu-id="f4c24-132">No escriba código inseguro pensando que el llamador es de confianza.</span><span class="sxs-lookup"><span data-stu-id="f4c24-132">Do not write insecure code by assuming the caller is trusted.</span></span><span data-ttu-id="f4c24-133">En su lugar, se supone que los llamadores pueden crear instancias de su tipo en confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="f4c24-133">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block><span data-ttu-id="f4c24-134">Para obtener más información sobre los convertidores de tipos para fines generales (distintos de XAML), consulte [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) o [conversión de tipos generalizada](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="f4c24-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-135">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-136">Devuelve si este convertidor puede convertir un objeto de un tipo al tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-136">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="f4c24-137">
            <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-138">Devuelve si este convertidor puede convertir un objeto del tipo dado al tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-139">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-139">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-140">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="f4c24-141">Nunca devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-142">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="f4c24-143">
            <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-144">Devuelve si este convertidor puede convertir un objeto del tipo especificado al tipo de este convertidor, mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-145">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-146">Tal y como se implementa en esta clase, este método devuelve `false`, a menos que `sourceType` es una <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-147">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-147">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="f4c24-148">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-149">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-149">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-150">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-150">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-151">Devuelve si este convertidor puede convertir el objeto al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-151">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="f4c24-152">
            <see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-153">Devuelve si este convertidor puede convertir el objeto al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-153">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-154">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-154">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-155">Si `destinationType` es una cadena, la implementación predeterminada de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-156">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4c24-157">
            <see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-158">Devuelve si este convertidor puede convertir el objeto al tipo especificado, con el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-159">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-159">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-160">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-161">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-162">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-163">Si `destinationType` es una cadena, la implementación predeterminada de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-164">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-164">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-165">Convierte el valor especificado en el tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-165">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-166">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-166">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-167">Convierte el valor especificado en el tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-167">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-168">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-168">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-169">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-169">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-170">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4c24-171">
            <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-172">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-172">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-173">Convierte el objeto determinado al tipo de este convertidor usando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-173">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-174">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-174">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-175">Los autores de tipo personalizado que se va a admitir un comportamiento de conversión de tipos para XAML normalmente implementan una <xref:System.ComponentModel.TypeConverter> clase que admita <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="f4c24-176">Este comportamiento permite la conversión de tipo de la cadena proporcionada como un valor de atributo XAML y proporciona un procesador XAML con la compatibilidad necesaria para crear un objeto de la cadena, por lo que el objeto se puede generar en un gráfico de objetos analizado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="f4c24-177">Tipos personalizados o los miembros de tipos personalizados se indican aplicando <xref:System.ComponentModel.TypeConverterAttribute> a las definiciones, con el atributo hace referencia a personalizado <xref:System.ComponentModel.TypeConverter> implementación.</span><span class="sxs-lookup"><span data-stu-id="f4c24-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="f4c24-178">Para propósitos de XAML, no se suele proporcionar implementaciones de la bifurcación en función de `culture`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="f4c24-179">Esto es porque XAML se precompila en un contexto de entorno de desarrollo y la información específica de la referencia cultural para tiempo de ejecución de XAML no es relevante para la conversión de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="f4c24-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="f4c24-180">Para obtener más información, consulte [convertidores de tipos para información general sobre XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="f4c24-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-181">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-181">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-182">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-182">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="f4c24-183">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-184">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-184">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-185">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-185">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f4c24-186">Para los modelos de implementación para los convertidores de tipos que se utilizan para admitir tipos personalizados y XAML, vea [convertidores de tipos para información general sobre XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-187">Convierte el valor a un tipo de este convertidor, utilizando la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-187">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f4c24-188">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-188">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-189">Convierte la cadena dada al tipo de este convertidor, utilizando la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-189">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-190">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-190">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-191">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-192">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-192">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-193">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="f4c24-194">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-194">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-195">Convierte la cadena dada en el tipo de este convertidor, utilizando el contexto especificado y la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-196">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-196">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-197">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="f4c24-198">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="f4c24-199">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-200">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-201">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-202">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-202">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-203">Convierte el texto especificado a un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-203">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f4c24-204">Representación de texto del objeto que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-204">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-205">Convierte el texto especificado a un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-205">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-206">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-206">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-207">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c24-208">Para obtener un ejemplo de esta función, consulte la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-209">No se puede convertir la cadena en el objeto apropiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-209">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-210">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="f4c24-211">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-211">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-212">Convierte el texto dado a un objeto, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-212">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-213">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-213">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-214">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="f4c24-215">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="f4c24-216">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-217">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-218">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-219">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-219">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-220">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4c24-221">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-221">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="f4c24-222">Si se pasa <see langword="null" />, se supone que se trata de la actual información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-222">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="f4c24-223">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-223">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-224">Convierte el texto dado a un objeto, utilizando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-224">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-225">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-225">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-226">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="f4c24-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="f4c24-227">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="f4c24-228">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-229">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-230">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-231">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-231">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-232">Convierte el objeto de valor dado al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-232">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-233">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-233">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4c24-234">
            <see cref="T:System.Type" /> al que se va a convertir el parámetro <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-235">Convierte el objeto de valor dado al tipo especificado, utilizando los argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-235">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-236">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-236">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-237">El tipo más común para convertir a y desde es un objeto de cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="f4c24-238">Esta implementación llama <xref:System.Object.ToString%2A> en el objeto, si el objeto es válido y si el tipo de destino es una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f4c24-239">El parámetro <paramref name="destinationType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-240">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-240">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-241">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4c24-242">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-242">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="f4c24-243">Si se pasa <see langword="null" />, se supone que se trata de la actual información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-243">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-244">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4c24-245">
            <see cref="T:System.Type" /> al que se va a convertir el parámetro <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-246">Convierte el objeto de valor determinado al tipo especificado usando el contexto y la información de referencia cultural especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-246">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-247">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-247">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-248">Las conversiones de tipos más frecuentes son las conversiones a objetos de cadena y desde objetos de cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="f4c24-249">Esta implementación llama <xref:System.Object.ToString%2A> en el objeto si dicho objeto es válido y si el tipo de destino es una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="f4c24-250">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-251">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-252">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-253">Los autores de tipo personalizado que se va a admitir un comportamiento de conversión de tipos para XAML normalmente implementan una <xref:System.ComponentModel.TypeConverter> clase que admita <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="f4c24-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="f4c24-254">También pueden implementar estos convertidores de tipos <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> para admitir la serialización de vuelta a XAML.</span><span class="sxs-lookup"><span data-stu-id="f4c24-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="f4c24-255">Algunos escenarios de serialización de XAML no se pueden resolver adecuadamente con <xref:System.ComponentModel.TypeConverter> independiente.</span><span class="sxs-lookup"><span data-stu-id="f4c24-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="f4c24-256">En estos casos, puede que sea necesario definir un <xref:System.Windows.Markup.ValueSerializer> que controla los casos de serialización que en caso contrario, podrían ser controlados por <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="f4c24-257">Para obtener más información, vea <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f4c24-258">El parámetro <paramref name="destinationType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-259">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-259">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-260">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-260">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="f4c24-261">Para los modelos de implementación para los convertidores de tipos que se utilizan para admitir tipos personalizados y XAML, vea [convertidores de tipos para información general sobre XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-262">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-262">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-263">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-263">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-264">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-264">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-265">Una clase <see cref="T:System.String" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-265">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-266">El `context` parámetro puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="f4c24-267">Puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-267">This can be `null`, so always check.</span></span> <span data-ttu-id="f4c24-268">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-269">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-270">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-270">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-271">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-272">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-272">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-273">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-274">Una clase <see cref="T:System.String" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-274">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-275">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-276">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-277">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-278">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-279">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-279">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-280">Convierte el valor especificado a una representación de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-280">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-281">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-281">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-282">Convierte el valor especificado a una representación de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-282">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-283">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-283">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-284">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c24-285">Para obtener un ejemplo de esta función, consulte la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-286">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-286">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-287">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-288">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-288">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-289">Convierte el valor dado a una representación de cadena, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-289">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-290">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-290">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-291">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-292">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-293">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-294">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-295">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-295">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-296">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4c24-297">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-297">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="f4c24-298">Si se pasa <see langword="null" />, se supone que se trata de la actual información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-298">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-299">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-299">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-300">Convierte el valor dado a una representación de cadena, utilizando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-300">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-301">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-301">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-302">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-303">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-304">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-305">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-306">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-306">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-307">Vuelve a crear un <see cref="T:System.Object" /> dado un conjunto de valores de propiedad del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="f4c24-308">
            <see cref="T:System.Collections.IDictionary" /> que representa un diccionario de nuevos valores de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-309">Vuelve a crear un <see cref="T:System.Object" /> dado un conjunto de valores de propiedad del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-310">
            <see cref="T:System.Object" /> que representa el <see cref="T:System.Collections.IDictionary" /> especificado o <see langword="null" /> si no es posible crear el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="f4c24-311">Este método devuelve siempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-311">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-312">Utilice este método para objetos que son inmutables, pero para el que desea proporcionar propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="f4c24-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="f4c24-313">El diccionario proporcionado por el `propertyValues` parámetro tiene una serie de pares nombre/valor, uno para cada propiedad devuelta desde <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-314">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="f4c24-315">
            <see cref="T:System.Collections.IDictionary" /> de nuevos valores de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-316">Crea una instancia del tipo al que está asociado este <see cref="T:System.ComponentModel.TypeConverter" />, mediante el contexto especificado, según un conjunto de valores de propiedad para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-317">
            <see cref="T:System.Object" /> que representa el <see cref="T:System.Collections.IDictionary" /> especificado o <see langword="null" /> si no es posible crear el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="f4c24-318">Este método devuelve siempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-318">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-319">Utilice este método para objetos que son inmutables, pero para el que desea proporcionar propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="f4c24-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-320">Invalide este método si el tipo que desea convertir debe volver a crear el objeto para cambiar su valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-320">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="f4c24-321">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-322">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-322">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-323">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-323">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f4c24-324">El diccionario proporcionado por el <paramref name="propertyValues" /> parámetro tiene una serie de pares nombre/valor, uno para cada propiedad devuelta desde <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-325">
            <see cref="T:System.Object" /> que se va a convertir, o <see langword="null" /> si no está disponible el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-326">Devuelve una excepción que se debe iniciar cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-326">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-327">
            <see cref="T:System.Exception" /> que representa la excepción que se va a producir cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-328">Este método la produce automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-328">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-329">
            <see cref="T:System.Object" /> que se va a convertir, o <see langword="null" /> si no está disponible el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4c24-330">
            <see cref="T:System.Type" /> que representa el tipo al que se intenta convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-331">Devuelve una excepción que se debe iniciar cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-331">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-332">
            <see cref="T:System.Exception" /> que representa la excepción que se va a producir cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4c24-333">Este método la produce automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-333">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-334">Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-335">Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-336">
            <see langword="true" /> si, al cambiar una propiedad de este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-336">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-337">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-338">Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-339">
            <see langword="true" /> si, al cambiar una propiedad de este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-339">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-340">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-341">Invalide este método si el tipo que desea convertir debe volver a crear el objeto para cambiar su valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-341">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="f4c24-342">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-343">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-343">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-344">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-344">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-345">Devuelve una colección de propiedades para el tipo de matriz especificado por el valor del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-345">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-346">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-347">Devuelve una colección de propiedades para el tipo de matriz especificado por el valor del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-347">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-348">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-349">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="f4c24-350">De forma predeterminada, un tipo no devuelve propiedades.</span><span class="sxs-lookup"><span data-stu-id="f4c24-350">By default, a type does not return properties.</span></span> <span data-ttu-id="f4c24-351">Una implementación sencilla de este método puede llamar a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-352">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-353">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-354">Devuelve una colección de propiedades para el tipo de matriz especificado por valor del parámetro, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-355">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-356">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-357">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-358">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-359">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="f4c24-360">De forma predeterminada, un tipo no devuelve propiedades.</span><span class="sxs-lookup"><span data-stu-id="f4c24-360">By default, a type does not return properties.</span></span> <span data-ttu-id="f4c24-361">Una implementación sencilla de este método puede llamar a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="f4c24-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-362">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-363">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="f4c24-364">Matriz de tipo <see cref="T:System.Attribute" /> que se utiliza como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-365">Devuelve una colección de propiedades para el tipo de matriz especificado por el parámetro de valor, usando el contexto y los atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-366">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-367">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-368">Invalide este método si el tipo que desea convertir admite propiedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-368">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="f4c24-369">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-370">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-370">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-371">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-371">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f4c24-372">La matriz de atributos se utiliza para filtrar la matriz.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-372">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="f4c24-373">Los atributos pueden tener una combinación de <see cref="T:System.Type" /> y <see cref="T:System.Attribute" /> objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="f4c24-374">El filtrado se define mediante las siguientes reglas:</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-374">Filtering is defined by the following rules:</span>
            </span>  
  
-   <span data-ttu-id="f4c24-375">A <see cref="T:System.Type" /> se trata como un carácter comodín; coincide con una propiedad que tiene el <see cref="T:System.Type" /> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="f4c24-376">Si una propiedad no tiene un <see cref="T:System.Attribute" /> de la misma clase, la propiedad no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="f4c24-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="f4c24-377">Si el atributo es una instancia de <see cref="T:System.Attribute" />, la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="f4c24-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="f4c24-378">Si un <see cref="T:System.Attribute" /> se especificó la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <see cref="T:System.Attribute" /> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f4c24-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-379">Devuelve si este objeto admite propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-379">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-380">Devuelve si este objeto admite propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-380">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-381">
            <see langword="true" /> si se ha de llamar a <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> para buscar las propiedades de este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-381">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-382">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-383">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-384">Devuelve si este objeto admite propiedades, mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-384">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-385">
            <see langword="true" /> si se ha de llamar a <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> para buscar las propiedades de este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-385">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-386">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-387">Invalide este método si el tipo que desea convertir admite propiedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-387">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="f4c24-388">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-389">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-389">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-390">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-390">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-391">Devuelve una colección de valores estándar para el tipo de datos para el que está diseñado este convertidor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-391">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-392">Devuelve una colección de valores estándar del contexto predeterminado para el tipo de datos para el que está diseñado este convertidor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-393">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos o <see langword="null" /> si el tipo de datos no es compatible con un conjunto estándar de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-394">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-395">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede utilizarse para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="f4c24-396">Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-396">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-397">Devuelve una colección de valores estándar para el tipo de datos para el que está diseñado este convertidor de tipos cuando se proporciona con un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-398">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos, o <see langword="null" /> si el tipo de datos no es compatible con un conjunto estándar de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-399">Como se implementa en <xref:System.ComponentModel.TypeConverter>, este método devuelve siempre `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c24-400">Para obtener un ejemplo de esta función, consulte la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-401">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-401">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-402">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-403">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-404">
            <see langword="true" />si el <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exhaustiva de posibles valores; <see langword="false" />si hay otros valores posibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-404">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-405">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="f4c24-406">Si la lista es exclusiva, como ocurre en el caso de un tipo de datos de enumeración, entonces no será válido ningún otro valor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="f4c24-407">Si la lista no es exclusiva, puede haber otros valores válidos además de la lista de valores estándar que proporciona el método <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="f4c24-408">Si los valores son exclusivos, la lista devuelta por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> no debe permitir que se editen estos valores.</span><span class="sxs-lookup"><span data-stu-id="f4c24-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-409">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-410">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva de posibles valores, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-411">
            <see langword="true" />si el <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exhaustiva de posibles valores; <see langword="false" />si hay otros valores posibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-411">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-412">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="f4c24-413">Si la lista es exclusiva, como ocurre en el caso de un tipo de datos de enumeración, entonces no será válido ningún otro valor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="f4c24-414">Si la lista no es exclusiva, puede haber otros valores válidos además de la lista de valores estándar que proporciona el método <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c24-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="f4c24-415">Si los valores son exclusivos, la lista devuelta por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> no debe permitir que se editen estos valores.</span><span class="sxs-lookup"><span data-stu-id="f4c24-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-416">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-416">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="f4c24-417">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="f4c24-418">Este parámetro puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-418">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="f4c24-419">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-419">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-420">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-420">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-421">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-421">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-422">Es <see langword="true" /> si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-422">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-423">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-424">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-425">Es <see langword="true" /> si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-425">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-426">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="f4c24-427">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-428">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-429">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-430">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-430">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4c24-431">Devuelve si el valor de objeto dado es válido para este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-431">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f4c24-432">Objeto cuya validez se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-432">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-433">Devuelve si el valor de objeto dado es válido para este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-433">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-434">
            <see langword="true" />si el valor especificado es válido para este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-434">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-435">A partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> método detecta excepciones de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> y <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="f4c24-436">Si el tipo de valor de entrada hace <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para devolver `false`, o si el valor de entrada hace <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para generar una excepción, el <xref:System.ComponentModel.TypeConverter.IsValid%2A> método `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="f4c24-437">Para habilitar el comportamiento heredado, inserte las líneas siguientes en el archivo de configuración de la aplicación, por ejemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="f4c24-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-438">Invalide este método si el tipo que desea convertir admite valores estándar que se pueden validar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-438">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="f4c24-439">El <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> método se utiliza para validar un valor dentro del tipo en lugar de para determinar si <paramref name="value" /> se puede convertir al tipo dado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="f4c24-440">Por ejemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> puede usarse para determinar si un valor determinado es válido para un tipo de enumeración.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="f4c24-441">Para obtener un ejemplo, consulta <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="f4c24-442">Puede escribir su propio <c>WillConvertSucceed</c> método ajustando el <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> y <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> métodos en bloques de excepción.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4c24-443">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4c24-444">
            <see cref="T:System.Object" /> cuya validez se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-444">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-445">Indica si el objeto de valor especificado es válido para este tipo y para el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-445">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-446">
            <see langword="true" />si el valor especificado es válido para este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-446">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-447">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="f4c24-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="f4c24-448">Este parámetro puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="f4c24-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="f4c24-449">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="f4c24-450">A partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> método detecta excepciones de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> y <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f4c24-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="f4c24-451">Si el tipo de valor de entrada hace <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para devolver `false`, o si el valor de entrada hace <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para generar una excepción, el <xref:System.ComponentModel.TypeConverter.IsValid%2A> método `false`.</span><span class="sxs-lookup"><span data-stu-id="f4c24-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="f4c24-452">Para habilitar el comportamiento heredado, inserte las líneas siguientes en el archivo de configuración de la aplicación, por ejemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="f4c24-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f4c24-453">Para obtener un ejemplo de esta función, consulte la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="f4c24-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f4c24-454">Invalide este método si el tipo que desea convertir admite valores estándar que se pueden validar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-454">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="f4c24-455">El <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> método se utiliza para validar un valor dentro del tipo en lugar de para determinar si <paramref name="value" /> se puede convertir al tipo dado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="f4c24-456">Por ejemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> puede usarse para determinar si un valor determinado es válido para un tipo de enumeración.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="f4c24-457">Para obtener un ejemplo, consulta <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f4c24-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="f4c24-458">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a ordenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="f4c24-459">Matriz de nombres que aparecen en el orden en el que desea que aparezcan las propiedades en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-459">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4c24-460">Ordena una colección de propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-460">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4c24-461">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades ordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4c24-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c24-462">Todas las propiedades de la colección que ya no están en la matriz de nombres se agregan alfabéticamente al final.</span><span class="sxs-lookup"><span data-stu-id="f4c24-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="f4c24-463">Si el `names` parámetro es una matriz vacía o `null`, todas las propiedades de la colección se ordenan alfabéticamente.</span><span class="sxs-lookup"><span data-stu-id="f4c24-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>