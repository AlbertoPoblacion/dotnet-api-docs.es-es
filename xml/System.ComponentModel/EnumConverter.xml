<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EnumConverter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e95fb97d99557fe05b6460ab0b7e8cdb859a770a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e95fb97d99557fe05b6460ab0b7e8cdb859a770a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EnumConverter">
          <source>Provides a type converter to convert <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> objects to and from various other representations.</source>
          <target state="translated">Proporciona un convertidor de tipos para convertir objetos <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> a otras representaciones y desde otras representaciones.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>This converter can only convert an enumeration object to and from a string.</source>
          <target state="translated">Este convertidor sólo puede convertir un objeto de enumeración a y desde una cadena.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.ComponentModel.EnumConverter.Comparer%2A&gt;</ph> property to get an <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> interface that can be used to sort the values of the enumeration.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter&gt;</ph> clase proporciona el <ph id="ph2">&lt;xref:System.ComponentModel.EnumConverter.Comparer%2A&gt;</ph> propiedad que se va a obtener un <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> interfaz que puede utilizarse para ordenar los valores de la enumeración.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>By default, the enumeration values are sorted in the order they appear in the file.</source>
          <target state="translated">De forma predeterminada, los valores de enumeración se ordenan en el orden en que aparecen en el archivo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Para obtener más información sobre los convertidores de tipos, vea la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase base y <bpt id="p1">[</bpt>Cómo: implementar un convertidor de tipos<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>You should never create an instance of an <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter&gt;</ph>.</source>
          <target state="translated">Nunca debe crearse una instancia de un <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">En su lugar, se llama al método <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> de la clase <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">Para obtener más información, vea los ejemplos en la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase base.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>The following code example converts a variable of type <ph id="ph1">&lt;xref:System.Enum&gt;</ph> to a string, and vice versa.</source>
          <target state="translated">En el ejemplo de código siguiente se convierte una variable de tipo <ph id="ph1">&lt;xref:System.Enum&gt;</ph> en una cadena y viceversa.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>The example requires that you have declared an <ph id="ph1">&lt;xref:System.Enum&gt;</ph> called <ph id="ph2">`Servers`</ph> and that it has the following members:</source>
          <target state="translated">El ejemplo requiere que se ha declarado un <ph id="ph1">&lt;xref:System.Enum&gt;</ph> denominado <ph id="ph2">`Servers`</ph> y que tiene los siguientes miembros:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EnumConverter">
          <source>If you want to sort the values into a different order, override the <ph id="ph1">&lt;see cref="P:System.ComponentModel.EnumConverter.Comparer" /&gt;</ph> property.</source>
          <target state="translated">Si desea ordenar los valores en un orden diferente, reemplace el <ph id="ph1">&lt;see cref="P:System.ComponentModel.EnumConverter.Comparer" /&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of enumeration to associate with this enumeration converter.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de enumeración que se va a asociar a este convertidor de enumeraciones.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph> class for the given type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph> para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you wish to convert from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo de origen de la conversión.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.</source>
          <target state="translated">Obtiene un valor que indica si este convertidor puede convertir un objeto del tipo de origen especificado en un objeto de enumeración mediante el contexto especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si este convertidor puede realizar la conversión; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This converter can only convert an enumeration object to and from a string.</source>
          <target state="translated">Este convertidor sólo puede convertir un objeto de enumeración a y desde una cadena.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you wish to convert to.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo al que se desea convertir.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</source>
          <target state="translated">Obtiene un valor que indica si este convertidor puede convertir un objeto al tipo de destino especificado usando el contexto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si este convertidor puede realizar la conversión; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">Invalide este método para proporcionar sus propios requisitos de conversión.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EnumConverter.Comparer">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> that can be used to sort the values of the enumeration.</source>
          <target state="translated">Obtiene una interfaz de <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> que se puede utilizar para ordenar los valores de la enumeración.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EnumConverter.Comparer">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> for sorting the enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> para ordenar los valores de enumeración.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EnumConverter.Comparer">
          <source>By default, the enumeration values are sorted in the order they appear in the file.</source>
          <target state="translated">De forma predeterminada, los valores de enumeración se ordenan en el orden en que aparecen en el archivo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EnumConverter.Comparer">
          <source>If you want to sort the values into a different order, override this property.</source>
          <target state="translated">Si desea ordenar los valores en un orden diferente, invalide esta propiedad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An optional <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> opcional.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>If not supplied, the current culture is assumed.</source>
          <target state="translated">Si no se proporciona una referencia cultural, se usa la actual de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the specified value object to an enumeration object.</source>
          <target state="translated">Convierte el objeto de valor especificado en un objeto de enumeración.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This converter can only convert an enumeration object to and from a string.</source>
          <target state="translated">Este convertidor sólo puede convertir un objeto de enumeración a y desde una cadena.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a valid value for the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> no es un valor válido para el tipo de destino.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">No se puede realizar la conversión.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An optional <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> opcional.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>If not supplied, the current culture is assumed.</source>
          <target state="translated">Si no se proporciona una referencia cultural, se usa la actual de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to convert the value to.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> en que se va convertir el valor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts the given value object to the specified destination type.</source>
          <target state="translated">Convierte el objeto de valor especificado en el tipo de destino especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This converter can only convert an enumeration object to and from a string.</source>
          <target state="translated">Este convertidor sólo puede convertir un objeto de enumeración a y desde una cadena.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The behavior of the <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter.ConvertTo%2A&gt;</ph> method is undefined if the enumeration has multiple fields with the same value.</source>
          <target state="translated">El comportamiento de la <ph id="ph1">&lt;xref:System.ComponentModel.EnumConverter.ConvertTo%2A&gt;</ph> método es indefinido si la enumeración tiene varios campos con el mismo valor.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a valid value for the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> no es un valor válido para la enumeración.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">No se puede realizar la conversión.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EnumConverter.EnumType">
          <source>Specifies the type of the enumerator this converter is associated with.</source>
          <target state="translated">Especifica el tipo del enumerador a que está asociado este convertidor.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EnumConverter.EnumType">
          <source>The type of the enumerator this converter is associated with.</source>
          <target state="translated">El tipo del enumerador a que está asociado este convertidor.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a collection of standard values for the data type this validator is designed for.</source>
          <target state="translated">Obtiene una colección de valores estándar para el tipo de datos para el que está diseñado este validador.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that holds a standard set of valid values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the data type does not support a standard set of values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> que contiene un conjunto estándar de valores válidos, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si el tipo de datos no es compatible con un conjunto estándar de valores.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Any fields of the enumeration that are marked with <ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph> set to <ph id="ph2">`false`</ph> will not be returned.</source>
          <target state="translated">Los campos de la enumeración que se marcan con <ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph> establecido en <ph id="ph2">`false`</ph> no se devolverán.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether the list of standard values returned from <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exclusive list using the specified context.</source>
          <target state="translated">Obtiene un valor que indica si la lista de valores estándar devueltos por el método <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> es una lista exclusiva mediante el contexto especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exhaustive list of possible values; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if other values are possible.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>si el <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> devuelto por <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> es una lista exhaustiva de posibles valores; <ph id="ph4">&lt;see langword="false" /&gt;</ph>si hay otros valores posibles.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</source>
          <target state="translated">Obtiene un valor que indica si el objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista, utilizando el contexto especificado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> should be called to find a common set of values the object supports.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> porque debe llamarse al método <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> para buscar un conjunto común de valores que sea compatible con el objeto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método nunca devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a probar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Gets a value indicating whether the given object value is valid for this type.</source>
          <target state="translated">Obtiene un valor que indica si el valor especificado es válido para este tipo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified value is valid for this object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>si el valor especificado es válido para este objeto; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EnumConverter.Values">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that specifies the possible values for the enumeration.</source>
          <target state="translated">Obtiene o establece una clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> que especifica los valores posibles para la enumeración.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EnumConverter.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that specifies the possible values for the enumeration.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> que especifica los valores posibles para la enumeración.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>