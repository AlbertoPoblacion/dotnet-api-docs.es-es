<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="08e04e06dcec92c59b9060542e5a7a8b7c355107" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37691560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="85d63-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85d63-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-102">El <xref:System.Windows.Forms.MaskedTextBox> control contiene una máscara, formada por caracteres literales y elementos de formato, que prueba todas las entradas de usuario con.</span><span class="sxs-lookup"><span data-stu-id="85d63-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="85d63-103">En lugar de asociar permanentemente un motor de análisis de máscaras específico con <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms que lo proporciona como un servicio independiente, representado por la <xref:System.ComponentModel.MaskedTextProvider> (clase), que define la sintaxis del lenguaje de enmascaramiento se describe en la documentación de el <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="85d63-104">Muchos de los miembros de la <xref:System.Windows.Forms.MaskedTextBox> clase hacen referencia a su implementación a los miembros con el mismo nombre de asociado <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="85d63-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="85d63-105">Por ejemplo, el <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> propiedad de la <xref:System.Windows.Forms.MaskedTextBox> clase hace referencia a todo el acceso a la <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> de la <xref:System.ComponentModel.MaskedTextProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="85d63-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="85d63-106">Utilizado por el motor de análisis de máscaras <xref:System.ComponentModel.MaskedTextProvider> se modela después del control de edición con máscara incluido en Microsoft Visual Basic versión 6.</span><span class="sxs-lookup"><span data-stu-id="85d63-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="85d63-107">Su lenguaje de enmascaramiento se describe en la documentación para el <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="85d63-108">Intervienen tres cadenas distintas con la <xref:System.ComponentModel.MaskedTextProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="85d63-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="85d63-109">Nombre de la cadena</span><span class="sxs-lookup"><span data-stu-id="85d63-109">String name</span></span>|<span data-ttu-id="85d63-110">Descripción</span><span class="sxs-lookup"><span data-stu-id="85d63-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="85d63-111">Carácter de entrada o de cadena</span><span class="sxs-lookup"><span data-stu-id="85d63-111">Input character or string</span></span>|<span data-ttu-id="85d63-112">Representa los caracteres utilizados como entrada que se aplica la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="85d63-113">En realidad, la cadena de entrada puede estar compuesta de varias operaciones de entrada, incluidos <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, y <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="85d63-114">Por lo tanto, la cadena de entrada no son accesibles directamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="85d63-115">Sin embargo, los aspectos de la administración de la cadena de entrada están disponibles aunque el <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> y <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, y <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="85d63-116">Máscara</span><span class="sxs-lookup"><span data-stu-id="85d63-116">Mask</span></span>|<span data-ttu-id="85d63-117">Representa el formato de máscara que se utiliza para transformar la cadena de entrada en la cadena con formato de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="85d63-118">Esta cadena se establece el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> y obtener acceso principalmente aunque el <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="85d63-119">Las características de la máscara también están disponibles a través de otros miembros, como el <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, y <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="85d63-120">Cadena con formato</span><span class="sxs-lookup"><span data-stu-id="85d63-120">Formatted string</span></span>|<span data-ttu-id="85d63-121">Representa la cadena que se produce cuando se aplica la máscara completa a la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="85d63-122">La cadena con formato se puede consultar con muchos miembros de la clase, incluidos <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="85d63-123">El valor completo de la cadena con formato está disponible desde el <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> y <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="85d63-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="85d63-124">La cadena de entrada puede representar la entrada directa del usuario, como en el caso de los <xref:System.Windows.Forms.MaskedTextBox>, o puede generarse por otros procesos no directamente asociados a las operaciones de entrada/salida de usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-126">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-126">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-128">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-129">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-129">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="85d63-130">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-130">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-132">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-133">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-133">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="85d63-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-136">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-137">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-137">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="85d63-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="85d63-139">
            <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-139">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-141">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-142">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-142">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="85d63-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="85d63-144">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-144">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-146">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-147">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-147">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="85d63-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="85d63-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="85d63-150">
            <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-150">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-152">Uso de este constructor equivale exactamente a la siguiente llamada a la <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span><span class="sxs-lookup"><span data-stu-id="85d63-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="85d63-153">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-153">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="85d63-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="85d63-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span>
          </span>
        </param>
        <param name="promptChar">
          <span data-ttu-id="85d63-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="85d63-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="85d63-158">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-158">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-160">Este constructor representa la forma más general sobrecargada.</span><span class="sxs-lookup"><span data-stu-id="85d63-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="85d63-161">El `mask` parámetro debe ajustarse al lenguaje de enmascaramiento definido por el <xref:System.ComponentModel.MaskedTextProvider> (clase), que se detalla en el <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> propiedad de la <xref:System.Windows.Forms.MaskedTextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="85d63-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="85d63-162">Dado que las referencias culturales neutras no se puede consultar para obtener información de referencia cultural específica, el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor va a usar el <xref:System.Globalization.CultureInfo.GetCultures%2A> método para buscar la referencia cultural de no neutro primera a utilizar para determinar los caracteres separadores apropiados.</span><span class="sxs-lookup"><span data-stu-id="85d63-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85d63-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="85d63-164">-or-  The mask contains one or more non-printable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-164">-or-  The mask contains one or more non-printable characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-165">Adds an input character or input string to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-165">Adds an input character or input string to the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-166">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-166">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-167">Adds the specified input character to the end of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-167">Adds the specified input character to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-168">
            <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-168">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-169">El <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> método agrega el `input` valor a la primera posición disponible en la cadena con formato de caracteres después de la posición que se asignó por última vez, que viene representada por la <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-169">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="85d63-170">Este método generará un error para cualquiera de los siguientes motivos:</span><span class="sxs-lookup"><span data-stu-id="85d63-170">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="85d63-171">El valor de entrada, `input`, no es imprimible, o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-171">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-172">Hay cero posiciones de edición disponibles en la cadena con formato, o no hay ninguna posición de edición disponible después de la última posición asignada.</span><span class="sxs-lookup"><span data-stu-id="85d63-172">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-173">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-173">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-174">Adds the characters in the specified input string to the end of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-174">Adds the characters in the specified input string to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-175">
            <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-175">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-176">El <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> método agrega los caracteres desde la `input` cadena a la cadena con formato, empezando por la primera posición disponible después de <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-176">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="85d63-177">Este método generará un error para cualquiera de los siguientes motivos:</span><span class="sxs-lookup"><span data-stu-id="85d63-177">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="85d63-178">Ninguno de los caracteres en el valor de entrada, `input`, son no imprimible o el valor de entrada no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-178">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-179">No hay suficientes posiciones de edición disponibles en la cadena con formato después de la última posición asignada.</span><span class="sxs-lookup"><span data-stu-id="85d63-179">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="85d63-180">Si este método produce un error, no se realizan adiciones y devuelve el método `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-180">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-181">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-181">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-182">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-182">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-183">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-183">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="85d63-184">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-184">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-186">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-186">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-187">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-187">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-188">
            <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-188">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-189">El <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método intenta agregar el `input` valor a la primera posición disponible en la cadena con formato de caracteres después de la posición que se asignó por última vez, que viene representada por la <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-189">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="85d63-190">Este método se producirá un error si todos los puestos disponibles antes de la última posición asignada.</span><span class="sxs-lookup"><span data-stu-id="85d63-190">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="85d63-191">Este método generará un error para cualquiera de los siguientes motivos:</span><span class="sxs-lookup"><span data-stu-id="85d63-191">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="85d63-192">El valor de entrada, `input`, no es imprimible, o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-192">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-193">Hay cero posiciones de edición disponibles en la cadena con formato, o no hay ninguna posición de edición disponible después de la última posición asignada.</span><span class="sxs-lookup"><span data-stu-id="85d63-193">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="85d63-194">Este método funciona igual que la versión invalidada adquirir un solo <xref:System.Char> parámetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, excepto en que se envía la información adicional.</span><span class="sxs-lookup"><span data-stu-id="85d63-194">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-195">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-195">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-196">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-196">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="85d63-197">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-197">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-199">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-199">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-200">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-200">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-201">
            <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-201">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-202">El <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método agrega los caracteres desde la `input` cadena a la cadena con formato, empezando por la primera posición disponible después de <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-202">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="85d63-203">Este método generará un error para cualquiera de los siguientes motivos:</span><span class="sxs-lookup"><span data-stu-id="85d63-203">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="85d63-204">Ninguno de los caracteres en el valor de entrada, `input`, son no imprimible o el valor de entrada no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-204">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-205">No hay suficientes posiciones de edición disponibles en la cadena con formato después de la última posición asignada.</span><span class="sxs-lookup"><span data-stu-id="85d63-205">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="85d63-206">Si este método produce un error, no se realizan adiciones y devuelve el método `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-206">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="85d63-207">Este método funciona igual que la versión invalidada adquirir un solo <xref:System.String> parámetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, excepto en que se envía la información adicional.</span><span class="sxs-lookup"><span data-stu-id="85d63-207">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-208">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-208">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-209">
            <see langword="true" /> Si el usuario puede escribir <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> en el control; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-209">
              <see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85d63-210">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-210">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-211">El <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> el valor de propiedad se establece el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="85d63-211">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="85d63-212">Incluso cuando <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> es `true`, el carácter de entrada debe ser válido para la ubicación actual en la máscara para ser aceptados.</span><span class="sxs-lookup"><span data-stu-id="85d63-212">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-213">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-213">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-214">
            <see langword="true" /> Si solo se acepta caracteres ASCII; <see langword="false" /> si <see cref="T:System.ComponentModel.MaskedTextProvider" /> puede aceptar cualquier carácter Unicode arbitrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-214">
              <see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span>
          </span>
          <span data-ttu-id="85d63-215">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-215">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-216">El <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> el valor de propiedad se establece el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="85d63-216">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="85d63-217">Si `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restringe la entrada del usuario para el juego de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="85d63-217">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-218">Gets the number of editable character positions that have already been successfully assigned an input value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-218">Gets the number of editable character positions that have already been successfully assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-219">Un <see cref="T:System.Int32" /> que contiene el número de posiciones de caracteres modificables de la máscara de entrada que ya se ha asignado un valor de carácter en la cadena con formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-219">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-220">El número total de posiciones de caracteres modificables, representado por la <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propiedad, debe ser igual a la suma de los <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> y <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-220">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-221">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-221">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-222">Un <see cref="T:System.Int32" /> que contiene el número de caracteres modificables coloca que aún no se ha asignado un valor de carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-222">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-223">El número total de posiciones de caracteres modificables, representado por la <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propiedad, debe ser igual a la suma de los <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> y <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-223">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-224">Clears all the input characters from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-224">Clears all the input characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85d63-225">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-225">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-226">El <xref:System.ComponentModel.MaskedTextProvider.Clear> método reinicializa la cadena con formato, insertar el carácter de entrada en todas las posiciones modificables.</span><span class="sxs-lookup"><span data-stu-id="85d63-226">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear :  -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint">
          <span data-ttu-id="85d63-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-228">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-228">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-229">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-229">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-230">El <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> método reinicializa la cadena con formato, insertar el carácter de entrada en todas las posiciones modificables.</span><span class="sxs-lookup"><span data-stu-id="85d63-230">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="85d63-231">Funciona de forma equivalente a la versión reemplazada que no toma ningún parámetro, <xref:System.ComponentModel.MaskedTextProvider.Clear>, excepto en que se envía la información adicional.</span><span class="sxs-lookup"><span data-stu-id="85d63-231">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85d63-232">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-232">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-233">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-233">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-234">El <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> método devuelve una nueva copia del elemento actual <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="85d63-234">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-235">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-235">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-236">Un <see cref="T:System.Globalization.CultureInfo" /> que contiene la información de referencia cultural asociada con la máscara de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-236">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-237">El <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> propiedad está establecida el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="85d63-237">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-238">Gets the default password character used obscure user input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-238">Gets the default password character used obscure user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-239">Un <see cref="T:System.Char" /> que representa el carácter de contraseña predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-239">A <see cref="T:System.Char" /> that represents the default password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-240">El <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> propiedad está definida en el <xref:System.ComponentModel.MaskedTextProvider> clase sea el carácter de asterisco (\*).</span><span class="sxs-lookup"><span data-stu-id="85d63-240">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-241">Gets the number of editable positions in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-241">Gets the number of editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-242">Un <see cref="T:System.Int32" /> que contiene el número de posiciones modificables de la cadena con formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-242">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-243">El número total de posiciones de caracteres modificables, representado por la <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propiedad, debe ser igual a la suma de los <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> y <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-243">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="85d63-244">Este valor incluye la información necesaria y los caracteres modificables opcionales.</span><span class="sxs-lookup"><span data-stu-id="85d63-244">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-245">Gets a newly created enumerator for the editable positions in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-245">Gets a newly created enumerator for the editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-246">Un <see cref="T:System.Collections.IEnumerator" /> que admite la enumeración de las posiciones modificables de la cadena con formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-246">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-247">Para cada acceso de la <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> propiedad, una colección de posiciones modificables temporal se crea que el objeto recuperado <xref:System.Collections.IEnumerator> opera en.</span><span class="sxs-lookup"><span data-stu-id="85d63-247">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="85d63-248">Esta colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="85d63-248">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-249">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-249">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-250">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-250">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-251">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-251">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-252">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-252">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-253">Está compuesto por la cadena con formato de caracteres modificables y literales copian de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-253">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="85d63-254">Las posiciones de caracteres modificables estarán ocupadas por el carácter de petición que se copian de la máscara, si no están asignadas, o con un carácter de entrada válido si se les ha asignado una entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-254">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="85d63-255">El <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> método se utiliza para buscar el primer carácter asignado después de una dirección de posición de búsqueda especificada.</span><span class="sxs-lookup"><span data-stu-id="85d63-255">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="85d63-256">El resultado se puede pasar como parámetro a la <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indizador para obtener el valor asignado en esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-256">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="85d63-257">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> y <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> métodos son complementos de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-257">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-258">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-258">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-259">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-259">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-260">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-260">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-261">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-261">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-262">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-262">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-263">Está compuesto por la cadena con formato de caracteres modificables y literales copian de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-263">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="85d63-264">Las posiciones de caracteres modificables estarán ocupadas por el carácter de petición que se copian de la máscara, si no están asignadas, o con un carácter de entrada válido si se les ha asignado una entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-264">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="85d63-265">El <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> método se utiliza para buscar el primer carácter asignado entre dos posiciones especificadas, ambas incluidas, utilizando la dirección de búsqueda especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-265">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="85d63-266">El resultado se puede pasar como parámetro a la <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indizador para obtener el valor asignado en esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-266">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="85d63-267">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> y <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> métodos son complementos de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-267">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-268">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-268">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-269">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-269">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-270">Returns the position of the first editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-270">Returns the position of the first editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-271">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-271">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-272">El <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método se utiliza para buscar la siguiente asignado o no asignados posición modificable de la cadena con formato después de la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="85d63-272">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="85d63-273">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método es el complemento de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-273">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-274">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-274">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-275">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-275">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-276">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-276">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-277">Returns the position of the first editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-277">Returns the position of the first editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-278">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-278">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-279">El <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método se utiliza para buscar el primer carácter modificable entre dos posiciones especificadas, ambas incluidas, utilizando la dirección de búsqueda especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-279">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="85d63-280">El resultado se puede pasar como parámetro a la <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indizador para obtener el valor asignado en esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-280">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="85d63-281">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método es el complemento de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-281">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-282">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-282">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-283">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-283">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-284">Returns the position of the first non-editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-284">Returns the position of the first non-editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-285">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-285">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-286">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método se utiliza para buscar el siguiente carácter literal en la cadena con formato después de la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="85d63-286">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="85d63-287">El resultado se puede pasar como parámetro a la <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indizador para obtener el valor literal en esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-287">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="85d63-288">El <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método es el complemento de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-288">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-289">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-289">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-290">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-290">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-291">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-291">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-292">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-292">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-293">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-293">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-294">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método se utiliza para buscar el primer carácter literal entre dos posiciones especificadas, ambas incluidas, utilizando la dirección de búsqueda especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-294">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="85d63-295">El resultado se puede pasar como parámetro a la <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indizador para obtener el valor literal en esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-295">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="85d63-296">El <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método es el complemento de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-296">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-297">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-297">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-298">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-298">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-299">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-299">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-300">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-300">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-301">Está compuesto por la cadena con formato de caracteres modificables y literales copian de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-301">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="85d63-302">Las posiciones de caracteres modificables estarán ocupadas por el carácter de petición que se copian de la máscara, si no están asignadas, o con un carácter de entrada válido si se les ha asignado una entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-302">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="85d63-303">El <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> método se utiliza para buscar el primer carácter sin asignar después de una dirección de posición de búsqueda especificada.</span><span class="sxs-lookup"><span data-stu-id="85d63-303">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="85d63-304">El carácter de petición debe ocupar esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-304">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="85d63-305">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> y <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> métodos son complementos de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-305">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-306">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-306">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-307">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-307">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="85d63-308">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-308">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-309">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-309">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-310">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-310">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-311">Está compuesto por la cadena con formato de caracteres modificables y literales copian de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-311">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="85d63-312">Las posiciones de caracteres modificables estarán ocupadas por el carácter de petición que se copian de la máscara, si no están asignadas, o con un carácter de entrada válido si se les ha asignado una entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-312">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="85d63-313">El <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> método se utiliza para buscar el primer carácter sin asignar entre dos posiciones especificadas, ambas incluidas, utilizando la dirección de búsqueda especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-313">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="85d63-314">El carácter de petición debe ocupar esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-314">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="85d63-315">El <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> y <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> métodos son complementos de este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-315">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint">
          <span data-ttu-id="85d63-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-317">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-317">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-318">
            <see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-318">
              <see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-319">Los métodos siguientes de la <xref:System.ComponentModel.MaskedTextProvider> clase contienen un parámetro de tipo <xref:System.ComponentModel.MaskedTextResultHint> que se utiliza para obtener información acerca de la operación del método de salida: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> , <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, y <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-319">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="85d63-320">El <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> método interpreta este valor y devuelve un valor booleano que indica si el <xref:System.ComponentModel.MaskedTextResultHint> ha señalado que la operación fue un éxito o error.</span><span class="sxs-lookup"><span data-stu-id="85d63-320">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-321">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-321">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-322">
            <see langword="true" /> Si los literales se incluyen; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-322">
              <see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85d63-323">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-323">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-324">El <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades determinarán si los caracteres de petición de datos y literales aparecen al llamar a la <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="85d63-324">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="85d63-325">Al establecer ambas propiedades a `false`, la cadena analizada represente solo los caracteres especificados por el usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-325">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-326">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-326">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-327">
            <see langword="true" /> Si el carácter de entrada se utiliza para representar las posiciones donde se proporcionó ninguna entrada de usuario; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-327">
              <see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85d63-328">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-328">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-329">El <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades determinarán si los caracteres de petición de datos y literales aparecen al llamar a la <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="85d63-329">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="85d63-330">Al establecer ambas propiedades a `false`, la cadena analizada represente solo los caracteres especificados por el usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-330">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-331">Inserts a character or string at a specific position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-331">Inserts a character or string at a specific position within the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-332">The <see cref="T:System.Char" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-332">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-333">The zero-based position in the formatted string to insert the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-333">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-334">Inserts the specified character at the specified position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-334">Inserts the specified character at the specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-335">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-335">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-336">El <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método inserta un carácter en la primera posición de edición o más allá de lo especificado por el `pos` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-336">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="85d63-337">Este método desplazará todos los caracteres existentes después de que el punto de inserción una posición para dejar espacio para el texto insertado la tecla TAB `input` caracteres.</span><span class="sxs-lookup"><span data-stu-id="85d63-337">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="85d63-338">Si se produce uno de los siguientes errores, no se realiza la inserción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-338">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-339">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-339">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-340">No se encontró un carácter modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-340">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="85d63-341">El carácter de inserción, `input`, no es un carácter de entrada válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-341">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-342">No hay ninguna posición disponible a la derecha del punto de inserción, por lo que no se pueden desplazar los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-342">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="85d63-343">Se generará una infracción de la máscara de desplazamiento de los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-343">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="85d63-344">Un valor vacío `input` cadena no producirá ningún cambio en el formato de cadena, pero devolverá `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-344">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-345">The <see cref="T:System.String" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-345">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-346">The zero-based position in the formatted string to insert the input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-346">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-347">Inserts the specified string at a specified position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-347">Inserts the specified string at a specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-348">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-348">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-349">El <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método inserta cada carácter de la `input` cadena en las posiciones de edición que se encuentra en la posición `pos` y mucho más.</span><span class="sxs-lookup"><span data-stu-id="85d63-349">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="85d63-350">Este método desplazará todos los caracteres existentes después de que el punto de inserción, la tecla TAB una posición para cada carácter insertado.</span><span class="sxs-lookup"><span data-stu-id="85d63-350">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="85d63-351">Si se produce uno de los errores siguientes, se realiza ninguna inserción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-351">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-352">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-352">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-353">Existe un carácter no es lo suficientemente editable en la cadena con formato o más allá de la posición especificada, `pos`, para insertar todos los caracteres desde el `input` cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-353">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="85d63-354">Uno o varios de los caracteres de inserción no son un carácter de entrada válido porque no son imprimibles o no coinciden con sus elementos correspondientes de máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-354">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-355">No hay disponibles suficientes posiciones a la derecha del punto de inserción, por lo que no se pueden desplazar los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-355">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="85d63-356">Se generará una infracción de la máscara de desplazamiento de los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-356">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="85d63-357">Tenga en cuenta que este cambio se produce durante la inserción de cada carácter individual.</span><span class="sxs-lookup"><span data-stu-id="85d63-357">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="85d63-358">Un valor vacío `input` cadena no producirá ningún cambio en el formato de cadena, pero devolverá `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-358">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-359">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-359">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-360">The <see cref="T:System.Char" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-360">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-361">The zero-based position in the formatted string to insert the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-361">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-362">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-362">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="85d63-363">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-363">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="85d63-365">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-365">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-366">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-366">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-367">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-367">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-368">El <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método inserta un carácter en la primera posición de edición o más allá de lo especificado por el `pos` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-368">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="85d63-369">Este método desplazará todos los caracteres existentes después de que el punto de inserción una posición para dejar espacio para el texto insertado la tecla TAB `input` caracteres.</span><span class="sxs-lookup"><span data-stu-id="85d63-369">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="85d63-370">Si se produce uno de los siguientes errores, no se realiza la inserción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-370">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-371">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-371">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-372">No se encontró un carácter modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-372">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="85d63-373">El carácter de inserción, `input`, no es un carácter de entrada válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-373">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-374">No hay ninguna posición disponible a la derecha del punto de inserción, por lo que no se pueden desplazar los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-374">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="85d63-375">Se generará una infracción de la máscara de desplazamiento de los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-375">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="85d63-376">Un valor vacío `input` cadena no producirá ningún cambio en el formato de cadena, pero devolverá `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-376">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-377">The <see cref="T:System.String" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-377">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-378">The zero-based position in the formatted string to insert the input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-378">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-379">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-379">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="85d63-380">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-380">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="85d63-382">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-382">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-383">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-383">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-384">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-384">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-385">El <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método inserta cada carácter de la `input` cadena en las posiciones de edición que se encuentra en la posición `pos` y mucho más.</span><span class="sxs-lookup"><span data-stu-id="85d63-385">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="85d63-386">Este método desplazará todos los caracteres existentes después de que el punto de inserción, la tecla TAB una posición para cada carácter insertado.</span><span class="sxs-lookup"><span data-stu-id="85d63-386">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="85d63-387">Si se produce uno de los errores siguientes, se realiza ninguna inserción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-387">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-388">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-388">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-389">Existe un carácter no es lo suficientemente editable en la cadena con formato o más allá de la posición especificada, `pos`, para insertar todos los caracteres desde el `input` cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-389">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="85d63-390">Uno o varios de los caracteres de inserción no son un carácter de entrada válido porque no son imprimibles o no coinciden con sus elementos correspondientes de máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-390">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="85d63-391">No hay disponibles suficientes posiciones a la derecha del punto de inserción, por lo que no se pueden desplazar los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-391">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="85d63-392">Se generará una infracción de la máscara de desplazamiento de los caracteres existentes.</span><span class="sxs-lookup"><span data-stu-id="85d63-392">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="85d63-393">Tenga en cuenta que este cambio se produce durante la inserción de cada carácter individual.</span><span class="sxs-lookup"><span data-stu-id="85d63-393">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="85d63-394">Un valor vacío `input` cadena no producirá ningún cambio en el formato de cadena, pero devolverá `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-394">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-395">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-395">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-396">Gets the upper bound of the range of invalid indexes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-396">Gets the upper bound of the range of invalid indexes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-397">Un valor que representa el índice no válido mayor, según lo determinado por la implementación del proveedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-397">A value representing the largest invalid index, as determined by the provider implementation.</span>
          </span>
          <span data-ttu-id="85d63-398">Por ejemplo, si el índice válido menor es 0, esta propiedad devolverá -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-398">For example, if the lowest valid index is 0, this property will return -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-399">El <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> propiedad se utiliza para representar un resultado que no es válido para las operaciones de indización, como el <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> método.</span><span class="sxs-lookup"><span data-stu-id="85d63-399">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="85d63-400">Al usar el proveedor o implementar su propia, debe usar esta propiedad para decidir si un índice es no válido, en lugar de codificar de forma rígida conocimiento de los valores no válidos.</span><span class="sxs-lookup"><span data-stu-id="85d63-400">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-401">The zero-based position in the mask to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-401">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-402">Determines whether the specified position is available for assignment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-402">Determines whether the specified position is available for assignment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-403">
            <see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-403">
              <see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-404">El <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> devuelve del método `true` solo si se cumplen todas las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-404">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="85d63-405">El `pos` parámetro dentro de los límites de la cadena con formato; es decir, su valor es mayor o igual que cero y menor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-405">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-406">La posición especificada es un carácter modificable.</span><span class="sxs-lookup"><span data-stu-id="85d63-406">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="85d63-407">Un carácter no se ha asignado ya a esta posición.</span><span class="sxs-lookup"><span data-stu-id="85d63-407">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-408">The zero-based position in the mask to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-408">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-409">Determines whether the specified position is editable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-409">Determines whether the specified position is editable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-410">
            <see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-410">
              <see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-411">El <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> devuelve del método `true` solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-411">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="85d63-412">El `pos` parámetro dentro de los límites de la cadena con formato; es decir, su valor es mayor o igual que cero y menor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-412">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-413">La posición especificada es un carácter modificable.</span><span class="sxs-lookup"><span data-stu-id="85d63-413">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-414">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-414">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-415">
            <see langword="true" /> Si la cadena de entrada tiene que tratarse como una cadena de contraseña; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-415">
              <see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85d63-416">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-417">Se puede iniciar la protección con contraseña mediante uno de los siguientes dos maneras:</span><span class="sxs-lookup"><span data-stu-id="85d63-417">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="85d63-418">Establecer el <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad para que no es`null` valor.</span><span class="sxs-lookup"><span data-stu-id="85d63-418">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="85d63-419">Establecer el <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> propiedad `true`., que también se establece la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad a la <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="85d63-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="85d63-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> está usando el <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> y <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para determinar si se debe revelar los caracteres de entrada ni oculte con <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="85d63-421">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-421">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-422">Determines whether the specified character is a valid input character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-422">Determines whether the specified character is a valid input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-423">
            <see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-423">
              <see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-424">Caracteres de entrada válidos incluyen todos los caracteres imprimibles, que incluyen letras, dígitos, signos de puntuación, símbolos y el carácter de espacio.</span><span class="sxs-lookup"><span data-stu-id="85d63-424">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="85d63-425">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-425">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-426">Determines whether the specified character is a valid mask character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-426">Determines whether the specified character is a valid mask character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-427">
            <see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-427">
              <see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-428">Caracteres de máscara válidos incluyen todos los caracteres imprimibles, que incluyen letras, dígitos, signos de puntuación, símbolos y el carácter de espacio.</span><span class="sxs-lookup"><span data-stu-id="85d63-428">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="85d63-429">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-429">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-430">Determines whether the specified character is a valid password character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-430">Determines whether the specified character is a valid password character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-431">
            <see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-431">
              <see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-432">Caracteres de contraseña válidos incluyen todos los caracteres imprimibles y el carácter null, que se usa para deshabilitar la funcionalidad de contraseña.</span><span class="sxs-lookup"><span data-stu-id="85d63-432">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="85d63-433">Caracteres imprimibles incluyen letras, dígitos, signos de puntuación, símbolos y el carácter de espacio.</span><span class="sxs-lookup"><span data-stu-id="85d63-433">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85d63-434">A zero-based index of the element to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-434">A zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-435">Gets the element at the specified position in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-435">Gets the element at the specified position in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-436">El <see cref="T:System.Char" /> en la posición especificada en la cadena con formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-436">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-437">El <xref:System.ComponentModel.MaskedTextProvider.Item%2A> propiedad es el indizador estándar para el <xref:System.ComponentModel.MaskedTextProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="85d63-437">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="85d63-438">
            <paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-438">
              <paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-439">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-439">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-440">Si se ha asignado al menos un carácter de entrada a la máscara, un <see cref="T:System.Int32" /> que contiene el índice del extremo derecho asignado posición; en caso contrario, si no se ha asignado ninguna posición, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-440">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-441">El <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propiedad representa la posición más alejada de edición de la máscara, relativa al origen, que se ha asignado un carácter de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-441">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="85d63-442">Para los idiomas que se leen de izquierda a derecha (LTR), como el inglés, se trata de la derecha posición; asignada para los idiomas que se leen de derecha a izquierda (RTL), esto sería la posición más a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="85d63-442">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-443">Gets the length of the mask, absent any mask modifier characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-443">Gets the length of the mask, absent any mask modifier characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-444">Un <see cref="T:System.Int32" /> que contiene el número de posiciones de la máscara, sin incluir los caracteres que modifican su entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-444">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-445">El <xref:System.ComponentModel.MaskedTextProvider.Length%2A> propiedad representa el número total de caracteres de la máscara, incluidos los caracteres literales y editables.</span><span class="sxs-lookup"><span data-stu-id="85d63-445">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="85d63-446">Se puede determinar el número de caracteres literales restando el valor de la <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> desde el <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-446">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="85d63-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> También describe la longitud de la cadena con formato, incluidos los caracteres de entrada, literales y caracteres de símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="85d63-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-448">Gets the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-448">Gets the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-449">Un <see cref="T:System.String" /> que contiene la máscara completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-449">A <see cref="T:System.String" /> containing the full mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-450">El <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propiedad está establecida el <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="85d63-450">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="85d63-451">Esta máscara debe contener caracteres solo es válidos según se define en el lenguaje de enmascaramiento.</span><span class="sxs-lookup"><span data-stu-id="85d63-451">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-452">Gets a value indicating whether all required inputs have been entered into the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-452">Gets a value indicating whether all required inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-453">
            <see langword="true" /> Si se ha especificado todas las entradas obligatorias en la máscara; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-453">
              <see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-454">El <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propiedad comprueba solo elementos de entrada necesarios.</span><span class="sxs-lookup"><span data-stu-id="85d63-454">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="85d63-455">Para determinar si han sido escritos todos los elementos de entrada obligatorios y opcionales, utilice la <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> propiedad de la <xref:System.Windows.Forms.MaskedTextBox> clase en su lugar.</span><span class="sxs-lookup"><span data-stu-id="85d63-455">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="85d63-456">El valor actual de la <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propiedad determina qué elementos de formato se consideran necesarios y cuáles son opcionales.</span><span class="sxs-lookup"><span data-stu-id="85d63-456">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-457">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-457">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-458">
            <see langword="true" /> Si se ha especificado todas las entradas obligatorias y opcionales; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-458">
              <see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-459">Para comprobar si sólo se requiere que se han especificado los elementos de entrada, use el <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propiedad en su lugar.</span><span class="sxs-lookup"><span data-stu-id="85d63-459">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="85d63-460">El valor actual de la <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propiedad determina qué elementos de formato se consideran necesarios y cuáles son opcionales.</span><span class="sxs-lookup"><span data-stu-id="85d63-460">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-461">Gets or sets the character to be substituted for the actual input characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-461">Gets or sets the character to be substituted for the actual input characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-462">El <see cref="T:System.Char" /> valor utilizado como carácter de contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-462">The <see cref="T:System.Char" /> value used as the password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-463">Para la entrada de información confidencial del usuario, es una práctica común para ocultar la información real escrita por el usuario durante las operaciones de salida.</span><span class="sxs-lookup"><span data-stu-id="85d63-463">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="85d63-464">Si el <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad está establecida en no`null` de caracteres, como los métodos de salida <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> y <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> ocultará los caracteres de entrada con el carácter de contraseña especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-464">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="85d63-465">Establecer esta propiedad en `null` deshabilitará la funcionalidad de protección de contraseña.</span><span class="sxs-lookup"><span data-stu-id="85d63-465">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85d63-466">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-466">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          </span>
          <span data-ttu-id="85d63-467">The two are required to be different.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-467">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85d63-468">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-468">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-469">Gets or sets the character used to represent the absence of user input for all available edit positions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-469">Gets or sets the character used to represent the absence of user input for all available edit positions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-470">Carácter que se utiliza para pedir al usuario que introduzca datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-470">The character used to prompt the user for input.</span>
          </span>
          <span data-ttu-id="85d63-471">El valor predeterminado es el carácter de subrayado (_).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-471">The default is an underscore (_).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-472">El <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propiedad representa el carácter de entrada que usa el <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> y <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para representar el estado actual de la cadena de entrada con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-472">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="85d63-473">Un carácter de entrada se coloca en posiciones modificables que no se ha asignado un valor de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-473">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="85d63-474">Algunas versiones de la <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método también dependen del valor de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-474">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85d63-475">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-475">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          </span>
          <span data-ttu-id="85d63-476">The two are required to be different.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-476">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85d63-477">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-477">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-478">Removes the last assigned character from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-478">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85d63-479">Removes the last assigned character from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-479">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-480">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-480">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-481">El <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método no tiene ningún efecto si no hay ningún carácter asignado todavía a la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-481">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="85d63-482">Cuando se quita el último carácter asignado de la cadena con formato, se restablece el carácter de máscara modificable para esa posición, lo que permite entradas posteriores.</span><span class="sxs-lookup"><span data-stu-id="85d63-482">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove :  *  -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition">
          <span data-ttu-id="85d63-483">The zero-based position in the formatted string where the character was actually removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-483">The zero-based position in the formatted string where the character was actually removed.</span>
          </span>
          <span data-ttu-id="85d63-484">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-484">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-486">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-486">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-487">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-487">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-488">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-488">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-489">El <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método no tiene ningún efecto si no hay ningún carácter asignado todavía a la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-489">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="85d63-490">Cuando se quita el último carácter asignado de la cadena con formato, se restablece el carácter de máscara modificable para esa posición, lo que permite entradas posteriores.</span><span class="sxs-lookup"><span data-stu-id="85d63-490">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-491">Removes one or more assigned characters from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-491">Removes one or more assigned characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="85d63-492">The zero-based position of the assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-492">The zero-based position of the assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-493">Removes the assigned character at the specified position from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-493">Removes the assigned character at the specified position from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-494">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-494">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-495">El <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método no tiene ningún efecto si no hay ningún carácter asignado en la posición de eliminación especificada.</span><span class="sxs-lookup"><span data-stu-id="85d63-495">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="85d63-496">Literales de cadena no se ven afectados por este método.</span><span class="sxs-lookup"><span data-stu-id="85d63-496">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="85d63-497">Cuando se quita un carácter, los caracteres restantes superior colocado en la máscara se desplazará a la izquierda para rellenar el espacio creado por la eliminación.</span><span class="sxs-lookup"><span data-stu-id="85d63-497">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="85d63-498">Posiciones vacías se restablecen de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-498">Vacated positions are reset for input.</span></span> <span data-ttu-id="85d63-499">Si se evita el movimiento de los caracteres por la definición de la máscara, se produce ninguna eliminación, y <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-499">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="85d63-500">Esta llamada al método equivale exactamente a la siguiente llamada a sobrecargado <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> versión:</span><span class="sxs-lookup"><span data-stu-id="85d63-500">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-501">The zero-based index of the first assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-501">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-502">The zero-based index of the last assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-502">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-503">Removes the assigned characters between the specified positions from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-503">Removes the assigned characters between the specified positions from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-504">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-504">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-505">El <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método no tiene ningún efecto si no hay ningún carácter asignado en las posiciones de eliminación especificadas.</span><span class="sxs-lookup"><span data-stu-id="85d63-505">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="85d63-506">Cuando se quita un carácter, los caracteres restantes superior colocado en la máscara se desplazará a la izquierda para rellenar el espacio creado por la eliminación.</span><span class="sxs-lookup"><span data-stu-id="85d63-506">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="85d63-507">Posiciones vacías se restablecen de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-507">Vacated positions are reset for input.</span></span> <span data-ttu-id="85d63-508">Si se evita el movimiento de los caracteres por la definición de la máscara, se produce ninguna eliminación, y <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-508">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int *  *  -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-509">The zero-based index of the first assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-509">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-510">The zero-based index of the last assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-510">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-511">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-511">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-512">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-512">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-514">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-514">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-515">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-515">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-516">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-516">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-517">El <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método no tiene ningún efecto si no hay ningún carácter asignado en las posiciones de eliminación especificadas.</span><span class="sxs-lookup"><span data-stu-id="85d63-517">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="85d63-518">Cuando se quita un carácter, los caracteres restantes superior colocado en la máscara se desplazará a la izquierda para rellenar el espacio creado por la eliminación.</span><span class="sxs-lookup"><span data-stu-id="85d63-518">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="85d63-519">Posiciones vacías se restablecen de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-519">Vacated positions are reset for input.</span></span> <span data-ttu-id="85d63-520">Si se evita el movimiento de los caracteres por la definición de la máscara, se produce ninguna eliminación, y <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-520">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="85d63-521">Esta versión de <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> proporciona dos parámetros de salida adicionales para transmitir más información sobre la operación del método.</span><span class="sxs-lookup"><span data-stu-id="85d63-521">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-522">Replaces one or more editable characters in the formatted string with the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-522">Replaces one or more editable characters in the formatted string with the specified characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-523">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-523">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-524">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-524">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-525">Replaces a single character at or beyond the specified position with the specified character value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-525">Replaces a single character at or beyond the specified position with the specified character value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-526">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-526">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-527">El <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> método busca la primera posición modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-527">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="85d63-528">Si encuentra uno, se cambia el valor de la posición modificable por el carácter especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-528">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="85d63-529">Cualquiera de las siguientes condiciones producirá un error que hace que se realiza ninguna sustitución y un valor de `false` va a devolver:</span><span class="sxs-lookup"><span data-stu-id="85d63-529">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="85d63-530">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-530">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-531">No se encontró un carácter modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-531">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="85d63-532">El carácter de reemplazo, `input`, no es un carácter de entrada válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-532">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-533">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-533">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-534">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-534">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-535">Replaces a range of editable characters starting at the specified position with the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-535">Replaces a range of editable characters starting at the specified position with the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-536">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-536">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-537">El <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> método busca la primera posición modificable o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-537">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="85d63-538">Funciona con la asunción de que hay suficientes posiciones modificables después de este punto, los valores de caracteres existentes son reemplazados por uno con el contenido del parámetro de cadena de reemplazo, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-538">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="85d63-539">Las siguientes condiciones se consideran errores.</span><span class="sxs-lookup"><span data-stu-id="85d63-539">The following conditions are considered errors.</span></span> <span data-ttu-id="85d63-540">Cuando se produce un error, se realiza ningún reemplazo y <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-540">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-541">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-541">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-542">No hay suficientes posiciones modificables de la cadena con formato para almacenar el contenido de la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-542">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="85d63-543">Uno de los valores de carácter de reemplazo no es válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-543">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-544">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-544">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-545">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-545">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-546">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-546">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-547">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-547">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-548">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-548">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="85d63-550">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-550">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-551">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-551">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-552">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-552">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-553">El <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método busca la primera posición modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-553">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="85d63-554">Si encuentra uno, se cambia el valor de la posición modificable por el carácter especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-554">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="85d63-555">Cualquiera de las siguientes condiciones dará como resultado una condición de error que hace que se realiza ninguna sustitución y un valor de `false` va a devolver:</span><span class="sxs-lookup"><span data-stu-id="85d63-555">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="85d63-556">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-556">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-557">No se encontró un carácter modificable en la cadena con formato o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-557">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="85d63-558">El carácter de reemplazo, `input`, no es un carácter de entrada válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-558">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="85d63-559">Además del valor devuelto, este método tiene dos parámetros de salida para proporcionar información adicional acerca de la operación de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-559">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-560">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-560">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-561">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-561">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-562">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-562">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-563">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-563">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="85d63-565">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-565">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-566">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-566">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-567">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-567">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-568">El <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método busca la primera posición modificable o más allá de la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-568">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="85d63-569">Operar en la suposición de que hay suficientes posiciones modificables después de este punto, los valores de caracteres existentes son reemplazados por uno con el contenido del parámetro de cadena de reemplazo, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-569">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="85d63-570">Las siguientes condiciones se consideran errores.</span><span class="sxs-lookup"><span data-stu-id="85d63-570">The following conditions are considered errors.</span></span> <span data-ttu-id="85d63-571">Cuando se produce un error, se realiza ningún reemplazo y <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-571">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-572">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-572">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="85d63-573">No hay suficientes posiciones modificables de la cadena con formato para almacenar el contenido de la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-573">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="85d63-574">Uno de los valores de carácter de reemplazo no es válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-574">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="85d63-575">Además del valor devuelto, este método tiene dos parámetros de salida para proporcionar información adicional acerca de la operación de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-575">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-576">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-576">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="85d63-577">The zero-based position in the formatted string where the replacement starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-577">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-578">The zero-based position in the formatted string where the replacement ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-578">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-579">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-579">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-580">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-580">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="85d63-582">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-582">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-583">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-583">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-584">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-584">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-585">El <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método busca en la primera posición modificable en la cadena con formato entre el especificado posiciones inicial y final.</span><span class="sxs-lookup"><span data-stu-id="85d63-585">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="85d63-586">Si encuentra uno, se cambia el valor de la posición modificable por el carácter especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-586">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="85d63-587">Cualquiera de las siguientes condiciones dará como resultado una condición de error que hace que se realiza ninguna sustitución y un valor de `false` va a devolver:</span><span class="sxs-lookup"><span data-stu-id="85d63-587">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="85d63-588">El `startPos` o `endPos` parámetros punto antes del inicio de la cadena con formato o más allá del final.</span><span class="sxs-lookup"><span data-stu-id="85d63-588">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="85d63-589">No se encontró un carácter modificable en el intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="85d63-589">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="85d63-590">El carácter de reemplazo, `input`, no es un carácter de entrada válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-590">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="85d63-591">Además del valor devuelto, este método tiene dos parámetros de salida para proporcionar información adicional acerca de la operación de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-591">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-592">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-592">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="85d63-593">The zero-based position in the formatted string where the replacement starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-593">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="85d63-594">The zero-based position in the formatted string where the replacement ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-594">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-595">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-595">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-596">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-596">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="85d63-598">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-598">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-599">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-599">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-600">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-600">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-601">El <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> método busca en la primera posición modificable en la cadena con formato entre el especificado posiciones inicial y final.</span><span class="sxs-lookup"><span data-stu-id="85d63-601">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="85d63-602">Operar en la suposición de que hay suficientes posiciones modificables después de este punto, los valores de caracteres existentes son reemplazados por uno con el contenido del parámetro de cadena de reemplazo, `input`.</span><span class="sxs-lookup"><span data-stu-id="85d63-602">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="85d63-603">Las siguientes condiciones se consideran errores.</span><span class="sxs-lookup"><span data-stu-id="85d63-603">The following conditions are considered errors.</span></span> <span data-ttu-id="85d63-604">Cuando se produce un error, se realiza ningún reemplazo y <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-604">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-605">El `startPos` o `endPos` parámetros punto antes del inicio de la cadena con formato o más allá del final.</span><span class="sxs-lookup"><span data-stu-id="85d63-605">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="85d63-606">No hay suficientes posiciones modificables de la cadena con formato para almacenar el contenido de la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-606">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="85d63-607">Uno de los valores de carácter de reemplazo no es válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-607">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="85d63-608">Además del valor devuelto, este método tiene dos parámetros de salida para proporcionar información adicional acerca de la operación de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-608">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-609">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-609">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-610">
            <see langword="true" /> Si el carácter de entrada especificado como entrada hace que la posición modificable actual de la máscara que se restablezca; en caso contrario, <see langword="false" /> para indicar que es el carácter de petición debe procesarse como un carácter de entrada normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-610">
              <see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="85d63-611">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-611">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-612"><xref:System.ComponentModel.MaskedTextProvider> puede tratar dos categorías de caracteres, espacios y caracteres de símbolo del sistema, de manera especial.</span><span class="sxs-lookup"><span data-stu-id="85d63-612"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="85d63-613">Normalmente, se probará cada carácter de entrada contra la máscara y aceptado o rechazado.</span><span class="sxs-lookup"><span data-stu-id="85d63-613">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="85d63-614">Suponiendo que el <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propiedad se establece en un valor distinto `null`, a continuación, estableciendo el <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> propiedad `true` dará como resultado un procesamiento especial para el carácter de petición.</span><span class="sxs-lookup"><span data-stu-id="85d63-614">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="85d63-615">Cuando se agrega un carácter de símbolo del sistema, hace que la actual posición del carácter de máscara borrarse y la posición actual avanza hasta el siguiente carácter modificable.</span><span class="sxs-lookup"><span data-stu-id="85d63-615">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="85d63-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> tiene prioridad sobre la <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> propiedad tal como se describe en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="85d63-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="85d63-617">Comportamiento resultante</span><span class="sxs-lookup"><span data-stu-id="85d63-617">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="85d63-618">Se puede agregar el carácter de entrada y hace que la posición actual de la máscara que se restablezca.</span><span class="sxs-lookup"><span data-stu-id="85d63-618">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="85d63-619">El valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="85d63-619">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="85d63-620">Se puede agregar el carácter de entrada y hace que la posición actual de la máscara que se restablezca.</span><span class="sxs-lookup"><span data-stu-id="85d63-620">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="85d63-621">El carácter de petición se procesa como un carácter de entrada normal.</span><span class="sxs-lookup"><span data-stu-id="85d63-621">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="85d63-622">El carácter de entrada no es válido y se producirá un error al intentar agregar el carácter de métodos.</span><span class="sxs-lookup"><span data-stu-id="85d63-622">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-623">Gets or sets a value that determines how a space input character should be handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-623">Gets or sets a value that determines how a space input character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-624">
            <see langword="true" /> Si el carácter de entrada de espacio hace que la posición modificable actual de la máscara que se restablezca; en caso contrario, <see langword="false" /> para indicar que se procesará como un carácter de entrada normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-624">
              <see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="85d63-625">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-625">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-626"><xref:System.ComponentModel.MaskedTextProvider> puede tratar dos categorías de caracteres, espacios y caracteres de símbolo del sistema, de manera especial.</span><span class="sxs-lookup"><span data-stu-id="85d63-626"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="85d63-627">Normalmente, se probará cada carácter de entrada contra la máscara y aceptado o rechazado.</span><span class="sxs-lookup"><span data-stu-id="85d63-627">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="85d63-628">Establecer el <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propiedad `true` dará como resultado la posición actual del carácter de máscara que se borran y la posición actual avanzará hasta el siguiente carácter modificable.</span><span class="sxs-lookup"><span data-stu-id="85d63-628">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="85d63-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> es útil cuando se asigna texto que se ha guardado sin el símbolo del sistema, donde el símbolo del sistema se reemplaza con un espacio.</span><span class="sxs-lookup"><span data-stu-id="85d63-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="85d63-630">Antes de restaurar una cadena en la configuración <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> a `true` restablecerá los caracteres de petición en las posiciones ocupadas por espacios en la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-630">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-631">Sets the formatted string to the specified input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-631">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-632">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-632">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-633">Sets the formatted string to the specified input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-633">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-634">
            <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-634">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-635">El <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método borra el contenido existente de la cadena con formato y, a continuación, se aplica la máscara contra el `input` cadena para actualizar el contenido de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-635">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="85d63-636">Las siguientes condiciones se consideran errores.</span><span class="sxs-lookup"><span data-stu-id="85d63-636">The following conditions are considered errors.</span></span> <span data-ttu-id="85d63-637">Cuando se produce un error, la cadena con formato permanece sin modificar y <xref:System.ComponentModel.MaskedTextProvider.Set%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-637">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-638">No hay suficientes posiciones modificables de la cadena con formato para almacenar el contenido de la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-638">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="85d63-639">Uno de los valores de carácter de reemplazo no es válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-639">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-640">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-640">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string *  *  -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-641">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-641">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-642">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-642">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="85d63-643">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-643">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span>
          </span>
          <span data-ttu-id="85d63-645">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-645">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-646">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-646">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-647">
            <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-647">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-648">El <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método borra el contenido existente de la cadena con formato y, a continuación, se aplica la máscara contra el `input` cadena para actualizar el contenido de la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-648">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="85d63-649">Las siguientes condiciones se consideran errores.</span><span class="sxs-lookup"><span data-stu-id="85d63-649">The following conditions are considered errors.</span></span> <span data-ttu-id="85d63-650">Cuando se produce un error, la cadena con formato permanece sin modificar y <xref:System.ComponentModel.MaskedTextProvider.Set%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="85d63-650">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="85d63-651">No hay suficientes posiciones modificables de la cadena con formato para almacenar el contenido de la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="85d63-651">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="85d63-652">Uno de los valores de carácter de reemplazo no es válido porque no es imprimible o no coincide con su elemento correspondiente de la máscara.</span><span class="sxs-lookup"><span data-stu-id="85d63-652">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="85d63-653">Esta versión de <xref:System.ComponentModel.MaskedTextProvider.Set%2A> proporciona dos parámetros de salida adicionales para transmitir más información sobre la operación del método.</span><span class="sxs-lookup"><span data-stu-id="85d63-653">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85d63-654">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-654">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-655">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-655">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85d63-656">
            <see langword="true" /> para permitir que agregarse de nuevo; literales en caso contrario, <see langword="false" /> para no permitir que el usuario sobrescriba literales de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-656">
              <see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span>
          </span>
          <span data-ttu-id="85d63-657">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-657">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-658">Máscaras de entrada pueden contener caracteres literales y editables.</span><span class="sxs-lookup"><span data-stu-id="85d63-658">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="85d63-659">Si se intenta agregar un carácter de entrada a la posición de una máscara ocupada por un literal, el valor de la <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> propiedad determina el resultado.</span><span class="sxs-lookup"><span data-stu-id="85d63-659">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="85d63-660">Si esta propiedad es `true`, es válido para sobrescribir un literal con el mismo valor cuando se agregan caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="85d63-660">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="85d63-661">Por ejemplo, un valor de carácter de barra diagonal, `'/'`, se puede agregar a la tercera posición de la máscara `"00/00/000"`.</span><span class="sxs-lookup"><span data-stu-id="85d63-661">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="85d63-662">Si esta propiedad es `false`, no es válido para asignar cualquier valor a una posición de la máscara ocupada por un carácter literal.</span><span class="sxs-lookup"><span data-stu-id="85d63-662">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85d63-663">Returns the formatted string in a displayable form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-663">Returns the formatted string in a displayable form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-664">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-664">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-665">El <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> método incluirá siempre caracteres de petición de datos y literales en el valor devuelto, independientemente del valor de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> o <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-665">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="85d63-666">Este método mostrará siempre los caracteres de la contraseña si la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad se establece en un valor de carácter distinto `null`.</span><span class="sxs-lookup"><span data-stu-id="85d63-666">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="85d63-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Normalmente se usa para obtener la cadena que se muestra en los elementos de la interfaz de usuario asociada, como <xref:System.Windows.Forms.MaskedTextBox>.</span><span class="sxs-lookup"><span data-stu-id="85d63-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-668">Returns the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-668">Returns the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85d63-669">Returns the formatted string that includes all the assigned character values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-669">Returns the formatted string that includes all the assigned character values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-670">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-670">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-671">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método incluye los símbolos y literales de acuerdo con los valores actuales de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-671">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="85d63-672">Siempre devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-672">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-673">Dado que este método revela información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-673">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="85d63-674">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-674">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-675">Returns the formatted string, optionally including password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-675">Returns the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-676">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-676">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-677">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método incluye los símbolos y literales de acuerdo con los valores actuales de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-677">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="85d63-678">Si el `ignorePasswordChar` parámetro es `true`, devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-678">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="85d63-679">Si este parámetro es `false`, usará el carácter de contraseña para oscurecer proporcionados por el usuario puede editar si la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad se establece en un valor distinto `null`.</span><span class="sxs-lookup"><span data-stu-id="85d63-679">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-680">Dado que este método puede revelar información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-680">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="85d63-681">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-681">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="85d63-682">
            <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-682">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-683">Returns the formatted string, optionally including prompt and literal characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-683">Returns the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-684">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-684">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-685">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método incluye los símbolos y literales según los valores de la `IncludePrompt` y `IncludeLiterals` parámetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-685">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="85d63-686">Tenga en cuenta que estos parámetros reemplazan los valores de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-686">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="85d63-687">Este método siempre devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-687">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-688">Dado que este método revela información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-688">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="85d63-689">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-689">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="85d63-690">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-690">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-691">Returns a substring of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-691">Returns a substring of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-692">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-692">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-693">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método devuelve una subcadena de la cadena con formato, comenzando en la posición `startPos` y se incluye el número de caracteres especificado por el `length` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-693">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="85d63-694">La cadena devuelta incluye los símbolos y literales de acuerdo con los valores actuales de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-694">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="85d63-695">La cadena devuelta contendrá los caracteres de entrada originales; el <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> siempre se omite la propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-695">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-696">Dado que este método revela información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-696">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="85d63-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Cuando hay discrepancias en los parámetros de entrada, realiza las acciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="85d63-698">Si `startPos` es menor que cero, la posición inicial se establece en cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-698">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="85d63-699">Si `startPos` es mayor o igual que el real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-699">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="85d63-700">Si `length` es mayor que el número de caracteres últimos caracteres de la posición inicial, solo los restantes restantes se devuelve.</span><span class="sxs-lookup"><span data-stu-id="85d63-700">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="85d63-701">Si `length` es menor o igual que cero, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-701">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="85d63-702">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-702">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="85d63-703">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-703">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="85d63-704">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-704">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-705">Returns a substring of the formatted string, optionally including password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-705">Returns a substring of the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-706">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-706">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-707">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método devuelve una subcadena de la cadena con formato, comenzando en la posición `startPos` y se incluye el número de caracteres especificado por el `length` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-707">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="85d63-708">La cadena devuelta incluye los símbolos y literales de acuerdo con los valores actuales de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-708">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="85d63-709">Si el `ignorePasswordChar` parámetro es `true`, devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-709">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="85d63-710">Si este parámetro es `false`, usará el carácter de contraseña para oscurecer proporcionados por el usuario puede editar si la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad se establece en un valor distinto `null`.</span><span class="sxs-lookup"><span data-stu-id="85d63-710">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-711">Dado que este método puede revelar información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-711">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="85d63-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Cuando hay discrepancias en los parámetros de entrada, realiza las acciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="85d63-713">Si `startPos` es menor que cero, la posición inicial se establece en cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-713">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="85d63-714">Si `startPos` es mayor o igual que el real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-714">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="85d63-715">Si `length` es mayor que el número de caracteres últimos caracteres de la posición inicial, solo los restantes restantes se devuelve.</span><span class="sxs-lookup"><span data-stu-id="85d63-715">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="85d63-716">Si `length` es menor o igual que cero, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-716">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="85d63-717">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-717">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="85d63-718">
            <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-718">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="85d63-719">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-719">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="85d63-720">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-720">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-721">Returns a substring of the formatted string, optionally including prompt and literal characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-721">Returns a substring of the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-722">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-722">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-723">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método devuelve una subcadena de la cadena con formato, comenzando en la posición `startPos` y se incluye el número de caracteres especificado por el `length` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-723">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="85d63-724">La cadena devuelta incluye los símbolos y literales según los valores de la `IncludePrompt` y `IncludeLiterals` parámetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-724">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="85d63-725">Tenga en cuenta que estos parámetros reemplazan los valores de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-725">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="85d63-726">Este método siempre devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-726">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-727">Dado que este método revela información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-727">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="85d63-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Cuando hay discrepancias en los parámetros de entrada, realiza las acciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="85d63-729">Si `startPos` es menor que cero, la posición inicial se establece en cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-729">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="85d63-730">Si `startPos` es mayor o igual que el real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-730">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="85d63-731">Si `length` es mayor que el número de caracteres últimos caracteres de la posición inicial, solo los restantes restantes se devuelve.</span><span class="sxs-lookup"><span data-stu-id="85d63-731">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="85d63-732">Si `length` es menor o igual que cero, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-732">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="85d63-733">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-733">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="includePrompt">
          <span data-ttu-id="85d63-734">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-734">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="85d63-735">
            <see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-735">
              <see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="85d63-736">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-736">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="85d63-737">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-737">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-738">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-738">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-739">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-739">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-740">Esta versión de sobrecargado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método devuelve una subcadena de la cadena con formato, comenzando en la posición `startPos` y se incluye el número de caracteres especificado por el `length` parámetro.</span><span class="sxs-lookup"><span data-stu-id="85d63-740">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="85d63-741">La cadena devuelta incluye los símbolos y literales según los valores de la `IncludePrompt` y `IncludeLiterals` parámetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="85d63-741">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="85d63-742">Tenga en cuenta que estos parámetros reemplazan los valores de la <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> y <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-742">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="85d63-743">Si el `ignorePasswordChar` parámetro es `true`, devolverá los caracteres de entrada originales, se omitirá el valor de la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="85d63-743">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="85d63-744">Si este parámetro es `false`, usará el carácter de contraseña para oscurecer proporcionados por el usuario puede editar si la <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propiedad se establece en un valor distinto `null`.</span><span class="sxs-lookup"><span data-stu-id="85d63-744">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="85d63-745">Dado que este método puede revelar información que normalmente está protegido en la interfaz de usuario por caracteres de contraseña, debe utilizarse con extrema precaución para evitar revelar accidentalmente datos confidenciales del usuario.</span><span class="sxs-lookup"><span data-stu-id="85d63-745">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="85d63-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Cuando hay discrepancias en los parámetros de entrada, realiza las acciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="85d63-747">Si `startPos` es menor que cero, la posición inicial se establece en cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-747">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="85d63-748">Si `startPos` es mayor o igual que el real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la cadena con formato, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-748">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="85d63-749">Si `length` es mayor que el número de caracteres últimos caracteres de la posición inicial, solo los restantes restantes se devuelve.</span><span class="sxs-lookup"><span data-stu-id="85d63-749">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="85d63-750">Si `length` es menor o igual que cero, el <xref:System.String.Empty> se devuelve la cadena.</span><span class="sxs-lookup"><span data-stu-id="85d63-750">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int *  -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-751">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-751">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-752">The position in the mask to test the input character against.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-752">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <param name="hint">
          <span data-ttu-id="85d63-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="85d63-754">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-754">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-755">Tests whether the specified character could be set successfully at the specified position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-755">Tests whether the specified character could be set successfully at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-756">
            <see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-756">
              <see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-757">El <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> método comprueba si un valor de carácter individual representa una entrada válida en la posición especificada en la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-757">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="85d63-758">Este método devolverá `false` por las razones siguientes:</span><span class="sxs-lookup"><span data-stu-id="85d63-758">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="85d63-759">El `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-759">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="85d63-760">El carácter `input` no es un carácter de entrada válido, según determina el <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> método.</span><span class="sxs-lookup"><span data-stu-id="85d63-760">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="85d63-761">El `input` no es compatible con el elemento de la máscara en la posición especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="85d63-761">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="85d63-762">La última condición puede depender del valor actual de la <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> y <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="85d63-762">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="85d63-763">Para probar una cadena de entrada completa con la máscara, utilice uno de los <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="85d63-763">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-764">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-764">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="85d63-765">The position in the mask to test the input character against.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-765">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-766">Tests whether the specified character would be escaped at the specified position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-766">Tests whether the specified character would be escaped at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-767">
            <see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-767">
              <see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-768">Se dice que un carácter se *escape* si es una entrada válida, pero no está asignado a esa posición en la cadena con formato.</span><span class="sxs-lookup"><span data-stu-id="85d63-768">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="85d63-769">Caracteres de escape pertenecen a las siguientes tres categorías:</span><span class="sxs-lookup"><span data-stu-id="85d63-769">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="85d63-770">Solicitud de datos es caracteres de escape si el <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-770">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="85d63-771">Caracteres de entrada usan secuencias de escape si tienen el mismo valor que el literal en la máscara y si el <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-771">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="85d63-772">Caracteres de espacio son caracteres de escape si el <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="85d63-772">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="85d63-773">El <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> método también devolverá `false` si el `pos` parámetro es menor que cero o mayor que el <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de la <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="85d63-773">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85d63-774">Tests whether the specified string could be set successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-774">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-775">The <see cref="T:System.String" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-775">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-776">Tests whether the specified string could be set successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-776">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-777">
            <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-777">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-778">El <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> se aplica el `input` cadena con la máscara, sin cambiar realmente la cadena con formato, para probar si `input` sería válido en correspondiente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="85d63-778">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="85d63-779">Este método también devuelve `true` si la entrada es `null` o tiene longitud cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-779">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string *  *  -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="85d63-780">The <see cref="T:System.String" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-780">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="85d63-781">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-781">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span>
          </span>
          <span data-ttu-id="85d63-782">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-782">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="85d63-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span>
          </span>
          <span data-ttu-id="85d63-784">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-784">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85d63-785">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-785">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85d63-786">
            <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85d63-786">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85d63-787">El <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> se aplica el `input` cadena con la máscara, sin cambiar realmente la cadena con formato, para probar si `input` sería válido en correspondiente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="85d63-787">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="85d63-788">Este método también devuelve `true` si la entrada es `null` o tiene longitud cero.</span><span class="sxs-lookup"><span data-stu-id="85d63-788">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="85d63-789">Esta versión de <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> proporciona dos parámetros de salida adicionales para transmitir más información sobre la operación del método.</span><span class="sxs-lookup"><span data-stu-id="85d63-789">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>