<Type Name="CollectionConverter" FullName="System.ComponentModel.CollectionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07dd73ba27f79f233e8120f5aed8ecb635384828" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39952070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.CollectionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type CollectionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un convertidor de tipos para convertir objetos de colección a y desde otras representaciones.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.CollectionConverter.GetProperties%2A> siempre devuelve el método para este convertidor de tipos `null`y el <xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A> método siempre devuelve `false`.  
  
 Para obtener más información sobre los convertidores de tipos, vea la <xref:System.ComponentModel.TypeConverter> clase base y [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Nunca se debe crear una instancia de la <xref:System.ComponentModel.CollectionConverter> clase. En su lugar, se llama al método <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la clase <xref:System.ComponentModel.TypeDescriptor>. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CollectionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CollectionConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="collectionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
        <param name="culture">Referencia cultural en la que se convertirá <c>value</c>.</param>
        <param name="value">
          <see cref="T:System.Object" /> que se va a convertir. Este parámetro debe heredar de la interfaz <see cref="T:System.Collections.ICollection" />.</param>
        <param name="destinationType">Clase <see cref="T:System.Type" /> en que se va convertir el valor.</param>
        <summary>Convierte el objeto de valor especificado en el tipo de destino especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el valor convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. Puede ser `null`, por lo que debe comprobarse siempre. Asimismo, las propiedades del objeto de contexto pueden devolver `null`.  
  
> [!NOTE]
>  El resultado convertido se mostrará en el Explorador de propiedades. Por ejemplo, si va a convertir una colección de caracteres en una cadena, se mostrará como `char[] collection`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">No se puede realizar la conversión.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="collectionConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
        <param name="value">
          <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener las propiedades.</param>
        <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se utilizará como filtro.</param>
        <summary>Obtiene una colección de propiedades para el tipo de matriz especificado por el parámetro de valor, utilizando el contexto y los atributos especificados.</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades. Este método devuelve siempre <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. Puede ser `null`, por lo que debe comprobarse siempre. Asimismo, las propiedades del objeto de contexto pueden devolver `null`.  
  
 La matriz de atributos que pase se usará para filtrar la matriz. Los atributos pueden tener una combinación de <xref:System.Type> y <xref:System.Attribute> objetos. El filtrado se define mediante las siguientes reglas:  
  
-   Un <xref:System.Type> objeto se tratará como un carácter comodín; coincidirá con cualquier propiedad que tenga el <xref:System.Type> en su conjunto de atributos.  
  
-   Si no tiene una propiedad de un <xref:System.Attribute> de la misma clase, la propiedad no se incluirán en la matriz devuelta.  
  
-   Si el atributo es una instancia de <xref:System.Attribute>, la propiedad debe ser una coincidencia exacta o no se incluirá en la matriz devuelta.  
  
-   Si un <xref:System.Attribute> se especifica la instancia y es la propiedad predeterminada, se incluirán en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.  
  
 Las colecciones no admiten propiedades; por lo tanto, este método siempre devuelve `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="collectionConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
        <summary>Obtiene un valor que indica si el objeto admite propiedades.</summary>
        <returns>
          <see langword="false" /> porque no se debe llamar al método <see cref="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> para buscar las propiedades de este objeto. Este método nunca devuelve <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. Puede ser `null`, por lo que debe comprobarse siempre. Asimismo, las propiedades del objeto de contexto pueden devolver `null`.  
  
 Las colecciones no admiten propiedades; por lo tanto, este método siempre devuelve `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>