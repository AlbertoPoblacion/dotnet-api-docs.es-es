<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignerSerializationVisibilityAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0c8e74fe9fb3d671c216b221f5af96035fa9ad9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0c8e74fe9fb3d671c216b221f5af96035fa9ad9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>Specifies the type of persistence to use when serializing a property on a component at design time.</source>
          <target state="translated">Especifica el tipo de persistencia que se va a utilizar al serializar una propiedad en un componente en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>When a serializer persists the persistable state of a design mode document, it often adds code to the initialization method of components to persist values of properties that have been set at design time.</source>
          <target state="translated">Cuando un serializador conserva el estado con persistencia de un documento en modo de diseño, suele agregar código al método de inicialización de componentes para conservar los valores de propiedades que se han establecido en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>This happens by default for most basic types, if no attribute has been set to direct other behavior.</source>
          <target state="translated">Esto sucede de forma predeterminada para los tipos más básicos, si no se ha establecido ningún atributo para indicar a otro comportamiento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>With the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph>, you can indicate whether the value for a property is <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>, and should be persisted in initialization code, <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden&gt;</ph>, and should not be persisted in initialization code, or consists of <ph id="ph4">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content&gt;</ph>, which should have initialization code generated for each public, not hidden property of the object assigned to the property.</source>
          <target state="translated">Con el <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph>, puede indicar si el valor de una propiedad es <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>y debe conservarse en el código de inicialización, <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden&gt;</ph>y no debe conservarse en el código de inicialización o consta de <ph id="ph4">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content&gt;</ph>, que debe tener el código de inicialización generado para cada propiedad pública, no está oculto del objeto asignado a la propiedad.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>Members that do not have a <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> will be treated as though they have a <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> with a value of <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Visible&gt;</ph>.</source>
          <target state="translated">Los miembros que no tienen un <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> se tratará como si tuvieran un <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> con un valor de <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>The values of a property marked as <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Visible&gt;</ph> will be serialized, if possible, by a serializer for the type.</source>
          <target state="translated">Los valores de una propiedad marcan como <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Visible&gt;</ph> se van a serializar, si es posible, un serializador para el tipo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>To specify custom serialization for a particular type or property, use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;</ph>.</source>
          <target state="translated">Para especificar una serialización personalizada para un tipo determinado o una propiedad, utilice la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept> (Atributos).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>The following code example demonstrates the use of a <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Content&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de un <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> establecido en <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibility.Content&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>It persists the values of a public property of a user control, which can be configured at design time.</source>
          <target state="translated">Conserva los valores de una propiedad pública de un control de usuario, que se puede configurar en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>To use the example, first compile the following code into a user control library.</source>
          <target state="translated">Para usar el ejemplo, primero compile el código siguiente en una biblioteca de controles de usuario.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>Next, add a reference to the compiled .dll file in a new Windows Application project.</source>
          <target state="translated">A continuación, agregue una referencia al archivo .dll compilado en un nuevo proyecto de aplicación de Windows.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, the <ph id="ph2">`ContentSerializationExampleControl`</ph> is automatically added to the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>.</source>
          <target state="translated">Si utilizas <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, <ph id="ph2">`ContentSerializationExampleControl`</ph> se agrega automáticamente a la <bpt id="p1">**</bpt>cuadro de herramientas<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>Drag the control from the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept> to a form, and set the properties of the <ph id="ph1">`DimensionData`</ph> object listed in the Properties window.</source>
          <target state="translated">Arrastre el control desde el <bpt id="p1">**</bpt>cuadro de herramientas<ept id="p1">**</ept> a un formulario y establecer las propiedades de la <ph id="ph1">`DimensionData`</ph> objeto aparece en la ventana Propiedades.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>When you view the code for the form, code will have been added to the <ph id="ph1">`InitializeComponent`</ph> method of the parent form.</source>
          <target state="translated">Al ver el código del formulario, se habrá agregado código para el <ph id="ph1">`InitializeComponent`</ph> método del formulario primario.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
          <source>This code sets the values of the control's properties to those which you have set in design mode.</source>
          <target state="translated">Este código establece los valores de las propiedades del control a los que se hayan establecido en modo de diseño.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> value.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph> mediante el valor especificado de <ph id="ph2">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
          <source>The following code example specifies how a property on a component is saved by a designer.</source>
          <target state="translated">En el ejemplo de código siguiente se especifica cómo se guarda una propiedad en un componente mediante un diseñador.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
          <source>This code creates a new <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> and sets its value to <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este código crea un nuevo <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> y establece su valor en <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
          <source>Specifies that a serializer should serialize the contents of the property, rather than the property itself.</source>
          <target state="translated">Especifica que un serializador debe serializar el contenido de la propiedad en lugar de la propiedad.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
          <source>When you mark a property with <ph id="ph1">`DesignerSerializationVisibilityAttribute.Content`</ph>, the value of its <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content&gt;</ph>.</source>
          <target state="translated">Cuando se marca una propiedad con <ph id="ph1">`DesignerSerializationVisibilityAttribute.Content`</ph>, el valor de su <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> propiedad está establecida en <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
          <source>Specifies the default value, which is <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" /&gt;</ph>, that is, a visual designer uses default rules to generate the value of a property.</source>
          <target state="translated">Especifica el valor predeterminado, que es <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" /&gt;</ph>, es decir, un diseñador visual utiliza las reglas predeterminadas para generar el valor de una propiedad.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
          <source>This <ph id="ph1">&lt;see langword="static" /&gt;</ph> field is read-only.</source>
          <target state="translated">Este campo <ph id="ph1">&lt;see langword="static" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
          <source>When you mark a property with this value, this attribute is set to the constant member <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>.</source>
          <target state="translated">Al marcar una propiedad con este valor, este atributo se establece en el miembro constante <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
          <source>Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Por lo tanto, cuando desee comprobar si se ha establecido el atributo en este valor en el código, debe especificar el atributo como <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
          <source>Another object to compare to.</source>
          <target state="translated">Otro objeto con el que se va a realizar la comparación.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
          <source>Indicates whether this instance and a specified object are equal.</source>
          <target state="translated">Indica si esta instancia y un objeto especificado son iguales.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> es igual a esta instancia; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Devuelve el código hash de este objeto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
          <source>Specifies that a serializer should not serialize the value of the property.</source>
          <target state="translated">Especifica que un serializador no debe serializar el valor de la propiedad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
          <source>This <ph id="ph1">&lt;see langword="static" /&gt;</ph> field is read-only.</source>
          <target state="translated">Este campo <ph id="ph1">&lt;see langword="static" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
          <source>When you mark a property with <ph id="ph1">`DesignerSerializationVisibilityAttribute.Hidden`</ph>, the value of its <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> property is set to the constant member <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden&gt;</ph>.</source>
          <target state="translated">Cuando se marca una propiedad con <ph id="ph1">`DesignerSerializationVisibilityAttribute.Hidden`</ph>, el valor de su <ph id="ph2">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> propiedad se establece en el miembro constante <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
          <source>Gets a value indicating whether the current value of the attribute is the default value for the attribute.</source>
          <target state="translated">Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is set to the default value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el atributo está establecido en el valor predeterminado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.</source>
          <target state="translated">Obtiene un valor que indica el modo básico de serialización que debe utilizar un serializador al determinar si se conserva el valor de una propiedad y la forma de hacerlo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>The following code example shows how to check the value of the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> for <ph id="ph2">`MyProperty`</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo comprobar el valor de la <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph> para <ph id="ph2">`MyProperty`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>First the code gets a <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> with all the properties for the object.</source>
          <target state="translated">En primer lugar, el código obtiene una <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> con todas las propiedades para el objeto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>Next, the code indexes into the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> to get <ph id="ph2">`MyProperty`</ph>.</source>
          <target state="translated">A continuación, el código utiliza un índice en la <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> para obtener <ph id="ph2">`MyProperty`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>Then, the code returns the attributes for this property and saves them in the attributes variable.</source>
          <target state="translated">A continuación, el código devuelve los atributos de esta propiedad y los guarda en la variable de atributos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>This example presents two different ways to check the value of the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph>.</source>
          <target state="translated">Este ejemplo muestra dos maneras diferentes de comprobar el valor de la <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>In the second code fragment, the example calls the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method with a <ph id="ph2">`static`</ph> value.</source>
          <target state="translated">En el segundo fragmento de código, el ejemplo llama a la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> método con un <ph id="ph2">`static`</ph> valor.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
          <source>In the last code fragment, the example uses the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> property to check the value.</source>
          <target state="translated">En el último fragmento de código, el ejemplo se utiliza la <ph id="ph1">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility%2A&gt;</ph> propiedad para comprobar el valor.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
          <source>Specifies that a serializer should be allowed to serialize the value of the property.</source>
          <target state="translated">Especifica que se debe permitir a un serializador la serialización del valor de la propiedad.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
          <source>This <ph id="ph1">&lt;see langword="static" /&gt;</ph> field is read-only.</source>
          <target state="translated">Este campo <ph id="ph1">&lt;see langword="static" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
          <source>This field is the default setting for this attribute.</source>
          <target state="translated">Este campo es el valor predeterminado de este atributo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
          <source>When you mark a property with <ph id="ph1">`DesignerSerializationVisibilityAttribute.Visible`</ph>, the value of its <ph id="ph2">`Visibility`</ph> property is set to the constant member <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>.</source>
          <target state="translated">Cuando se marca una propiedad con <ph id="ph1">`DesignerSerializationVisibilityAttribute.Visible`</ph>, el valor de su <ph id="ph2">`Visibility`</ph> propiedad se establece en el miembro constante <ph id="ph3">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>