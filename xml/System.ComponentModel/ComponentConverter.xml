<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComponentConverter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac531057a1985b801d9a197853a7695a0cf1783e379.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31057a1985b801d9a197853a7695a0cf1783e379</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ComponentConverter">
          <source>Provides a type converter to convert components to and from various other representations.</source>
          <target state="translated">Proporciona un convertidor de tipos para convertir componentes a otras representaciones y desde otras representaciones.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>This class implements <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.ComponentConverter.GetProperties%2A&gt;</ph> by returning the properties through the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method of <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esta clase implementa <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.ComponentConverter.GetProperties%2A&gt;</ph> devolviendo las propiedades a través de la <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> método <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Para obtener más información sobre los convertidores de tipos, vea la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase base y <bpt id="p1">[</bpt>Cómo: implementar un convertidor de tipos<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>You should never create an instance of <ph id="ph1">&lt;xref:System.ComponentModel.ComponentConverter&gt;</ph>.</source>
          <target state="translated">Nunca debe crearse una instancia de <ph id="ph1">&lt;xref:System.ComponentModel.ComponentConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">En su lugar, llame a la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> método <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">Para obtener más información, vea los ejemplos en la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> clase base.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ComponentConverter">
          <source>This converter converts an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> and displays its properties in the Properties window.</source>
          <target state="translated">Este convertidor convierte un objeto que implementa <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> y muestra sus propiedades en la ventana Propiedades.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to associate with this component converter.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el tipo que se va a asociar a este convertidor de componentes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ComponentConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.ComponentConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the type of component to get the properties for.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que especifica el tipo de componente para el que se van a obtener las propiedades.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that will be used as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se utilizará como filtro.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Gets a collection of properties for the type of component specified by the value parameter.</source>
          <target state="translated">Obtiene una colección de propiedades para el tipo de componente especificado por el parámetro de valor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that are exposed for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> con las propiedades expuestas para el componente o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay propiedades.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array will be used to filter the array.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> matriz se utilizará para filtrar la matriz.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`attributes`</ph> puede tener una combinación de <ph id="ph2">&lt;xref:System.Type&gt;</ph> y <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">El filtrado se define mediante las siguientes reglas:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object will be treated as a wildcard; it will match any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto se tratará como un carácter comodín; coincidirá con cualquier propiedad que tenga el <ph id="ph2">&lt;xref:System.Type&gt;</ph> en su conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Si una propiedad no tiene un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match or it will not be included in the returned array.</source>
          <target state="translated">Si el atributo es una instancia de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, la propiedad debe ser una coincidencia exacta o no se incluirá en la matriz devuelta.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If a <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> se especificó la instancia y es la propiedad predeterminada, se incluirá en la matriz devuelta incluso si no hay ninguna instancia de la <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> en la propiedad.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que ofrece un contexto de formato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports properties using the specified context.</source>
          <target state="translated">Obtiene un valor que indica si el objeto admite propiedades que utilicen el contexto especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> should be called to find the properties of this object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> porque se debe llamar al método <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> para buscar las propiedades de este objeto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método nunca devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">El parámetro <ph id="ph1">`context`</ph> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Puede ser <ph id="ph1">`null`</ph>, por lo que debe comprobarse siempre.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Asimismo, las propiedades del objeto de contexto pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>