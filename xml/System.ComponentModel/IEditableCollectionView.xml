<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5bf8-101">Define los métodos y las propiedades que <see cref="T:System.Windows.Data.CollectionView" /> implementa para proporcionar funciones de edición a una colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-102">Cuando una vista de colección implementa la <xref:System.ComponentModel.IEditableCollectionView> interfaz directamente puede cambiar la colección subyacente, si permite cambios que se realizan mediante el uso de los métodos y propiedades que <xref:System.ComponentModel.IEditableCollectionView> expone, independientemente del tipo de la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="a5bf8-103">Los tipos de <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, y <xref:System.Windows.Data.ListCollectionView> son los tipos que se suministran con [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] que heredan de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="a5bf8-104">Estos tipos también implementan la <xref:System.ComponentModel.IEditableCollectionView>, por lo que puede editar una recopilación que use uno de esos tipos.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="a5bf8-105"><xref:System.Windows.Controls.ItemCollection>, en concreto, se utiliza a menudo porque la <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> propiedad es una <xref:System.Windows.Controls.ItemCollection>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-106">En el ejemplo siguiente se muestra cómo agregar un elemento a una colección mediante el uso de métodos que se definen mediante <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="a5bf8-107">Esta aplicación muestra una lista de artículos en venta y proporciona al usuario la opción de agregar, editar o quitar un elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="a5bf8-108">Cuando el usuario agrega o edita un elemento, un formulario pide al usuario que escriba un nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="a5bf8-109">Si el usuario envía el formulario, el elemento se confirma en la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="a5bf8-110">Si el usuario cancela el formulario, se descarta el elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="a5bf8-111">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5bf8-112">Agrega un nuevo elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-112">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="a5bf8-113">Nuevo elemento que se agrega a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-113">The new item that is added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-114">Al llamar a <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> comienza una transacción de adición.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="a5bf8-115">Debe llamar a <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para finalizar la transacción de adición.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="a5bf8-116">Siempre aparece un nuevo elemento en la vista de colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="a5bf8-117">Ningún filtrado, ordenación o agrupación que se aplica a la vista se aplica al nuevo elemento cuando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-118">En el ejemplo siguiente se crea un <xref:System.Windows.Window> que pide al usuario que agregue un nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="a5bf8-119">A continuación, llama <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> para crear un nuevo objeto y establece el <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Window> a ese objeto.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="a5bf8-120">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-121">Obtiene un valor que indica si puede agregarse un elemento nuevo a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-121">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value>
          <span data-ttu-id="a5bf8-122"><see langword="true" /> si puede agregarse un nuevo elemento a la colección; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-122"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-123">Un <xref:System.ComponentModel.IEditableCollectionView> puede agregar un nuevo elemento si se cumple lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="a5bf8-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="a5bf8-124">Puede agregarse un elemento a la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="a5bf8-125">Por ejemplo, si la colección es de solo lectura, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="a5bf8-126">La <xref:System.ComponentModel.IEditableCollectionView> puede crear un objeto del tipo que está en la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="a5bf8-127">Por ejemplo, si la colección es de tipo <xref:System.Collections.ObjectModel.ObservableCollection%601>, <xref:System.ComponentModel.IEditableCollectionView> debe ser capaz de crear un objeto de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-128">En el ejemplo siguiente se comprueba si se puede agregar un elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="a5bf8-129">Si <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> es `false`, en el ejemplo se indica al usuario que no se puede agregar un elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="a5bf8-130">En caso contrario, muestra un formulario que pide al usuario que agregue un nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="a5bf8-131">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="a5bf8-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-132">Obtiene un valor que indica si la vista de colección puede descartar los cambios pendientes y restaurar los valores originales de un objeto editado.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value>
          <span data-ttu-id="a5bf8-133"><see langword="true" /> si la vista de colección puede descartar los cambios pendientes y restaurar los valores originales de un objeto editado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-133"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> es `true` si la vista admite la noción de "cambios pendientes" en el elemento actualmente editado.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="a5bf8-135">Por ejemplo, podría devolver una vista de colección `true` si el elemento editado implementa <xref:System.ComponentModel.IEditableObject>, o si la vista tiene información sobre el estado del elemento que puede utilizar para poner al volver a cambios.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="a5bf8-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> es `false` si la vista no puede revertir los cambios en un objeto.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="a5bf8-137">En ese caso, llame a <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> para hacer que la vista salir del estado de edición y proporcionar lógica para revertir los cambios en el objeto que se ha editado.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-138">En el ejemplo siguiente se obtiene <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> para comprobar si se pueden restaurar los valores originales del elemento editado antes de llamar a <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="a5bf8-139">Si no se puede restaurar los valores, debe proporcionar una lógica adicional para realizar esta acción.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="a5bf8-140">Si puede, se restauran los valores cuando el ejemplo se llama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="a5bf8-141">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5bf8-142">Finaliza la transacción de edición y, si es posible, restaura el valor original del elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-142">Ends the edit transaction and, if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> establece <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> a `null` y hace que la vista de colección salir del estado de edición.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="a5bf8-144">Si <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> es `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> también restaura los valores originales del objeto editado.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-145">En el ejemplo siguiente se obtiene <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> para comprobar si se pueden restaurar los valores originales del elemento editado antes de llamar a <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="a5bf8-146">Si no se puede restaurar los valores, debe proporcionar una lógica adicional para realizar esta acción.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="a5bf8-147">Si puede, se restauran los valores cuando el ejemplo se llama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="a5bf8-148">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5bf8-149">Finaliza la transacción de adición y descarta el nuevo elemento pendiente.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-149">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5bf8-150">En el ejemplo siguiente se muestra un formulario que pide al usuario que agregue un nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="a5bf8-151">Si el usuario envía el formulario, el ejemplo llama <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> para agregar el elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="a5bf8-152">Si el usuario cancela el formulario, el ejemplo se llama <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para descartar el elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="a5bf8-153">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-154">Obtiene un valor que indica si un elemento puede quitarse de la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-154">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value>
          <span data-ttu-id="a5bf8-155"><see langword="true" /> si un elemento puede quitarse de la colección; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-155"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> es `false` si la colección subyacente es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-157">El ejemplo siguiente se llama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> para comprobar si un elemento puede quitarse de la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="a5bf8-158">Si un elemento puede quitarse, en el ejemplo se pide al usuario que confirme la acción y llamadas <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> si el usuario hace clic en **Sí**.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="a5bf8-159">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5bf8-160">Finaliza la transacción de edición y guarda los cambios pendientes.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-160">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5bf8-161">En el ejemplo siguiente se crea un formulario que solicita al usuario editar un elemento existente.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="a5bf8-162">Si el usuario envía el formulario, el ejemplo llama <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> para guardar los cambios a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="a5bf8-163">Si el usuario cancela el formulario, el ejemplo se llama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> para descartar los cambios.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="a5bf8-164">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5bf8-165">Finaliza la transacción de adición y guarda el nuevo elemento pendiente.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-165">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-166">Ningún filtrado, ordenación o agrupación que se aplica a la <xref:System.Windows.Data.CollectionView> se aplica al nuevo elemento cuando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-167">En el ejemplo siguiente se muestra un formulario que pide al usuario que agregue un nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="a5bf8-168">Si el usuario envía el formulario, el ejemplo llama <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> para agregar el elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="a5bf8-169">Si el usuario cancela el formulario, el ejemplo se llama <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para descartar el elemento.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="a5bf8-170">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-171">Obtiene el elemento que se está agregando durante la transacción de adición actual.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-171">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="a5bf8-172">Elemento que se está agregando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> es <see langword="true" />; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-173">Obtiene el elemento de la colección que se está editando.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-173">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="a5bf8-174">Elemento de la colección que se está editando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> es <see langword="true" />; de lo contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a5bf8-175">Elemento que va a editarse.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-175">The item to edit.</span></span></param>
        <summary><span data-ttu-id="a5bf8-176">Inicia una transacción de edición del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-176">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5bf8-177">En el ejemplo siguiente se crea un formulario que solicita al usuario editar un elemento existente.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="a5bf8-178">Si el usuario envía el formulario, los cambios se confirman en la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="a5bf8-179">Si el usuario cancela el formulario, se descartan los cambios.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="a5bf8-180">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="a5bf8-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-181">Obtiene un valor que indica si hay una transacción de adición en curso.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-181">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="a5bf8-182">Es <see langword="true" /> si hay una transacción de adición en curso; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-182"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-183">Iniciar una transacción mediante una llamada a <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> y finalizar la transacción de adición mediante una llamada a <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-184">Obtiene un valor que indica si hay una transacción de edición en curso.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-184">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="a5bf8-185">Es <see langword="true" /> si hay una transacción de edición en curso; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-185"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-186">Comienza una transacción de edición llamando <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> y finalizar la transacción mediante una llamada a <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5bf8-187">Obtiene o establece la posición del nuevo marcador de posición de elemento en la vista de colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-187">Gets or sets the position of the new item placeholder in the collection view.</span></span></summary>
        <value><span data-ttu-id="a5bf8-188">Uno de los valores de enumeración que especifica la posición del nuevo marcador de posición de elemento en la vista de colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a5bf8-189">Elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-189">The item to remove.</span></span></param>
        <summary><span data-ttu-id="a5bf8-190">Quita el elemento especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-190">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-191">Si `item` no está en la colección, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> no hace nada.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5bf8-192">El ejemplo siguiente se llama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> para comprobar si un elemento puede quitarse de la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="a5bf8-193">Si un elemento puede quitarse, en el ejemplo se pide al usuario que confirme la acción y llamadas <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> si el usuario hace clic en **Sí**.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="a5bf8-194">Para obtener el ejemplo completo, vea [cambiar una colección by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a5bf8-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a5bf8-195">Posición del elemento que va a quitarse.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-195">The position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="a5bf8-196">Quita de la colección un elemento situado en la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-196">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5bf8-197">`index` está relacionado con la vista de colección, no a la colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="a5bf8-198">Por ejemplo, si la colección tiene 10 elementos y la vista tiene un <xref:System.ComponentModel.ICollectionView.Filter%2A> para que muestren 7 elementos, los valores válidos de `index` van del 0 al 6.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a5bf8-199"><paramref name="index" /> es menor que 0 o mayor que el número de elementos de la vista de colección.</span><span class="sxs-lookup"><span data-stu-id="a5bf8-199"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
