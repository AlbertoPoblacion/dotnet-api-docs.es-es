<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueEnumerator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd645dcfd97fa2036ad0395acbbbf3e86c2865e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd645dcfd97fa2036ad0395acbbbf3e86c2865e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Proporciona un cursor de tipo sólo hacia delante con el fin de enumerar mensajes en una cola de mensajes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> for dynamic interaction with queues on the network.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> para la interacción dinámica con las colas de la red.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">Métodos disponibles a través de la <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> clase puede devolver un <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> que contiene una lista dinámica de colas o una matriz que contiene una instantánea de la colección de cola en el momento en que se llamó al método especificado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">No hay ningún orden definido de colas en una red.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">No son ordenada, por ejemplo, al equipo, etiqueta, estado público o privado, o cualquier otro criterio accesible para el usuario.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> es un cursor, inicializado en el encabezado de una lista dinámica.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>You can move the cursor to the first queue of the enumeration by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Puede mover el cursor hasta la primera cola de la enumeración mediante una llamada a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining queues.</source>
          <target state="translated">Una vez inicializado el enumerador, puede utilizar <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> para desplazarse hacia delante por las colas restantes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">No es posible ir hacia atrás con un <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">Un cursor sólo permite desplazarse hacia delante por la enumeración de cola.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">Sin embargo, puede llamar a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> para restablecer la enumeración y coloque el cursor al principio de la lista de nuevo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">Dado que el enumerador es dinámico, puede tener acceso a una cola que se anexa más allá de la posición del cursor actual por el enumerador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">No se puede tener acceso a una cola que se inserta antes de la posición del cursor actual sin llamar primero a Reset.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">En el ejemplo de código siguiente se recorre en iteración todas las colas de mensajes en la red y examina la ruta de acceso para cada cola.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">Por último, muestra el número de colas públicas en la red.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Libera los recursos asociados al enumerador.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>The operating system retains an open handle, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">El sistema operativo retiene un identificador abierto, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, en el enumerador de cola durante la duración del cursor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>When you finish working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">Cuando termine de trabajar con el enumerador, llame a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> para liberar los recursos asociados al identificador.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> actual de la enumeración.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La cola donde se encuentra ubicado actualmente el cursor.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>When the enumerator is created, it does not point to anything, so <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Cuando se crea el enumerador, no apunta a nada, por lo que <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> no es válida y producirá una excepción si se tiene acceso.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> para colocar el cursor en la primera cola de la enumeración.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object.</source>
          <target state="translated">Varias llamadas a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> con ninguna llamada intermedia a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> devolverá el mismo <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">Se llamó a <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> antes de la primera llamada a <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The cursor is located before the first queue in the enumeration.</source>
          <target state="translated">El cursor se halla ubicado antes de la primera cola de la enumeración.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">Se llamó a la propiedad <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> después de que una llamada a <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> devolviera false (lo que indica que el cursor está situado después de la última cola en la enumeración).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos utilizados por <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos utilizados por <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> permite que los recursos utilizados por el <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> se reasignen para otros fines.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que utiliza <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> y libera los recursos administrados de forma opcional.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> references.</source>
          <target state="translated">Cuando el parámetro <ph id="ph1">`disposing`</ph> es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados a los que el control <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> hace referencia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al invalidar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">Obtiene el identificador nativo de Message Queuing que se utiliza para buscar colas en una red.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The native handle to the current queue.</source>
          <target state="translated">El identificador nativo de la cola actual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>When you no longer need this <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> instance, call <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to free this handle to the resource.</source>
          <target state="translated">Cuando ya no necesite este <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> de la instancia, llame a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> para liberar este identificador del recurso.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">El indicador no existe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">El código de llamada no tiene permisos de exploración.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">Desplaza el enumerador a la siguiente cola de la enumeración si hay alguna disponible.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el enumerador avanzó correctamente hasta la siguiente cola; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el enumerador llegó al final de la enumeración.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> Devuelve <ph id="ph2">`false`</ph> inmediatamente si no hay colas asociadas a la enumeración.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> devolverá <ph id="ph2">`true`</ph> hasta que se ha alcanzado el final de la colección.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">A continuación, devolverá <ph id="ph1">`false`</ph> para cada llamada sucesiva.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>However once <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">Sin embargo una vez <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> ha devuelto <ph id="ph2">`false`</ph>, acceso a la <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> propiedad producirá una excepción.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> of the enumeration, and the first call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> brings the first queue of the enumeration into view.</source>
          <target state="translated">Tras su creación, se coloca conceptualmente un enumerador antes del primer <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> de la enumeración y la primera llamada a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> pone la primera cola de la enumeración en la vista.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">El código de llamada no tiene permisos de exploración.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">Restablece el cursor, de forma que señala al principio de la enumeración.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Un enumerador se desplaza en una dirección de solo avance.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">Utilice este método para volver al principio de la enumeración de colas.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> positions the cursor at the first queue in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> coloca el cursor en la primera cola de la lista.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">No es necesario llamar a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> después de llamar a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> para mover el cursor hacia delante hasta la primera cola de la enumeración.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> actual de la enumeración.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La cola donde se encuentra ubicado actualmente el cursor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>