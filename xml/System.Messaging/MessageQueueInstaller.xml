<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb6aa54811f33e7e5a6bb9e848def1f050d7706" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726361" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permite instalar y configurar una cola que la aplicación necesita para poder ejecutarse. La utilidad de instalación, por ejemplo, InstallUtil.exe, llama a esta clase cuando se instala una <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.MessageQueueInstaller> se usa la utilidad de instalación para escribir los valores del registro que están asociados a la cola. Para obtener más información acerca de las utilidades de instalación, consulte [Installutil.exe (herramienta Installer)](~/docs/framework/tools/installutil-exe-installer-tool.md).  
  
 Para instalar una cola, cree una clase de instalador de proyecto que herede de la <xref:System.Configuration.Install.Installer>y establezca el <xref:System.ComponentModel.RunInstallerAttribute> para que la clase `true`. Dentro del proyecto, cree un <xref:System.Messaging.MessageQueueInstaller> de instancia para cada cola en la instalación y agregue la instancia a la clase de instalador del proyecto.  
  
 Al crear un <xref:System.Messaging.MessageQueueInstaller> instancia, también puede pasar una existente <xref:System.Messaging.MessageQueue> (por ejemplo, desde un servidor de prueba) para el <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. Este enfoque proporciona automáticamente la configuración de la nueva cola mediante la creación de reflejo de la configuración de la cola que se pasa. Como alternativa, puede establecer manualmente las propiedades el <xref:System.Messaging.MessageQueueInstaller> instancia en los Estados que desee y llamar al constructor predeterminado.  
  
 Cuando se llama a la utilidad de instalación, busca el <xref:System.ComponentModel.RunInstallerAttribute>. Si es `true`, la utilidad instala todas las colas de la <xref:System.Configuration.Install.Installer.Installers%2A> colección asociada al instalador del proyecto. Si <xref:System.ComponentModel.RunInstallerAttribute> es `false`, la utilidad omite el instalador del proyecto.  
  
 Modificar otras propiedades de un <xref:System.Messaging.MessageQueueInstaller> instancia antes o después de agregar la instancia a la <xref:System.Configuration.Install.Installer.Installers%2A> colección del instalador del proyecto. Por ejemplo, una cola de <xref:System.Messaging.MessageQueue.Path%2A> debe establecerse antes de que se ejecute la utilidad de instalación.  
  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación installutil.exe. La utilidad llama automáticamente el <xref:System.Messaging.MessageQueueInstaller.Install%2A> método durante el proceso de instalación y las llamadas <xref:System.Messaging.MessageQueueInstaller.Commit%2A> si la instalación no ha producido una excepción. Deshace los errores, si es necesario, mediante una llamada a <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> para el objeto que generó la excepción.  
  
 La rutina de instalación de la aplicación utiliza el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> para mantener automáticamente la información sobre los componentes que ya se han instalado. Esta información de estado se actualiza continuamente cada <xref:System.Messaging.MessageQueueInstaller> instancia está instalada la utilidad. No es normalmente necesario modificar la información de estado de forma explícita el código.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.MessageQueueInstaller" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.MessageQueueInstaller" />. No establece ninguna propiedad de la instancia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">Componente <see cref="T:System.Messaging.MessageQueue" /> cuya configuración determina los valores de la propiedad de la nueva cola instalada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.MessageQueueInstaller" />, inicializando la configuración de instalación en la configuración de una instancia de <see cref="T:System.Messaging.MessageQueue" /> existente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cola que se va a instalar acepta únicamente mensajes autenticados.</summary>
        <value>Es <see langword="true" /> si la cola acepta sólo mensajes autenticados; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se envía un mensaje no autenticado a una cola que acepta sólo mensajes autenticados, se rechaza el mensaje. La aplicación de envío puede solicitar notificación de rechazo de un mensaje estableciendo el <xref:System.Messaging.Message.AcknowledgeType%2A> para el mensaje. En caso contrario, no hay ninguna indicación de que se ha rechazado el mensaje, por lo que se puede perder el mensaje a menos que envíe a la cola de mensajes no enviados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la prioridad básica que se utiliza para distribuir los mensajes de una cola pública a través de la red.</summary>
        <value>Prioridad básica única para todos los mensajes enviados a la cola pública. El valor predeterminado es cero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> se usa para el enrutamiento de mensajes de la cola a través de la red. Use el <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> para proporcionar a los mensajes enviados a la cola una mayor prioridad inferior a la que los mensajes enviados a otras colas. Cuando se establece la prioridad básica de una cola, todos los mensajes enviados a los tienen una prioridad más alta que la de los mensajes enviados a las colas de menor prioridad base. Prioridad base de la cola no tiene ningún efecto del orden de los mensajes en la cola o en cómo se leen los mensajes de la cola.  
  
 El <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> se aplica a las colas solo para el acceso público que se accede mediante el controlador de dominio (en otras palabras, con el nombre de formato público). La prioridad básica de las colas privadas y de colas públicas directamente a los que accede siempre es cero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un tipo de cola específico de la implementación.</summary>
        <value>
          <see cref="T:System.Guid" /> que representa la categoría de la cola (o identificador de tipo de Message Queuing), lo que permite que las aplicaciones clasifiquen sus colas en función de la forma en que se utilizan. El valor predeterminado es <see langword="Guid.empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Categoría de la cola permite que una aplicación clasifique las colas asociadas según el modo en que se utilizan. El <xref:System.Messaging.MessageQueue.Category%2A> puede ser una referencia nula. También puede definir una nueva categoría.  
  
 El <xref:System.Messaging.MessageQueue.Category%2A> propiedad proporciona acceso a la propiedad de identificador de tipo de Message Queue Server, que está asociado a una cola determinada y es de lectura/escritura. Puede usar el <xref:System.Guid.NewGuid%2A> método para crear un valor de categoría que se garantiza que sea único en todos los <xref:System.Guid> valores. Sin embargo, es necesario solo para el valor de categoría que ser distinto de otras categorías, no de todas las demás <xref:System.Guid> valores. Por ejemplo, puede establecer el <xref:System.Messaging.MessageQueue.Category%2A> para un grupo de colas para {00000000-0000-0000-0000-000000000001} y <xref:System.Messaging.MessageQueue.Category%2A> para otro grupo a {00000000-0000-0000-0000-000000000002}.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Un objeto <see cref="T:System.Collections.IDictionary" /> que contiene el estado del equipo después de la instalación.</param>
        <summary>Finaliza el proceso de instalación confirmando la información de instalación de <see cref="T:System.Messaging.MessageQueue" /> que fue escrita en el Registro por el método <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />. Este método está pensado para que lo utilicen las herramientas de instalación, que llaman automáticamente a los métodos adecuados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación installutil.exe. La utilidad llama automáticamente el <xref:System.Messaging.MessageQueueInstaller.Install%2A> método durante el proceso de instalación. La instalación es transaccional, por lo que si se produce un error de cualquier componente de proyecto de instalación durante la instalación, se revierten a su estado previo de instalación a todos los componentes instalados anteriormente. Esto se logra mediante una llamada a cada componente <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> método.  
  
 Después de una instalación correcta de todos los componentes que están asociados con el proyecto de instalación se ha producido, la utilidad de instalación confirma las instalaciones. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Complete la instalación de la <xref:System.Messaging.MessageQueue> estableciendo la cola en el estado inicial adecuado. Si la cola especificada por el <xref:System.Messaging.MessageQueueInstaller.Path%2A> propiedad ya existe y contiene mensajes, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> borra los mensajes. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, en lugar de <xref:System.Messaging.MessageQueueInstaller.Install%2A>, borra los mensajes porque no se puede deshacer la acción de purgar los mensajes.  
  
 La rutina de instalación de la aplicación utiliza el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> para mantener automáticamente la información sobre los componentes que ya se han instalado. Esta información de estado, que se pasa a <xref:System.Messaging.MessageQueueInstaller.Commit%2A> como el `savedState` parámetro, se actualiza periódicamente a medida que la utilidad confirma cada <xref:System.Messaging.MessageQueueInstaller> instancia. Por lo general, no es necesario para el código explícitamente se modifique esta información de estado. Una vez borrada la cola, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> envía una entrada del registro para el `savedState` que está asociado con la instalación.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Un objeto <see cref="T:System.ComponentModel.IComponent" /> que se utiliza como plantilla para la clase <see cref="T:System.Messaging.MessageQueueInstaller" />.</param>
        <summary>Copias los valores de propiedad de un componente <see cref="T:System.Messaging.MessageQueue" /> que son necesarios durante la instalación para una cola de mensajes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación installutil.exe. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> se usa la utilidad de instalación para establecer los valores de propiedad para el <xref:System.Messaging.MessageQueueInstaller> a los valores de una existente <xref:System.Messaging.MessageQueue>.  
  
 Si el <xref:System.Messaging.MessageQueue.Path%2A> de la <xref:System.Messaging.MessageQueue> que es pasado es una cadena vacía (""), debe establecer el <xref:System.Messaging.MessageQueue.Path%2A> propiedad con un valor no vacío antes de que se ejecute el instalador.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El componente asociado a <see cref="T:System.Messaging.MessageQueueInstaller" /> no es <see cref="T:System.Messaging.MessageQueue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cola acepta únicamente mensajes privados o cifrados.</summary>
        <value>Uno de los valores <see cref="T:System.Messaging.EncryptionRequired" /> que indica el nivel de cifrado necesario en los mensajes enviados a la cola. El valor predeterminado es <see langword="Optional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se especifica el cifrado, sólo el <xref:System.Messaging.Message.Body%2A> de un mensaje está cifrado. Otras propiedades, como el <xref:System.Messaging.Message.Label%2A>, no se cifran.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Un objeto <see cref="T:System.Collections.IDictionary" /> que se utiliza para guardar la información necesaria para realizar una operación de confirmar, deshacer o desinstalar.</param>
        <summary>Realiza la instalación y escribe la información de la cola de mensajes en el Registro. Este método está pensado para que lo utilicen las herramientas de instalación, que llaman automáticamente a los métodos adecuados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.MessageQueueInstaller.Install%2A> método escribe la información de la cola de mensajes en el registro y asocia el <xref:System.Messaging.MessageQueue> instancia con una cola que se encuentra en la ruta de acceso especificada por el <xref:System.Messaging.MessageQueueInstaller.Path%2A> propiedad. Si la cola no existe ya, <xref:System.Messaging.MessageQueueInstaller.Install%2A> crea una cola transaccional. <xref:System.Messaging.MessageQueueInstaller.Install%2A> establece las propiedades de la cola nueva o existente en las que ha especificado en el <xref:System.Messaging.MessageQueueInstaller>. Si ya existe la cola, sus propiedades se restablecen a los de la <xref:System.Messaging.MessageQueueInstaller>. Si la cola existente no es transaccional, que se elimine y, a continuación, volver a crearla como una cola transaccional.  
  
> [!CAUTION]
>  Si es necesario volver a crear la cola, se perderán los mensajes en la cola.  
  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación installutil.exe. La utilidad llama automáticamente el <xref:System.Messaging.MessageQueueInstaller.Install%2A> método durante el proceso de instalación para escribir la información del registro que está asociado a la cola de mensajes que se va a instalar. La instalación es transaccional, por lo que si se produce un error de cualquier componente de proyecto de instalación durante la instalación, se revierten a su estado previo de instalación a todos los componentes instalados anteriormente. Esto se logra mediante una llamada a cada componente <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> método.  
  
 Después de una instalación correcta de todos los componentes que están asociados con el proyecto de instalación se ha producido, la utilidad de instalación confirma las instalaciones. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Complete la instalación de la <xref:System.Messaging.MessageQueue> estableciendo la cola en el estado inicial adecuado. Si la cola especificada por el <xref:System.Messaging.MessageQueueInstaller.Path%2A> propiedad ya existe y contiene mensajes, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> borra los mensajes. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, en lugar de <xref:System.Messaging.MessageQueueInstaller.Install%2A>, borra los mensajes porque no se puede deshacer la acción de purgar los mensajes.  
  
 La rutina de instalación de la aplicación utiliza el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> para mantener automáticamente la información sobre los componentes que ya se han instalado. Esta información de estado, que se pasa a <xref:System.Messaging.MessageQueueInstaller.Install%2A> como el `stateSaver` parámetro, se actualiza continuamente como la utilidad instala cada <xref:System.Messaging.MessageQueueInstaller> instancia. Por lo general, no es necesario para el código explícitamente se modifique esta información de estado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Instalador que se va a comparar.</param>
        <summary>Determina si el instalador especificado puede controlar el mismo tipo de instalación que este instalador.</summary>
        <returns>Es <see langword="true" /> si este instalador y el especificado por el parámetro <paramref name="otherInstaller" /> pueden controlar el mismo tipo de instalación; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por lo general, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> devuelve `true` solo si este instalador y el instalador especificado por el `otherInstaller` parámetro son del mismo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una descripción de la cola.</summary>
        <value>Etiqueta que describe la cola de mensajes. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.MessageQueue.Label%2A> propiedad no necesita ser único en las colas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño máximo del diario asociado a la cola.</summary>
        <value>Tamaño máximo, en kilobytes, de la cola del diario, que registra los mensajes que se quitan de la cola. El valor predeterminado de Message Queuing no tiene límite.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una cola, Message Queue Server crea automáticamente una cola de diario en la misma ubicación que la nueva cola. El diario de cola se utiliza para realizar un seguimiento de los mensajes que se quitan de la cola.  
  
 Dos tipos de mensajes permanecen sin seguimiento: aquellos que se quitan de la cola porque ha expirado su tiempo y los que se purgan de la cola.  
  
 Las aplicaciones no pueden enviar mensajes a la cola del diario. Sin embargo, debe borrar periódicamente la cola para quitar los mensajes que ya no son necesarios. Mensajes almacenados en el recuento de las colas de diario para la cuota para el equipo donde residen las colas. (La cuota del equipo se establece mediante el administrador).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño máximo de la cola.</summary>
        <value>Tamaño máximo de la cola, expresado en kilobytes. El valor predeterminado de Message Queuing no tiene límite.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tamaño máximo de la cola se establece normalmente en el momento de creación de colas, aunque puede restablecerse posteriormente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Introducido en MSMQ 3.0. Obtiene o establece la dirección de multidifusión asociada a la cola.</summary>
        <value>Un objeto <see cref="T:System.String" /> que contiene una dirección de multidifusión válida (en el formato especificado a continuación) o bien <see langword="null" />, que indica que la cola no está asociada a una dirección de multidifusión.  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 no está instalado.</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ubicación de la cola a la que hace referencia el objeto.</summary>
        <value>Ruta de acceso que representa la ubicación de la cola en la red.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La sintaxis para el <xref:System.Messaging.MessageQueue.Path%2A> propiedad depende del tipo de cola que hace referencia. En la tabla siguiente se muestra la sintaxis que debe usar para distintos tipos de colas.  
  
|Tipo de cola|Sintaxis|  
|----------------|------------|  
|cola pública|`machineName`\\`queueName`|  
|cola privada|`machineName`\\`Private$`\\`queueName`|  
|Cola de diario|`machineName`\\`queueName`\\`Journal$`|  
|Cola de diario del equipo|`machineName`\\`Journal$`|  
|Cola de mensajes no enviados del equipo|`machineName`\\`Deadletter$`|  
|Cola de mensajes no enviados transaccional del equipo|`machineName`\\`XactDeadletter$`|  
  
 Use "." para el equipo local.  
  
 También puede usar el <xref:System.Messaging.MessageQueue.FormatName%2A> o <xref:System.Messaging.MessageQueue.Label%2A> de un objeto de aplicación de Message Queue Server para describir la ruta de acceso de la cola. En la tabla siguiente se muestra la sintaxis correcta para cada tipo de referencia.  
  
|Referencia|Sintaxis|  
|---------------|------------|  
|Nombre de formato|FormatName: [ *nombre de formato* ]|  
|Etiqueta|Etiqueta: [ *etiqueta* ]|  
  
 Si está trabajando sin conexión, debe usar el nombre de formato para definir la cola <xref:System.Messaging.MessageQueue.Path%2A>. Si no lo hace, la aplicación producirá una excepción, porque el controlador de dominio principal no está disponible para resolver el <xref:System.Messaging.MessageQueue.Path%2A> en el <xref:System.Messaging.MessageQueue.FormatName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> se ha establecido en un valor no válido, debido probablemente a que la sintaxis no es correcta.  
  
O bien 
El valor de <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los permisos asociados a la cola.</summary>
        <value>Un objeto <see cref="T:System.Messaging.AccessControlList" /> que contiene una o varias entradas de control de acceso que especifican los usuarios que pueden obtener acceso a la cola y los permisos concedidos para la cola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el creador de una cola pública o privada tiene control total y el grupo de dominio todos tiene permiso para obtener propiedades de la cola, obtener permisos y escribir en la cola. Message Queue Server tiene acceso a cada entrada de la lista de permisos a su vez hasta que encuentra uno que se aplica al usuario actual y la acción intentada actual. Como con los permisos del sistema operativo, los derechos que deniegan específicamente a un usuario tienen prioridad sobre los que permiten.  
  
 Cuando se construye el <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> propiedad, agregue <xref:System.Messaging.AccessControlEntry> instancias a su <xref:System.Messaging.AccessControlList> colección. Cuando se crea cada entrada de control de acceso, puede especificar derechos de acceso genérico o estándar. Los derechos a una cola pueden ser cualquier combinación de las siguientes acciones:  
  
-   Eliminar  
  
-   Seguridad de lectura  
  
-   Seguridad de escritura  
  
-   Sincronizar  
  
-   Modificar propietario  
  
-   Leer  
  
-   Write  
  
-   Ejecutar  
  
-   Obligatorio  
  
-   Todas  
  
-   None  
  
 Estos derechos son un conjunto de marcadores de bits que se pueden combinar mediante el operador OR bit a bit:  
  
-   Control total.  
  
-   Eliminar mensaje  
  
-   Recibir mensaje  
  
-   Inspeccionar mensaje  
  
-   Recibir mensajes del diario  
  
-   Obtener propiedades de cola  
  
-   Establecer propiedades de cola  
  
-   Obtener permisos  
  
-   Establecer permisos  
  
-   Tomar posesión de la cola  
  
-   Escribir mensaje  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Un objeto <see cref="T:System.Collections.IDictionary" /> que contiene el estado del equipo antes de la instalación.</param>
        <summary>Restaura el estado que tenía el equipo antes de la instalación, deshaciendo la información de la cola que el procedimiento de instalación escribió en el Registro. Este método está pensado para que lo utilicen las herramientas de instalación, que llaman automáticamente a los métodos adecuados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> método deshace los efectos de la <xref:System.Messaging.MessageQueueInstaller.Install%2A> método. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> se llama si se produce un error en la instalación de cualquier componente en el proyecto de instalación. El <xref:System.Messaging.MessageQueueInstaller.Install%2A> método crea o establece las propiedades de una cola. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> elimina la cola o restablece las propiedades de una cola existente en sus valores de preinstalación.  
  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación InstallUtil.exe. La utilidad llama automáticamente el <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> método después de un error de instalación para deshacer cualquier cambio que ya ha realizado el proceso de instalación.  
  
 La rutina de instalación de la aplicación utiliza el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> para mantener automáticamente la información sobre los componentes que ya se han instalado. Esta información de estado, que se pasa a <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> como el `savedState` parámetro, se actualiza continuamente como la utilidad pone cada <xref:System.Messaging.MessageQueueInstaller> instancia. Por lo general, no es necesario para el código explícitamente se modifique esta información de estado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cola acepta únicamente mensajes enviados como parte de una transacción.</summary>
        <value>Es <see langword="true" /> si la cola acepta sólo los mensajes enviados como parte de una transacción; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los mensajes pueden obtenerse de una cola de transacciones local con o sin usar una transacción. Si no especifica un contexto de transacción, Message Queue Server crea una única transacción interna para usted.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Un objeto <see cref="T:System.Collections.IDictionary" /> que contiene el estado del equipo después de la instalación.</param>
        <summary>Quita una instalación quitando la información de cola del Registro. Este método está pensado para que lo utilicen las herramientas de desinstalación, que llaman automáticamente a los métodos adecuados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> es `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> también elimina la cola asociada con el <xref:System.Messaging.MessageQueue>.  
  
 Normalmente, no se llama los métodos de la <xref:System.Messaging.MessageQueueInstaller> desde dentro del código; se suele llamar solo por la utilidad de instalación InstallUtil.exe (en modo de desinstalación). La utilidad llama automáticamente el <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> método para restaurar las partes del sistema que resultaron afectadas por la instalación a su estado previo de instalación. Esto incluye la eliminación de información del registro que está asociado a la cola de mensajes que se va a desinstalar.  
  
 Una aplicación de la rutina de desinstalación utiliza el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> para mantener automáticamente la información sobre los componentes que ya se ha desinstalado. Esta información de estado, que se pasa a <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> como el `savedState` parámetro, se actualiza continuamente como la utilidad desinstala cada <xref:System.Messaging.MessageQueueInstaller> instancia. Por lo general, no es necesario para el código explícitamente se modifique esta información de estado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica lo que hará el instalador con la cola durante la desinstalación: quitarla, restaurarla al estado que tenía antes de la instalación o dejarla en su estado de instalación actual.</summary>
        <value>Uno de los valores <see cref="T:System.Configuration.Install.UninstallAction" /> que indica el estado en el que permanecerá la cola cuando se desinstale <see cref="T:System.Messaging.MessageQueue" />. El valor predeterminado es <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se instala una cola, también puede usar una cola existente. Si lo hace, debe decidir si la cola debe volver a su estado antes de la instalación o permanecen en su estado actual después de la instalación. Si opta por devolver la cola a su estado antes de la instalación, no se restauran los mensajes que se eliminaron de la cola durante la instalación. Puede restablecer solo propiedades de la cola asociada con el <xref:System.Messaging.MessageQueueInstaller> a sus valores previos a la instalación.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los mensajes recuperados de la cola se copian también en la cola del diario asociada.</summary>
        <value>Es <see langword="true" /> si los mensajes recuperados de la cola se copian en la cola del diario; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una cola de diario le permite realizar un seguimiento de mensajes, incluso después de que se han recuperado de la cola. Sin embargo, permanecen sin seguimiento dos tipos de mensajes: aquellos que se quitan de la cola cuando se agote su tiempo de recepción y los que se purgan de la cola.  
  
 Una cola del diario debe borrarse periódicamente para quitar los mensajes que ya no son necesarios. Mensajes almacenados en el recuento de cola de diario para la cuota para el equipo en el que se encuentra el diario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>