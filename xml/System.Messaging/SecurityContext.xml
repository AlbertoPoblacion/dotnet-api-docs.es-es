<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2d39a-101">Representa el contexto de seguridad para un mensaje en una cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-101">Represents the security context for a message in a queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d39a-102">El contexto de seguridad contiene información de seguridad almacenada en caché como un certificado interno, la clave privada correspondiente, el SID del usuario, necesario para adjuntar un certificado y el identificador del remitente a un mensaje cuando se solicita la autenticación.</span><span class="sxs-lookup"><span data-stu-id="2d39a-102">The security context contains cached security information such as an internal certificate, the corresponding private key, the user's SID, needed to attach a certificate and the sender identifier to a message when requesting authentication.</span></span>  
  
 <span data-ttu-id="2d39a-103">Si un cliente, como una aplicación ASP.NET, suplanta a un usuario para enviar un mensaje a una cola, la identidad del usuario se utiliza para tener acceso a la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-103">If a client, such as an ASP.NET application, impersonates a user to send a message to a queue, the identity of the user is used to access the queue.</span></span> <span data-ttu-id="2d39a-104">Si la cola es remota, estas credenciales se almacenan en caché y se utiliza para los mensajes que se envían posteriormente a la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-104">If the queue is remote, these credentials are cached and used for messages that are subsequently sent to the queue.</span></span> <span data-ttu-id="2d39a-105">Por lo tanto, el SID en mensajes posteriores será la identidad almacenada en caché del primer usuario que envió un mensaje a la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-105">Therefore, the SID in subsequent messages will be the cached identity of the first user that sent a message to the queue.</span></span> <span data-ttu-id="2d39a-106">La identidad almacenada en caché del primer usuario que envió un mensaje a la cola se utilizará para los usuarios siguientes.</span><span class="sxs-lookup"><span data-stu-id="2d39a-106">The cached identity of the first user that sent a message to the queue will be used for subsequent users.</span></span>  
  
 <span data-ttu-id="2d39a-107">Para solucionar este problema, establezca el contexto de seguridad mediante <xref:System.Messaging.Message.SecurityContext%2A> antes de enviar un mensaje a una cola remota para asegurarse de que las credenciales del usuario actual se utilizan para obtener acceso a la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-107">To overcome this problem, set the security context using <xref:System.Messaging.Message.SecurityContext%2A> before sending a message to a remote queue to ensure that the current user's credentials are used to gain access to the queue.</span></span> <span data-ttu-id="2d39a-108">Sin embargo, la práctica recomendada sugerida es:</span><span class="sxs-lookup"><span data-stu-id="2d39a-108">However, the suggested best practice is to:</span></span>  
  
1.  <span data-ttu-id="2d39a-109">Asegúrese de la cola de una cola autenticada.</span><span class="sxs-lookup"><span data-stu-id="2d39a-109">Make the queue an authenticated queue.</span></span>  
  
2.  <span data-ttu-id="2d39a-110">Ejecute la aplicación ASP.NET como una identidad de dominio y autorice a esa aplicación para escribir en la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-110">Run the ASP.NET application as a domain identity and authorize that application to write to the queue.</span></span>  
  
3.  <span data-ttu-id="2d39a-111">No suplantar al usuario cuando se usa la cola.</span><span class="sxs-lookup"><span data-stu-id="2d39a-111">Do not impersonate the user when using the queue.</span></span> <span data-ttu-id="2d39a-112">En su lugar, obtenga la identidad del llamador y realizar la comprobación de la aplicación ASP.NET de la autorización o incluir la identidad del llamador como parte del mensaje y realizar la comprobación de la aplicación del receptor de la autorización.</span><span class="sxs-lookup"><span data-stu-id="2d39a-112">Instead, get the caller’s identity and either perform authorization checking in the ASP.NET application or include the caller’s identity as part of the message and perform authorization checking in the receiver application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d39a-113">Libera todos los recursos que usa <see cref="T:System.Messaging.SecurityContext" />.</span><span class="sxs-lookup"><span data-stu-id="2d39a-113">Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>