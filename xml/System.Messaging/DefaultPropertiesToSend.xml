<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bdfbb68bf7c221e6d6513cb99055eed18f38d40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPropertiesToSend" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultPropertiesToSend" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica los valores de propiedad predeterminados que se utilizarán al enviar objetos diferentes de las instancias de <see cref="T:System.Messaging.Message" /> a una cola de mensajes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede establecer valores predeterminados en las propiedades seleccionadas para los mensajes enviados a un <xref:System.Messaging.MessageQueue>. <xref:System.Messaging.DefaultPropertiesToSend> se utiliza para especificar los valores de propiedad predeterminados de objetos, el mensaje que se envía cuando salvo <xref:System.Messaging.Message> instancias se envían a una cola, por ejemplo, el argumento de cadena se pasa en el <xref:System.Messaging.MessageQueue.Send%2A> método en el fragmento de código, `myMessageQueue.Send("hello")`. El <xref:System.Messaging.Message> clase tiene propiedades correspondientes de idéntico nombre a los de <xref:System.Messaging.DefaultPropertiesToSend> que proporcionan los valores al enviar un <xref:System.Messaging.Message> instancia en concreto. Incluso si ha especificado <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> para una cola, enviar un <xref:System.Messaging.Message> objeto a esa cola hará que los valores para el mismo nombre <xref:System.Messaging.Message> propiedades para invalidar la cola <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> valores.  
  
 Propiedades que no se establece explícitamente como valor predeterminado para los valores especificados por el constructor, <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.  
  
 Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.Messaging.DefaultPropertiesToSend>, consulte el <xref:System.Messaging.DefaultPropertiesToSend> constructor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza la prioridad de un mensaje para determinar las propiedades predeterminadas para enviar el mensaje.  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultPropertiesToSend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.DefaultPropertiesToSend" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede crear una nueva instancia de <xref:System.Messaging.DefaultPropertiesToSend> para definir valores de propiedad predeterminados para asociarlos a los objetos que se envía a una cola que no son de tipo <xref:System.Messaging.Message>. Cuando se trabaja con <xref:System.Messaging.MessageQueue> objetos, un <xref:System.Messaging.DefaultPropertiesToSend> instancia se crea automáticamente y asociada con el <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> miembro de la <xref:System.Messaging.MessageQueue>.  
  
 Hay dos maneras de definir propiedades predeterminadas de la cola para enviar, como se muestra en el siguiente código de C#. Puede establecer los valores de esta instancia de <xref:System.Messaging.DefaultPropertiesToSend> y asociarla a la cola <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> propiedad:  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 O bien, individualmente pueda asignar valores a la <xref:System.Messaging.MessageQueue> la instancia <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> propiedad directamente:  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 Si elige la segunda de estas opciones, no es necesario llamar a la <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> constructor explícitamente. Puede crear instancias de <xref:System.Messaging.DefaultPropertiesToSend>, por ejemplo, si los valores predeterminados de las propiedades dependen cualquier criterio del mensaje que se va a enviar. Puede crear varias <xref:System.Messaging.DefaultPropertiesToSend> instancias y asignar uno a la cola <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> propiedad antes de enviar el mensaje a la cola.  
  
 La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Messaging.DefaultPropertiesToSend>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|0|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|Una matriz de bytes de longitud cero|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|Una cadena vacía ("")|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de mensaje de confirmación que debe devolverse a la aplicación que hace el envío.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Messaging.AcknowledgeTypes" />. Este valor se utiliza para determinar el tipo de mensajes de confirmación que expone el sistema en la cola de administración y cuándo se devuelven los mensajes de confirmación a la aplicación de envío. El valor predeterminado es <see langword="AcknowledgeTypes.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> propiedad especifica el tipo de mensajes de confirmación para volver a la aplicación de envío. Por ejemplo, establecer el <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> propiedad para solicitar notificación cuando un mensaje llegue a su destino, cuando se recuperan, o si un tiempo de espera ha impedido el mensaje cuando se alcanza o se recupera de la cola de destino.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cola utilizada para los mensajes de confirmación generados por Message Queuing.</summary>
        <value>Objeto <see cref="T:System.Messaging.MessageQueue" /> que especifica la cola de administración utilizada para los mensajes de confirmación generados por el sistema. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cola especificada en la <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> propiedad puede ser cualquier cola no transaccional. Los mensajes de confirmación enviados a la cola de administración pueden indicar si el mensaje original llegó a su cola de destino y, si no se ha quitado de la cola.  
  
 Cuando el <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> propiedad tiene cualquier valor distinto de `None`, la aplicación de envío debe especificar la cola que se usará como la cola de administración.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece información adicional específica de la aplicación.</summary>
        <value>Información específica de la aplicación. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> propiedad contiene información adicional específica de la aplicación que puede utilizarse para organizar los diferentes tipos de mensajes, por ejemplo, el uso de índices específicos de la aplicación. Es responsabilidad de la aplicación para interpretar <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> información.  
  
 Siempre que sea posible, los datos del mensaje deben incluirse en el cuerpo del mensaje, en lugar de en el <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> propiedad.  
  
 Al trabajar con colas externas, utilice la <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> propiedad para especificar propiedades de mensajes no son de Message Queue Server. Al igual que con <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, es responsabilidad de la aplicación para entender el contenido de la <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se adjuntará al mensaje el identificador del remitente.</summary>
        <value>
          <see langword="true" /> si debe adjuntarse al mensaje el identificador del remitente; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El identificador del remitente es una matriz de bytes que representa el identificador del usuario remitente. El identificador del remitente se establece por Message Queue Server y se utiliza el Administrador de cola receptor para comprobar si el remitente tiene derechos de acceso a una cola. El identificador de remitente sólo es de confianza si el mensaje se autenticó al alcanzar la cola de destino.  
  
 Cuando el identificador del remitente no se adjunta al mensaje, la aplicación de envío indica que Message Queue Server no debe validar al remitente del mensaje cuando se envía el mensaje a la cola de destino. Si la cola de destino sólo acepta mensajes autenticados y o bien <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> o <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> es `false`, se rechazará el mensaje cuando llega a la cola.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el algoritmo de cifrado que se utiliza para cifrar el cuerpo de un mensaje privado.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Messaging.EncryptionAlgorithm" />. El valor predeterminado es <see langword="RC2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un mensaje es privado, se cifra antes de que se envía y se descifra cuando se recibe. El <xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> propiedad especifica el algoritmo utilizado para cifrar el cuerpo del mensaje de un mensaje privado.  
  
 Una cola puede requerir que entrante puede cifrar los mensajes. Si se envía un mensaje de (no privados) sin cifrar a una cola que sólo acepta mensajes privados, o si se envía un mensaje privado a una cola que sólo acepta mensajes no privados, se rechaza el mensaje de la cola. La aplicación de envío puede solicitar que se devuelve un mensaje de confirmación negativa a la aplicación de envío si se rechaza un mensaje.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece información adicional asociada al mensaje.</summary>
        <value>Matriz de bytes que proporciona información adicional definida por la aplicación asociada al mensaje. El valor predeterminado es una matriz de longitud cero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> propiedad proporciona información adicional definida por la aplicación que está asociado con el mensaje, como un objeto binario grande. Es responsabilidad de la aplicación receptora interpretar el contenido de la <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>.  
  
 Siempre que sea posible, los datos del mensaje deben incluirse en el cuerpo del mensaje, en lugar de en la extensión.  
  
 Al trabajar con colas externas, utilice la <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> propiedad para especificar propiedades de mensajes no son de Message Queue Server.  
  
 No existe una cola externa en un sistema de puesta en cola que no sea de Microsoft Message Queue Server. Microsoft Message Queue Server se comunica con este tipo de colas mediante una aplicación conector.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el algoritmo de hash que se emplea al autenticar mensajes o al crear una firma digital para un mensaje.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Messaging.HashAlgorithm" />. El valor predeterminado es <see langword="MD5" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> propiedad identifica el algoritmo hash que Message Queue Server usa al autenticar mensajes o al crear una firma digital para un mensaje.  
  
 Message Queue Server en el equipo de origen utiliza el algoritmo hash al crear una firma digital para un mensaje. El Administrador de cola de destino, a continuación, utiliza el mismo algoritmo hash para autenticar el mensaje cuando se recibe.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena definida por la aplicación que describe el mensaje.</summary>
        <value>Etiqueta del mensaje. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una etiqueta de mensaje puede usarse con fines de visualización, por ejemplo, o para procesar mensajes selectivamente en función del valor de etiqueta. La longitud máxima de una etiqueta de mensaje es de 249 caracteres Unicode. La etiqueta no necesita ser único en mensajes.  
  
 Cola de mensajes y las etiquetas de mensaje representan un valor definido por la aplicación que puede ayudar a identificar la cola o el mensaje de manera legible. Es responsabilidad de la aplicación interpretar el contenido de la etiqueta; no tienen ningún significado intrínseco para la aplicación de Message Queue Server.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la prioridad del mensaje, que se utiliza para determinar en qué punto de la cola se ubica el mensaje.</summary>
        <value>Uno de los valores de enumeración <see cref="T:System.Messaging.MessagePriority" /> que representa el nivel de prioridad de un mensaje no transaccional. El valor predeterminado es <see langword="Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> propiedad afecta a la manera en que Message Queue Server controla el mensaje mientras se encuentra en tránsito, así como que el mensaje se coloca en la cola cuando llega a su destino. Mensajes con prioridad superior se da preferencia durante el enrutamiento y se insertan al principio de la cola. Los mensajes que tienen la misma prioridad se colocan en la cola según su hora de llegada.  
  
 La prioridad del mensaje solo puede establecerse de forma significativa para mensajes no transaccionales. La prioridad de mensajes transaccionales se establece automáticamente en `Lowest`, lo que hace que la prioridad del mensaje transaccional se pasen por alto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se garantiza la entrega del mensaje en caso de haber errores en el equipo o problemas en la red.</summary>
        <value>
          <see langword="true" /> si se garantiza la entrega del mensaje guardándolo en disco mientras se encuentra en tránsito; <see langword="false" /> si no se garantiza dicha entrega. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> propiedad indica si se garantiza la entrega de un mensaje, incluso si un equipo se bloquea mientras el mensaje está en tránsito a la cola de destino.  
  
 Si se garantiza la entrega de un mensaje, el mensaje se almacena localmente en cada paso del recorrido hasta que el mensaje se reenviaron correctamente al equipo siguiente. Establecer <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> a `true` en <xref:System.Messaging.DefaultPropertiesToSend> puede afectar al rendimiento.  
  
 Si el mensaje es transaccional, Message Queue Server trata automáticamente el mensaje como recuperable, independientemente de si <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> está establecido en `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cola que recibe los mensajes de respuesta generados por la aplicación.</summary>
        <value>Objeto <see cref="T:System.Messaging.MessageQueue" /> al cual se devuelven los mensajes de respuesta generados por la aplicación. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> propiedad identifica la cola que recibe los mensajes de respuesta generados por la aplicación que se devuelven a la aplicación de envío por la aplicación receptora. Las colas de respuesta se especifican por la aplicación emisora cuando la aplicación envía sus mensajes. Cualquier cola disponible puede especificarse como cola de respuesta.  
  
 Los mensajes devueltos a la cola de respuesta son específicos de la aplicación. La aplicación debe definir lo que aparece en los mensajes, así como qué es que debe hacerse cuando se recibe un mensaje.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el límite de tiempo para recuperar el mensaje de la cola de destino.</summary>
        <value>El tiempo total en segundos necesario para recibir un mensaje enviado desde la cola de destino. El valor predeterminado es <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> propiedad especifica el tiempo total en segundos para un mensaje enviado se recibe de la cola de destino. Este límite de tiempo incluye el tiempo empleado en llegar a la cola de destino, más el tiempo invertido en espera en la cola antes de que el mensaje se recupera por una aplicación.  
  
> [!CAUTION]
>  Al utilizar equipos cliente dependientes, sincronice el reloj del equipo cliente con el reloj del servidor que ejecuta Message Queue Server. Si los dos relojes no están sincronizados, podría obtener un comportamiento impredecible al enviar mensajes cuando <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> no es <xref:System.Messaging.Message.InfiniteTimeout>.  
  
 Si el <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> intervalo expira antes de que el mensaje se quita de la cola, la aplicación Message Queue Server descarta el mensaje. El mensaje es envía a la cola de mensajes no enviados, si el mensaje <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> propiedad está establecida en `true`, o se omite, si <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> es `false`. Si <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> es menor que <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> tiene prioridad.  
  
 El mensaje <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> propiedad puede establecerse para solicitar que Message Queue Server devuelva un mensaje de confirmación negativo a la aplicación de envío si no se recupera el mensaje antes de que expire el temporizador.  
  
> [!CAUTION]
>  Si ha especificado para recibir <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> confirmaciones negativas, no recibirá ellos cuando el valor de <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> es menor que el valor de <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.  
  
 Cuando se envían varios mensajes en una transacción, Message Queue Server utiliza el valor del primer mensaje <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el límite de tiempo para que el mensaje alcance la cola.</summary>
        <value>Límite de tiempo en segundos para que un mensaje alcance la cola de destino, desde el momento en que se envía. El valor predeterminado es <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> intervalo expira antes de que el mensaje llegue a su destino, la aplicación Message Queue Server descarta el mensaje. El mensaje es envía a la cola de mensajes no enviados, si el mensaje <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> propiedad está establecida en `true`, o se omite, si <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> es `false`. Si <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> es mayor que <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> tiene prioridad.  
  
 El mensaje <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> propiedad puede establecerse para solicitar que Message Queue Server devuelva un mensaje de confirmación negativo a la aplicación de envío si el mensaje no llega antes de que expire el temporizador.  
  
 Si <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> es 0 segundos, Message Queue Server intenta una vez enviar el mensaje a su destino si la cola está esperando el mensaje. Si la cola es local, el mensaje siempre llega a la cola.  
  
 Cuando se envían varios mensajes en una transacción, Message Queue Server utiliza el valor del primer mensaje <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cola de estado de transacción del equipo de origen.</summary>
        <value>Cola de estado de transacción del equipo de origen, que se utiliza para devolver mensajes de confirmación a la aplicación de envío. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> propiedad identifica la cola de estado de transacción del equipo de origen. La propiedad se establece por Message Queue Server y se utiliza en las aplicaciones conectoras al recuperar mensajes transaccionales enviados a una cola externa.  
  
 No existe una cola externa en un sistema de puesta en cola que no sea de Microsoft Message Queue Server. Microsoft Message Queue Server se comunica con este tipo de colas mediante una aplicación conector.  
  
 La aplicación de conexión puede utilizar la cola de estado de transacción para enviar mensajes de confirmación a la aplicación de envío. La cola de estado de transacción debe recibir estas confirmaciones aun cuando la aplicación de envío no solicite otro tipo de confirmaciones.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si debe autenticarse el mensaje antes de enviarse.</summary>
        <value>
          <see langword="true" /> si la aplicación de envío solicitó autenticación del mensaje; <see langword="false" /> en cualquier otro caso. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> propiedad especifica si es necesario autenticar el mensaje. Si la aplicación de envío solicita autenticación, Message Queue Server crea una firma digital y se utiliza para firmar el mensaje cuando se envía y para autenticar el mensaje cuando se recibe.  
  
 Si se envía un mensaje a una cola que sólo acepta mensajes autenticados, se rechazará el mensaje cuando llega a la cola si <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> está establecido en `false`.  
  
 No es posible examinar las propiedades de un mensaje y determinar si un mensaje de error de autenticación. Mensajes que no superen la autenticación se descartan y no se enviarán a la cola.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si debe enviarse una copia del mensaje que no pudo entregarse a la cola de mensajes no enviados.</summary>
        <value>
          <see langword="true" /> si el error en la entrega del mensaje debe dar como resultado el envío de una copia del mensaje a una cola de mensajes no enviados; <see langword="false" /> en cualquier otro caso. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> y <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> especifican cómo Message Queue Server realiza el seguimiento de un mensaje. Si <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> es `true`, a continuación, en caso de error de entrega (para mensajes no transaccionales), el mensaje se envía a la cola de mensajes no enviados no transaccionales en el equipo que no se ha podido entregar el mensaje (por ejemplo, si expira el temporizador del mensaje).  
  
 En el caso de error en la entrega de mensajes transaccionales, el mensaje se envía a la cola transaccional de mensajes no enviados en el equipo de origen en todos los casos negativos en duda.  
  
 Cuando se almacenan mensajes en una cola de mensajes no enviados, debe vaciarse la cola periódicamente para quitar los mensajes que ya no son necesarios. Mensajes almacenados en las colas de mensajes no enviados se incluyen en la cuota de tamaño para el equipo donde reside la cola. La cuota del equipo establecida por el administrador y hace referencia al tamaño total asignado para almacenar mensajes en un equipo, no solo en una sola cola.  
  
 No cree un diario o una cola de mensajes no enviados. Se trata de dos colas del sistema generadas por Message Queue Server.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el mensaje debe ser privado.</summary>
        <value>
          <see langword="true" /> para requerir que Message Queuing cifre el mensaje; <see langword="false" /> en cualquier otro caso. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un mensaje es privado, su cuerpo se cifra antes de que se envía y se descifra cuando se recibe. Para enviar un mensaje privado, la aplicación de envío debe especificar que se utiliza el cifrado y, opcionalmente, el algoritmo de cifrado que se aplicará.  
  
 Al enviar mensajes privados, no es necesario que la aplicación realice el cifrado del mensaje. Message Queue Server puede cifrar el cuerpo del mensaje automáticamente cuando la aplicación envía los mensajes dentro de una empresa de Microsoft Windows 2000 donde no hay acceso al servicio de directorio. Al recibir mensajes privados, siempre es el Administrador de cola receptor que descifra el cuerpo del mensaje.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si debe conservarse una copia del mensaje en un diario del equipo de origen.</summary>
        <value>
          <see langword="true" /> para requerir que se conserve una copia del mensaje en el diario del equipo de origen después de transmitirse satisfactoriamente desde este último al paso siguiente; <see langword="false" /> en cualquier otro caso. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> y <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> especifican cómo Message Queue Server realiza el seguimiento de un mensaje. Si <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> es `true`, a continuación, en cada paso que se transmite un mensaje, se mantiene una copia en el diario del equipo en el equipo de origen.  
  
 Solo se copiará el mensaje enviado a la cola del diario si la cola de destino está en un equipo remoto. Si el destino se encuentra en el equipo local, el mensaje se envía directamente a la cola; No hay ningún paso intermedio para requerir registro en diario.  
  
 Cuando se almacenan mensajes en una cola del diario, vaciar la cola periódicamente para quitar los mensajes que ya no son necesarios. Los mensajes almacenados en el recuento de las colas de diario para la cuota del equipo donde reside la cola (el administrador establece la cuota del equipo).  
  
 No cree un diario o una cola de mensajes no enviados. Se trata de dos colas del sistema generadas por Message Queue Server.  
  
 Registro en diario puede especificarse mediante el mensaje y la cola. Cuando <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> es `true`, el mensaje es diario cuando se envía. Cuando <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> es `true`, el mensaje es diario cuando se recibe.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe seguir la traza de un mensaje mientras se traslada a su cola de destino.</summary>
        <value>
          <see langword="true" /> si cada uno de los pasos intermedios realizados por el mensaje original en su tránsito hacia la cola de destino deben generar un informe para enviarlo a la cola de informes del sistema; <see langword="false" /> en cualquier otro caso. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> propiedad especifica si se debe realizar un seguimiento de la ruta de un mensaje mientras se traslada a su cola de destino. Si `true`, se envía un mensaje de informe generado por Message Queue Server a una cola de informes cada vez que el mensaje pasa a través de un servidor de enrutamiento de Message Queue server. La cola de informes se especifica mediante el Administrador de cola de origen. Las colas de informes no se limitan a los mensajes de informe generados por Message Queue Server. Los mensajes generados por la aplicación pueden enviarse a las colas de informes.  
  
 Uso del seguimiento requiere configurar Active Directory y especificar una cola de informes para la empresa de Message Queue Server. Estas opciones se configuran mediante el administrador.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>