<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37479108" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />. Cuando una operación de recepción asincrónica llama a un controlador de evento, se pasa una instancia de esta clase al controlador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se utiliza la notificación de eventos para recibir mensajes de forma asincrónica desde la cola, debe crear un método que controla el procesamiento del mensaje. El código debe llamar a <xref:System.Messaging.MessageQueue.BeginReceive%2A> para comenzar el procesamiento asincrónico. Cuando se recibe un mensaje, se notifica a la aplicación a través de la <xref:System.Messaging.MessageQueue.ReceiveCompleted> eventos. Una instancia de <xref:System.Messaging.ReceiveCompletedEventArgs> se pasa al delegado de eventos que llama al controlador de eventos. Los datos asociados con el <xref:System.Messaging.MessageQueue.ReceiveCompleted> evento está contenido en el delegado <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parámetro.  
  
 Hay dos formas de proporcionar notificaciones de finalización de eventos: notificación de eventos y devoluciones de llamada. <xref:System.Messaging.ReceiveCompletedEventArgs> se utiliza sólo con la notificación de eventos. Para obtener información comparativa sobre las devoluciones de llamada y la notificación de eventos, vea "Events vs. Devoluciones de llamada"en MSDN.  
  
 <xref:System.Messaging.ReceiveCompletedEventArgs> proporciona acceso al mensaje que inició la finalización asincrónica de la operación de recepción, a través de la <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> miembro. Esto es una alternativa de acceso al mensaje y se comporta prácticamente de la misma como una llamada a <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un controlador de eventos para el <xref:System.Messaging.MessageQueue.ReceiveCompleted> evento y asocia el evento delegado utilizando el <xref:System.Messaging.ReceiveCompletedEventHandler>. El controlador de eventos, `MyReceiveCompleted`, recibe un mensaje de una cola y escribe el cuerpo en la pantalla.  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el resultado de la operación asincrónica solicitada.</summary>
        <value>Un <see cref="T:System.IAsyncResult" /> que contiene los datos asociados a la operación de recepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifica las operaciones asincrónicas completadas o en curso. La propiedad contiene datos que ayudan a determinar cuál de varias posibles operaciones asincrónicas para completar, y cuando se pasa al controlador de eventos, permite <xref:System.Messaging.MessageQueue.EndReceive%2A> para tener acceso al mensaje asociado a la operación completada.  
  
 Cuando se llama a <xref:System.Messaging.MessageQueue.BeginReceive%2A>, un <xref:System.IAsyncResult> se devuelve inmediatamente, incluso aunque un mensaje, si existe alguno, ha no se ha recuperado porque la operación no se completa. La <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indica el estado de la operación asincrónica. <xref:System.Messaging.MessageQueue.BeginReceive%2A> crea el objeto, que se modifica en el transcurso de la operación hasta <xref:System.Messaging.MessageQueue.EndReceive%2A> completa.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mensaje asociado a la operación de recepción asincrónica.</summary>
        <value>Valor <see cref="T:System.Messaging.Message" /> que representa el resultado final de la operación de recepción asincrónica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> propiedad proporciona un medio para recuperar el mensaje que inició la finalización asincrónica de la operación de recepción.  
  
 <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> se llama la primera vez que la <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> propiedad es de lectura, por lo que no es necesario llamar a <xref:System.Messaging.MessageQueue.EndReceive%2A> antes de obtener el valor de esta propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">No se pudo recuperar <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" />. Puede que haya expirado el tiempo de espera en la operación asincrónica.</exception>
      </Docs>
    </Member>
  </Members>
</Type>