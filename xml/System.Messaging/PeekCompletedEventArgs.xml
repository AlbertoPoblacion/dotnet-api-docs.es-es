<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9738e92d7b8a310ccbfc821359163880970679" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />. Cuando una operación de lectura asincrónica llama a un controlador de evento, se pasa una instancia de esta clase al controlador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se utiliza notificación de eventos a los mensajes de peek (leerlos sin quitarlos) asincrónicamente desde la cola, debe crear un método que controla el procesamiento del mensaje. El código debe llamar <xref:System.Messaging.MessageQueue.BeginPeek%2A> para comenzar el procesamiento asincrónico. Cuando se obtiene un mensaje, se notifica a la aplicación a través de la <xref:System.Messaging.MessageQueue.PeekCompleted> eventos. Una instancia de <xref:System.Messaging.PeekCompletedEventArgs> se pasa al delegado de eventos que llama al controlador de eventos. Los datos asociados a la <xref:System.Messaging.MessageQueue.PeekCompleted> eventos se encuentra en el delegado <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parámetro.  
  
 Hay dos maneras de proporcionar una notificación de finalización del evento: notificación de eventos y las devoluciones de llamada. <xref:System.Messaging.PeekCompletedEventArgs> se utiliza únicamente con la notificación de eventos. Para obtener información de comparación de las devoluciones de llamada y la notificación de eventos, vea "Events vs. Devoluciones de llamada"en MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs> proporciona acceso al mensaje que inició la finalización de la operación de lectura asincrónica, a través de la <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> miembro. Esto es una alternativa de acceso al mensaje y se comporta igual que una llamada a <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un controlador de eventos para el <xref:System.Messaging.MessageQueue.PeekCompleted> eventos y lo asocia con el evento delegado utilizando el <xref:System.Messaging.PeekCompletedEventHandler>. El controlador de eventos, `MyPeekCompleted`, inspecciona un mensaje y escribe su etiqueta en la pantalla.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el resultado de la operación asincrónica solicitada.</summary>
        <value>Un <see cref="T:System.IAsyncResult" /> que contiene los datos asociados a la operación del método Peek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifica las operaciones asincrónicas en curso o completadas. La propiedad contiene datos que ayudan a determinar cuál de varias operaciones asincrónicas potenciales en completarse, y cuando se pasa al controlador de eventos, habilita <xref:System.Messaging.MessageQueue.EndPeek%2A> obtener acceso al mensaje asociado a la operación completada.  
  
 Cuando se llama a <xref:System.Messaging.MessageQueue.BeginPeek%2A>, un <xref:System.IAsyncResult> se devuelve inmediatamente, incluso aunque aún no se ha recuperado un mensaje, en si existe una, por porque no se completó la operación. La <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indica el estado de la operación asincrónica. <xref:System.Messaging.MessageQueue.BeginPeek%2A> crea el objeto, que se modifica durante toda la operación hasta que <xref:System.Messaging.MessageQueue.EndPeek%2A> complete.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mensaje asociado a la operación de lectura asincrónica.</summary>
        <value>
          <see cref="T:System.Messaging.Message" /> que representa el resultado final de la operación de lectura asincrónica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propiedad proporciona un medio para recuperar el mensaje que inició la finalización de la operación de lectura asincrónica.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> se llama por primera vez el <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propiedad es de lectura, por lo que no es necesario llamar a <xref:System.Messaging.MessageQueue.EndPeek%2A> antes de obtener el valor de esta propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">No se pudo recuperar <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />. Puede que haya expirado el tiempo de espera en la operación asincrónica.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>