<Type Name="MessageQueueTransactionType" FullName="System.Messaging.MessageQueueTransactionType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e2506dfd9e2c4bd29de0eb0af3200d181b7d7d5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageQueueTransactionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MessageQueueTransactionType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueTransactionType" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageQueueTransactionType" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageQueueTransactionType" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica el tipo de una transacción de Message Queuing.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se lee o escribe un mensaje mediante una sobrecarga de la <xref:System.Messaging.MessageQueue> la clase <xref:System.Messaging.MessageQueue.Send%2A> o <xref:System.Messaging.MessageQueue.Receive%2A> métodos (incluidos <xref:System.Messaging.MessageQueue.ReceiveById%2A> y <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>) que toma un `transactionType` parámetro, puede especificar cómo interactúa con la cola. `Automatic` le permite para enviar y recibir de las transacciones externas (por ejemplo, cuando estés interactuando con aplicaciones de base de datos), mientras que `Single` se utiliza para transacciones internas únicas Message Queue Server.  
  
 `None` le permite recibir un mensaje de una cola transaccional fuera de una transacción o enviar un mensaje transaccional a una cola no transaccional. Esto es útil, por ejemplo, al enrutar varios mensajes enviados dentro de una sola transacción.  
  
 Si desea enviar o recibir un mensaje con una transacción interna de Message Queue Server, pero no una transacción interna, cree una instancia de la <xref:System.Messaging.MessageQueueTransaction> clase y pasar a una sobrecarga de la <xref:System.Messaging.MessageQueue.Send%2A> o <xref:System.Messaging.MessageQueue.Receive%2A> métodos que toma un `transaction` parámetro en lugar de una que tome un `transactionType` parámetro.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="T:System.Messaging.MessageQueueTransaction" />
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Automatic = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Tipo de transacción utilizado para Microsoft Transaction Server (MTS) o servicios COM+ 1.0. Si ya existe un contexto de transacción MTS, se utilizará al enviar o recibir el mensaje.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>La operación no será transaccional.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Single = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Tipo de transacción utilizado para transacciones internas únicas.</summary>
      </Docs>
    </Member>
  </Members>
</Type>