<Type Name="DiscoveryServiceExtension" FullName="System.ServiceModel.Discovery.DiscoveryServiceExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="367a7217644ae34f5cb3ba6f0dda45cdae77832f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36416117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiscoveryServiceExtension extends System.Object implements class System.ServiceModel.IExtension`1&lt;class System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DiscoveryServiceExtension&#xA;Implements IExtension(Of ServiceHostBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryServiceExtension abstract : System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;" />
  <TypeSignature Language="F#" Value="type DiscoveryServiceExtension = class&#xA;    interface IExtension&lt;ServiceHostBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Una clase de extensión de WCF abstracta para especificar un servicio de detección personalizado o para obtener los extremos publicados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derive una clase desde <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> e invalide el método <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> para devolver el servicio de detección personalizado. Agregue la clase derivada a las extensiones <xref:System.ServiceModel.ServiceHost> que hospedan su servicio reconocible. Cuando se llama a <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A>, el comportamiento itera a través de las extensiones en el host del servicio y busca una clase <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>. Si se encuentra uno, se llama a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> para obtener el servicio de descarga personalizado. Si no se encuentra una extensión, se utiliza la implementación del servicio de descarga predeterminado.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoveryServiceExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DiscoveryServiceExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveryService">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDiscoveryService () As DiscoveryService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Discovery::DiscoveryService ^ GetDiscoveryService();" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveryService : unit -&gt; System.ServiceModel.Discovery.DiscoveryService" Usage="discoveryServiceExtension.GetDiscoveryService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Discovery.DiscoveryService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalide este método para devolver su implementación de <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> personalizada.</summary>
        <returns>Una implementación del servicio de descarga personalizada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.InvalidOperationException> se produce al abrir el host del servicio si este método devuelve `null`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishedEndpoints">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt; PublishedEndpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt; PublishedEndpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishedEndpoints As ReadOnlyCollection(Of EndpointDiscoveryMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^&gt; ^ PublishedEndpoints { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublishedEndpoints : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;" Usage="System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de solo lectura de puntos de conexión publicados.</summary>
        <value>Una colección de solo lectura de extremos publicados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se debería tener acceso a la propiedad únicamente después de que se haya abierto <xref:System.ServiceModel.ServiceHost> correctamente. Cuando la clase <xref:System.ServiceModel.ServiceHost> está en estado <xref:System.ServiceModel.CommunicationState.Opening>, la clase <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> se genera y agrega a la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach">
      <MemberSignature Language="C#" Value="void IExtension&lt;ServiceHostBase&gt;.Attach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#ServiceHostBase&gt;#Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (owner As ServiceHostBase) Implements IExtension(Of ServiceHostBase).Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach(System::ServiceModel::ServiceHostBase ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner">El host del servicio al que se va a adjuntar la extensión.</param>
        <summary>Adjunta la extensión al host del servicio especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach">
      <MemberSignature Language="C#" Value="void IExtension&lt;ServiceHostBase&gt;.Detach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#ServiceHostBase&gt;#Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Detach (owner As ServiceHostBase) Implements IExtension(Of ServiceHostBase).Detach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach(System::ServiceModel::ServiceHostBase ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;::Detach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner">El host del servicio del que desasociar.</param>
        <summary>Sobrecargue este método para permitir desasociar la extensión de su host de servicio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación de la clase base de este método produce una excepción <xref:System.InvalidOperationException>, que indica que no se pueden desasociar las extensiones de servicio de descarga.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>