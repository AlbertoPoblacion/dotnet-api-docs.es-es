<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5293fb40cede2a52feaadd0026254fa30450c395" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationCommands abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un conjunto estándar de comandos relacionados con la aplicación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los comandos en el <xref:System.Windows.Input.ApplicationCommands> clase y comandos en el otro comando como clases de biblioteca, <xref:System.Windows.Input.ComponentCommands> y <xref:System.Windows.Input.NavigationCommands>, están diseñados para representar un conjunto de comandos comunes que los programadores de aplicaciones se encuentran con frecuencia.  Los comandos sólo representan la instancia de la <xref:System.Windows.Input.RoutedCommand> y no la lógica de implementación para el comando. La lógica de implementación se vincula al comando con un <xref:System.Windows.Input.CommandBinding>. Por ejemplo, si la <xref:System.Windows.Input.ApplicationCommands.Close%2A> comando se ejecuta en un control, la lógica que lleva a cabo la <xref:System.Windows.Input.ApplicationCommands.Close%2A> comando no puede ser proporcionado por el control, por lo que el escritor de la aplicación será responsable de escribir la lógica que determina cómo el control controlará el comando.  
  
 Muchos controles proporcionan la lógica de implementación para muchos de los comandos de la biblioteca de comandos.  Por ejemplo, el <xref:System.Windows.Controls.TextBox> clase proporciona la lógica para la <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>, y <xref:System.Windows.Input.ApplicationCommands.Redo%2A> comandos.  
  
 Para obtener más información sobre los comandos y su ejecución, vea el [Introducción estableciendo](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CancelPrint As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CancelPrint { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Cancelar la impresión.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> No se ha definido ningún movimiento.  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Cancelar la impresión  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de cancelar un trabajo de impresión.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Close { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Cerrar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> No se ha definido ningún movimiento.  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Cerrar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de cerrar un elemento (normalmente un archivo).  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Close"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextMenu As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ContextMenu { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Menú contextual.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> MAYÚS + F10  
  
 Aplicaciones  
  
 </description></item><item><term> Movimiento del mouse  
  
 </term><description> Un gesto del Mouse no está conectado a este comando, pero la mayoría de las aplicaciones sigue la convención de usar el gesto del botón secundario para invocar el menú contextual.  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Menú contextual  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el menú contextual.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Copy As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Copy { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Copiar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+C  
  
 Ctrl+Insertar  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> copia  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de copiar la selección en el Portapapeles.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Copy"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectionList As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectionList { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Lista de correcciones.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> No se ha definido ningún movimiento.  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Lista de correcciones  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir la lista de corrección.  
  
 La lista de corrección es diferente según el contexto. Por ejemplo, con [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] de entrada de la lista de corrección identifican las opciones de reconversión.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cut As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Cut { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Cortar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+X  
  
 Mayús+Supr  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Cortar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de cortar la selección en el Portapapeles.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Cut"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Eliminar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Del  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> eliminar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de eliminar la selección.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Find As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Find { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Find.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+F  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Find  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el cuadro de diálogo Buscar dedicado.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Find"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Help { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Ayuda.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> F1  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Ayuda  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el cuadro de diálogo de ayuda (ventana).  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Help"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property New As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ New { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Nuevo.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+N  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Nuevo  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de crear un nuevo elemento.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_New"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotACommand As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NotACommand { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa un comando que siempre se omite.</summary>
        <value>Comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando siempre se omite y no controla el evento de entrada que lo causó.  Esto proporciona una manera de desactivar un enlace de entrada integrado en un control existente.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="NotACommand"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Open As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Open { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Abrir.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+O  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Abrir  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir un elemento (normalmente un archivo).  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Open"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paste As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Paste { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Pegar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+V  
  
 Mayús+Insertar   
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Pegar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de pegar la selección en el Portapapeles.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Paste"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Print As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Print { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Imprimir.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+P  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> imprimir  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de imprime el elemento actual.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Print"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrintPreview As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PrintPreview { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Vista previa de impresión.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+F2  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Vista previa de impresión  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el cuadro de diálogo de vista previa de impresión.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Properties { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Propiedades.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> F4  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Propiedades  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir un cuadro de diálogo de propiedades.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Properties"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Redo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Redo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Rehacer.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> CTRL+y  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Puesta al día  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de rehacer la última acción.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Redo"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Replace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Replace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Reemplazar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+H  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> reemplazar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el cuadro de diálogo Reemplazar.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Replace"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Save As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Save { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Guardar.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> CTRL + S  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Guardar  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de guardar el elemento actual.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Save"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveAs As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SaveAs { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Guardar como.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> No se ha definido ningún movimiento.  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Guardar como  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de abrir el cuadro de diálogo Guardar como.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectAll As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectAll { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Seleccionar todo.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl+A  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Seleccionar todo  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de seleccionar todos los elementos.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Stop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Detener.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Esc  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Detener  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención para detener el procesamiento.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Stop"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Undo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Undo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa el comando Deshacer.</summary>
        <value>Comando.  
  
 <list type="table"><listheader><term> Valores predeterminados  
  
 </term><description></description></listheader><item><term> Gesto de teclas  
  
 </term><description> Ctrl-Z  
  
 </description></item><item><term> Texto de la interfaz de usuario  
  
 </term><description> Undo  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este comando indica la intención de deshacer la última acción.  
  
 No hay necesariamente una implementación para el comando en un objeto dado; en muchos casos, la implementación para el comando es responsabilidad del autor de la aplicación.  
  
<a name="xamlAttributeUsage_Undo"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>