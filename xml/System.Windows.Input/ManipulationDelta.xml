<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c60d5c9b6d06b77a7d1edd16a4a94f6b2f87ae3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657279" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene los datos de la transformación que se acumulan cuando se producen eventos de manipulación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Input.ManipulationDelta> clase contiene información sobre los cambios en la posición de una manipulación.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interpreta los cambios como un <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, o <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. Cuando el <xref:System.Windows.UIElement.ManipulationDelta> evento se produce en un <xref:System.Windows.UIElement>, utilice las propiedades de un <xref:System.Windows.Input.ManipulationDelta> objeto que se va a transformar el objeto que se debe manipular.  El <xref:System.Windows.Input.ManipulationDeltaEventArgs> clase proporciona dos propiedades de tipo <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> y <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  
  
 Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.  El ejemplo se aplica el <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, y <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propiedades para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>. Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">Movimiento lineal de la manipulación en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="rotation">Rotación de la manipulación, en grados.</param>
        <param name="scale">Cambio de tamaño de la manipulación expresado como un multiplicador.</param>
        <param name="expansion">Cambio de tamaño producido por la manipulación en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.ManipulationDelta" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el cambio de tamaño de la manipulación en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</summary>
        <value>Cambio de tamaño producido por la manipulación en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Input.ManipulationDelta.Scale%2A> y <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> ambas propiedades, notifican una cambio de tamaño de la manipulación.  La diferencia entre los dos es la manera en la que se notifica el valor.  El <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> propiedad notifica la manipulación de cambio de tamaño en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. El <xref:System.Windows.Input.ManipulationDelta.Scale%2A> propiedad notifica el valor como un multiplicador.  Si <xref:System.Windows.Input.ManipulationDelta.Scale%2A> es 0.5, la manipulación se interpreta como disminuir el tamaño un 50 por ciento.  Si <xref:System.Windows.Input.ManipulationDelta.Scale%2A> es 2, la manipulación se interpreta como aumentar el tamaño de 100 por cien.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la rotación de la manipulación en grados.</summary>
        <value>Rotación de la manipulación, en grados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propiedad notifica la manera que una manipulación se interpreta como girar alrededor de un eje.  El eje normalmente es el punto entre los dos puntos de contacto que inició la manipulación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.  El ejemplo se aplica el <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, y <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propiedades para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>. Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el cambio de tamaño de la manipulación expresado como un multiplicador.</summary>
        <value>Cambio de tamaño de la manipulación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Input.ManipulationDelta.Scale%2A> y <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> ambas propiedades, notifican una cambio de tamaño de la manipulación.  La diferencia entre los dos es la manera en la que se notifica el valor.  El <xref:System.Windows.Input.ManipulationDelta.Scale%2A> propiedad notifica el valor como un multiplicador.  Si <xref:System.Windows.Input.ManipulationDelta.Scale%2A> es 0.5, la manipulación se interpreta como disminuir el tamaño un 50 por ciento.  Si <xref:System.Windows.Input.ManipulationDelta.Scale%2A> es 2, la manipulación se interpreta como aumentar el tamaño de 100 por cien. El <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> propiedad notifica la manipulación de cambio de tamaño en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.  El ejemplo se aplica el <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, y <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propiedades para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>. Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el movimiento lineal de la manipulación.</summary>
        <value>Movimiento lineal de la manipulación en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Input.ManipulationDelta.Translation%2A> propiedad notifica la manera que una manipulación se interpreta como el desplazamiento horizontal y verticalmente en la pantalla.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.  El ejemplo se aplica el <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, y <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propiedades para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>. Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>