<Type Name="ManipulationDeltaEventArgs" FullName="System.Windows.Input.ManipulationDeltaEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14e330c730054f8a6441ee6306a12db68536d587" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationDeltaEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDeltaEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationDeltaEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDeltaEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bf354-101">Proporciona datos para el evento <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf354-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-102">La <xref:System.Windows.Input.ManipulationDeltaEventArgs> clase contiene datos sobre los cambios en la posición de una manipulación.</span><span class="sxs-lookup"><span data-stu-id="bf354-102">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation.</span></span> <span data-ttu-id="bf354-103">El <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedad contiene los cambios que se han realizado desde la última <xref:System.Windows.UIElement.ManipulationDelta> se produjo el evento.</span><span class="sxs-lookup"><span data-stu-id="bf354-103">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="bf354-104">El <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> propiedad contiene el total de los cambios producidos durante la manipulación actual.</span><span class="sxs-lookup"><span data-stu-id="bf354-104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="bf354-105">Utilice una de esas propiedades para transformar el objeto manipulado.</span><span class="sxs-lookup"><span data-stu-id="bf354-105">You use one of those properties to transform the manipulated object.</span></span>  
  
 <span data-ttu-id="bf354-106">Puede finalizar una manipulación mediante una llamada a la <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> método ni se forzará la manipulación en inercia llamando a la <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bf354-106">You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf354-107">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="bf354-107">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="bf354-108">El ejemplo se utiliza la <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedad para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="bf354-108">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="bf354-109">El ejemplo también se comprueba si el <xref:System.Windows.UIElement.ManipulationDelta> se ha producido un evento durante la inercia y si el rectángulo toca el borde de una ventana.</span><span class="sxs-lookup"><span data-stu-id="bf354-109">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="bf354-110">Si se cumplen esos casos, la aplicación detiene la manipulación para evitar que el rectángulo deje el área visible de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="bf354-110">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="bf354-111">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="bf354-111">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf354-112">Cancela la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-112">Cancels the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf354-113">
            <see langword="true" /> si la manipulación se canceló correctamente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-113">
              <see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-114">Si el método se realiza correctamente, el valor predeterminado <xref:System.Windows.Input.TouchDevice> envía anterior touch eventos como del mouse hacia abajo o eventos de movimiento al elemento del mouse y no se producen eventos de manipulación futuras.</span><span class="sxs-lookup"><span data-stu-id="bf354-114">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</span></span> <span data-ttu-id="bf354-115">No se puede promover táctil a eventos del mouse si el <xref:System.Windows.UIElement.ManipulationCompleted> evento se produce durante la inercia.</span><span class="sxs-lookup"><span data-stu-id="bf354-115">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf354-116">Completa la manipulación sin inercia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-116">Completes the manipulation without inertia.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-117">Puede llamar a la <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> método para finalizar la manipulación.</span><span class="sxs-lookup"><span data-stu-id="bf354-117">You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation.</span></span> <span data-ttu-id="bf354-118">Por ejemplo, cuando un objeto alcanza el borde de una ventana, puede llamar a <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> para impedir que el objeto va fuera de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="bf354-118">For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf354-119">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="bf354-119">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="bf354-120">El ejemplo se comprueba si el <xref:System.Windows.UIElement.ManipulationDelta> se ha producido un evento durante la inercia y si el rectángulo toca el borde de una ventana.</span><span class="sxs-lookup"><span data-stu-id="bf354-120">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="bf354-121">Si se cumplen esos casos, la aplicación detiene la manipulación para evitar que el rectángulo deje el área visible de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="bf354-121">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="bf354-122">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="bf354-122">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta CumulativeManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CumulativeManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ CumulativeManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-123">Obtiene los cambios acumulados de la manipulación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-123">Gets the cumulated changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-124">Los cambios acumulados de la manipulación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-124">The cumulated changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-125">El <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> propiedad contiene el total de los cambios producidos durante la manipulación actual.</span><span class="sxs-lookup"><span data-stu-id="bf354-125">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="bf354-126">Puede usar <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> para transformar el objeto manipulado.</span><span class="sxs-lookup"><span data-stu-id="bf354-126">You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta DeltaManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeltaManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ DeltaManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-127">Obtiene los cambios más recientes de la manipulación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-127">Gets the most recent changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-128">Los cambios más recientes de la manipulación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-128">The most recent changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-129">El <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedad contiene los cambios que se han realizado desde la última <xref:System.Windows.UIElement.ManipulationDelta> se produjo el evento.</span><span class="sxs-lookup"><span data-stu-id="bf354-129">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="bf354-130">Puede utilizar esta propiedad para transformar el objeto manipulado.</span><span class="sxs-lookup"><span data-stu-id="bf354-130">You can use this property to transform the manipulated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf354-131">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="bf354-131">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="bf354-132">El ejemplo se utiliza la <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedad para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="bf354-132">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="bf354-133">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="bf354-133">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-134">Obtiene un valor que indica si el evento <see cref="E:System.Windows.UIElement.ManipulationDelta" /> se produce durante inercia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-134">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-135">Es <see langword="true" /> si el evento <see cref="E:System.Windows.UIElement.ManipulationDelta" /> se produce durante la inercia; es <see langword="false" /> si el evento se produce mientras el usuario tiene contacto con <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-135">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-136">Puede usar este método para determinar si la <xref:System.Windows.UIElement.ManipulationDelta> evento se produce durante la inercia o mientras el usuario tiene contacto con el elemento que recibe la <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="bf354-136">You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf354-137">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="bf354-137">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="bf354-138">El ejemplo se comprueba si el <xref:System.Windows.UIElement.ManipulationDelta> se ha producido un evento durante la inercia y si el rectángulo toca el borde de una ventana.</span><span class="sxs-lookup"><span data-stu-id="bf354-138">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="bf354-139">Si se cumplen esos casos, la aplicación detiene la manipulación para evitar que el rectángulo deje el área visible de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="bf354-139">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="bf354-140">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="bf354-140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-141">Obtiene el contenedor que define las coordenadas para la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-141">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-142">El contenedor que define las coordenadas para la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-142">The container that defines the coordinates for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-143">Obtiene el punto en el que se origina la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-143">Gets the point from which the manipulation originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-144">Punto en el que se originó la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-144">The point from which the manipulation originated.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-145">Obtiene una colección de objetos que representa los contactos táctiles para la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-145">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-146">Colección de objetos que representa los contactos táctiles para la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-146">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportBoundaryFeedback">
      <MemberSignature Language="C#" Value="public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportBoundaryFeedback(class System.Windows.Input.ManipulationDelta unusedManipulation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportBoundaryFeedback (unusedManipulation As ManipulationDelta)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportBoundaryFeedback(System::Windows::Input::ManipulationDelta ^ unusedManipulation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unusedManipulation" Type="System.Windows.Input.ManipulationDelta" />
      </Parameters>
      <Docs>
        <param name="unusedManipulation">
          <span data-ttu-id="bf354-147">La parte de la manipulación que representa la mudanza más allá del límite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-147">The portion of the manipulation that represents moving beyond the boundary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf354-148">Especifica que la manipulación ha excedido ciertos límites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-148">Specifies that the manipulation has gone beyond certain boundaries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf354-149">Use la <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> método para indicar que un elemento se ha movido más allá de un límite determinado.</span><span class="sxs-lookup"><span data-stu-id="bf354-149">Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.</span></span>  <span data-ttu-id="bf354-150">Por ejemplo, si un usuario mueve un elemento fuera de los límites de un <xref:System.Windows.Window>, puede llamar a este método para notificar que a la ventana.</span><span class="sxs-lookup"><span data-stu-id="bf354-150">For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.</span></span>  <span data-ttu-id="bf354-151">Cuando se llama a <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, el <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="bf354-151">When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.</span></span>  <span data-ttu-id="bf354-152">De forma predeterminada, el <xref:System.Windows.Window> se suscribe a la <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> eventos para proporcionar información visual al usuario que se ha alcanzado un límite.</span><span class="sxs-lookup"><span data-stu-id="bf354-152">By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.</span></span>  <span data-ttu-id="bf354-153">Puede suscribirse a <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> para implementar un comportamiento personalizado.</span><span class="sxs-lookup"><span data-stu-id="bf354-153">You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf354-154">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos que llama el <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> método cuando el usuario mueve el elemento sobre el borde de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="bf354-154">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.</span></span>  <span data-ttu-id="bf354-155">Para probar este ejemplo, siga los pasos de [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) y reemplace el código en el paso 5 con este código.</span><span class="sxs-lookup"><span data-stu-id="bf354-155">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]
 [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf354-156">
            <paramref name="unusedManipulation" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-156">
              <paramref name="unusedManipulation" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public void StartInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartInertia ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartInertia();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf354-157">Inicia la inercia en la manipulación omitiendo los movimientos de contacto subsiguientes y generando el evento <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-157">Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities Velocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities Velocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Velocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ Velocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf354-158">Obtiene la velocidad de los cambios más recientes que se producen en la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-158">Gets the rates of the most recent changes to the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf354-159">La velocidad de los cambios más recientes que se producen en la manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf354-159">The rates of the most recent changes to the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>