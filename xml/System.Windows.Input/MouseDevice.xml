<Type Name="MouseDevice" FullName="System.Windows.Input.MouseDevice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0729a58d93b967e0f1ec4222c5c72e38c0ca49c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MouseDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MouseDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MouseDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseDevice abstract : System::Windows::Input::InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="da9b5-101">Representa un dispositivo de mouse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da9b5-101">Represents a mouse device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-102">El <xref:System.Windows.Input.MouseDevice> es compatible con la [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infraestructura y no está diseñada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="da9b5-102">The <xref:System.Windows.Input.MouseDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="da9b5-103">Mouse (ratón) relacionados con la entrada, use la <xref:System.Windows.Input.Mouse> clase.</span><span class="sxs-lookup"><span data-stu-id="da9b5-103">For mouse related input, use the <xref:System.Windows.Input.Mouse> class.</span></span>  <span data-ttu-id="da9b5-104">La <xref:System.Windows.Input.Mouse> clase representa el mouse en una aplicación y proporciona métodos, propiedades y eventos que reflejan el estado del mouse.</span><span class="sxs-lookup"><span data-stu-id="da9b5-104">The <xref:System.Windows.Input.Mouse> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-105">Obtiene el objeto <see cref="T:System.Windows.PresentationSource" /> que proporciona la entrada para este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-105">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-106">El origen de entrada de este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-106">The source of input for this device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="da9b5-107">Para obtener el origen activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-107">for getting the active source.</span>
          </span>
          <span data-ttu-id="da9b5-108">Enumeraciones asociadas:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-108">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-109">Captura la entrada del mouse en el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-109">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-110">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor o no dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="da9b5-110">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="da9b5-111">Si un <xref:System.Windows.Input.CaptureMode> no se especifica, el valor predeterminado <xref:System.Windows.Input.CaptureMode> es <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="da9b5-111">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="da9b5-112">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.MouseDevice.Capture%2A> pasar `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-112">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="da9b5-113">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> se genera el evento y la entrada no va al elemento debajo del mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-113">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="da9b5-114">Esto permite que el elemento capturado tiene una oportunidad para liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="da9b5-114">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="da9b5-115">Elemento que va a capturar el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-115">The element to capture the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-116">Captura los eventos del mouse en el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-116">Captures mouse events to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-117">Es <see langword="true" /> si el elemento es capaz de capturar el mouse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-117">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-118">Cuando un elemento captura el mouse, recibe la entrada de mouse si el cursor está dentro de sus bordes</span><span class="sxs-lookup"><span data-stu-id="da9b5-118">When an element captures the mouse, it receives mouse input whether the cursor is within its borders</span></span>  
  
 <span data-ttu-id="da9b5-119">Si un <xref:System.Windows.Input.CaptureMode> no se especifica, el valor predeterminado <xref:System.Windows.Input.CaptureMode> es <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="da9b5-119">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="da9b5-120">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.MouseDevice.Capture%2A> pasar `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-120">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="da9b5-121">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> se genera el evento y la entrada no va al elemento debajo del mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-121">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="da9b5-122">Esto permite que el elemento capturado tiene una oportunidad para liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="da9b5-122">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da9b5-123">
            <paramref name="element" /> no es <see cref="T:System.Windows.UIElement" /> ni <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-123">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="da9b5-124">Elemento en el que se va a capturar el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-124">The element to capture the mouse..</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="da9b5-125">La directiva de captura que se va a utilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-125">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-126">Captura la entrada del mouse en el elemento especificado utilizando el objeto <see cref="T:System.Windows.Input.CaptureMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-126">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-127">Es <see langword="true" /> si el elemento es capaz de capturar el mouse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-127">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-128">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor o no dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="da9b5-128">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="da9b5-129">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.MouseDevice.Capture%2A> pasar `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-129">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="da9b5-130">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> se genera el evento y la entrada no va al elemento debajo del mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="da9b5-130">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="da9b5-131">Esto permite que el elemento capturado tiene una oportunidad para liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="da9b5-131">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da9b5-132">
            <paramref name="element" /> no es <see cref="T:System.Windows.UIElement" /> ni <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-132">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="da9b5-133">
            <paramref name="captureMode" /> no es un <see cref="T:System.Windows.Input.CaptureMode" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-133">
              <paramref name="captureMode" /> is not a valid <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-134">Obtiene el objeto <see cref="T:System.Windows.IInputElement" /> capturado por el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-134">Gets the <see cref="T:System.Windows.IInputElement" /> that is captured by the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-135">El elemento capturado por el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-135">The element which is captured by the mouse.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-136">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor o no dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="da9b5-136">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-137">Obtiene el elemento sobre el que el puntero del mouse se encuentra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-137">Gets the element that the mouse pointer is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-138">El elemento sobre el que está situado el puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-138">The element the mouse pointer is over.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-139">Se considera el ratón directamente a través de un elemento si se ha capturado el mouse (ratón) en ese elemento.</span><span class="sxs-lookup"><span data-stu-id="da9b5-139">The mouse is considered directly over an element if the mouse has been captured to that element.</span></span>  
  
 <span data-ttu-id="da9b5-140">Controles pueden estar compuestos de varios elementos.</span><span class="sxs-lookup"><span data-stu-id="da9b5-140">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="da9b5-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> indica el elemento específico en el control compuesto sobre que el puntero del mouse está y no el propio control.</span><span class="sxs-lookup"><span data-stu-id="da9b5-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span>  <span data-ttu-id="da9b5-142">Por ejemplo, dependiendo de qué parte de un <xref:System.Windows.Controls.Button> el puntero está sobre, el <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> propiedad podría presentar el <xref:System.Windows.Controls.TextBox> de la <xref:System.Windows.Controls.ContentControl.Content%2A> propiedad o el <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="da9b5-142">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="da9b5-143">Use la <xref:System.Windows.IInputElement.IsMouseOver%2A> propiedad <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement> para determinar si el mouse está sobre un elemento, que incluye sus elementos secundarios visuales o controlar los elementos de la composición.</span><span class="sxs-lookup"><span data-stu-id="da9b5-143">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Input.MouseButtonState GetButtonState(valuetype System.Windows.Input.MouseButton mouseButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Input::MouseButtonState GetButtonState(System::Windows::Input::MouseButton mouseButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mouseButton" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouseButton">
          <span data-ttu-id="da9b5-144">Botón que se consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-144">The button which is being queried.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-145">Obtiene el estado del botón del mouse especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-145">Gets the state of the specified mouse button.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-146">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-146">The state of the button.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClientPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-147">Calcula, en coordenadas de cliente, la posición del puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-147">Calculates the position of the mouse pointer, in client coordinates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetClientPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-148">Calcula, en coordenadas de cliente, la posición del puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-148">Calculates the position of the mouse pointer, in client coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-149">Posición, en coordenadas de cliente, del puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-149">The position of the mouse pointer, in client coordinates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition(class System.Windows.PresentationSource presentationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition(System::Windows::PresentationSource ^ presentationSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentationSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="presentationSource">
          <span data-ttu-id="da9b5-150">Origen en el que se va a obtener la posición del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-150">The source in which to obtain the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-151">Calcula, en coordenadas de cliente, la posición del puntero del mouse en la instancia especificada de <see cref="T:System.Windows.PresentationSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-151">Calculates the position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-152">Posición, en coordenadas de cliente, del puntero del mouse en la instancia especificada de <see cref="T:System.Windows.PresentationSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-152">The position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="da9b5-153">El marco de referencia en el que se va a calcular la posición del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-153">The frame of reference in which to calculate the position of the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-154">Obtiene la posición del mouse respecto a un elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-154">Gets the position of the mouse relative to a specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-155">La posición del mouse respecto al parámetro <paramref name="relativeTo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-155">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-156">La posición del puntero del mouse se calcula respecto a especificado <xref:System.Windows.IInputElement> con la esquina superior izquierda del elemento es el punto de origen, 0,0.</span><span class="sxs-lookup"><span data-stu-id="da9b5-156">The position of the mouse pointer is calculated relative to the specified <xref:System.Windows.IInputElement> with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da9b5-157">
            <paramref name="relativeTo" /> es <see langword="null" /> o no es <see cref="T:System.Windows.UIElement" /> ni <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-157">
              <paramref name="relativeTo" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScreenPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetScreenPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetScreenPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetScreenPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetScreenPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetScreenPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-158">Calcula la posición en pantalla del puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-158">Calculates the screen position of the mouse pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-159">La posición del puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-159">The position of the mouse pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-160">Obtiene el estado del botón primario de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-160">Gets the state of the left mouse button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-161">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-161">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-162">El estado del botón central de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-162">The state of the middle button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-163">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-163">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-164">Obtiene o establece el cursor en toda la aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-164">Gets or sets the cursor for the entire application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-165">El cursor de invalidación o <see langword="null" /> si no se establece <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-165">The override cursor or <see langword="null" /> if <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-166">El <xref:System.Windows.Input.Cursor> que <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> está establecido en se aplicarán a toda la aplicación.</span><span class="sxs-lookup"><span data-stu-id="da9b5-166">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="da9b5-167">Para borrar la invalidación <xref:System.Windows.Input.Cursor>, establezca <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> a `null`.</span><span class="sxs-lookup"><span data-stu-id="da9b5-167">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="da9b5-168">Establecer <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> a <xref:System.Windows.Input.Cursors.None%2A> , se forzará el cursor del mouse no se muestran, pero todavía se procesan los eventos del mouse.</span><span class="sxs-lookup"><span data-stu-id="da9b5-168">Setting <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-169">Obtiene el estado del botón secundario de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-169">Gets the state of the right button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-170">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-170">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">
          <span data-ttu-id="da9b5-171">Cursor en el que se va a establecer el puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-171">The cursor to set the mouse pointer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da9b5-172">Establece el puntero del mouse en la instancia de <see cref="T:System.Windows.Input.Cursor" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-172">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da9b5-173">
            <see langword="true" /> si el cursor del mouse está establecido; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-173">
              <see langword="true" /> if the mouse cursor is set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-174">Tenga en cuenta que este cursor no aplica un determinado <xref:System.Windows.UIElement>, pero en su lugar se aplica a toda la aplicación.</span><span class="sxs-lookup"><span data-stu-id="da9b5-174">Note that this cursor does not apply any particular <xref:System.Windows.UIElement>, but rather it applies to the whole application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-175">Exige que el mouse vuelva a sincronizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-175">Forces the mouse to resynchronize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-176">El <xref:System.Windows.Input.MouseDevice> supervisa los cambios en el diseño y las llamadas <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span><span class="sxs-lookup"><span data-stu-id="da9b5-176">The <xref:System.Windows.Input.MouseDevice> monitors layout changes and calls <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span></span>  <span data-ttu-id="da9b5-177">Hay casos en que el sistema de entrada del mouse debe forzarse para actualizar para que responda a los cambios.</span><span class="sxs-lookup"><span data-stu-id="da9b5-177">There are cases in which the mouse input system must be forced to update for it to respond to changes.</span></span>  <span data-ttu-id="da9b5-178">Por ejemplo, debe volver a sincronizar el mouse en un temporizador.</span><span class="sxs-lookup"><span data-stu-id="da9b5-178">For example, you must resynchronize the mouse on a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-179">Obtiene el objeto <see cref="T:System.Windows.IInputElement" /> al que se envía la entrada de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-179">Gets the <see cref="T:System.Windows.IInputElement" /> that the input from this mouse device is sent to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-180">El elemento que recibe la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-180">The element that receives the input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9b5-181">El destino de un <xref:System.Windows.Input.MouseDevice> es el objeto que el mouse está encima o el objeto con la captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="da9b5-181">The target for a <xref:System.Windows.Input.MouseDevice> is the object the mouse is over or the object with mouse capture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-182">Exige que el cursor del mouse se actualice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-182">Forces the mouse cursor to update.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-183">Obtiene el estado del primer botón extendido de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-183">Gets the state of the first extended button on this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-184">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-184">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da9b5-185">Obtiene el estado del segundo botón extendido de este dispositivo de mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-185">Gets the state of the second extended button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da9b5-186">El estado del botón.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da9b5-186">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>