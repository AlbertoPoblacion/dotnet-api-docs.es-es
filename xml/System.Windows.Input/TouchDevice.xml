<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4234b963efd1150697b50797dac1fd223d4dd60" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659939" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="22495-101">Representa una única entrada táctil generada por un dedo en una pantalla táctil.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22495-101">Represents a single touch input produced by a finger on a touchscreen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-102">Normalmente tienen acceso a un <xref:System.Windows.Input.TouchDevice> utilizando el <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="22495-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="22495-103">Un <xref:System.Windows.Input.TouchDevice> representa un toque único en una pantalla.</span><span class="sxs-lookup"><span data-stu-id="22495-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="22495-104">Si varios toques están presentes, use la <xref:System.Windows.Input.TouchDevice.Id%2A> propiedad distinguir entre ellos.</span><span class="sxs-lookup"><span data-stu-id="22495-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22495-105">Esta clase contiene una petición de herencia en el nivel de clase que se aplica a todos los miembros.</span><span class="sxs-lookup"><span data-stu-id="22495-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="22495-106">Un <xref:System.Security.SecurityException> se produce cuando la clase derivada no tiene permiso de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="22495-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="22495-107">Para obtener más información acerca de las peticiones de seguridad, consulte [peticiones de vínculo](~/docs/framework/misc/link-demands.md) y [peticiones de herencia](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="22495-107">For more information about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22495-108">En el ejemplo siguiente, se le permite crear modelos simples en un <xref:System.Windows.Controls.Canvas> arrastrando dos dedos en una pantalla táctil.</span><span class="sxs-lookup"><span data-stu-id="22495-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="22495-109">Cada toque está representado por un <xref:System.Windows.Input.TouchDevice> en el <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="22495-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="22495-110">El modelo se crea dibujando una línea entre los puntos táctiles proporcionados por los dispositivos táctiles.</span><span class="sxs-lookup"><span data-stu-id="22495-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="22495-111">Este ejemplo necesita una pantalla táctil, compatible con Windows.</span><span class="sxs-lookup"><span data-stu-id="22495-111">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="22495-112">El siguiente marcado crea la interfaz de usuario, que consta de un <xref:System.Windows.Controls.Canvas> que se centra en una cuadrícula y asocia los controladores de eventos para los eventos de toque.</span><span class="sxs-lookup"><span data-stu-id="22495-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="22495-113">El código siguiente controla los eventos touch.</span><span class="sxs-lookup"><span data-stu-id="22495-113">The following code handles the touch events.</span></span> <span data-ttu-id="22495-114">Cuando se presiona un dispositivo táctil el <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> se captura en el <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="22495-115">Cuando se eleva el toque, el <xref:System.Windows.Input.TouchDevice> se libera.</span><span class="sxs-lookup"><span data-stu-id="22495-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="22495-116">Cuando se mueve una entrada táctil en el <xref:System.Windows.Controls.Canvas>, el <xref:System.Windows.Input.TouchDevice.Id%2A> está activada.</span><span class="sxs-lookup"><span data-stu-id="22495-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="22495-117">Si el movimiento procede del primer toque, se graba su ubicación.</span><span class="sxs-lookup"><span data-stu-id="22495-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="22495-118">Si el movimiento procede del segundo toque, se dibuja una línea desde la posición del primer toque a la posición del segundo toque.</span><span class="sxs-lookup"><span data-stu-id="22495-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="22495-119">para derivar de esta clase.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22495-119">for deriving from this class.</span>
      </span>
      <span data-ttu-id="22495-120">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22495-120">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="22495-121">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="22495-121">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId">
          <span data-ttu-id="22495-122">Identificador único del dispositivo táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-122">A unique identifier for the touch device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-123">Se llama desde constructores de clases derivadas para inicializar la clase <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-123">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="22495-124">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-124">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="22495-125">Esta clase no puede ser usada por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-125">This class cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-126">Agrega <see cref="T:System.Windows.Input.TouchDevice" /> al sistema de mensajería de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-126">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-127">Las clases que heredan de <xref:System.Windows.Input.TouchDevice> debería llamar a este método para activar el dispositivo actual.</span><span class="sxs-lookup"><span data-stu-id="22495-127">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22495-128">El dispositivo ya está activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-128">The device is already activated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-129">Se produce cuando <see cref="T:System.Windows.Input.TouchDevice" /> se agrega al sistema de mensajería de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-129">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-130">Obtiene el objeto <see cref="T:System.Windows.PresentationSource" /> que proporciona la entrada para este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-130">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-131">El origen que notifica la entrada para este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-131">The source that is reporting input for this device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="22495-132">Captura una entrada táctil en el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-132">Captures a touch to the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="22495-133">Elemento que captura la entrada táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-133">The element that captures the touch input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-134">Captura una entrada táctil en el elemento especificado usando el modo de captura de <see cref="F:System.Windows.Input.CaptureMode.Element" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-134">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-135">Es <see langword="true" /> si el elemento fue capaz de capturar la entrada táctil; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-135">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-136">Un <xref:System.Windows.Input.TouchDevice> no se pueden capturar a un elemento si ya está capturado a otro elemento.</span><span class="sxs-lookup"><span data-stu-id="22495-136">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22495-137">El siguiente ejemplo se controla el <xref:System.Windows.UIElement.TouchDown> eventos que se producen en un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-137">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="22495-138">Cuando se presiona un dispositivo táctil el <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> se captura en el <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-138">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="22495-139">Este ejemplo forma parte de un ejemplo más extenso que está disponible en la <xref:System.Windows.Input.TouchDevice> general sobre la clase.</span><span class="sxs-lookup"><span data-stu-id="22495-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="22495-140">
            <paramref name="element" /> no es <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> ni <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-140">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="22495-141">Elemento que captura la entrada táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-141">The element that captures the touch.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="22495-142">La directiva de captura que se va a utilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-142">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-143">Captura una entrada táctil en el elemento especificado usando el <see cref="T:System.Windows.Input.CaptureMode" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-143">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-144">Es <see langword="true" /> si el elemento fue capaz de capturar la entrada táctil; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-144">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-145">Un <xref:System.Windows.Input.TouchDevice> no se pueden capturar a un elemento si ya está capturado a otro elemento.</span><span class="sxs-lookup"><span data-stu-id="22495-145">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="22495-146">
            <paramref name="element" /> no es <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> ni <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-146">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-147">Obtiene el elemento que capturó el objeto <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-147">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-148">Elemento que capturó el objeto <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-148">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22495-149">El siguiente ejemplo se controla el <xref:System.Windows.UIElement.TouchUp> eventos que se producen en un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-149">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="22495-150">Comprueba la <xref:System.Windows.Input.TouchDevice.Captured%2A> propiedad para comprobar que el dispositivo que generó el evento se captura en el <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-150">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="22495-151">Si es así, el <xref:System.Windows.Input.TouchDevice> se libera.</span><span class="sxs-lookup"><span data-stu-id="22495-151">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="22495-152">Este ejemplo forma parte de un ejemplo más extenso que está disponible en la <xref:System.Windows.Input.TouchDevice> general sobre la clase.</span><span class="sxs-lookup"><span data-stu-id="22495-152">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-153">Obtiene la directiva de captura de <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-153">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-154">Directiva de captura de <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-154">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-155">Quita <see cref="T:System.Windows.Input.TouchDevice" /> del sistema de mensajería de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-155">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-156">Las clases que heredan de <xref:System.Windows.Input.TouchDevice> debe llamar a este método para desactivar el dispositivo actual.</span><span class="sxs-lookup"><span data-stu-id="22495-156">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="22495-157">A <xref:System.Windows.UIElement.TouchLeave> evento se produce sin la correspondiente <xref:System.Windows.UIElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-157">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22495-158">El dispositivo no está activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-158">The device is not activated.</span>
          </span>
        </exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-159">Se produce cuando <see cref="T:System.Windows.Input.TouchDevice" /> se quita del sistema de mensajería de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-159">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-160">Obtiene el elemento sobre el que está justo encima el punto de contacto táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-160">Gets the element that the touch contact point is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-161">Elemento sobre el que está justo encima el punto de contacto táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-161">The element that the touch contact point is directly over.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="22495-162">Elemento que define el espacio de coordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-162">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-163">Cuando se invalida en una clase derivada, devuelve los puntos táctiles recopilados entre el evento Touch más reciente y el evento Touch anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-163">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-164">Todos los puntos táctiles recopilados entre el evento Touch más reciente y el evento Touch anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-164">All touch points that were collected between the most recent and previous touch events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="22495-165">Elemento que define el espacio de coordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-165">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-166">Devuelve la posición actual del dispositivo táctil con respecto al elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-166">Returns the current position of the touch device relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-167">Posición actual del dispositivo táctil con respecto al elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-167">The current position of the touch device relative to the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-168">Obtiene el identificador único de <see cref="T:System.Windows.Input.TouchDevice" />, tal como lo proporciona el sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-168">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-169">Identificador único de <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-169">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-170">Un <xref:System.Windows.Input.TouchDevice> representa un toque único en una pantalla.</span><span class="sxs-lookup"><span data-stu-id="22495-170">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="22495-171">Si varios toques están presentes, use la <xref:System.Windows.Input.TouchDevice.Id%2A> propiedad distinguir entre ellos.</span><span class="sxs-lookup"><span data-stu-id="22495-171">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22495-172">El siguiente ejemplo se controla el <xref:System.Windows.UIElement.TouchMove> eventos que se producen en un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="22495-172">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="22495-173">Cuando se mueve una entrada táctil en el <xref:System.Windows.Controls.Canvas>, el <xref:System.Windows.Input.TouchDevice.Id%2A> está activada.</span><span class="sxs-lookup"><span data-stu-id="22495-173">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="22495-174">Si el movimiento procede del primer toque, se graba su ubicación.</span><span class="sxs-lookup"><span data-stu-id="22495-174">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="22495-175">Si el movimiento procede del segundo toque, se dibuja una línea desde la posición del primer toque a la posición del segundo toque.</span><span class="sxs-lookup"><span data-stu-id="22495-175">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="22495-176">Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Input.TouchDevice> general sobre la clase.</span><span class="sxs-lookup"><span data-stu-id="22495-176">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-177">Obtiene un valor que indica si el dispositivo está activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-177">Gets a value that indicates whether the device is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-178">Devuelve <see langword="true" /> si el dispositivo está activo; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-178">
              <see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="22495-179">Elemento que captura la entrada táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-179">The element that captures the touch input.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="22495-180">Directiva de captura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-180">The capture policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-181">Se le llama cuando se captura una entrada táctil en un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-181">Called when a touch is captured to an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-182">El <xref:System.Windows.Input.TouchDevice.OnCapture%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="22495-182">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="22495-183">Se puede invalidar en una clase derivada para realizar cualquier acción que es necesarios cuando se captura la entrada táctil.</span><span class="sxs-lookup"><span data-stu-id="22495-183">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="22495-184">Es <see langword="true" /> para cancelar la acción; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-184">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-185">Se le llama cuando finaliza una manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-185">Called when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-186">Se le llama cuando se inicia una manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-186">Called when a manipulation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-187">El <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="22495-187">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="22495-188">Se puede invalidar en una clase derivada para realizar cualquier acción que son necesarios cuando se inicia la manipulación táctil.</span><span class="sxs-lookup"><span data-stu-id="22495-188">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-189">Notifica que se ha presionado una entrada táctil en un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-189">Reports that a touch is pressed on an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-190">Es <see langword="true" /> si se controló el evento <see cref="E:System.Windows.UIElement.TouchDown" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-190">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-191">Las clases que heredan de <xref:System.Windows.Input.TouchDevice> debería llamar a este método para generar el <xref:System.Windows.UIElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-191">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="22495-192">A <xref:System.Windows.UIElement.TouchEnter> evento se desencadena antes de la <xref:System.Windows.UIElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-192">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-193">Notifica que una entrada táctil se está moviendo por un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-193">Reports that a touch is moving across an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-194">Es <see langword="true" /> si se controló el evento <see cref="E:System.Windows.UIElement.TouchMove" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-194">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-195">Las clases que heredan de <xref:System.Windows.Input.TouchDevice> debería llamar a este método para generar el <xref:System.Windows.UIElement.TouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-195">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-196">Notifica que una entrada táctil se levantó de un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-196">Reports that a touch was lifted from an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-197">Es <see langword="true" /> si se controló el evento <see cref="E:System.Windows.UIElement.TouchUp" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-197">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-198">Las clases que heredan de <xref:System.Windows.Input.TouchDevice> debería llamar a este método para generar el <xref:System.Windows.UIElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-198">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="22495-199">A <xref:System.Windows.UIElement.TouchLeave> evento se genera tras la <xref:System.Windows.UIElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-199">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource">
          <span data-ttu-id="22495-200">Origen que notifica la entrada para este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-200">The source that reports input for this device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-201">Establece el objeto <see cref="T:System.Windows.PresentationSource" /> que notifica la entrada para este dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-201">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22495-202">Fuerza a <see cref="T:System.Windows.Input.TouchDevice" /> a sincronizar la interfaz de usuario con los puntos táctiles subyacentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-202">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-203">Sincronización de la interfaz de usuario con las posiciones del dispositivo táctil subyacente podría provocar <xref:System.Windows.UIElement.TouchMove> que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="22495-203">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="22495-204">Elemento que se va a emplear como marco de referencia para calcular la posición de <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-204">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-205">Devuelve la posición del objeto <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-205">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22495-206">Posición del objeto <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-206">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-207">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="22495-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="22495-208">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Input.TouchDevice> se convierte en una interfaz <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="22495-208">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System.Windows.Input.IManipulator.Id { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-209">Obtiene el identificador único de <see cref="T:System.Windows.Input.TouchDevice" />, tal como lo proporciona el sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-209">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-210">Identificador único de <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-210">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-211">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="22495-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="22495-212">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Input.TouchDevice> se convierte en una interfaz <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="22495-212">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="22495-213">Es <see langword="true" /> para cancelar la acción; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-213">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22495-214">Se produce cuando finaliza una manipulación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-214">Occurs when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22495-215">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="22495-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="22495-216">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Input.TouchDevice> se convierte en una interfaz <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="22495-216">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-217">Obtiene el elemento que recibe la entrada desde <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-217">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22495-218">Elemento que recibe la entrada desde <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-218">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22495-219">Se produce cuando se envía un mensaje táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22495-219">Occurs when a touch message is sent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>