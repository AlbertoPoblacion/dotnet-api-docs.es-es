<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ModifierKeysConverter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54a8a745d5385017b520504f0b2637a3723a275b1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a8a745d5385017b520504f0b2637a3723a275b1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ModifierKeysConverter">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> object to and from other types.</source>
          <target state="translated">Convierte un objeto <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> en otros tipos y viceversa.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ModifierKeysConverter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> converts to and from a <ph id="ph2">&lt;xref:System.String&gt;</ph> using the "+" character as the delimiter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> convierte a y desde un <ph id="ph2">&lt;xref:System.String&gt;</ph> con el carácter "+" como delimitador.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ModifierKeysConverter">
          <source>For example, the string <ph id="ph1">`Control+ALT`</ph> would be converted into a <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> object consisting of the <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> keys.</source>
          <target state="translated">Por ejemplo, la cadena <ph id="ph1">`Control+ALT`</ph> se convertiría en un <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> objeto formado por el <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> y <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> claves.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ModifierKeysConverter">
          <source>This behavior differs from the default XAML parser-level enumeration combine character of ",".</source>
          <target state="translated">Este comportamiento difiere del carácter de combinar de enumeración de nivel de analizador XAML predeterminado de ",".</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeysConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeysConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">Tipo cuya conversión se evalúa.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether an object of the specified type can be converted to an instance of <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>, using the specified context.</source>
          <target state="translated">Determina si un objeto del tipo especificado puede convertirse en una instancia de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> usando el contexto indicado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="sourceType" /&gt;</ph> is type <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, si <ph id="ph2">&lt;paramref name="sourceType" /&gt;</ph> es de tipo <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">Tipo cuya conversión se evalúa.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether an instance of <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> can be converted to the specified type, using the specified context.</source>
          <target state="translated">Determina si una instancia de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> puede convertirse en el tipo especificado usando el contexto indicado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="destinationType" /&gt;</ph> is type <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, si <ph id="ph2">&lt;paramref name="destinationType" /&gt;</ph> es de tipo <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Culture specific information.</source>
          <target state="translated">Información específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The object to convert.</source>
          <target state="translated">Objeto que se va a convertir.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Attempts to convert the specified object to a <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>, using the specified context.</source>
          <target state="translated">Intenta convertir el objeto especificado en una instancia de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> usando el contexto indicado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The converted object.</source>
          <target state="translated">El objeto convertido.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> converts to and from a <ph id="ph2">&lt;xref:System.String&gt;</ph> using the "+" key as the delimiter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> convierte a y desde un <ph id="ph2">&lt;xref:System.String&gt;</ph> utilizando la clave "+" como delimitador.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>For example, the string <ph id="ph1">`Control+ALT`</ph> would be converted into a <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> consisting of the <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> keys.</source>
          <target state="translated">Por ejemplo, la cadena <ph id="ph1">`Control+ALT`</ph> se convertiría en un <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> que consta de la <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> y <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> claves.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> cannot be converted.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> no se puede convertir.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Culture specific information.</source>
          <target state="translated">Información específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The object to convert.</source>
          <target state="translated">Objeto que se va a convertir.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type to convert the object to.</source>
          <target state="translated">Tipo en el que se va a convertir el objeto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Attempts to convert a <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> to the specified type, using the specified context.</source>
          <target state="translated">Intenta convertir una instancia de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> en el tipo especificado usando el contexto indicado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The converted object.</source>
          <target state="translated">El objeto convertido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">`destinationType`</ph> must be <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`destinationType`</ph> debe ser <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> converts to and from a <ph id="ph2">&lt;xref:System.String&gt;</ph> using the "+" key as the delimiter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeysConverter&gt;</ph> convierte a y desde un <ph id="ph2">&lt;xref:System.String&gt;</ph> utilizando la clave "+" como delimitador.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>For example, the string <ph id="ph1">`Control+ALT`</ph> would be converted into a <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> consisting of the <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> keys.</source>
          <target state="translated">Por ejemplo, la cadena <ph id="ph1">`Control+ALT`</ph> se convertiría en un <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> que consta de la <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> y <ph id="ph4">&lt;xref:System.Windows.Input.ModifierKeys.Alt&gt;</ph> claves.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not map to a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> no se asigna a una instancia de  <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> válida.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> cannot be converted.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> no se puede convertir.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
          <source>The value to check for validity.</source>
          <target state="translated">Valor cuya validez se va a comprobar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
          <source>Determines whether the specified value is a valid <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> value.</source>
          <target state="translated">Determina si el valor especificado es un valor de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if input is a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la entrada es un valor de <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> válido; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>