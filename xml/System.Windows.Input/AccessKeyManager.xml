<Type Name="AccessKeyManager" FullName="System.Windows.Input.AccessKeyManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5ab34cffebfaead1370fb20e73b864e2473103d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36508551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AccessKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AccessKeyManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AccessKeyManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessKeyManager sealed" />
  <TypeSignature Language="F#" Value="type AccessKeyManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="136b9-101">Mantiene el registro de todas las claves de acceso y el control de los comandos del teclado de interoperabilidad entre Windows Forms, Win32 y Windows Presentation Foundation (WPF).</span>
      <span class="sxs-lookup">
        <span data-stu-id="136b9-101">Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b9-102">Un <xref:System.Windows.Input.AccessKeyManager> objeto se crea a petición uno por <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="136b9-102">An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="136b9-103">El <xref:System.Windows.Input.AccessKeyManager> se adjunta como un controlador de eventos para <xref:System.Windows.Input.InputManager.PostProcessInput> y expone métodos para <xref:System.Windows.Input.AccessKeyManager.Register%2A> y <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> las claves de acceso.</span><span class="sxs-lookup"><span data-stu-id="136b9-103">The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.</span></span>  
  
 <span data-ttu-id="136b9-104">Cuando se presiona la tecla de acceso registrada, el <xref:System.Windows.Input.AccessKeyManager> llamadas el <xref:System.Windows.UIElement.OnAccessKey%2A> método en el elemento de destino.</span><span class="sxs-lookup"><span data-stu-id="136b9-104">When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.</span></span>  
  
 <span data-ttu-id="136b9-105">Un elemento se puede asociar con cualquier número de teclas de acceso.</span><span class="sxs-lookup"><span data-stu-id="136b9-105">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="AccessKeyPressed">
      <MemberSignature Language="C#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />
      <MemberSignature Language="VB.NET" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="F#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" Usage="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyPressedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent AccessKeyPressedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyPressedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ AccessKeyPressedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyPressedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="136b9-106">Identifica el evento enrutado <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-106">Identifies the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="136b9-107">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="136b9-108">Controlador de eventos que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-108">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-109">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-109">Adds a handler for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyRegistered">
      <MemberSignature Language="C#" Value="public static bool IsKeyRegistered (object scope, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyRegistered(object scope, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyRegistered (scope As Object, key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyRegistered(System::Object ^ scope, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member IsKeyRegistered : obj * string -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.IsKeyRegistered (scope, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="136b9-110">Origen de presentación en el que se va a consultar <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-110">The presentation source to query for <c>key</c>.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="136b9-111">Clave que se consultará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-111">The key to query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-112">Indica si la clave especificada está registrada como una clave de acceso en el ámbito especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-112">Indicates whether the specified key is registered as an access keys in the specified scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b9-113">Es <see langword="true" /> si la tecla está registrada; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-113">
              <see langword="true" /> if the key is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public static bool ProcessKey (object scope, string key, bool isMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ProcessKey(object scope, string key, bool isMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProcessKey (scope As Object, key As String, isMultiple As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ProcessKey(System::Object ^ scope, System::String ^ key, bool isMultiple);" />
      <MemberSignature Language="F#" Value="static member ProcessKey : obj * string * bool -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.ProcessKey (scope, key, isMultiple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="136b9-114">Ámbito de la tecla de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-114">The scope for the access key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="136b9-115">Tecla de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-115">The access key.</span>
          </span>
        </param>
        <param name="isMultiple">
          <span data-ttu-id="136b9-116">Indica si <c>key</c> tiene varias coincidencias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-116">Indicates if <c>key</c> has multiple matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-117">Procesa las teclas de acceso especificadas como si se hubiese pasado un evento <see cref="E:System.Windows.UIElement.KeyDown" /> para la tecla a <see cref="T:System.Windows.Input.AccessKeyManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-117">Processes the specified access keys as if a <see cref="E:System.Windows.UIElement.KeyDown" /> event for the key was passed to the <see cref="T:System.Windows.Input.AccessKeyManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="136b9-118">
            <see langword="true" /> si coinciden varias teclas; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-118">
              <see langword="true" /> if there are more keys that match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Register : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Register (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="136b9-119">Tecla de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-119">The access key.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="136b9-120">Elemento que se va a asociar con <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-120">The element to associate <c>key</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-121">Asocia las claves de acceso especificadas con el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-121">Associates the specified access keys with the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="136b9-122">Cuando se presiona las teclas de acceso, el <xref:System.Windows.UIElement.OnAccessKey%2A> método `element` se llama.</span><span class="sxs-lookup"><span data-stu-id="136b9-122">When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.</span></span>  
  
 <span data-ttu-id="136b9-123">Un elemento se puede asociar con cualquier número de teclas de acceso.</span><span class="sxs-lookup"><span data-stu-id="136b9-123">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="136b9-124">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="136b9-125">Controlador de eventos que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-125">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-126">Quita el controlador de eventos <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> especificado del objeto indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-126">Removes the specified <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event handler from the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Unregister : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Unregister (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="136b9-127">Tecla de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-127">The access key.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="136b9-128">Elemento del que se va a desasociar <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-128">The element from which to disassociate <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="136b9-129">Desasocia las claves de acceso especificadas del elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="136b9-129">Disassociates the specified access keys from the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>