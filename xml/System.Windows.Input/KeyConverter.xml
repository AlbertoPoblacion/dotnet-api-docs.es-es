<Type Name="KeyConverter" FullName="System.Windows.Input.KeyConverter">
  <TypeSignature Language="C#" Value="public class KeyConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0523-101">Convierte un objeto <see cref="T:System.Windows.Input.Key" /> en otros tipos y viceversa.</span><span class="sxs-lookup"><span data-stu-id="a0523-101">Converts a <see cref="T:System.Windows.Input.Key" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0523-102">El <xref:System.Windows.Input.KeyConverter> clase solo convierte una instancia <xref:System.Windows.Input.Key> hacia y desde un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a0523-102">The <xref:System.Windows.Input.KeyConverter> class only converts an instance <xref:System.Windows.Input.Key> to and from a <xref:System.String>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0523-103">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="a0523-103">Initializes a new instance of the <see cref="T:System.Windows.Input.Key" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a0523-104">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</span><span class="sxs-lookup"><span data-stu-id="a0523-104">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="a0523-105">Tipo cuya conversión se evalúa.</span><span class="sxs-lookup"><span data-stu-id="a0523-105">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="a0523-106">Determina si un objeto del tipo especificado puede convertirse en una instancia de <see cref="T:System.Windows.Input.Key" /> usando el contexto indicado.</span><span class="sxs-lookup"><span data-stu-id="a0523-106">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.Key" />, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="a0523-107"><see langword="true" /> si <paramref name="sourceType" /> es de tipo <see cref="T:System.String" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0523-107"><see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a0523-108">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</span><span class="sxs-lookup"><span data-stu-id="a0523-108">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="a0523-109">Tipo cuya conversión se evalúa.</span><span class="sxs-lookup"><span data-stu-id="a0523-109">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="a0523-110">Determina si una instancia de <see cref="T:System.Windows.Input.Key" /> puede convertirse en el tipo especificado usando el contexto indicado.</span><span class="sxs-lookup"><span data-stu-id="a0523-110">Determines whether an instance of <see cref="T:System.Windows.Input.Key" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="a0523-111"><see langword="true" /> si <paramref name="destinationType" /> es de tipo <see cref="T:System.String" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0523-111"><see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0523-112">Si un contexto está implicado, contexto también comprueba si el valor se debe serializar está dentro del intervalo de un `Key` valor.</span><span class="sxs-lookup"><span data-stu-id="a0523-112">If a context is involved, context also checks whether the value to serialize is within range for a `Key` value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a0523-113">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</span><span class="sxs-lookup"><span data-stu-id="a0523-113">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="a0523-114">Información específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="a0523-114">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="a0523-115">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="a0523-115">The object to convert.</span></span></param>
        <summary><span data-ttu-id="a0523-116">Intenta convertir el objeto especificado en una instancia de <see cref="T:System.Windows.Input.Key" /> usando el contexto indicado.</span><span class="sxs-lookup"><span data-stu-id="a0523-116">Attempts to convert the specified object to a <see cref="T:System.Windows.Input.Key" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="a0523-117">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="a0523-117">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0523-118">Los nombres de clave siempre se evalúan por <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0523-118">Key names are always evaluated by <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span></span>  
  
 <span data-ttu-id="a0523-119">`destinationType` debe ser <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a0523-119">`destinationType` must be <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a0523-120"><paramref name="source" /> no se puede convertir.</span><span class="sxs-lookup"><span data-stu-id="a0523-120"><paramref name="source" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a0523-121">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</span><span class="sxs-lookup"><span data-stu-id="a0523-121">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="a0523-122">Información específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="a0523-122">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="a0523-123">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="a0523-123">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="a0523-124">Tipo en el que se va a convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="a0523-124">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="a0523-125">Intenta convertir una instancia de <see cref="T:System.Windows.Input.Key" /> en el tipo especificado usando el contexto indicado.</span><span class="sxs-lookup"><span data-stu-id="a0523-125">Attempts to convert a <see cref="T:System.Windows.Input.Key" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="a0523-126">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="a0523-126">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0523-127"><paramref name="destinationType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a0523-127"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a0523-128"><paramref name="value" /> no se pueden convertir en <paramref name="destinationType" />.</span><span class="sxs-lookup"><span data-stu-id="a0523-128"><paramref name="value" /> cannot be converted to <paramref name="destinationType" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>