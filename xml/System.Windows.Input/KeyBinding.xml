<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyBinding.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7ffcff8092d477e75345cd0afc6f0d3c265489e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7ffcff8092d477e75345cd0afc6f0d3c265489e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Binds a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (or another  <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> implementation).</source>
          <target state="translated">Enlaza <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (u otra implementación de <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> associates a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, such as a <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> asocia un <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> con un <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, como un <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is the primary implementation of the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface for the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> commanding system .</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> es la implementación principal de la <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interfaz para el <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sistema de comandos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> value.</source>
          <target state="translated">En general, cuando la <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> se ejecuta el comando se invoca, aunque el comportamiento del comando adicional depende de factores específicos del comando como el <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre los comandos, consulte el <bpt id="p1">[</bpt>Introducción estableciendo<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>With the exception of the function keys and the numeric keypad keys, a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain exactly one <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">A excepción de las teclas de función y las teclas del teclado numérico, válidas <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> debe contener exactamente un <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> y uno o más <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Function keys and numeric keypad keys do not require a modifier key in order to be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Teclas de función y las teclas del teclado numérico no requieren una tecla modificadora para ser válido <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>It is possible to specify an invalid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> with an invalid associated gesture, either through <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> or code.</source>
          <target state="translated">Es posible especificar un válido <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> y un <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> con no válido asociado movimiento, ya sea a través de <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> o código.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For instance, there is no validation that prevents creating and binding a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> that contains only a nonfunction key, or only modifiers but no key.</source>
          <target state="translated">Por ejemplo, no hay ninguna validación que impida la creación y enlace un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> que contiene solo una tecla sin función, o sólo modificadores pero no hay ninguna clave.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Such a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> will never attempt to invoke its associated command.</source>
          <target state="translated">Este tipo una <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> nunca intenta invocar su comando asociado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Al definir un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> hay dos maneras de especificar el <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">La primera forma de establecer un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> consiste en definir el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributo de la <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P".</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">La segunda manera consiste en definir el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atributo y el <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atributos de la <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Ambos modos de configuración de la <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">En el caso cuando la <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>y el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Puede tener situaciones donde, por ejemplo un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">En general, se recomienda usar solo el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> de atributo de <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> can be defined on a specific object or at the class level by registering a <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> pueden definirse en un objeto específico o en el nivel de clase registrando un <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> en la <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The most typical way to define a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is within the control template, setting the <ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph> property in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> by declaring one or more <ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elements.</source>
          <target state="translated">La forma más habitual de definir un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> está dentro de la plantilla de control, estableciendo la <ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph> propiedad en <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> mediante la declaración de uno o varios <ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elementos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and adds it to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of the root window.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> y lo agrega a la <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> de la ventana raíz.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The command to associate with <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Comando que se va a asociar con <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The key combination to associate with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Combinación de teclas que se va a asociar con <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> utilizando los objetos <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> or <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="command" /&gt;</ph> o <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The command to invoke.</source>
          <target state="translated">Comando al que se va a invocar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The key to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tecla que se va a asociar con <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The modifiers to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Modifucadores que se van a asociar con <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> which will be converted into a <ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> mediante el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> especificado y los objetos <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> y <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> especificados, que se convertirán en un <ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>Creates an instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Crea una instancia de <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>The new object.</source>
          <target state="translated">El objeto nuevo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>Gets or sets the gesture associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el gesto asociado a este <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The key sequence.</source>
          <target state="translated">Secuencia de teclas.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">A excepción de las teclas de función y las teclas del teclado numérico, un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> debe contener una <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> y uno o más <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The following example shows how to bind a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> using a <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (the markup and code examples specify different keys but are otherwise equivalent).</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo enlazar un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> a una <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> mediante un <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (los ejemplos de código y marcado especifican teclas distintas pero son equivalentes).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>the value <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> is being set to is not a <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> que se está estableciendo no es <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> del <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> asociado a este <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The key part of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Parte correspondiente a la tecla de <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">A excepción de las teclas de función y las teclas del teclado numérico, un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> debe contener una <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> y uno o más <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Al definir un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> hay dos maneras de especificar el <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">La primera forma de establecer un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> consiste en definir el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributo de la <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P".</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">La segunda manera consiste en definir el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atributo y el <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atributos de la <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Ambos modos de configuración de la <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">En el caso cuando la <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>y el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Puede tener situaciones donde, por ejemplo un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">En general, se recomienda usar solo el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> de atributo de <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.KeyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> del <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> asociado a este <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The modifier keys of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Teclas modificadores del <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">A excepción de las teclas de función y las teclas del teclado numérico, un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> debe contener una <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> y uno o más <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Al definir un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> hay dos maneras de especificar el <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">La primera forma de establecer un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> en <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> consiste en definir el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributo de la <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P".</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">La segunda manera consiste en definir el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atributo y el <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atributos de la <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Ambos modos de configuración de la <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">En el caso cuando la <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>y el <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Puede tener situaciones donde, por ejemplo un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">En general, se recomienda usar solo el <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> de atributo de <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>One or more modifier keys, defined by the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeration, delimited with a "+" character.</source>
          <target state="translated">Uno o más teclas modificadoras, definidas por el <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeración, delimitado por un carácter "+".</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.ModifiersProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>