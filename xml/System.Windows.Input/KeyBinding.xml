<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a720edaac5c7f719dc1045717fc47b33c2a6893" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506906" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enlaza <see cref="T:System.Windows.Input.KeyGesture" /> a <see cref="T:System.Windows.Input.RoutedCommand" /> (u otra implementación de <see cref="T:System.Windows.Input.ICommand" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Input.KeyBinding> asocia un <xref:System.Windows.Input.KeyGesture> con un <xref:System.Windows.Input.ICommand>, como un <xref:System.Windows.Input.RoutedCommand>. <xref:System.Windows.Input.RoutedCommand> es la implementación principal de la <xref:System.Windows.Input.ICommand> interfaz para el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema de comandos.  En general, cuando la <xref:System.Windows.Input.KeyGesture> se ejecuta el comando se invoca, aunque el comportamiento del comando adicional depende de factores específicos del comando como el <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> valor.  Para obtener más información sobre los comandos, consulte el [Introducción estableciendo](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 A excepción de las teclas de función y las teclas del teclado numérico, válidas <xref:System.Windows.Input.KeyGesture> debe contener exactamente un <xref:System.Windows.Input.Key> y uno o más <xref:System.Windows.Input.ModifierKeys>.  Teclas de función y las teclas del teclado numérico no requieren una tecla modificadora para ser válido <xref:System.Windows.Input.KeyGesture>. Es posible especificar un válido <xref:System.Windows.Input.KeyGesture> y un <xref:System.Windows.Input.KeyBinding> con no válido asociado movimiento, ya sea a través de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] o código. Por ejemplo, no hay ninguna validación que impida la creación y enlace un <xref:System.Windows.Input.KeyGesture> que contiene solo una tecla sin función, o sólo modificadores pero no hay ninguna clave. Este tipo una <xref:System.Windows.Input.KeyBinding> nunca intenta invocar su comando asociado.  
  
 Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>. La primera forma de establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P". La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos de la <xref:System.Windows.Input.KeyBinding> elemento. Ambos modos de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.  En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <xref:System.Windows.Input.KeyGesture>. Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo. En general, se recomienda usar solo el <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.  
  
 A <xref:System.Windows.Input.KeyBinding> pueden definirse en un objeto específico o en el nivel de clase registrando un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> en la <xref:System.Windows.Input.CommandManager> clase. La forma más habitual de definir un <xref:System.Windows.Input.KeyBinding> está dentro de la plantilla de control, estableciendo la <xref:System.Windows.UIElement.InputBindings%2A> propiedad en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] mediante la declaración de uno o varios <xref:System.Windows.Input.MouseBinding> o <xref:System.Windows.Input.KeyBinding> elementos.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Input.KeyBinding> y lo agrega a la <xref:System.Windows.Input.InputBindingCollection> de la ventana raíz.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">Comando que se va a asociar con <c>gesture</c>.</param>
        <param name="gesture">Combinación de teclas que se va a asociar con <c>command</c>.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" /> utilizando los objetos <see cref="T:System.Windows.Input.ICommand" /> y <see cref="T:System.Windows.Input.KeyGesture" /> especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> o <paramref name="gesture" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">Comando al que se va a invocar.</param>
        <param name="key">Tecla que se va a asociar con <c>command</c>.</param>
        <param name="modifiers">Modifucadores que se van a asociar con <c>command</c>.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" /> mediante el objeto <see cref="T:System.Windows.Input.ICommand" /> especificado y los objetos <see cref="T:System.Windows.Input.Key" /> y <see cref="T:System.Windows.Input.ModifierKeys" /> especificados, que se convertirán en un <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>Objeto nuevo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el gesto asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Secuencia de teclas. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener una <xref:System.Windows.Input.Key> y uno o más <xref:System.Windows.Input.ModifierKeys>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo enlazar un <xref:System.Windows.Input.KeyGesture> a una <xref:System.Windows.Input.RoutedCommand> mediante un <xref:System.Windows.Input.KeyBinding> (los ejemplos de código y marcado especifican teclas distintas pero son equivalentes).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor <paramref name="gesture" /> que se está estableciendo no es <see cref="T:System.Windows.Input.KeyGesture" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Input.Key" /> del <see cref="T:System.Windows.Input.KeyGesture" /> asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Parte correspondiente a la tecla de <see cref="T:System.Windows.Input.KeyGesture" />. El valor predeterminado es <see cref="F:System.Windows.Input.Key.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener una <xref:System.Windows.Input.Key> y uno o más <xref:System.Windows.Input.ModifierKeys>.  
  
 Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>. La primera forma de establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P". La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos de la <xref:System.Windows.Input.KeyBinding> elemento. Ambos modos de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.  En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <xref:System.Windows.Input.KeyGesture>. Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo. En general, se recomienda usar solo el <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.KeyBinding.Key" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Input.ModifierKeys" /> del <see cref="T:System.Windows.Input.KeyGesture" /> asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Teclas modificadores del <see cref="T:System.Windows.Input.KeyGesture" />.  El valor predeterminado es <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener una <xref:System.Windows.Input.Key> y uno o más <xref:System.Windows.Input.ModifierKeys>.  
  
 Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>. La primera forma de establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, que permite utilizar una sintaxis especificar las claves y los modificadores como una cadena única, por ejemplo "CTRL + P". La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos de la <xref:System.Windows.Input.KeyBinding> elemento. Ambos modos de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modifican el mismo objeto subyacente, pero habrá un conflicto si se usan.  En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que corresponde a los últimos se utilizarán para el <xref:System.Windows.Input.KeyGesture>. Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto última procesará sobrescribir el componente de clave de un gesto anterior pero no los modificadores de Gesture el mismo. En general, se recomienda usar solo el <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más sencilla y se proporciona la representación más sencilla para la serialización.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *oneOrMoreModifierKeys*  
 Uno o más teclas modificadoras, definidas por el <xref:System.Windows.Input.ModifierKeys> enumeración, delimitado por un carácter "+".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>