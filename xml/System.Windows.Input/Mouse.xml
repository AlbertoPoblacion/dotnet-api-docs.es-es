<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02cc19b246d69dc71799aa4b479be35a005a5e8b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37561709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="43943-101">Representa el dispositivo de mouse en un subproceso concreto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43943-101">Represents the mouse device to a specific thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-102">La <xref:System.Windows.Input.Mouse> clase proporciona mouse relacionados con eventos, métodos y propiedades que proporcionan información sobre el estado del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="43943-103">Cada evento que <xref:System.Windows.Input.Mouse> define como un evento adjunto también se vuelve a exponer desde las clases de elementos base <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement> como un nuevo evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="43943-104">Por lo general, resulta más conveniente controlar los eventos del mouse para una aplicación en <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement>, en lugar de usar el <xref:System.Windows.Input.Mouse> eventos.</span><span class="sxs-lookup"><span data-stu-id="43943-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="43943-105">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43943-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="43943-106">Los miembros estáticos de la <xref:System.Windows.Input.Mouse> delegado a la réplica principal de la clase <xref:System.Windows.Input.MouseDevice> del Administrador de entrada del subproceso que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="43943-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-107">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-108">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-108">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-109">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-110">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-111">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-111">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-112">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-113">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-114">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-114">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-115">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-116">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-117">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-117">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-118">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-119">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-120">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-120">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-121">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-122">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-123">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-123">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-124">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-125">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-126">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-126">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-127">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-128">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-129">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-129">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-130">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-131">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-132">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-132">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-133">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-134">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-135">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-135">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-136">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-137">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-138">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-138">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-139">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-140">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-141">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-141">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-142">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-143">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-144">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-144">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-145">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-146">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-147">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-147">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-148">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-149">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-150">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-150">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-151">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43943-152">Captura la entrada del mouse en el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-152">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-153">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor se encuentra dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="43943-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="43943-154">Si un <xref:System.Windows.Input.CaptureMode> no se especifica, el valor predeterminado <xref:System.Windows.Input.CaptureMode> es <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="43943-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="43943-155">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.Mouse.Capture%2A> pasando `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="43943-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="43943-156">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> provoca el evento y el elemento bajo el mouse, no será la entrada <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="43943-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="43943-157">Esto permite que el elemento capturado una oportunidad de liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="43943-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-158">Elemento que va a capturar el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-158">The element to capture the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-159">Captura la entrada del mouse en el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-159">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43943-160">Es <see langword="true" /> si el elemento es capaz de capturar el mouse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-160">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-161">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor se encuentra dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="43943-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="43943-162">Si un <xref:System.Windows.Input.CaptureMode> no se especifica, el valor predeterminado <xref:System.Windows.Input.CaptureMode> es <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="43943-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="43943-163">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.Mouse.Capture%2A> pasando `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="43943-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="43943-164">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> provoca el evento y el elemento bajo el mouse, no será la entrada <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="43943-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="43943-165">Esto permite que el elemento capturado una oportunidad de liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="43943-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43943-166">El ejemplo siguiente muestra cómo capturar el mouse a un elemento específico mediante el <xref:System.Windows.Input.Mouse.Capture%2A> método.</span><span class="sxs-lookup"><span data-stu-id="43943-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-167">Elemento que va a capturar el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-167">The element to capture the mouse.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="43943-168">La directiva de captura que se va a utilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-168">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-169">Captura la entrada del mouse en el elemento especificado utilizando el objeto <see cref="T:System.Windows.Input.CaptureMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43943-170">Es <see langword="true" /> si el elemento es capaz de capturar el mouse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-170">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-171">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor se encuentra dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="43943-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="43943-172">Para liberar la captura del mouse, llame a <xref:System.Windows.Input.Mouse.Capture%2A> pasando `null` como el elemento que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="43943-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="43943-173">Si se captura el mouse cuando un <xref:System.Windows.Input.Mouse.MouseDown> o <xref:System.Windows.Input.Mouse.MouseUp> provoca el evento y el elemento bajo el mouse, no será la entrada <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> y <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> se generan en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="43943-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="43943-174">Esto permite que el elemento capturado una oportunidad de liberar la captura antes de la <xref:System.Windows.Input.Mouse.MouseDown> y <xref:System.Windows.Input.Mouse.MouseUp> se enrutan los eventos.</span><span class="sxs-lookup"><span data-stu-id="43943-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43943-175">El ejemplo siguiente muestra cómo capturar el mouse a un elemento específico mediante el <xref:System.Windows.Input.Mouse.Capture%2A> método.</span><span class="sxs-lookup"><span data-stu-id="43943-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-176">Obtiene el elemento que ha capturado el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-176">Gets the element that has captured the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-177">Elemento capturado por el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-177">The element captured by the mouse.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-178">Cuando un elemento captura el mouse, recibe la entrada del mouse si el cursor se encuentra dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="43943-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="43943-179">Normalmente se captura de esta manera solo durante las operaciones de arrastrar y colocar el mouse y retiene la captura hasta que se produce la acción de colocar de la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43943-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43943-180">El ejemplo siguiente muestra cómo obtener el elemento que tiene la captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-181">Obtiene el elemento sobre el que se encuentra el puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-181">Gets the element the mouse pointer is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-182">El elemento sobre el que está situado el puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-182">The element the mouse pointer is over.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-183">Los controles se pueden componer de varios elementos.</span><span class="sxs-lookup"><span data-stu-id="43943-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="43943-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> indica el elemento específico en el control compuesto, que el puntero del mouse está encima y no el propio control.</span><span class="sxs-lookup"><span data-stu-id="43943-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="43943-185">Por ejemplo, dependiendo de qué parte de un <xref:System.Windows.Controls.Button> el puntero está encima, el <xref:System.Windows.Input.Mouse.DirectlyOver%2A> propiedad podría presentar la <xref:System.Windows.Controls.TextBox> del <xref:System.Windows.Controls.ContentControl.Content%2A> propiedad o el <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="43943-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="43943-186">Use la <xref:System.Windows.IInputElement.IsMouseOver%2A> propiedad <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement> para determinar si el mouse está encima de un elemento, que incluye sus elementos secundarios visuales o los elementos de la composición del control.</span><span class="sxs-lookup"><span data-stu-id="43943-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="43943-187">Si un elemento tiene la captura del mouse, el puntero del mouse se considera directamente sobre el elemento, independientemente de dónde está el puntero del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="43943-188">Elementos con los que está relacionado <c>points</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-188">The elements <c>points</c> are in relation to.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="43943-189">Matriz de objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-189">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-190">Recupera hasta 64 coordenadas anteriores del puntero del mouse desde el último evento de movimiento del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43943-191">Número de puntos devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-191">The number of points returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="43943-192">Espacio de coordenadas donde calcular la posición del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-192">The coordinate space in which to calculate the position of the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-193">Obtiene la posición del mouse respecto a un elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-193">Gets the position of the mouse relative to a specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43943-194">La posición del mouse respecto al parámetro <paramref name="relativeTo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-195">La posición del puntero del mouse se calcula en relación con el elemento especificado con la esquina superior izquierda del elemento es el punto de origen, 0,0.</span><span class="sxs-lookup"><span data-stu-id="43943-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="43943-196">Durante las operaciones de arrastrar y colocar, la posición del mouse no se puede determinar de manera confiable a través de <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="43943-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="43943-197">Esto es porque se mantiene el control del mouse (posiblemente también la captura) por el elemento de origen de la operación de arrastrar hasta que se complete la operación de colocar, con la mayor parte del comportamiento controlado por subyacente [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] llamadas.</span><span class="sxs-lookup"><span data-stu-id="43943-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="43943-198">Pruebe en su lugar los siguientes enfoques:</span><span class="sxs-lookup"><span data-stu-id="43943-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="43943-199">Llame a la <xref:System.Windows.DragEventArgs.GetPosition%2A> método de la <xref:System.Windows.DragEventArgs> que se pasa a los eventos de arrastre (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="43943-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="43943-200">Llame a [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), mediante P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="43943-200">Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43943-201">El ejemplo siguiente muestra cómo usar <xref:System.Windows.Input.Mouse.GetPosition%2A> para determinar la posición del puntero del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="43943-202">La posición del puntero del mouse se almacena en un <xref:System.Windows.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="43943-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="43943-203">El <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> valores de la <xref:System.Windows.Point> objeto se muestran en un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="43943-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-204">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-204">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-205">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-205">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-206">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-206">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-207">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-207">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-208">Obtiene el estado del botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-208">Gets the state of the left button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-209">Estado del botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-209">The state of the left mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43943-210">El ejemplo siguiente muestra cómo determinar si se presiona el botón primario del mouse comprobando si el estado de la <xref:System.Windows.Input.Mouse.LeftButton%2A> es igual a la <xref:System.Windows.Input.MouseButtonState> valor de enumeración <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="43943-210">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="43943-211">Si se presiona el botón, se llama a un método que las actualizaciones muestran los elementos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="43943-211">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-212">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-212">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-213">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-213">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-214">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-214">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-215">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-215">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-216">Obtiene el estado del botón central del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-216">Gets the state of the middle button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-217">Estado del botón central del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-217">The state of the middle mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43943-218">El ejemplo siguiente muestra cómo determinar si se presiona el botón central del mouse comprobando si el estado de la <xref:System.Windows.Input.Mouse.MiddleButton%2A> es igual a la <xref:System.Windows.Input.MouseButtonState> valor de enumeración <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="43943-218">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="43943-219">Si se presiona el botón, se llama a un método que las actualizaciones muestran los elementos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="43943-219">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-220">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-220">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-221">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-221">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-222">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-222">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-223">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-223">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-224">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-224">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-225">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-226">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-227">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-228">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-228">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-229">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-229">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-230">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-230">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-231">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-231">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-232">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-232">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-233">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-233">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-234">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-234">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-235">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-235">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-236">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-236">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-237">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-237">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-238">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-239">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-239">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-240">Representa el número de unidades que debe girar la rueda del mouse para desplazarse una línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-240">Represents the number of units the mouse wheel is rotated to scroll one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-241">En el actual [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], el valor de este campo es 120.</span><span class="sxs-lookup"><span data-stu-id="43943-241">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="43943-242">La intención de la exposición del campo es permitir que los proveedores compilar ruedas de mouse de mayor resolución en el futuro, que es posible que incluyan una rueda que gire libremente sin muescas de.</span><span class="sxs-lookup"><span data-stu-id="43943-242">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="43943-243">La expectativa es que un dispositivo de este tipo tendría que enviar más mensajes por giro, pero con un valor menor en cada mensaje.</span><span class="sxs-lookup"><span data-stu-id="43943-243">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="43943-244">Para admitir esta posibilidad, debe agregar los valores de delta entrantes hasta que el <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> transcurrido (por lo que para un giro delta obtendrá la misma respuesta), o desplazar líneas parciales en respuesta a los mensajes con mayor frecuencia.</span><span class="sxs-lookup"><span data-stu-id="43943-244">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="43943-245">También puede elegir su propia granularidad de desplazamiento y deltas de su propia elección se acumulan hasta que ese delta se alcanza, o quizás hacen referencia a parámetros del sistema controlable por el usuario para la sensibilidad del mouse y extrapolar a umbrales delta de la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-245">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-246">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-246">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-247">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-247">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-248">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-248">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-249">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-249">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-250">Obtiene o establece el cursor en toda la aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-250">Gets or sets the cursor for the entire application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-251">Cursor de invalidación o <see langword="null" /> si no se establece <see cref="P:System.Windows.Input.Mouse.OverrideCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-251">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-252">El <xref:System.Windows.Input.Cursor> que <xref:System.Windows.Input.Mouse.OverrideCursor%2A> está establecido en se aplicarán a toda la aplicación.</span><span class="sxs-lookup"><span data-stu-id="43943-252">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="43943-253">Para borrar la invalidación <xref:System.Windows.Input.Cursor>, establezca <xref:System.Windows.Input.Mouse.OverrideCursor%2A> a `null`.</span><span class="sxs-lookup"><span data-stu-id="43943-253">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="43943-254">Establecer <xref:System.Windows.Input.Mouse.OverrideCursor%2A> a <xref:System.Windows.Input.Cursors.None%2A> forzará el cursor del mouse no se muestran, pero todavía se procesan los eventos del mouse.</span><span class="sxs-lookup"><span data-stu-id="43943-254">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43943-255">El ejemplo siguiente muestra un controlador de eventos para un <xref:System.Windows.Controls.RadioButton> que se usa para alternar el ámbito de un cambio de cursor entre un elemento único y toda la aplicación.</span><span class="sxs-lookup"><span data-stu-id="43943-255">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="43943-256">Si el control que provocó el evento es el `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, se establece una marca que indica el ámbito del cambio del cursor y <xref:System.Windows.Input.Mouse.OverrideCursor%2A> está establecido en `null`.</span><span class="sxs-lookup"><span data-stu-id="43943-256">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="43943-257">Si el control que provocó el evento es el `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, se establece una marca que indica el ámbito del cambio del cursor y <xref:System.Windows.Input.Mouse.OverrideCursor%2A> está establecido en el <xref:System.Windows.FrameworkElement.Cursor%2A> propiedad de la <xref:System.Windows.Controls.Border> control denominado `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="43943-257">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-258">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-258">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-259">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-259">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-260">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-260">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-261">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-261">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-262">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-262">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-263">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-263">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-264">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-264">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-265">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-265">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-266">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-266">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-267">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-267">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-268">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-268">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-269">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-269">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-270">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-270">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-271">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-271">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-272">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-272">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-273">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-273">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-274">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-274">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-275">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-275">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-276">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-276">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-277">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-277">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-278">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-278">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-279">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-279">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-280">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-280">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-281">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-281">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-282">Obtiene el dispositivo de mouse primario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-282">Gets the primary mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-283">Dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-283">The device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-284">Esta propiedad admite la infraestructura de Windows Presentation Foundation y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="43943-284">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-285">Identifica el evento adjunto <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-285">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-286">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43943-286">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="43943-287">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43943-287">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="43943-288">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="43943-288">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-289">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-289">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-290">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-290">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-291">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-291">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-292">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-292">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-293">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-293">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-294">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-294">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-295">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-295">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-296">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-296">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-297">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-297">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-298">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-298">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-299">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-299">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-300">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-300">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-301">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-301">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-302">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-302">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-303">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-303">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-304">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-304">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-305">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-305">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-306">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-306">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-307">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-307">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-308">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-308">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-309">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-309">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-310">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-310">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-311">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-311">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-312">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-312">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-313">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-313">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-314">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-314">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-315">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-315">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-316">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-316">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-317">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-317">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-318">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-318">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-319">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-319">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-320">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-320">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-321">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-321">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-322">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-322">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-323">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-323">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-324">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-324">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-325">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-325">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-326">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-326">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-327">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-327">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-328">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-328">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-329">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-329">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-330">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-330">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="43943-331">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-331">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43943-332">Controlador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-332">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-333">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-333">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-334">Obtiene el estado del botón secundario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-334">Gets the state of the right button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-335">Estado del botón secundario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-335">The state of the right mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43943-336">El ejemplo siguiente muestra cómo determinar si se presiona el botón secundario del mouse comprobando si el estado de la <xref:System.Windows.Input.Mouse.RightButton%2A> es igual a la <xref:System.Windows.Input.MouseButtonState> valor de enumeración <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="43943-336">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="43943-337">Si se presiona el botón, se llama a un método que las actualizaciones muestran los elementos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="43943-337">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">
          <span data-ttu-id="43943-338">Cursor en el que se va a establecer el puntero del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-338">The cursor to set the mouse pointer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43943-339">Establece el puntero del mouse en la instancia de <see cref="T:System.Windows.Input.Cursor" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-339">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43943-340">Es <see langword="true" /> si el cursor estaba establecido; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-340">
              <see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43943-341">El cursor que se va a establecer no es aplicable a cualquier elemento en particular, pero en su lugar se aplica a toda la aplicación.</span><span class="sxs-lookup"><span data-stu-id="43943-341">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="43943-342">Por lo tanto, si después de establecer el cursor que se mueve el puntero del mouse sobre un objeto que establece el cursor, el cursor volverá a cambiar.</span><span class="sxs-lookup"><span data-stu-id="43943-342">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="43943-343">Para forzar el puntero del mouse a un determinado <xref:System.Windows.Input.Cursor> y forzar este <xref:System.Windows.Input.Cursor> en todos los elementos, establezca la <xref:System.Windows.Input.Mouse.OverrideCursor%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="43943-343">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="43943-344">Para establecer el cursor en un elemento específico, use el <xref:System.Windows.FrameworkElement.Cursor%2A> propiedad cualquiera <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43943-344">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="43943-345">Para obtener más información sobre los elementos base, vea la [información general de los elementos Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43943-345">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43943-346">Exige que el mouse vuelva a sincronizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-346">Forces the mouse to resynchronize.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43943-347">Exige que el cursor del mouse se actualice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-347">Forces the mouse cursor to be updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-348">Obtiene el estado del primer botón extendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-348">Gets the state of the first extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-349">Estado del primer botón de mouse extendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-349">The state of the first extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43943-350">El ejemplo siguiente muestra cómo determinar si se presiona el primer botón de mouse extendido comprobando si el estado de <xref:System.Windows.Input.Mouse.XButton1%2A> es igual a la <xref:System.Windows.Input.MouseButtonState> valor de enumeración <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="43943-350">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="43943-351">Si se presiona el botón, se llama a un método que las actualizaciones muestran los elementos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="43943-351">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43943-352">Obtiene el estado del segundo botón extendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-352">Gets the state of the second extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43943-353">Estado del segundo botón de mouse extendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43943-353">The state of the second extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43943-354">El ejemplo siguiente muestra cómo determinar si se presionó el segundo botón de mouse extendido comprobando si el estado de <xref:System.Windows.Input.Mouse.XButton2%2A> es igual a la <xref:System.Windows.Input.MouseButtonState> valor de enumeración <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="43943-354">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="43943-355">Si se presiona el botón, se llama a un método que las actualizaciones muestran los elementos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="43943-355">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>