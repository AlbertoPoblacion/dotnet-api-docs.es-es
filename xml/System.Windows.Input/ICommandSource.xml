<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37505176" /></Metadata><TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define un objeto que sabe cómo invocar un comando.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El origen del comando define cómo se invoca un comando por ese objeto concreto.  Por ejemplo, si un <xref:System.Windows.Controls.Button> está asociado con un comando, el comando se invoca cuando el <xref:System.Windows.Controls.Button> se hace clic en.  
  
 Un origen de comando normalmente se deshabilitará si no se puede ejecutar el comando que está asociado en el destino del comando actual.  Por ejemplo, un <xref:System.Windows.Controls.MenuItem> asociado con el <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando se deshabilitará cuando el <xref:System.Windows.Input.ApplicationCommands.Paste%2A> no se puede ejecutar el comando en el destino del comando actual.  
  
 Normalmente, un origen de comando escuchará el <xref:System.Windows.Input.ICommand.CanExecuteChanged> eventos en el comando.  Esto informa al origen del comando cuando cambian las condiciones en el destino del comando, como la pérdida de foco de teclado.  El origen del comando, a continuación, puede consultar el comando mediante el <xref:System.Windows.Input.ICommand.CanExecute%2A> método.  
  
 Algunas de las clases en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que implementan <xref:System.Windows.Input.ICommandSource> son: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, y <xref:System.Windows.Documents.Hyperlink>.  
  
 En el sistema, de comandos de Windows Presentation Foundation la <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedad en un <xref:System.Windows.Input.ICommandSource> solo es aplicable cuando la <xref:System.Windows.Input.ICommand> es un <xref:System.Windows.Input.RoutedCommand>.  Si el <xref:System.Windows.Input.InputBinding.CommandTarget%2A> se establece en un <xref:System.Windows.Input.ICommandSource> y el comando correspondiente no es un <xref:System.Windows.Input.RoutedCommand>, se omite el destino del comando.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el comando que se ejecutará cuando se invoque el origen del comando.</summary>
        <value>Comando que se ejecutará cuando se invoque el origen del comando.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa un valor de datos definido por el usuario que se puede pasar al comando cuando se ejecuta.</summary>
        <value>Datos específicos del comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, el <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> se utiliza para pasar información específica al comando cuando se ejecuta.  El tipo de datos se define mediante el comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El objeto en el que se ejecuta el comando.</summary>
        <value>El objeto en el que se ejecuta el comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el sistema, de comandos de Windows Presentation Foundation la <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedad en un <xref:System.Windows.Input.ICommandSource> solo es aplicable cuando la <xref:System.Windows.Input.ICommand> es un <xref:System.Windows.Input.RoutedCommand>.  Si el <xref:System.Windows.Input.InputBinding.CommandTarget%2A> se establece en un <xref:System.Windows.Input.ICommandSource> y el comando correspondiente no es un <xref:System.Windows.Input.RoutedCommand>, se omite el destino del comando.  
  
 Cuando se usa con un <xref:System.Windows.Input.RoutedCommand>, el destino del comando es el objeto en el que el <xref:System.Windows.Input.CommandManager.Executed> y <xref:System.Windows.Input.CommandManager.CanExecute> se generan eventos. Si el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> no está establecida la propiedad, el elemento con foco de teclado se usará como el destino.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>