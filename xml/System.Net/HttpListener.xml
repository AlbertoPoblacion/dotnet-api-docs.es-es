<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="18ea1-101">Proporciona un agente de escucha del protocolo HTTP sencillo y controlado mediante programación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-101">Provides a simple, programmatically controlled HTTP protocol listener.</span></span> <span data-ttu-id="18ea1-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="18ea1-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-103">Mediante el <xref:System.Net.HttpListener> (clase), puede crear una escucha de protocolo HTTP sencilla que responde a las solicitudes HTTP.</span><span class="sxs-lookup"><span data-stu-id="18ea1-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="18ea1-104">El agente de escucha está activo durante la vigencia de la <xref:System.Net.HttpListener> objeto y se ejecuta dentro de la aplicación con sus permisos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="18ea1-105">Usar <xref:System.Net.HttpListener>, crear una nueva instancia de la clase utilizando el <xref:System.Net.HttpListener> constructor y use la <xref:System.Net.HttpListener.Prefixes%2A> propiedad para obtener acceso a la colección que contiene las cadenas que especifican que los prefijos de identificador uniforme de recursos (URI) el <xref:System.Net.HttpListener> debe procesar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="18ea1-106">Una cadena del prefijo URI se compone de un esquema (http o https), un host, un puerto opcional y una ruta de acceso opcional.</span><span class="sxs-lookup"><span data-stu-id="18ea1-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="18ea1-107">Un ejemplo de una cadena de prefijo completa es * http://www.contoso.com:8080/customerData/ *.</span><span class="sxs-lookup"><span data-stu-id="18ea1-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="18ea1-108">Los prefijos deben finalizar en una barra diagonal ("/").</span><span class="sxs-lookup"><span data-stu-id="18ea1-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="18ea1-109">La <xref:System.Net.HttpListener> objeto con el prefijo que mejor se ajuste a un identificador URI solicitado responde a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="18ea1-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="18ea1-110">Varios <xref:System.Net.HttpListener> objetos no pueden agregar el mismo prefijo; <xref:System.ComponentModel.Win32Exception> excepción se produce si un <xref:System.Net.HttpListener> agrega un prefijo que ya está en uso.</span><span class="sxs-lookup"><span data-stu-id="18ea1-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="18ea1-111">Cuando se especifica un puerto, el elemento de host se puede reemplazar con "\*" para indicar que el <xref:System.Net.HttpListener> acepta las solicitudes enviadas al puerto si el identificador URI solicitado no coincide con ningún otro prefijo.</span><span class="sxs-lookup"><span data-stu-id="18ea1-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="18ea1-112">Por ejemplo recibir todas las solicitudes enviadas al puerto 8080 cuando no se controla el URI solicitado por ninguna <xref:System.Net.HttpListener>, el prefijo es *http://\*: 8080 /*.</span><span class="sxs-lookup"><span data-stu-id="18ea1-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="18ea1-113">De forma similar, para especificar que el <xref:System.Net.HttpListener> acepta todas las solicitudes enviadas a un puerto, reemplace el elemento de host con el carácter "+".</span><span class="sxs-lookup"><span data-stu-id="18ea1-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="18ea1-114">For example, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="18ea1-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="18ea1-115">El "\*" y "+" caracteres pueden estar presentes en prefijos que incluyen rutas de acceso.</span><span class="sxs-lookup"><span data-stu-id="18ea1-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="18ea1-116">A partir de .NET Core 2.0 o .NET Framework 4.6 en Windows 10, comodín subdominios se admiten en prefijos URI que se administran mediante un <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="18ea1-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="18ea1-117">Para especificar un subdominio de carácter comodín, utilice la "\*" caracteres como parte del nombre de host en un prefijo de URI.</span><span class="sxs-lookup"><span data-stu-id="18ea1-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="18ea1-118">Por ejemplo, *http://\*.foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="18ea1-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="18ea1-119">Pasar como argumento para el <xref:System.Net.HttpListenerPrefixCollection.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="18ea1-120">Esto funciona a partir de .NET Core 2.0 o .NET Framework 4.6 en Windows 10; en versiones anteriores, esto genera un <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="18ea1-121">Enlaces de carácter comodín de nivel superior (*http://\*: 8080 /* y \* http://+:8080 \*) debe **no** utilizarse.</span><span class="sxs-lookup"><span data-stu-id="18ea1-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="18ea1-122">Los enlaces de carácter comodín de nivel superior pueden exponer su aplicación a vulnerabilidades de seguridad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="18ea1-123">Esto se aplica tanto a los caracteres comodín fuertes como a los débiles.</span><span class="sxs-lookup"><span data-stu-id="18ea1-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="18ea1-124">Use nombres de host explícitos en lugar de caracteres comodín.</span><span class="sxs-lookup"><span data-stu-id="18ea1-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="18ea1-125">Los enlaces de carácter comodín de subdominio (por ejemplo, `*.mysub.com`) no suponen este riesgo de seguridad si se controla todo el dominio primario (a diferencia de `*.com`, que sí es vulnerable).</span><span class="sxs-lookup"><span data-stu-id="18ea1-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="18ea1-126">Vea la [sección 5.4 de RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4) para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="18ea1-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="18ea1-127">Para empezar a escuchar las solicitudes de clientes, agregue los prefijos URI a la colección y llamar a la <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="18ea1-128"><xref:System.Net.HttpListener> ofrece modelos sincrónicos y asincrónicos para procesar las solicitudes de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="18ea1-129">Las solicitudes y sus respuestas asociadas son accesibles mediante la <xref:System.Net.HttpListenerContext> objeto devuelto por la <xref:System.Net.HttpListener.GetContext%2A> método o sus homólogos asincrónicos, el <xref:System.Net.HttpListener.BeginGetContext%2A> y <xref:System.Net.HttpListener.EndGetContext%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="18ea1-130">El modelo sincrónico es adecuado si la aplicación debe bloquearse mientras espera una solicitud de cliente y si desea procesar únicamente una solicitud a la vez.</span><span class="sxs-lookup"><span data-stu-id="18ea1-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="18ea1-131">Con el modelo sincrónico, llame a la <xref:System.Net.HttpListener.GetContext%2A> método, que espera a que un cliente envíe una solicitud.</span><span class="sxs-lookup"><span data-stu-id="18ea1-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="18ea1-132">El método devuelve un <xref:System.Net.HttpListenerContext> objeto para el procesamiento cuando uno se produce.</span><span class="sxs-lookup"><span data-stu-id="18ea1-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="18ea1-133">En el modelo asincrónico más complejo, la aplicación no se bloquea mientras espera para las solicitudes y cada solicitud se procesa en su propio subproceso de ejecución.</span><span class="sxs-lookup"><span data-stu-id="18ea1-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="18ea1-134">Use la <xref:System.Net.HttpListener.BeginGetContext%2A> método para especificar un método definido por la aplicación al que llamar para cada solicitud entrante.</span><span class="sxs-lookup"><span data-stu-id="18ea1-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="18ea1-135">Dentro de ese método, llame a la <xref:System.Net.HttpListener.EndGetContext%2A> para obtener la solicitud, procesarlo y responder.</span><span class="sxs-lookup"><span data-stu-id="18ea1-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="18ea1-136">En ambos casos, las solicitudes entrantes son accesibles mediante la <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propiedad y se representan mediante <xref:System.Net.HttpListenerRequest> objetos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="18ea1-137">De forma similar, las respuestas son accesibles mediante la <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> propiedad y se representan mediante <xref:System.Net.HttpListenerResponse> objetos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="18ea1-138">Estos objetos comparten algunas funcionalidades con el <xref:System.Net.HttpWebRequest> y <xref:System.Net.HttpWebResponse> objetos, pero los objetos de este últimos no se puede usar junto con <xref:System.Net.HttpListener> porque implementan cliente no, servidor de comportamientos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="18ea1-139">Un <xref:System.Net.HttpListener> puede requerir la autenticación de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="18ea1-140">Puede especificar un determinado esquema que se usará para la autenticación, o puede especificar a un delegado que determina el esquema que se usará.</span><span class="sxs-lookup"><span data-stu-id="18ea1-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="18ea1-141">Se necesita algún tipo de autenticación para obtener información sobre la identidad del cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="18ea1-142">Para obtener más información, consulte el <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, y <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="18ea1-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="18ea1-143">Si crea un <xref:System.Net.HttpListener> mediante https, debe seleccionar un certificado de servidor para ese agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="18ea1-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="18ea1-144">En caso contrario, un <xref:System.Net.HttpWebRequest> consultas de este <xref:System.Net.HttpListener> se producirá un error con el cierre inesperado de la conexión.</span><span class="sxs-lookup"><span data-stu-id="18ea1-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="18ea1-145">Puede configurar certificados de servidor y otras opciones de agente de escucha mediante Shell de red (netsh.exe).</span><span class="sxs-lookup"><span data-stu-id="18ea1-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="18ea1-146">Vea [Shell de red (Netsh)](/windows-server/networking/technologies/netsh/netsh) para obtener más detalles.</span><span class="sxs-lookup"><span data-stu-id="18ea1-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="18ea1-147">El archivo ejecutable suministrará con Windows Server 2008 y Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="18ea1-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="18ea1-148">Si especifica varios esquemas de autenticación para la <xref:System.Net.HttpListener>, el agente de escucha supondrán un reto para los clientes en el siguiente orden: `Negotiate`, `NTLM`, `Digest`y, a continuación, `Basic`.</span><span class="sxs-lookup"><span data-stu-id="18ea1-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="18ea1-149">En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-150">Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-151">Antes de usar la instancia devuelta por este constructor, debe invocar su <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-152">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener> constructor para crear un nuevo <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="18ea1-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="18ea1-153">Para obtener un ejemplo completo, vea el <xref:System.Net.HttpListener> tema de la clase.</span><span class="sxs-lookup"><span data-stu-id="18ea1-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="18ea1-154">Esta clase no se puede utilizar en el sistema operativo actual.</span><span class="sxs-lookup"><span data-stu-id="18ea1-154">This class cannot be used on the current operating system.</span></span> <span data-ttu-id="18ea1-155">Se requiere Windows Server 2003 o Windows XP SP2 para poder utilizar instancias de esta clase.</span><span class="sxs-lookup"><span data-stu-id="18ea1-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-156">Nota: Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-156">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-157">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-157">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-158">Cierra inmediatamente el objeto <see cref="T:System.Net.HttpListener" />, descartando todas las solicitudes actualmente puestas en la cola.</span><span class="sxs-lookup"><span data-stu-id="18ea1-158">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-159">Este método elimina todos los recursos mantenidos por este agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="18ea1-159">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="18ea1-160">Cualquier solicitud pendiente es no se puede completar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-160">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="18ea1-161">Después de llamar a este método, recibirá un <xref:System.ObjectDisposedException> si intenta utilizar este <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-161">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-162">En el ejemplo de código siguiente se muestra cómo llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-162">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-163">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-163">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-164">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-164">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-165">Obtiene o establece el esquema utilizado para autenticar los clientes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-165">Gets or sets the scheme used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="18ea1-166">Una combinación bit a bit de valores de la enumeración <see cref="T:System.Net.AuthenticationSchemes" /> que indica cómo serán autenticados los clientes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-166">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span></span> <span data-ttu-id="18ea1-167">El valor predeterminado es <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-167">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-168">El <xref:System.Net.HttpListener> utiliza el esquema especificado para autenticar todas las solicitudes entrantes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-168">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="18ea1-169">El <xref:System.Net.HttpListener.GetContext%2A> y <xref:System.Net.HttpListener.EndGetContext%2A> métodos devuelven una solicitud de cliente entrante solo si el <xref:System.Net.HttpListener> se autentica correctamente la solicitud.</span><span class="sxs-lookup"><span data-stu-id="18ea1-169">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="18ea1-170">Puede consultar la identidad de un cliente autenticado correctamente mediante el uso de la <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-170">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="18ea1-171">Si desea que un <xref:System.Net.HttpListener> objeto para utilizar mecanismos de autenticación diferentes basándose en características de las solicitudes que recibe (por ejemplo, la solicitud <xref:System.Net.HttpListenerRequest.Url%2A> o <xref:System.Net.HttpListenerRequest.UserHostName%2A> propiedad), debe implementar un método que elige el esquema de autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-171">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="18ea1-172">Para obtener instrucciones acerca de cómo hacerlo, consulte el <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> documentación de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-172">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18ea1-173">Para establecer esta propiedad para habilitar Digest, NTLM o Negotiate se requiere el <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-173">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-174">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propiedad para especificar un esquema de autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-174">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-175">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-175">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-176">Obtiene o establece el delegado al que se llama para determinar el protocolo utilizado para autenticar los clientes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-176">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span></span></summary>
        <value><span data-ttu-id="18ea1-177">Un delegado <see cref="T:System.Net.AuthenticationSchemeSelector" /> que invoca el método utilizado para seleccionar un protocolo de autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-177">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span></span> <span data-ttu-id="18ea1-178">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-178">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="18ea1-179">Si desea que el mismo protocolo de autenticación que se usará para todas las solicitudes administradas por una instancia determinada de <xref:System.Net.HttpListener>, no es necesario establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-179">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="18ea1-180">Para especificar un protocolo que se usará para todas las solicitudes de cliente, utilice la <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-180">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="18ea1-181">Si el cliente no ha especificado la información de autenticación en sus encabezados, el <xref:System.Net.HttpListener> llama al delegado especificado para cada solicitud entrante no autenticada determinar lo que, si lo hay, protocolo utiliza para autenticar el cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-181">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="18ea1-182">El <xref:System.Net.HttpListener.GetContext%2A> y <xref:System.Net.HttpListener.EndGetContext%2A> métodos devuelven una solicitud entrante solamente si la <xref:System.Net.HttpListener> autentica correctamente la solicitud.</span><span class="sxs-lookup"><span data-stu-id="18ea1-182">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="18ea1-183">Si no se puede autenticar una solicitud, el <xref:System.Net.HttpListener> automáticamente devuelve una respuesta 401.</span><span class="sxs-lookup"><span data-stu-id="18ea1-183">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="18ea1-184">Puede obtener la identidad de un cliente autenticado correctamente mediante la <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-184">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="18ea1-185">La capacidad para delegar la elección del protocolo de autenticación a un método específico de la aplicación es útil si desea que una instancia de <xref:System.Net.HttpListener> utilizar protocolos de autenticación diferentes según las características de las solicitudes que recibe (por ejemplo, la solicitud <xref:System.Net.HttpListenerRequest.Url%2A> o <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> propiedad).</span><span class="sxs-lookup"><span data-stu-id="18ea1-185">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18ea1-186">Para establecer esta propiedad para habilitar Digest, NTLM o Negotiate se requiere el <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-186">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-187">En el ejemplo de código siguiente se establece el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-187">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="18ea1-188">En el ejemplo de código siguiente se proporciona una implementación de un método invocado por un <xref:System.Net.AuthenticationSchemeSelector> delegar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-188">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-189">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-189">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="18ea1-190">Un delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invoca cuando está disponible una solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-190">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span></span></param>
        <param name="state"><span data-ttu-id="18ea1-191">Objeto definido por el usuario que contiene información sobre la operación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-191">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="18ea1-192">Este objeto se pasa al delegado <c>callback</c> cuando la operación finaliza.</span><span class="sxs-lookup"><span data-stu-id="18ea1-192">This object is passed to the <c>callback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="18ea1-193">Empieza a recuperar de forma asincrónica una solicitud de entrada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-193">Begins asynchronously retrieving an incoming request.</span></span></summary>
        <returns><span data-ttu-id="18ea1-194">Un objeto <see cref="T:System.IAsyncResult" /> que indica el estado de la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="18ea1-194">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-195">El <xref:System.Net.HttpListener.BeginGetContext%2A> método comienza una llamada asincrónica (sin bloqueo) para recibir solicitudes de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-195">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="18ea1-196">Antes de llamar a este método, debe llamar a la <xref:System.Net.HttpListener.Start%2A> método y agregue al menos un prefijo de identificador uniforme de recursos (URI) para escuchar, agregando las cadenas URI para el <xref:System.Net.HttpListenerPrefixCollection> devuelto por la <xref:System.Net.HttpListener.Prefixes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-196">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="18ea1-197">Debe completarse la operación asincrónica mediante una llamada a la <xref:System.Net.HttpListener.EndGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-197">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="18ea1-198">Normalmente, se invoca el método por el `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-198">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="18ea1-199">Este método no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-199">This method does not block while the operation completes.</span></span> <span data-ttu-id="18ea1-200">Para obtener una solicitud y el bloque entrantes hasta que se complete la operación, llame a la <xref:System.Net.HttpListener.GetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-200">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="18ea1-201">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [al llamar a métodos sincrónicos asincrónicamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="18ea1-201">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-202">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener.BeginGetContext%2A> método para especificar un método de devolución de llamada que controlará las solicitudes de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-202">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="18ea1-203">En el ejemplo de código siguiente se implementa un método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-203">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="18ea1-204">Se ha producido un error en una llamada de función de Win32.</span><span class="sxs-lookup"><span data-stu-id="18ea1-204">A Win32 function call failed.</span></span> <span data-ttu-id="18ea1-205">Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</span><span class="sxs-lookup"><span data-stu-id="18ea1-205">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="18ea1-206">Este objeto no se ha iniciado o actualmente está detenido.</span><span class="sxs-lookup"><span data-stu-id="18ea1-206">This object has not been started or is currently stopped.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-207">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-207">This object is closed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-208">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-208">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-209">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-209">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-210">Cierra <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-210">Shuts down the <see cref="T:System.Net.HttpListener" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-211">Después de llamar a este método, no podrá usar la <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="18ea1-211">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="18ea1-212">Para detener temporalmente un <xref:System.Net.HttpListener> objeto, utilice el <xref:System.Net.HttpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-212">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="18ea1-213">Este método apaga listas desplegables del <xref:System.Net.HttpListener> objeto sin tener que procesar solicitudes en cola.</span><span class="sxs-lookup"><span data-stu-id="18ea1-213">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="18ea1-214">Cualquier solicitud pendiente es no se puede completar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-214">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-215">En el ejemplo de código siguiente se muestra cómo llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-216">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-217">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-218">Obtiene una lista predeterminada de nombres de proveedores de servicios (SPN) determinada por los prefijos registrados.</span><span class="sxs-lookup"><span data-stu-id="18ea1-218">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span></span></summary>
        <value><span data-ttu-id="18ea1-219"><see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> que contiene una lista de SPN.</span><span class="sxs-lookup"><span data-stu-id="18ea1-219">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-220">El <xref:System.Net.HttpListener.DefaultServiceNames%2A> propiedad se utiliza con la autenticación integrada de Windows para proporcionar la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-220">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="18ea1-221">La lista de los SPN se inicializa desde la <xref:System.Net.HttpListener.Prefixes%2A> propiedad cuando tiene acceso y se borra cuando se agregan los prefijos de nuevo a la <xref:System.Net.HttpListener.Prefixes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-221">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="18ea1-222">El <xref:System.Net.HttpListener.DefaultServiceNames%2A> propiedad se utiliza si una aplicación no estableció la <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> propiedad en su directiva de protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-222">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="18ea1-223">El <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> que se recupera con el <xref:System.Net.HttpListener.DefaultServiceNames%2A> propiedad se crea a partir del <xref:System.Net.HttpListener.Prefixes%2A> propiedad de acuerdo con las reglas siguientes:</span><span class="sxs-lookup"><span data-stu-id="18ea1-223">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="18ea1-224">Si el nombre de host es "+", "*", o un literal de IPv4 o IPv6 (equivalente a "\*" pero restringidos a una interfaz local específica), se agrega el siguiente SPN:</span><span class="sxs-lookup"><span data-stu-id="18ea1-224">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="18ea1-225">`"HTTP/"` junto con el nombre de dominio completo del equipo.</span><span class="sxs-lookup"><span data-stu-id="18ea1-225">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="18ea1-226">Si el nombre del host no contiene puntos (ningún dominios o subdominios), se realiza un intento para resolver el nombre de dominio completo mediante DNS (el mismo comportamiento utilizado por <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="18ea1-226">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="18ea1-227">Si se puede resolver el nombre de dominio completo, se agregan los siguientes SPN:</span><span class="sxs-lookup"><span data-stu-id="18ea1-227">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="18ea1-228">`"HTTP/"` Además, el nombre de host (el nombre corto).</span><span class="sxs-lookup"><span data-stu-id="18ea1-228">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="18ea1-229">`"HTTP/"` Además, el nombre de dominio completo del nombre de host.</span><span class="sxs-lookup"><span data-stu-id="18ea1-229">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="18ea1-230">Si el nombre del host no contiene puntos (ningún dominios o subdominios) y no se puede resolver un nombre de dominio completo, se agrega el siguiente SPN:</span><span class="sxs-lookup"><span data-stu-id="18ea1-230">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="18ea1-231">`"HTTP/"` Además, el nombre de host.</span><span class="sxs-lookup"><span data-stu-id="18ea1-231">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="18ea1-232">Si el nombre de host contiene puntos (dominios o subdominios), se agrega el siguiente SPN:</span><span class="sxs-lookup"><span data-stu-id="18ea1-232">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="18ea1-233">`"HTTP/"` Además, el nombre de host.</span><span class="sxs-lookup"><span data-stu-id="18ea1-233">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="18ea1-234">El <xref:System.Net.HttpListener.DefaultServiceNames%2A> propiedad puede utilizarse por una aplicación para revisar la lista de los SPN predeterminados que se usará para la autenticación si se especifica ninguna lista personalizada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-234">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="18ea1-235">Si se necesita otros SPN, una aplicación puede agregarlos utilizando uno de los <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="18ea1-235">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="18ea1-236">No es seguro para la ejecución cuando se usa la protección extendida para tomar decisiones de directiva basadas en la dirección URL solicitada, ya que esto puede ser suplantada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-236">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="18ea1-237">En su lugar, las aplicaciones deben depender del <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> o <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> propiedades a tomar estas decisiones de directiva.</span><span class="sxs-lookup"><span data-stu-id="18ea1-237">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="18ea1-238">Un objeto <see cref="T:System.IAsyncResult" /> que se obtuvo al iniciar la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="18ea1-238">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span></span></param>
        <summary><span data-ttu-id="18ea1-239">Finaliza una operación asincrónica para recuperar una solicitud de cliente de entrada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-239">Completes an asynchronous operation to retrieve an incoming client request.</span></span></summary>
        <returns><span data-ttu-id="18ea1-240">Un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa la solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-240">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-241">El <xref:System.Net.HttpListener.EndGetContext%2A> método se llama, normalmente dentro de un método de devolución de llamada definida por la aplicación que invoca un delegado, para obtener el <xref:System.Net.HttpListenerContext> objeto que contiene una solicitud de cliente entrante y su respuesta asociada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-241">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="18ea1-242">Este método completa una operación iniciada previamente mediante una llamada a la <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-242">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="18ea1-243">Si no se ha completado la operación, este método se bloquea hasta que lo hace.</span><span class="sxs-lookup"><span data-stu-id="18ea1-243">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="18ea1-244">Porque una llamada a la <xref:System.Net.HttpListener.EndGetContext%2A> método requiere el <xref:System.Net.HttpListener> objeto, este objeto se pasa normalmente a un método de devolución de llamada por mediante el objeto de estado pasado a la <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-244">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="18ea1-245">Puede obtener este objeto de estado mediante la <xref:System.IAsyncResult.AsyncState%2A> propiedad de la `asyncResult` objeto.</span><span class="sxs-lookup"><span data-stu-id="18ea1-245">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="18ea1-246">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [al llamar a métodos sincrónicos asincrónicamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="18ea1-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-247">En el ejemplo de código siguiente se muestra la implementación de un método de devolución de llamada que llama el <xref:System.Net.HttpListener.EndGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-247">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18ea1-248">No se ha obtenido el valor <paramref name="asyncResult" /> llamando al método <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-248"><paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18ea1-249"><paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-249"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="18ea1-250">Ya se llamó al método <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> para el objeto <paramref name="asyncResult" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-250">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-251">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-251">This object is closed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-252">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-252">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-253">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-253">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-254">Obtiene o establece el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que se va a emplear para la protección extendida para una sesión.</span><span class="sxs-lookup"><span data-stu-id="18ea1-254">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span></span></summary>
        <value><span data-ttu-id="18ea1-255">Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica la directiva que se va a usar para la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-255">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-256">El <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propiedad se utiliza con la autenticación integrada de Windows para proporcionar la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-256">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="18ea1-257">El <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propiedad permite la configuración de la directiva de protección extendida para todo el <xref:System.Net.HttpListener> sesión.</span><span class="sxs-lookup"><span data-stu-id="18ea1-257">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="18ea1-258">El <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propiedad permite la configuración de la directiva de protección extendida para cada solicitud individual.</span><span class="sxs-lookup"><span data-stu-id="18ea1-258">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="18ea1-259">La propiedad <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> debe ser `null`.</span><span class="sxs-lookup"><span data-stu-id="18ea1-259">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="18ea1-260">El <xref:System.Net.HttpListener> instancia obtiene el enlace de Token canal (CBT) directamente desde su propia sesión TLS si hay alguno.</span><span class="sxs-lookup"><span data-stu-id="18ea1-260">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18ea1-261">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, pero la propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> no era <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-261">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18ea1-262">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-262">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="18ea1-263">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> después de que ya se hubiera llamado al método <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-263">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-264">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-264">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="18ea1-265">La propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> se estableció en <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> en una plataforma que no admite la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-265">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-266">Obtiene o establece el delegado llamado para determinar el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que se va a emplear para cada solicitud.</span><span class="sxs-lookup"><span data-stu-id="18ea1-266">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span></span></summary>
        <value><span data-ttu-id="18ea1-267">Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica la directiva que se va a usar para la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-267">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-268">El <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propiedad se utiliza con la autenticación integrada de Windows para proporcionar la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-268">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="18ea1-269">El <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propiedad permite la configuración de la directiva de protección extendida para todo el <xref:System.Net.HttpListener> sesión.</span><span class="sxs-lookup"><span data-stu-id="18ea1-269">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="18ea1-270">El <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propiedad permite la configuración de la directiva de protección extendida por solicitud individual.</span><span class="sxs-lookup"><span data-stu-id="18ea1-270">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="18ea1-271">La propiedad <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> debe ser `null`.</span><span class="sxs-lookup"><span data-stu-id="18ea1-271">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="18ea1-272">El <xref:System.Net.HttpListener> instancia obtiene el enlace de Token canal (CBT) directamente desde su propia sesión TLS si hay alguno.</span><span class="sxs-lookup"><span data-stu-id="18ea1-272">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="18ea1-273">Para cada solicitud, el delegado puede elegir la configuración que el <xref:System.Net.HttpListener> instancia usará para proporcionar la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-273">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="18ea1-274">Si un delegado devuelve `null` para esta propiedad, esto representa un <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> que la <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> propiedad establecida en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="18ea1-274">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18ea1-275">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, pero la propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> debe ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-275">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18ea1-276">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-276">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="18ea1-277">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> después de que ya se hubiera llamado al método <see cref="M:System.Net.HttpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-277">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-278">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-278">This object is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="18ea1-279">Se hizo un intento de establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> en una plataforma que no admite la protección extendida.</span><span class="sxs-lookup"><span data-stu-id="18ea1-279">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-280">Espera a una solicitud de entrada y vuelve cuando se recibe una.</span><span class="sxs-lookup"><span data-stu-id="18ea1-280">Waits for an incoming request and returns when one is received.</span></span></summary>
        <returns><span data-ttu-id="18ea1-281">Un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa una solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-281">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-282">Antes de llamar a este método, debe llamar a la <xref:System.Net.HttpListener.Start%2A> método y agregue al menos un prefijo URI para escuchar, agregando las cadenas URI para el <xref:System.Net.HttpListenerPrefixCollection> devuelto por la <xref:System.Net.HttpListener.Prefixes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-282">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="18ea1-283">Para obtener una descripción detallada de los prefijos, vea la <xref:System.Net.HttpListener> Introducción a la clase.</span><span class="sxs-lookup"><span data-stu-id="18ea1-283">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="18ea1-284">Este método se bloquea mientras se espera una solicitud entrante.</span><span class="sxs-lookup"><span data-stu-id="18ea1-284">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="18ea1-285">Si desea que las solicitudes entrantes a procesarse forma asincrónica (en subprocesos independientes) para que no bloquee la aplicación, use la <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-285">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-286">En el ejemplo de código siguiente se muestra cómo llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-286">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="18ea1-287">Se ha producido un error en una llamada de función de Win32.</span><span class="sxs-lookup"><span data-stu-id="18ea1-287">A Win32 function call failed.</span></span> <span data-ttu-id="18ea1-288">Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</span><span class="sxs-lookup"><span data-stu-id="18ea1-288">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="18ea1-289">Este objeto no se ha iniciado o actualmente está detenido.</span><span class="sxs-lookup"><span data-stu-id="18ea1-289">This object has not been started or is currently stopped.</span></span>  
  
 <span data-ttu-id="18ea1-290">O bien</span><span class="sxs-lookup"><span data-stu-id="18ea1-290">-or-</span></span>  
  
 <span data-ttu-id="18ea1-291">El objeto <see cref="T:System.Net.HttpListener" /> no tiene un prefijo de identificador URI al que responder.</span><span class="sxs-lookup"><span data-stu-id="18ea1-291">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-292">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-292">This object is closed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-293">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-293">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-294">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-294">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-295">Espera una solicitud entrante como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="18ea1-295">Waits for an incoming request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="18ea1-296">Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-296">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
 <span data-ttu-id="18ea1-297">Objeto de tarea que representa la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="18ea1-297">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="18ea1-298">La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa una solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-298">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-299">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="18ea1-299">This operation will not block.</span></span> <span data-ttu-id="18ea1-300">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará cuando se ha recibido la solicitud entrante.</span><span class="sxs-lookup"><span data-stu-id="18ea1-300">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="18ea1-301">Antes de llamar a este método, debe llamar a la <xref:System.Net.HttpListener.Start%2A> método y agregue al menos un prefijo URI para escuchar, agregando las cadenas URI para el <xref:System.Net.HttpListenerPrefixCollection> devuelto por la <xref:System.Net.HttpListener.Prefixes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-301">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="18ea1-302">Para obtener una descripción detallada de los prefijos, vea la <xref:System.Net.HttpListener> Introducción a la clase.</span><span class="sxs-lookup"><span data-stu-id="18ea1-302">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-303">Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si su aplicación recibe las excepciones que aparecen cuando <see cref="T:System.Net.HttpListener" /> envía la respuesta al cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span></span></summary>
        <value>
          <span data-ttu-id="18ea1-304">Es <see langword="true" /> si <see cref="T:System.Net.HttpListener" /> no debe devolver las excepciones que aparecen cuando envía la respuesta al cliente; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-304"><see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span></span> <span data-ttu-id="18ea1-305">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-305">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-306">Establezca esta propiedad en `true` si la aplicación no requiere que una respuesta se ha enviado correctamente a cada cliente.</span><span class="sxs-lookup"><span data-stu-id="18ea1-306">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-307">En el ejemplo de código siguiente se muestra cómo establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-307">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-308">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-308">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-309">Obtiene un valor que indica si se ha iniciado <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-309">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span></span></summary>
        <value>
          <span data-ttu-id="18ea1-310">Es <see langword="true" /> si se inició <see cref="T:System.Net.HttpListener" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-310"><see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-311">Para iniciar un <xref:System.Net.HttpListener>, llame a la <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-311">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-312">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad para determinar el estado de escucha de una instancia.</span><span class="sxs-lookup"><span data-stu-id="18ea1-312">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-313">Obtiene un valor que indica si <see cref="T:System.Net.HttpListener" /> se puede utilizar con el sistema operativo actual.</span><span class="sxs-lookup"><span data-stu-id="18ea1-313">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span></span></summary>
        <value>
          <span data-ttu-id="18ea1-314">Es <see langword="true" /> si se admite <see cref="T:System.Net.HttpListener" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-314"><see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-315">Esta clase solo está disponible en equipos que ejecutan los sistemas operativos Windows XP SP2 o Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="18ea1-315">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-316">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.HttpListener.IsSupported%2A> propiedad para detectar si un <xref:System.Net.HttpListener> objeto puede utilizarse con el sistema operativo actual.</span><span class="sxs-lookup"><span data-stu-id="18ea1-316">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-317">Obtiene los prefijos de identificador uniforme de recursos (URI) controlados por este objeto <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-317">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="18ea1-318">Un objeto <see cref="T:System.Net.HttpListenerPrefixCollection" /> que contiene los prefijos URI que la configuración de este objeto <see cref="T:System.Net.HttpListener" /> le permite controlar.</span><span class="sxs-lookup"><span data-stu-id="18ea1-318">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-319">Los prefijos están en forma canónica.</span><span class="sxs-lookup"><span data-stu-id="18ea1-319">The prefixes are in canonical form.</span></span> <span data-ttu-id="18ea1-320">Para obtener una descripción detallada de los prefijos, vea la <xref:System.Net.HttpListener> Introducción a la clase.</span><span class="sxs-lookup"><span data-stu-id="18ea1-320">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-321">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener.Prefixes%2A> propiedad para obtener e imprimir los prefijos URI que se controlan.</span><span class="sxs-lookup"><span data-stu-id="18ea1-321">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-322">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-322">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-323">Obtiene o establece el territorio, o partición de recurso, asociado con el objeto <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-323">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="18ea1-324">Un valor <see cref="T:System.String" /> que contiene el nombre del territorio asociado al objeto <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-324">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-325">Los servidores usan los dominios para particionar recursos protegidos; cada partición puede tener su propia base de datos de esquema o autorización de autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-325">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="18ea1-326">Los dominios sólo se utilizan para la autenticación básica e implícita.</span><span class="sxs-lookup"><span data-stu-id="18ea1-326">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="18ea1-327">Cuando un cliente se autentica correctamente, la autenticación es válida para todos los recursos de un dominio kerberos determinado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-327">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="18ea1-328">Para obtener una descripción detallada de los dominios, consulte RFC 2617 en [ https://www.ietf.org/ ](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="18ea1-328">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="18ea1-329">Una instancia de <xref:System.Net.HttpListener> tiene solo un dominio asociado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-329">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-330">En el ejemplo de código siguiente se demuestra cómo establecer el <xref:System.Net.HttpListener.Realm%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-330">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-331">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-331">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-332">Permite que esta instancia reciba solicitudes de entrada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-332">Allows this instance to receive incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-333">Debe llamar a este método antes de llamar a la <xref:System.Net.HttpListener.GetContext%2A> o <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-333">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="18ea1-334">Después de haber iniciado una <xref:System.Net.HttpListener> objeto, puede usar el <xref:System.Net.HttpListener.Stop%2A> método para detenerlo.</span><span class="sxs-lookup"><span data-stu-id="18ea1-334">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18ea1-335">Si esta instancia de agente de escucha utiliza https, debe instalar y seleccionar un certificado de servidor.</span><span class="sxs-lookup"><span data-stu-id="18ea1-335">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="18ea1-336">En caso contrario, un <xref:System.Net.HttpWebRequest> consultas de este <xref:System.Net.HttpListener> se producirá un error con el cierre inesperado de la conexión.</span><span class="sxs-lookup"><span data-stu-id="18ea1-336">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="18ea1-337">Puede configurar certificados de servidor y otras opciones de agente de escucha mediante HttpCfg.exe.</span><span class="sxs-lookup"><span data-stu-id="18ea1-337">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="18ea1-338">Vea [ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) para obtener más detalles.</span><span class="sxs-lookup"><span data-stu-id="18ea1-338">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-339">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener.Start%2A> método comience a procesar las solicitudes entrantes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-339">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="18ea1-340">Se ha producido un error en una llamada de función de Win32.</span><span class="sxs-lookup"><span data-stu-id="18ea1-340">A Win32 function call failed.</span></span> <span data-ttu-id="18ea1-341">Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</span><span class="sxs-lookup"><span data-stu-id="18ea1-341">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-342">Este objeto está cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-342">This object is closed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-343">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-343">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-344">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-344">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-345">Hace que esta instancia deje de recibir solicitudes de entrada.</span><span class="sxs-lookup"><span data-stu-id="18ea1-345">Causes this instance to stop receiving incoming requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-346">Si esta instancia se ha detenido, llamar a este método no tiene efecto.</span><span class="sxs-lookup"><span data-stu-id="18ea1-346">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="18ea1-347">Después de haber detenido un <xref:System.Net.HttpListener> objeto, puede usar el <xref:System.Net.HttpListener.Start%2A> método reiniciarlo.</span><span class="sxs-lookup"><span data-stu-id="18ea1-347">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-348">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListener.Stop%2A> método deje de procesar las solicitudes entrantes.</span><span class="sxs-lookup"><span data-stu-id="18ea1-348">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-349">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-349">This object has been closed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="18ea1-350">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18ea1-351">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="18ea1-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18ea1-352">Libera los recursos mantenidos por este objeto <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-352">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-353">Las aplicaciones deben utilizar el <xref:System.Net.HttpListener.Close%2A> método en lugar de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="18ea1-353">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-354">El administrador de tiempo de espera para esta instancia <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-354">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></summary>
        <value><span data-ttu-id="18ea1-355">Devuelve <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-355">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span></span>  
  
 <span data-ttu-id="18ea1-356">El administrador de tiempo de espera para esta instancia <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-356">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-357">El Administrador de tiempo de espera define los límites de tiempo de espera de conexión para esta <xref:System.Net.HttpListener> instancia.</span><span class="sxs-lookup"><span data-stu-id="18ea1-357">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18ea1-358">Obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si, cuando se utiliza NTLM, se requieren solicitudes adicionales que utilicen la misma conexión del protocolo TCP (Protocolo de control de transmisión) para la autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-358">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span></span></summary>
        <value>
          <span data-ttu-id="18ea1-359">Es <see langword="true" /> si el objeto <see cref="T:System.Security.Principal.IIdentity" /> de la primera solicitud debe utilizarse para las solicitudes posteriores de la misma conexión; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-359"><see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="18ea1-360">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18ea1-360">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18ea1-361">Cuando esta propiedad se establece en `true` y la primera solicitud a través de una conexión TCP determinada se autentica utilizando NTLM, las solicitudes posteriores de la misma conexión TCP se procesarán utilizando la información de autenticación (<xref:System.Security.Principal.IIdentity>) de la solicitud inicial.</span><span class="sxs-lookup"><span data-stu-id="18ea1-361">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="18ea1-362">Esta propiedad no tiene ningún efecto si el protocolo de autenticación no es NTLM.</span><span class="sxs-lookup"><span data-stu-id="18ea1-362">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="18ea1-363">Cuando se especifica Negotiate como protocolo de autenticación, esta propiedad no tiene un efecto sólo si NTLM es el protocolo utilizado para la autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-363">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18ea1-364">Al establecer esta propiedad en `true` aumenta el rendimiento porque el <xref:System.Net.HttpListener> no no envío adicionales desafíos de autenticación NTLM, se corre el riesgo de seguridad no exigir a todas las solicitudes para proporcionar información de autenticación.</span><span class="sxs-lookup"><span data-stu-id="18ea1-364">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="18ea1-365">Estudie si el aumento de rendimiento compensa este riesgo.</span><span class="sxs-lookup"><span data-stu-id="18ea1-365">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18ea1-366">En el ejemplo de código siguiente se muestra cómo establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="18ea1-366">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="18ea1-367">Este objeto se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="18ea1-367">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>