<Type Name="IWebProxy" FullName="System.Net.IWebProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="919aba5ed6c0ca5c91cd23a4fcd5aa147123ee36" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37642979" /></Metadata><TypeSignature Language="C#" Value="public interface IWebProxy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebProxy" />
  <TypeSignature Language="DocId" Value="T:System.Net.IWebProxy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebProxy" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebProxy" />
  <TypeSignature Language="F#" Value="type IWebProxy = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona la interfaz base para la implementación del acceso a proxy de la clase <see cref="T:System.Net.WebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IWebProxy> interfaz proporciona los métodos y propiedades que son necesarios para la <xref:System.Net.WebRequest> clase a los servidores proxy de acceso.  
  
 El <xref:System.Net.WebProxy> clase es la implementación base de la <xref:System.Net.IWebProxy> interfaz.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>El <see cref="M:System.Net.IWebProxy.GetProxy(System.Uri)" /> método puede utilizarse para controlar el uso de proxy según el URI de destino. Use el <see cref="M:System.Net.IWebProxy.IsBypassed(System.Uri)" /> método para indicar que el proxy no debe usarse para llegar al servidor de destino.</para></block>
  </Docs>
  <Members>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.IWebProxy.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.IWebProxy.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Credenciales que se envían al servidor proxy para la autenticación.</summary>
        <value>Instancia de <see cref="T:System.Net.ICredentials" /> que contiene las credenciales necesarias para autenticar una solicitud en el servidor proxy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IWebProxy.Credentials%2A> propiedad es una <xref:System.Net.ICredentials> instancia que contiene las credenciales de autorización para enviar al servidor proxy en respuesta a un código de estado HTTP 407 (autorización de proxy).  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Net.WebProxy.Credentials%2A> propiedad para establecer las credenciales que se van a enviar al servidor proxy para la autenticación.  
  
 [!code-cpp[IWebProxy_Interface#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IWebProxy_Interface/CPP/iwebproxy_interface.cpp#1)]
 [!code-csharp[IWebProxy_Interface#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IWebProxy_Interface/CS/iwebproxy_interface.cs#1)]
 [!code-vb[IWebProxy_Interface#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IWebProxy_Interface/VB/iwebproxy_interface.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IWebProxy.GetProxy(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxy (destination As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetProxy(Uri ^ destination);" />
      <MemberSignature Language="F#" Value="abstract member GetProxy : Uri -&gt; Uri" Usage="iWebProxy.GetProxy destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="destination"><see cref="T:System.Uri" /> que especifica el recurso de Internet solicitado.</param>
        <summary>Devuelve la dirección URI de un proxy.</summary>
        <returns>Instancia de <see cref="T:System.Uri" /> que contiene la dirección URI del proxy que se utiliza para establecer contacto con <paramref name="destination" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IWebProxy.GetProxy%2A> método devuelve el URI del servidor proxy que controla las solicitudes al recurso de Internet que se especifica en el `destination` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Net.WebProxy.GetProxy%2A> método para devolver el URI que el <xref:System.Net.WebRequest> se utiliza para tener acceso al recurso de Internet.  
  
 [!code-cpp[IWebProxy_Interface#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IWebProxy_Interface/CPP/iwebproxy_interface.cpp#4)]
 [!code-csharp[IWebProxy_Interface#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IWebProxy_Interface/CS/iwebproxy_interface.cs#4)]
 [!code-vb[IWebProxy_Interface#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IWebProxy_Interface/VB/iwebproxy_interface.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IWebProxy.IsBypassed(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBypassed (host As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBypassed(Uri ^ host);" />
      <MemberSignature Language="F#" Value="abstract member IsBypassed : Uri -&gt; bool" Usage="iWebProxy.IsBypassed host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="host"><see cref="T:System.Uri" /> del host que se comprobará para el uso del proxy.</param>
        <summary>Indica que el proxy no debe utilizarse para el host especificado.</summary>
        <returns>Es <see langword="true" /> si el servidor proxy no se debe utilizar para <paramref name="host" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IWebProxy.IsBypassed%2A> método indica si se debe usar el servidor proxy para tener acceso al host que se especifica en el `host` parámetro. Si <xref:System.Net.IWebProxy.IsBypassed%2A> es `true`, el proxy no se usa para ponerse en contacto con el host y la solicitud se pasa directamente al servidor.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Net.WebProxy.IsBypassed%2A> propiedad para determinar si se debe usar el servidor proxy para el host especificado.  
  
 [!code-cpp[IWebProxy_Interface#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IWebProxy_Interface/CPP/iwebproxy_interface.cpp#4)]
 [!code-csharp[IWebProxy_Interface#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IWebProxy_Interface/CS/iwebproxy_interface.cs#4)]
 [!code-vb[IWebProxy_Interface#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IWebProxy_Interface/VB/iwebproxy_interface.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>