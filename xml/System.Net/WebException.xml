<Type Name="WebException" FullName="System.Net.WebException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ac7079ca69d57562b2f2a3ffbe7c10b1569a1ee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36471611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebException : InvalidOperationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebException extends System.InvalidOperationException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebException" />
  <TypeSignature Language="VB.NET" Value="Public Class WebException&#xA;Inherits InvalidOperationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebException : InvalidOperationException" />
  <TypeSignature Language="F#" Value="type WebException = class&#xA;    inherit InvalidOperationException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.InvalidOperationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Excepción que se produce cuando se produce un error al obtener acceso a la red mediante un protocolo conectable.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException> clase se produce mediante clases que descienden de <xref:System.Net.WebRequest> y <xref:System.Net.WebResponse> que implementan protocolos conectables para tener acceso a Internet.  
  
 Cuando <xref:System.Net.WebException> se produce un descendiente de la <xref:System.Net.WebRequest> (clase), el <xref:System.Net.WebException.Response%2A> propiedad proporciona la respuesta de Internet a la aplicación.  
  
 **Sugerencias asociadas**  
  
 **Compruebe la propiedad Response de la excepción para determinar el motivo del error de la solicitud.**  
 Cuando un descendiente de la clase <xref:System.Net.WebException> produce una excepción <xref:System.Net.WebRequest>, la propiedad <xref:System.Net.WebException.Response%2A> proporciona la respuesta de Internet a la aplicación.  
  
 **Compruebe la propiedad Status de la excepción para determinar el motivo del error de la solicitud.**  
 La propiedad <xref:System.Net.WebException.Status%2A> de la excepción proporciona información de estado sobre el error. Para obtener más información, vea <xref:System.Net.WebExceptionStatus>.  
  
 **Si son el tiempo de cuando a un servicio Web XML, establezca el valor de tiempo de espera de la llamada de servicio Web XML en infinito.**  
 Para obtener más información, consulte [Error: tiempo de espera de depuración de servicios Web](http://msdn.microsoft.com/library/4b7df112-788a-4429-9a0c-4c6dac4fb609).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor predeterminado inicializa una nueva instancia de la <xref:System.Net.WebException> clase. El <xref:System.Exception.Message%2A> propiedad se inicializa en un mensaje proporcionado por el sistema que describe el error. Este mensaje tiene en cuenta la referencia cultural del sistema actual. El <xref:System.Exception.InnerException%2A> y <xref:System.Net.WebException.Response%2A> propiedades se inicializan en `null`. La propiedad <xref:System.Net.WebException.Status%2A> se inicializa en <xref:System.Net.WebExceptionStatus.RequestCanceled>.  
  
   
  
## Examples  
 En el ejemplo siguiente, se produce el valor predeterminado es <xref:System.Net.WebException>.  
  
 [!code-cpp[WebException_Constructor1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor1/CPP/webexception_constructor1.cpp#1)]
 [!code-csharp[WebException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor1/CS/webexception_constructor1.cs#1)]
 [!code-vb[WebException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor1/VB/webexception_constructor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Net.WebException : string -&gt; System.Net.WebException" Usage="new System.Net.WebException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Texto del mensaje de error.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException> instancia se inicializa con el <xref:System.Exception.Message%2A> propiedad establecida en el valor de `message`. Si `message` es `null`, el <xref:System.Exception.Message%2A> propiedad se inicializa en un mensaje proporcionado por el sistema. El <xref:System.Exception.InnerException%2A> y <xref:System.Net.WebException.Response%2A> propiedades se inicializan en `null`. La propiedad <xref:System.Net.WebException.Status%2A> se inicializa en <xref:System.Net.WebExceptionStatus.RequestCanceled>.  
  
   
  
## Examples  
 En el ejemplo siguiente se inicia una <xref:System.Net.WebException> mediante la especificación de un mensaje de error.  
  
 [!code-cpp[WebException_Constructor2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor2/CPP/webexception_constructor2.cpp#1)]
 [!code-csharp[WebException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor2/CS/webexception_constructor2.cs#1)]
 [!code-vb[WebException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor2/VB/webexception_constructor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebException(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebException" Usage="new System.Net.WebException (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva excepción <see cref="T:System.Net.WebException" />.</param>
        <param name="streamingContext">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva excepción <see cref="T:System.Net.WebException" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> desde las instancias <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor implementa la <xref:System.Runtime.Serialization.ISerializable> interfaz para la <xref:System.Net.WebException> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Net.WebException : string * Exception -&gt; System.Net.WebException" Usage="new System.Net.WebException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Texto del mensaje de error.</param>
        <param name="innerException">Excepción anidada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error y la excepción anidada especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException> instancia se inicializa con el <xref:System.Exception.Message%2A> propiedad establecida en el valor de `message` y <xref:System.Exception.InnerException%2A> propiedad establecida en el valor de `innerException`. Si `message` es `null`, el <xref:System.Exception.Message%2A> propiedad se inicializa en un mensaje proporcionado por el sistema. El <xref:System.Exception.InnerException%2A> y <xref:System.Net.WebException.Response%2A> propiedades se inicializan en `null`. La propiedad <xref:System.Net.WebException.Status%2A> se inicializa en <xref:System.Net.WebExceptionStatus.RequestCanceled>.  
  
   
  
## Examples  
 En el ejemplo siguiente se inicia una <xref:System.Net.WebException> mediante la especificación de un mensaje de error y una excepción anidada.  
  
 [!code-cpp[WebException_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor4/CPP/webexception_constructor4.cpp#1)]
 [!code-csharp[WebException_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor4/CS/webexception_constructor4.cs#1)]
 [!code-vb[WebException_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor4/VB/webexception_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, System.Net.WebExceptionStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, valuetype System.Net.WebExceptionStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, status As WebExceptionStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebException(System::String ^ message, System::Net::WebExceptionStatus status);" />
      <MemberSignature Language="F#" Value="new System.Net.WebException : string * System.Net.WebExceptionStatus -&gt; System.Net.WebException" Usage="new System.Net.WebException (message, status)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" />
      </Parameters>
      <Docs>
        <param name="message">Texto del mensaje de error.</param>
        <param name="status">Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error y el estado especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException> instancia se inicializa con el <xref:System.Exception.Message%2A> propiedad establecida en el valor de `message` y <xref:System.Net.WebException.Status%2A> propiedad establecida en el valor de `status`. Si `message` es `null`, el <xref:System.Exception.Message%2A> propiedad se inicializa en un mensaje proporcionado por el sistema. El <xref:System.Exception.InnerException%2A> y <xref:System.Net.WebException.Response%2A> propiedades se inicializan en `null`.  
  
   
  
## Examples  
 En el ejemplo siguiente se inicia una <xref:System.Net.WebException> mediante la especificación de un mensaje de error y un <xref:System.Net.WebExceptionStatus>.  
  
 [!code-cpp[WebException_Constructor3#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor3/CPP/webexception_constructor3.cpp#1)]
 [!code-csharp[WebException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor3/CS/webexception_constructor3.cs#1)]
 [!code-vb[WebException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor3/VB/webexception_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, Exception innerException, System.Net.WebExceptionStatus status, System.Net.WebResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, valuetype System.Net.WebExceptionStatus status, class System.Net.WebResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, status As WebExceptionStatus, response As WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebException(System::String ^ message, Exception ^ innerException, System::Net::WebExceptionStatus status, System::Net::WebResponse ^ response);" />
      <MemberSignature Language="F#" Value="new System.Net.WebException : string * Exception * System.Net.WebExceptionStatus * System.Net.WebResponse -&gt; System.Net.WebException" Usage="new System.Net.WebException (message, innerException, status, response)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" />
        <Parameter Name="response" Type="System.Net.WebResponse" />
      </Parameters>
      <Docs>
        <param name="message">Texto del mensaje de error.</param>
        <param name="innerException">Excepción anidada.</param>
        <param name="status">Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</param>
        <param name="response">Instancia de <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del host remoto.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error, la excepción anidada, el estado y la respuesta especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException> instancia se inicializa con el <xref:System.Exception.Message%2A> propiedad establecida en el valor de `message`, el <xref:System.Exception.InnerException%2A> propiedad establecida en el valor de `innerException`, <xref:System.Net.WebException.Status%2A> propiedad establecida en el valor de `status`y el <xref:System.Net.WebException.Response%2A> el valor de la propiedad `response`. Si `message` es `null`, el <xref:System.Exception.Message%2A> propiedad se inicializa en un mensaje proporcionado por el sistema.  
  
   
  
## Examples  
 En el ejemplo siguiente se inicia una <xref:System.Net.WebException> mediante la especificación de un mensaje de error y un <xref:System.Net.WebExceptionStatus>.  
  
 [!code-cpp[WebException_Constructor5#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor5/CPP/webexception_constructor5.cpp#1)]
 [!code-csharp[WebException_Constructor5#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor5/CS/webexception_constructor5.cs#1)]
 [!code-vb[WebException_Constructor5#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor5/VB/webexception_constructor5.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webException.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar.</param>
        <param name="streamingContext">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se va a utilizar.</param>
        <summary>Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.WebException" /> actual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.WebResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebException.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebResponse ^ Response { System::Net::WebResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Net.WebResponse" Usage="System.Net.WebException.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la respuesta que devolvió el host remoto.</summary>
        <value>Si hay una respuesta disponible en el recurso de Internet, se trata de una instancia de <see cref="T:System.Net.WebResponse" /> que contiene la respuesta de error de un recurso de Internet; en caso contrario, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algunos protocolos de Internet, como HTTP, en caso contrario, devuelven respuestas que indican que se ha producido un error en el nivel de protocolo válidos. Cuando la respuesta a una solicitud de Internet indica un error, <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=nameWithType> establece la <xref:System.Net.WebException.Status%2A> propiedad <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType> y proporciona el <xref:System.Net.WebResponse> que contiene el mensaje de error en la <xref:System.Net.WebException.Response%2A> propiedad de la <xref:System.Net.WebException> que estaba se produce. La aplicación puede examinar el <xref:System.Net.WebResponse> para determinar el error real.  
  
   
  
## Examples  
 El ejemplo siguiente se comprueba la <xref:System.Net.WebException.Status%2A> propiedad e imprime en la consola el <xref:System.Net.HttpWebResponse.StatusCode%2A> y <xref:System.Net.HttpWebResponse.StatusDescription%2A> de subyacente <xref:System.Net.HttpWebResponse> instancia.  
  
 [!code-cpp[WebException_Status_Response#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Status_Response/CPP/webexception_status_response.cpp#1)]
 [!code-csharp[WebException_Status_Response#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Status_Response/CS/webexception_status_response.cs#1)]
 [!code-vb[WebException_Status_Response#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Status_Response/VB/webexception_status_response.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.WebExceptionStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebExceptionStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebException.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As WebExceptionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebExceptionStatus Status { System::Net::WebExceptionStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.WebExceptionStatus" Usage="System.Net.WebException.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebExceptionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado de la respuesta.</summary>
        <value>Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebException.Status%2A> propiedad indica el motivo de la <xref:System.Net.WebException>.  
  
 El valor de <xref:System.Net.WebException.Status%2A> es uno de los <xref:System.Net.WebExceptionStatus> valores.  
  
> [!WARNING]
>  El <xref:System.Net.WebExceptionStatus.ProxyNameResolutionFailure> no se devolverá un error al [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicaciones.  
  
   
  
## Examples  
 El ejemplo siguiente se comprueba la <xref:System.Net.WebException.Status%2A> propiedad e imprime en la consola el <xref:System.Net.HttpWebResponse.StatusCode%2A> y <xref:System.Net.HttpWebResponse.StatusDescription%2A> de subyacente <xref:System.Net.HttpWebResponse> instancia.  
  
 [!code-cpp[WebException_Status_Response#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Status_Response/CPP/webexception_status_response.cpp#1)]
 [!code-csharp[WebException_Status_Response#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Status_Response/CS/webexception_status_response.cs#1)]
 [!code-vb[WebException_Status_Response#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Status_Response/VB/webexception_status_response.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.WebExceptionStatus" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Objeto en el que se serializa este objeto <see cref="T:System.Net.WebException" />.</param>
        <param name="streamingContext">El destino de la serialización.</param>
        <summary>Serializa esta instancia en el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>