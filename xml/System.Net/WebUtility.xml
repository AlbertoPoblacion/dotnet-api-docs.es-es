<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f1d8-101">Proporciona métodos para codificar y descodificar direcciones URL al procesar las solicitudes web.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-102">La <xref:System.Web.HttpUtility> clase contiene la codificación y descodificación de métodos de utilidad para su uso con cadenas para codificar en HTML.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="2f1d8-103">La <xref:System.Uri?displayProperty=nameWithType> clase también contiene métodos y propiedades que pueden utilizarse para propósitos similares.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f1d8-104">Convierte una cadena que se ha codificado en HTML para su transmisión HTTP en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-105">Cadena que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-105">The string to decode.</span></span></param>
        <summary><span data-ttu-id="2f1d8-106">Convierte una cadena que se ha codificado en HTML para su transmisión HTTP en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-107">Cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-107">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-108">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-109">La codificación HTML convierte los caracteres no permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="2f1d8-110">Por ejemplo, cuando se incrusta en un bloque de texto, los caracteres \< y > se codifican como &lt; y &gt; para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-110">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="2f1d8-111">Si el `value` parámetro es `null`, a continuación, la cadena descodificada devuelta es `null`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="2f1d8-112">Si el `value` parámetro es una cadena vacía, la cadena descodificada devuelta es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-113">Cadena que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-113">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="2f1d8-114">Secuencia de salida de <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="2f1d8-115">Convierte una cadena que se ha codificado en HTML en una cadena descodificada y envía la cadena descodificada a una secuencia de salida de <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-116">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-117">La codificación HTML convierte los caracteres no permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="2f1d8-118">Por ejemplo, cuando se incrusta en un bloque de texto, los caracteres \< y > se codifican como &lt; y &gt; para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-118">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f1d8-119">El parámetro <paramref name="output" /> no puede ser <see langword="null" /> si el parámetro <paramref name="value" /> no es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f1d8-120">Convierte una cadena en una cadena codificada en HTML.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-120">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-121">Cadena que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-121">The string to encode.</span></span></param>
        <summary><span data-ttu-id="2f1d8-122">Convierte una cadena en una cadena codificada en HTML.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-122">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-123">Cadena codificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-123">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-124">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-125">La codificación HTML convierte los caracteres no permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="2f1d8-126">Por ejemplo, cuando se incrusta en un bloque de texto, los caracteres \< y > se codifican como &lt; y &gt; para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-126">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="2f1d8-127">Si el `value` parámetro es `null`, a continuación, la cadena codificada devuelta es `null`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="2f1d8-128">Si el `value` parámetro es una cadena vacía, la cadena codificada devuelta es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-129">Cadena que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-129">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="2f1d8-130">Secuencia de salida <see cref="T:System.IO.TextWriter" /></span><span class="sxs-lookup"><span data-stu-id="2f1d8-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="2f1d8-131">Convierte una cadena en una cadena con codificación HTML y devuelve el resultado como una secuencia <see cref="T:System.IO.TextWriter" /> de salida.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-132">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-133">La codificación HTML convierte los caracteres no permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="2f1d8-134">Por ejemplo, cuando se incrusta en un bloque de texto, los caracteres \< y >, se codifican como &lt; y &gt; para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-134">For example, when embedded in a block of text, the characters \< and >, are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f1d8-135">El parámetro <paramref name="output" /> no puede ser <see langword="null" /> si el parámetro <paramref name="value" /> no es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="2f1d8-136">Cadena codificada como dirección URL que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-136">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="2f1d8-137">Convierte una cadena que se ha codificado para su transmisión en una dirección URL en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-138">Devuelve <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-138">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="2f1d8-139">Cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-139">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-140">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-140">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-141">Codificación de direcciones URL convierte los caracteres que no se permiten en una dirección URL en secuencias de escape hexadecimales equivalentes.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-141">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="2f1d8-142">El <xref:System.Net.WebUtility.UrlEncode%2A> método crea una cadena con codificación URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-142">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="2f1d8-143">Descodificación de direcciones URL reemplaza las secuencias de escape hexadecimales con caracteres ASCII equivalentes correspondientes.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-143">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="2f1d8-144">Por ejemplo, cuando se incrustan en un bloque de texto con codificación URL, las secuencias de escape `%3c` y `%3e` se descodifican en los caracteres `<` y `>`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-144">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="2f1d8-145">Matriz <see cref="T:System.Byte" /> codificada como dirección URL que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-145">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="2f1d8-146">El desplazamiento, en bytes, desde el principio de la matriz <see cref="T:System.Byte" /> para descodificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-146">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="2f1d8-147">El recuento, en bytes, para descodificar de la matriz <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-147">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="2f1d8-148">Convierte una matriz de bytes codificada que se ha codificado para la transmisión en una dirección URL en una matriz de bytes descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-148">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-149">Devuelve <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-149">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="2f1d8-150">Una matriz <see cref="T:System.Byte" /> descodificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-150">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-151">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-151">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-152">Codificación de direcciones URL convierte los caracteres que no se permiten en una dirección URL en secuencias de escape hexadecimales equivalentes.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-152">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="2f1d8-153">El <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> método crea una matriz de bytes codificados de dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-153">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="2f1d8-154">Descodificación de direcciones URL reemplaza las secuencias de escape hexadecimales con caracteres ASCII equivalentes correspondientes.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-154">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="2f1d8-155">Por ejemplo, cuando se incrustan en un bloque de texto con codificación URL, las secuencias de escape `%3c` y `%3e` se descodifican en los caracteres `<` y `>`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-155">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-156">Texto que se va a codificar con una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-156">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="2f1d8-157">Convierte una cadena de texto en una cadena codificada como una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-157">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-158">Devuelve <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-158">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="2f1d8-159">Cadena codificada como una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-160">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-161">Codificación de direcciones URL reemplaza los caracteres que no se permiten en una dirección URL con entidades de caracteres equivalentes que consta de secuencias de escape hexadecimales.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="2f1d8-162">Se espera que la cadena convertida se ajusta al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="2f1d8-163">Codificación de direcciones URL reemplaza todos los códigos de caracteres excepto letras, números y signos de puntuación siguientes:</span><span class="sxs-lookup"><span data-stu-id="2f1d8-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="2f1d8-164">`-` (signo menos)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="2f1d8-165">`_` (carácter de subrayado)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="2f1d8-166">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="2f1d8-167">`!` (signo de exclamación)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="2f1d8-168">\* (asterisco)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-168">\* (asterisk)</span></span>  
  
-   <span data-ttu-id="2f1d8-169">`(` y `)` (apertura y cierre entre paréntesis)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="2f1d8-170">Por ejemplo, cuando se incrusta en un bloque de texto que debe transmitirse en una dirección URL, los caracteres `<` y `>` se codifican como `%3c` y `%3e`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="2f1d8-171">El <xref:System.Net.WebUtility.UrlDecode%2A> método invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f1d8-172">Matriz <see cref="T:System.Byte" /> que se va a codificar con una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="2f1d8-173">El desplazamiento, en bytes, desde el principio de la matriz <see cref="T:System.Byte" /> para codificar.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="2f1d8-174">El recuento, en bytes, para codificar de la matriz <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="2f1d8-175">Convierte una matriz de bytes en una matriz de bytes con código URL.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="2f1d8-176">Devuelve <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-176">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="2f1d8-177">Una matriz de <see cref="T:System.Byte" /> codificada.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-177">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f1d8-178">Si se pasan a una secuencia HTTP caracteres como espacios en blanco y signos de puntuación, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="2f1d8-179">Codificación de direcciones URL reemplaza los caracteres que no se permiten en una dirección URL con entidades de caracteres equivalentes que consta de secuencias de escape hexadecimales.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="2f1d8-180">Se espera que la cadena convertida se ajusta al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="2f1d8-181">Codificación de direcciones URL reemplaza todos los códigos de caracteres excepto letras, números y signos de puntuación siguientes:</span><span class="sxs-lookup"><span data-stu-id="2f1d8-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="2f1d8-182">`-` (signo menos)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="2f1d8-183">`_` (carácter de subrayado)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="2f1d8-184">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="2f1d8-185">`!` (signo de exclamación)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="2f1d8-186">' \*' (asterisco)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-186">'\*' (asterisk)</span></span>  
  
-   <span data-ttu-id="2f1d8-187">`'` (comilla simple)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="2f1d8-188">`(` y `)` (apertura y cierre entre paréntesis)</span><span class="sxs-lookup"><span data-stu-id="2f1d8-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="2f1d8-189">Por ejemplo, cuando se incrusta en un bloque de texto que debe transmitirse en una dirección URL, los caracteres `<` y `>` se codifican como `%3c` y `%3e`.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="2f1d8-190">El <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> método invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="2f1d8-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>