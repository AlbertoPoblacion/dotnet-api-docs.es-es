<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d52e0389fae96ede231b36a333fcc5d736c9760d" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614052" /></Metadata><TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona métodos comunes para enviar y recibir datos de un recurso identificado por un identificador URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  No se recomienda que utilice el `WebClient` clase para el nuevo desarrollo. En su lugar, use la <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> clase.

 La <xref:System.Net.WebClient> clase proporciona métodos comunes para enviar datos a o recibir datos desde cualquier local, intranet o recurso de Internet identificado por un URI.  
  
 El <xref:System.Net.WebClient> clase utiliza la <xref:System.Net.WebRequest> clase para proporcionar acceso a los recursos. <xref:System.Net.WebClient> las instancias pueden tener acceso a datos con cualquier <xref:System.Net.WebRequest> descendiente registrado con el <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> método.  
  
> [!NOTE]
>  De forma predeterminada, .NET Framework admite los URI que comienzan con `http:`, `https:`, `ftp:`, y `file:` identificadores de esquema.  
  
 La tabla siguiente se describen <xref:System.Net.WebClient> métodos para cargar datos en un recurso.  
  
|Método|Descripción|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Recupera un <xref:System.IO.Stream> utilizado para enviar datos al recurso.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Recupera un <xref:System.IO.Stream> utilizado para enviar datos al recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadData%2A>|Envía una matriz de bytes al recurso y devuelve un <xref:System.Byte> matriz que contiene las respuestas.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Envía un <xref:System.Byte> matriz para el recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Envía un archivo local al recurso y devuelve un <xref:System.Byte> matriz que contiene las respuestas.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Envía un archivo local al recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Envía un <xref:System.Collections.Specialized.NameValueCollection> a los recursos y devuelve un <xref:System.Byte> matriz que contiene las respuestas.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Envía un <xref:System.Collections.Specialized.NameValueCollection> a los recursos y devuelve un <xref:System.Byte> matriz que contiene las respuestas, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadString%2A>|Envía una <xref:System.String> al recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|Envía una <xref:System.String> al recurso, sin bloquear el subproceso que realiza la llamada.|  
  
 La tabla siguiente se describen <xref:System.Net.WebClient> métodos para descargar datos desde un recurso.  
  
|Método|Descripción|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Devuelve los datos de un recurso como un <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Devuelve los datos de un recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Descarga los datos desde un recurso y devuelve un <xref:System.Byte> matriz.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Descarga los datos desde un recurso y devuelve un <xref:System.Byte> matriz sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Descarga los datos desde un recurso en un archivo local.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Descarga los datos desde un recurso en un archivo local, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Descarga un <xref:System.String> desde un recurso y devuelve un <xref:System.String>.|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|Descarga un <xref:System.String> desde un recurso, sin bloquear el subproceso que realiza la llamada.|  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Un <xref:System.Net.WebClient> instancia no envía encabezados HTTP opcionales de forma predeterminada. Si la solicitud requiere un encabezado opcional, debe agregar el encabezado para el <xref:System.Net.WebClient.Headers%2A> colección. Por ejemplo, para conservar las consultas en la respuesta, debe agregar un encabezado user-agent. Además, los servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado user-agent.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> se establece en `true` en <xref:System.Net.WebClient> instancias.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se toma el URI de un recurso, lo recupera y muestra la respuesta.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Para obtener acceso al URI solicitado o cualquier URI que se redirige la solicitud. Enumeración asociada: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides"><para>Las clases derivadas deben llamar a la implementación de clase base <see cref="T:System.Net.WebClient" /> para asegurarse de la clase derivada funciona según lo previsto.</para></block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor predeterminado crea una nueva instancia de la <xref:System.Net.WebClient> clase. El método HTTP predeterminado es GET. El método FTP predeterminado es RETR. El valor predeterminado de <xref:System.Net.WebClient.Encoding%2A> es <xref:System.Text.Encoding.Default%2A>. El valor predeterminado de <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> es `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Net.WebClient> de instancia y, a continuación, se utiliza para descargar datos desde un servidor y mostrarlo en la consola del sistema, para descargar datos desde un servidor y escribirlo en un archivo y para cargar valores de formulario en un servidor y recibir la respuesta.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se deben almacenar en el búfer los datos leídos desde el recurso de Internet para una instancia de <see cref="T:System.Net.WebClient" />.</summary>
        <value>Devuelve <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> para habilitar el almacenamiento en búfer de los datos recibidos del recurso de Internet; <see langword="false" /> para deshabilitar el almacenamiento en búfer. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Net.WebClient.AllowReadStreamBuffering%2A> propiedad es `true`, los datos se almacena en búfer en memoria para que esté listo para ser leídos por la aplicación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se deben almacenar en el búfer los datos escritos en el recurso de Internet para una instancia de <see cref="T:System.Net.WebClient" />.</summary>
        <value>Devuelve <see cref="T:System.Boolean" />.  
  
 Es <see langword="true" /> para habilitar el almacenamiento en búfer de los datos escritos en el recurso de Internet; es <see langword="false" /> para deshabilitar el almacenamiento en búfer. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A> propiedad es `true`, por lo que puede escribirse más eficazmente en el recurso de Internet en fragmentos más grandes los datos se almacena en búfer en memoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el URI de base para las solicitudes realizadas por un <see cref="T:System.Net.WebClient" />.</summary>
        <value><see cref="T:System.String" /> que contiene el identificador URI base para las solicitudes realizadas por <see cref="T:System.Net.WebClient" /> o <see cref="F:System.String.Empty" /> si no se ha especificado ninguna dirección base.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.BaseAddress%2A> propiedad contiene un URI base que se combina con una dirección relativa. Cuando se llama a un método que carga o descarga los datos, la <xref:System.Net.WebClient> objeto combina este identificador URI base con la dirección relativa que especifique en la llamada al método. Si especifica un URI absoluto, <xref:System.Net.WebClient> no usa el <xref:System.Net.WebClient.BaseAddress%2A> valor de propiedad.  
  
 Para quitar una definida previamente de valor, establezca esta propiedad en `null` o una cadena vacía ("").  
  
   
  
## Examples  
 El ejemplo de código siguiente descarga los datos desde un servidor de Internet y lo muestra en la consola. Se supone que la dirección del servidor (como http://www.contoso.com) en `hostUri` y que la ruta de acceso al recurso (por ejemplo, / default.htm) se encuentra en `uriSuffix`.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Net.WebClient.BaseAddress" /> se establece en un URI no válido. La excepción interna puede contener información para ayudar a localizar el error.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la directiva de caché de la aplicación para los recursos obtenidos por esta instancia de WebClient mediante objetos <see cref="T:System.Net.WebRequest" />.</summary>
        <value>Objeto <see cref="T:System.Net.Cache.RequestCachePolicy" /> que representa los requisitos de almacenamiento en caché de la aplicación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela una operación asincrónica pendiente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si una operación está pendiente, este método llama a <xref:System.Net.WebRequest.Abort%2A> en subyacente <xref:System.Net.WebRequest>.  
  
 Cuando se llama a <xref:System.Net.WebClient.CancelAsync%2A>, la aplicación todavía recibe el evento de finalización asociado con la operación. Por ejemplo, cuando se llama a <xref:System.Net.WebClient.CancelAsync%2A> para cancelar un <xref:System.Net.WebClient.DownloadStringAsync%2A> operación, si ha especificado un controlador de eventos para el <xref:System.Net.WebClient.DownloadStringCompleted> evento, el controlador de eventos recibe notificación de que ha finalizado la operación. Para saber si la operación se completó correctamente, compruebe el <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad en la clase base del <xref:System.Net.DownloadDataCompletedEventArgs> en el evento se pasa el objeto de datos para el controlador de eventos.  
  
 Si no hay ninguna operación asincrónica está en curso, este método no hace nada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las credenciales de red que se envían al host y se utilizan para autenticar la solicitud.</summary>
        <value><see cref="T:System.Net.ICredentials" /> que contiene las credenciales de autenticación para la solicitud. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.Credentials%2A> propiedad contiene las credenciales de autenticación utilizadas para tener acceso a un recurso en un host. En la mayoría de los escenarios de cliente, debe usar el <xref:System.Net.CredentialCache.DefaultCredentials%2A>, que son las credenciales del usuario que ha iniciado sesión actualmente. Para ello, establezca el <xref:System.Net.WebClient.UseDefaultCredentials%2A> propiedad `true` en lugar de establecer esta propiedad.  
  
 Si el <xref:System.Net.WebClient> clase se utiliza en una aplicación de nivel intermedio, como una aplicación ASP.NET, el <xref:System.Net.CredentialCache.DefaultCredentials%2A> pertenecen a la cuenta de ejecución de la página ASP (las credenciales del servidor). Normalmente, establecería esta propiedad en las credenciales del cliente en cuyo nombre se realiza la solicitud.  
  
 Por motivos de seguridad, al seguir automáticamente las redirecciones, almacene las credenciales que desea que se incluirán en la redirección en una <xref:System.Net.CredentialCache> y asignarlo a esta propiedad. Esta propiedad se establecerá automáticamente en `null` tras la redirección si contiene nada excepto un <xref:System.Net.CredentialCache>. Tener el valor de esta propiedad se establece automáticamente en `null` en dichas condiciones impide que las credenciales que se envían a cualquier destino imprevisto.
  
## Examples  
 El siguiente ejemplo de código usa las credenciales del usuario del sistema para autenticar una solicitud.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI desde el que se descargan los datos.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.DownloadData%2A> método descarga el recurso con el URI especificado por el `address` parámetro. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadDataAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente solicita datos desde un servidor y muestra los datos devueltos. Se supone que `remoteUri` contiene un URI válido para los datos solicitados.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar los datos.</exception>
        <exception cref="T:System.NotSupportedException">Se ha llamado al método en varios subprocesos simultáneamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identificador URI representado por el objeto <see cref="T:System.Uri" />, desde el que se descargan los datos.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.DownloadData%2A> método descarga el recurso con el URI especificado por el `address` parámetro. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadDataAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 **Tenga en cuenta** este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> que contiene el identificador URI para la descarga.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera el recurso especificado mediante el método predeterminado para el protocolo asociado con el esquema URI especificado en `address`. Los datos se descargan de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para descargar un recurso y el bloque al esperar la respuesta del servidor, use uno de los <xref:System.Net.WebClient.DownloadData%2A> métodos. Cuando se complete la descarga, el <xref:System.Net.WebClient.DownloadDataCompleted> provoca el evento. La aplicación debe controlar este evento para recibir una notificación. Están disponibles en los datos descargados del <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> propiedad.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> que contiene el identificador URI para la descarga.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera el recurso especificado mediante el método predeterminado para el protocolo asociado con el esquema URI especificado en `address`. Los datos se descargan de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para descargar un recurso y el bloque al esperar la respuesta del servidor, use uno de los <xref:System.Net.WebClient.DownloadData%2A> métodos. Cuando se complete la descarga, el <xref:System.Net.WebClient.DownloadDataCompleted> provoca el evento. La aplicación debe controlar este evento para recibir una notificación. Están disponibles en los datos descargados del <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> propiedad.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de descarga de datos asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación de descarga asincrónica de datos. Descargas de datos asincrónicas se inician mediante una llamada a la <xref:System.Net.WebClient.DownloadDataAsync%2A> métodos.  
  
 El <xref:System.Net.DownloadDataCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.DownloadDataCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se ha descargado el recurso de datos.  
  
 Este método recupera el recurso especificado mediante el método predeterminado para el protocolo asociado con el esquema URI especificado en el `address` parámetro. Los datos se descargan de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 El ejemplo de código siguiente solicita datos desde un servidor y muestra los datos devueltos. Se supone que `remoteUri` contiene un URI válido para los datos solicitados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <summary>Descarga el recurso como una matriz de <see cref="T:System.Byte" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se ha descargado el recurso de datos.  
  
 Este método recupera el recurso especificado mediante el método predeterminado para el protocolo asociado con el esquema URI especificado en el `address` parámetro. Los datos se descargan de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 **Tenga en cuenta** este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso con el URI especificado en un archivo local.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI desde el que se descargan los datos.</param>
        <param name="fileName">Nombre del archivo local que va a recibir los datos.</param>
        <summary>Descarga el recurso con el URI especificado en un archivo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.DownloadFile%2A> método descargas de datos de un archivo local desde el URI especificado en el `address` parámetro. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadFileAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una aplicación de nivel intermedio, como una página ASP.NET, recibirá un error si la cuenta bajo la que se ejecuta la aplicación no tiene permiso para tener acceso al archivo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga un archivo de http://www.contoso.com en la unidad de disco dura local.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="filename" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.  
  
O bien 
El archivo no existe.  
  
O bien se ha producido un error al descargar los datos.</exception>
        <exception cref="T:System.NotSupportedException">Se ha llamado al método en varios subprocesos simultáneamente.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para escribir el archivo <paramref name="fileName" />. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identificador URI especificado como <see cref="T:System.String" />, desde el que se descargan los datos.</param>
        <param name="fileName">Nombre del archivo local que va a recibir los datos.</param>
        <summary>Descarga el recurso con el URI especificado en un archivo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.DownloadFile%2A> método descargas de datos de un archivo local desde el URI especificado en el `address` parámetro. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadFileAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una aplicación de nivel intermedio, como una página ASP.NET, recibirá un error si la cuenta bajo la que se ejecuta la aplicación no tiene permiso para tener acceso al archivo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="filename" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.  
  
O bien 
El archivo no existe.  
  
O bien 
Se ha producido un error al descargar los datos.</exception>
        <exception cref="T:System.NotSupportedException">Se ha llamado al método en varios subprocesos simultáneamente.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para escribir el archivo <paramref name="fileName" />. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso especificado en un archivo local como operación asincrónica y devuelve un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <param name="fileName">Nombre del archivo que se va a colocar en el equipo local.</param>
        <summary>Descarga en un archivo local el recurso con el URI especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método descarga el recurso en el URI especificado en el `address` parámetro. Cuando la descarga se completa correctamente, el archivo descargado se denomina `fileName` en el equipo local. El archivo se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando el archivo está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.DownloadFileCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para bloquear mientras espera a que finalice la descarga, use uno de los <xref:System.Net.WebClient.DownloadFile%2A> métodos.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una página ASP.NET, recibirá un error si la cuenta que se ejecuta bajo la página no tiene permiso para tener acceso al archivo local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.InvalidOperationException">Otro subproceso está usando el archivo local especificado por <paramref name="fileName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <param name="fileName">Nombre del archivo que se va a colocar en el equipo local.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Descarga en un archivo local el recurso con el URI especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método descarga el recurso en el URI especificado en el `address` parámetro. Cuando la descarga se completa correctamente, el archivo descargado se denomina `fileName` en el equipo local. El archivo se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando el archivo está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.DownloadFileCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para bloquear mientras espera a que finalice la descarga, use uno de los <xref:System.Net.WebClient.DownloadFile%2A> métodos.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una página ASP.NET, recibirá un error si la cuenta que se ejecuta bajo la página no tiene permiso para tener acceso al archivo local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.InvalidOperationException">Otro subproceso está usando el archivo local especificado por <paramref name="fileName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de descarga de archivo asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación de descarga de archivos asincrónica. Descargas de archivo asincrónicas se inician mediante una llamada a la <xref:System.Net.WebClient.DownloadFileAsync%2A> métodos.  
  
 El <xref:System.ComponentModel.AsyncCompletedEventHandler> es el delegado de este evento. La <xref:System.ComponentModel.AsyncCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso especificado en un archivo local como operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <param name="fileName">Nombre del archivo que se va a colocar en el equipo local.</param>
        <summary>Descarga el recurso especificado en un archivo local como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task" />.  
  
Objeto de tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task> objeto se completará después de que se ha descargado el recurso de datos.  
  
 Este método descarga el recurso en el URI especificado en el `address` parámetro. Cuando la descarga se completa correctamente, el archivo descargado se denomina `fileName` en el equipo local. El archivo se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una página ASP.NET, recibirá un error si la cuenta que se ejecuta bajo la página no tiene permiso para tener acceso al archivo local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.InvalidOperationException">Otro subproceso está usando el archivo local especificado por <paramref name="fileName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <param name="fileName">Nombre del archivo que se va a colocar en el equipo local.</param>
        <summary>Descarga el recurso especificado en un archivo local como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task" />.  
  
Objeto de tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task> objeto se completará después de que se ha descargado el recurso de datos.  
  
 Este método descarga el recurso en el URI especificado en el `address` parámetro. Cuando la descarga se completa correctamente, el archivo descargado se denomina `fileName` en el equipo local. El archivo se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Al usar este método en una página ASP.NET, recibirá un error si la cuenta que se ejecuta bajo la página no tiene permiso para tener acceso al archivo local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.InvalidOperationException">Otro subproceso está usando el archivo local especificado por <paramref name="fileName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando una operación de descarga asincrónica transfiere correctamente una parte o la totalidad de los datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que progresa una descarga asincrónica. Este evento se desencadena cuando se inician las descargas mediante cualquiera de los métodos siguientes.  
  
|Método|Descripción|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Descarga los datos desde un recurso y devuelve un <xref:System.Byte> matriz sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Descarga los datos desde un recurso en un archivo local, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Devuelve los datos de un recurso, sin bloquear el subproceso que realiza la llamada.|  
  
 El <xref:System.Net.DownloadProgressChangedEventHandler> es el delegado de este evento. La <xref:System.Net.DownloadProgressChangedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Una transferencia de archivos FTP pasiva siempre mostrará un porcentaje de progreso de cero, ya que el servidor no envió el tamaño del archivo. Para mostrar el progreso, puede cambiar la conexión FTP a activa reemplazando el <xref:System.Net.WebClient.GetWebRequest%2A> método virtual:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 En el ejemplo de código siguiente se muestra una implementación de un controlador para este evento.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso solicitado como <see cref="T:System.String" />. El recurso para descargar se puede especificar bien como una <see cref="T:System.String" /> que contiene el URI, bien como un <see cref="T:System.Uri" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.String" /> que contiene el identificador URI para la descarga.</param>
        <summary>Descarga el recurso solicitado como <see cref="T:System.String" />. El recurso para descargar se especifica como una <see cref="T:System.String" /> que contiene el URI.</summary>
        <returns>Una <see cref="T:System.String" /> que contiene el recurso solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera el recurso especificado. Una vez descargado el recurso, el método usa la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este método.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.NotSupportedException">Se ha llamado al método en varios subprocesos simultáneamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Objeto <see cref="T:System.Uri" /> que contiene el identificador URI para la descarga.</param>
        <summary>Descarga el recurso solicitado como <see cref="T:System.String" />. El recurso que se descarga se especifica como un <see cref="T:System.Uri" />.</summary>
        <returns>Una <see cref="T:System.String" /> que contiene el recurso solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera el recurso especificado. Una vez descargado el recurso, el método usa la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método se bloquea mientras se descarga el recurso. Para descargar un recurso y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.DownloadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
        <exception cref="T:System.NotSupportedException">Se ha llamado al método en varios subprocesos simultáneamente.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso especificado como <see cref="T:System.String" /> o <see cref="T:System.Uri" />. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> que contiene el identificador URI para la descarga.</param>
        <summary>Descarga el recurso especificado como <see cref="T:System.Uri" />. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El recurso se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Después de descargar el recurso, este método utiliza la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para descargar un recurso y el bloque al esperar la respuesta del servidor, use el <xref:System.Net.WebClient.DownloadString%2A> método. Cuando se complete la descarga, el <xref:System.Net.WebClient.DownloadStringCompleted> provoca el evento. La aplicación debe controlar este evento para recibir una notificación. La cadena descargada está disponible en el <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> propiedad.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> que contiene el identificador URI para la descarga.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Descarga la cadena especificada en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El recurso se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Después de descargar el recurso, este método utiliza la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método no bloquea el subproceso de llamada mientras se descarga el recurso. Para descargar un recurso y el bloque al esperar la respuesta del servidor, use el <xref:System.Net.WebClient.DownloadString%2A> método. Cuando se complete la descarga, el <xref:System.Net.WebClient.DownloadStringCompleted> provoca el evento. La aplicación debe controlar este evento para recibir una notificación. La cadena descargada está disponible en el <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> propiedad.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de descarga de recursos asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación asincrónica para descargar un recurso como una cadena. Estas operaciones se inician mediante una llamada a la <xref:System.Net.WebClient.DownloadStringAsync%2A> métodos.  
  
 El <xref:System.Net.DownloadStringCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.DownloadStringCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el recurso como un <see cref="T:System.String" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea.  Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <summary>Descarga el recurso como un <see cref="T:System.String" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se ha descargado el recurso de datos.  El recurso se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Después de descargar el recurso, este método utiliza la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método no bloquea el subproceso de llamada mientras se descarga el recurso.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a descargar.</param>
        <summary>Descarga el recurso como un <see cref="T:System.String" /> desde el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el recurso descargado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se ha descargado el recurso de datos. El recurso se descarga de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Después de descargar el recurso, este método utiliza la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad que se va a convertir el recurso a un <xref:System.String>. Este método no bloquea el subproceso de llamada mientras se descarga el recurso.  
  
 Puede usar el <xref:System.Net.WebClient.CancelAsync%2A> método para cancelar operaciones asincrónicas que no se han completado.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece el objeto <see cref="T:System.Text.Encoding" /> utilizado para cargar y descargar cadenas.</summary>
        <value><see cref="T:System.Text.Encoding" /> que se utiliza para codificar las cadenas. El valor predeterminado de esta propiedad es la codificación devuelta por <see cref="P:System.Text.Encoding.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadString%2A> y <xref:System.Net.WebClient.UploadStringAsync%2A> métodos utilizan esta propiedad para convertir la cadena especificada en un <xref:System.Byte> matriz antes de cargar la cadena. Para obtener más información, consulte el <xref:System.Text.Encoding.GetBytes%2A> método.  
  
 Cuando se descarga una cadena mediante la <xref:System.Net.WebClient.DownloadString%2A> o <xref:System.Net.WebClient.DownloadStringAsync%2A> métodos, <xref:System.Net.WebClient> usa el <xref:System.Text.Encoding> devuelto por esta opción para convertir los datos descargados <xref:System.Byte> matriz en una cadena. Para obtener más información, consulte el <xref:System.Text.Encoding.GetString%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el valor de esta propiedad.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> que identifica el recurso que se va a solicitar.</param>
        <summary>Devuelve un objeto <see cref="T:System.Net.WebRequest" /> para el recurso especificado.</summary>
        <returns>Nuevo objeto <see cref="T:System.Net.WebRequest" /> para el recurso especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método copia existente <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>y el método recién creado <xref:System.Net.WebRequest> objeto.  
  
 Puede llamar a este método solo por las clases que heredan de <xref:System.Net.WebClient>. Se proporciona para permitir que los herederos acceso subyacente <xref:System.Net.WebRequest> objeto. Las clases derivadas deben llamar a la implementación de clase base <xref:System.Net.WebClient.GetWebRequest%2A> para asegurarse de que el método funciona según lo previsto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve el objeto <see cref="T:System.Net.WebResponse" /> correspondiente al objeto <see cref="T:System.Net.WebRequest" /> especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.Net.WebRequest" /> que se utiliza para obtener la respuesta.</param>
        <summary>Devuelve el objeto <see cref="T:System.Net.WebResponse" /> correspondiente al objeto <see cref="T:System.Net.WebRequest" /> especificado.</summary>
        <returns><see cref="T:System.Net.WebResponse" /> que contiene la respuesta para el objeto <see cref="T:System.Net.WebRequest" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto devuelto por este método se obtiene mediante una llamada a la <xref:System.Net.WebRequest.GetResponse%2A> método en el objeto <xref:System.Net.WebRequest> objeto.  
  
 Puede llamar a este método solo por las clases que heredan de <xref:System.Net.WebClient>. Se proporciona para permitir que los herederos acceso subyacente <xref:System.Net.WebResponse> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.Net.WebRequest" /> que se utiliza para obtener la respuesta.</param>
        <param name="result">Objeto <see cref="T:System.IAsyncResult" /> obtenido en una llamada anterior a <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</param>
        <summary>Devuelve el objeto <see cref="T:System.Net.WebResponse" /> correspondiente al objeto <see cref="T:System.Net.WebRequest" /> especificado utilizando el objeto <see cref="T:System.IAsyncResult" /> especificado.</summary>
        <returns><see cref="T:System.Net.WebResponse" /> que contiene la respuesta para el objeto <see cref="T:System.Net.WebRequest" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto devuelto por este método se obtiene mediante una llamada a la <xref:System.Net.WebRequest.EndGetResponse%2A> método en el objeto <xref:System.Net.WebRequest> objeto.  
  
 Puede llamar a este método solo por las clases que heredan de <xref:System.Net.WebClient>. Se proporciona para permitir que los herederos acceso subyacente <xref:System.Net.WebResponse> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una colección de pares de nombre y valor de encabezado asociados a la solicitud.</summary>
        <value><see cref="T:System.Net.WebHeaderCollection" /> que contiene pares de nombre y valor de encabezado asociados a esta solicitud.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.Headers%2A> propiedad contiene un <xref:System.Net.WebHeaderCollection> instancia que contiene los encabezados de protocolo que el <xref:System.Net.WebClient> envía con la solicitud.  
  
 Algunos encabezados comunes se consideran restringidos y están protegidos por el sistema y no se puede establecer o cambiar en un <xref:System.Net.WebHeaderCollection> objeto. Cualquier intento de establecer uno de estos encabezados restringidos en el <xref:System.Net.WebHeaderCollection> objeto asociado con un <xref:System.Net.WebClient> objeto producirá una excepción más adelante cuando se intenta enviar el <xref:System.Net.WebClient> solicitud.  
  
 Encabezados restringidos por el sistema incluyen, pero no se limitan a lo siguiente:  
  
-   Fecha  
  
-   administrador de flujos de trabajo  
  
 Además, algunos otros encabezados también están restringidos al usar un <xref:System.Net.WebClient> objeto. Estos encabezados restringidos incluyen, pero no se limitan a lo siguiente:  
  
-   Aceptar  
  
-   Conexión  
  
-   Longitud del contenido  
  
-   Espera (cuando el valor se establece en "100-continuar"  
  
-   If-Modified-Since  
  
-   Intervalo  
  
-   Codificación de transferencia  
  
 La <xref:System.Net.HttpWebRequest> clase tiene propiedades para establecer algunos de los encabezados anteriores. Si es importante para una aplicación establecer estos encabezados, el <xref:System.Net.HttpWebRequest> clase se debe usar en lugar de la <xref:System.Net.WebRequest> clase.  
  
 No debe suponer que los valores de encabezado permanecerá sin cambios, ya que las memorias caché y los servidores Web pueden cambiar o agregar encabezados a una solicitud Web.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Net.WebClient.Headers%2A> colección para establecer el HTTP `Content-Type` encabezado `application/x-www-form-urlencoded,` para notificar el servidor que los datos del formulario se adjunta a la publicación.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina si hay una solicitud Web en curso.</summary>
        <value>Es <see langword="true" /> si la solicitud Web todavía está en curso; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.DownloadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.DownloadDataCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md)  
  
 El método <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.DownloadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.DownloadFileCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.DownloadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.DownloadProgressChanged> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.DownloadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.DownloadStringCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.OpenReadCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.OpenReadCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.OpenReadCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnOpenReadCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.OpenWriteCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.OpenWriteCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.UploadDataCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.UploadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.UploadDataCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnUploadDataCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.UploadFileCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.UploadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.UploadFileCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnUploadFileCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.UploadProgressChangedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.UploadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.UploadProgressChanged> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnUploadProgressChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.UploadStringCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.UploadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.UploadStringCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnUploadStringCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.UploadValuesCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.WebClient.UploadValuesCompleted> se produce el evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método que se puede personalizar mediante una clase derivada de <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.WriteStreamClosedEventArgs" /> que contiene datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia legible para los datos descargados de un recurso con el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identificador URI especificado como <see cref="T:System.String" /> desde el que se descargan los datos.</param>
        <summary>Abre una secuencia legible de los datos descargados desde un recurso con el URI especificado como <see cref="T:System.String" />.</summary>
        <returns>Un objeto <see cref="T:System.IO.Stream" /> que se utiliza para leer datos de un recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenRead%2A> método crea un <xref:System.IO.Stream> instancia utilizada para leer el contenido del recurso especificado por el `address` parámetro. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenReadAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 El siguiente ejemplo de código abre el recurso identificado por `uriString` y muestra los resultados en la consola del sistema. Tenga en cuenta que el <xref:System.IO.Stream> devuelto por <xref:System.Net.WebClient.OpenRead%2A> se cierra cuando se ha leído los datos.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar los datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identificador URI especificado como <see cref="T:System.Uri" /> desde el que se descargan los datos.</param>
        <summary>Abre una secuencia legible de los datos descargados desde un recurso con el URI especificado como <see cref="T:System.Uri" />.</summary>
        <returns>Un objeto <see cref="T:System.IO.Stream" /> que se utiliza para leer datos de un recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenRead%2A> método crea un <xref:System.IO.Stream> instancia utilizada para leer el contenido del recurso especificado por el `address` parámetro. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenReadAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 **Tenga en cuenta** este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al descargar los datos.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia legible que contiene el recurso especificado. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a recuperar.</param>
        <summary>Abre una secuencia legible que contiene el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para tener acceso al recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando la secuencia está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.OpenReadCompleted> eventos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Este método no bloquea el subproceso de llamada mientras se abre la secuencia. Para bloquear mientras espera a la secuencia, use el <xref:System.Net.WebClient.OpenReadAsync%2A> método.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto del recurso solicitado. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El URI obtenido mediante la combinación de <see cref="P:System.Net.WebClient.BaseAddress" /> y la dirección no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a recuperar.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Abre una secuencia legible que contiene el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para tener acceso al recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando la secuencia está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.OpenReadCompleted> eventos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Este método no bloquea el subproceso de llamada mientras se abre la secuencia. Para bloquear mientras espera a la secuencia, use el <xref:System.Net.WebClient.OpenRead%2A> método.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto del recurso solicitado. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El URI obtenido mediante la combinación de <see cref="P:System.Net.WebClient.BaseAddress" /> y la dirección no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación asincrónica para abrir una secuencia que contiene un recurso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación asincrónica para abrir una secuencia que contiene un recurso. Estas operaciones se inician mediante una llamada a la <xref:System.Net.WebClient.OpenReadAsync%2A> métodos.  
  
 El <xref:System.Net.OpenReadCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.OpenReadCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia legible que contiene el recurso especificado como una operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a recuperar.</param>
        <summary>Abre una secuencia legible que contiene el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para leer datos de un recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia legible para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para tener acceso al recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto del recurso solicitado. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El URI obtenido mediante la combinación de <see cref="P:System.Net.WebClient.BaseAddress" /> y la dirección no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que se va a recuperar.</param>
        <summary>Abre una secuencia legible que contiene el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para leer datos de un recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia legible para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para tener acceso al recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto del recurso solicitado. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es `null`, se anexa a `address`.  
  
 Este método usa el comando RETR para descargar un recurso de FTP. Para un recurso HTTP, se usa el método GET.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El URI obtenido mediante la combinación de <see cref="P:System.Net.WebClient.BaseAddress" /> y la dirección no es válido.  
  
O bien 
Se ha producido un error al descargar el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia para escribir datos en un recurso con el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado.</summary>
        <returns><see cref="T:System.IO.Stream" /> que se utiliza para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenWrite%2A> método devuelve una secuencia de escritura que se usa para enviar datos a un recurso. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenWriteAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente lee los datos de la línea de comandos y usa <xref:System.Net.WebClient.OpenWrite%2A> para obtener una secuencia para escribir los datos. Tenga en cuenta que el <xref:System.IO.Stream> devuelto por <xref:System.Net.WebClient.OpenWrite%2A> se cierra después de que se envían los datos.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado.</summary>
        <returns><see cref="T:System.IO.Stream" /> que se utiliza para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenWrite%2A> método devuelve una secuencia de escritura que se usa para enviar datos a un recurso. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenWriteAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado mediante el método especificado.</summary>
        <returns><see cref="T:System.IO.Stream" /> que se utiliza para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenWrite%2A> método devuelve una secuencia de escritura que se usa para enviar datos a un recurso. La solicitud subyacente se realiza con el método especificado en el `method` parámetro. Los datos se envían al servidor cuando se cierra la secuencia. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenWriteAsync%2A> métodos.  
  
 Si el `method` parámetro especifica un método que no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no especifica una dirección absoluta, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente lee los datos de la línea de comandos y usa <xref:System.Net.WebClient.OpenWrite%2A> para obtener una secuencia que se usa para escribir los datos. Tenga en cuenta que el <xref:System.IO.Stream> devuelto por <xref:System.Net.WebClient.OpenWrite%2A> debe cerrarse para enviar los datos.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado mediante el método especificado.</summary>
        <returns><see cref="T:System.IO.Stream" /> que se utiliza para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.OpenWrite%2A> método devuelve una secuencia de escritura que se usa para enviar datos a un recurso. Este método se bloquea al abrir la secuencia. Para continuar la ejecución mientras se espera la secuencia, use uno de los <xref:System.Net.WebClient.OpenWriteAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia para escribir datos en el recurso especificado. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera una secuencia de escritura que se usa para enviar datos a un recurso. La secuencia se recupera mediante recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando la secuencia está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.OpenWriteCompleted> eventos. Cuando se cierra la secuencia, el subproceso se bloquea hasta que la solicitud se envía a `address` y se recibe una respuesta.  
  
 Este método no bloquea el subproceso de llamada mientras se abre la secuencia. Para bloquear mientras espera a la secuencia, use uno de los <xref:System.Net.WebClient.OpenWrite%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera una secuencia de escritura que se usa para enviar datos a un recurso. La secuencia se recupera mediante recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando la secuencia está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.OpenWriteCompleted> eventos. Cuando se cierra la secuencia, el subproceso se bloquea hasta que la solicitud se envía a `address` y se recibe una respuesta.  
  
 Este método no bloquea el subproceso de llamada mientras se abre la secuencia. Para bloquear mientras espera a la secuencia, use uno de los <xref:System.Net.WebClient.OpenWrite%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Abre una secuencia para escribir datos en el recurso especificado mediante el método especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método recupera una secuencia de escritura que se usa para enviar datos a un recurso. La secuencia se recupera de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando la secuencia está disponible, agregue un controlador de eventos para el <xref:System.Net.WebClient.OpenWriteCompleted> eventos. El contenido de la secuencia se envía al servidor cuando se cierra la secuencia.  
  
 Si el `method` parámetro especifica un método que no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Este método no bloquea el subproceso de llamada mientras se abre la secuencia. Para bloquear mientras espera a la secuencia, use uno de los <xref:System.Net.WebClient.OpenWrite%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se completa una operación asincrónica para abrir una secuencia para escribir datos en un recurso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación asincrónica para abrir una secuencia que se usa para enviar datos a un recurso. Estas operaciones se inician mediante una llamada a la <xref:System.Net.WebClient.OpenWriteAsync%2A> métodos.  
  
 El <xref:System.Net.OpenWriteCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.OpenWriteCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abra una secuencia para escribir datos en el recurso especificado como una operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <summary>Abra una secuencia para escribir datos en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia de escritura para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para escribir datos en el recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <summary>Abra una secuencia para escribir datos en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia de escritura para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para escribir datos en el recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <summary>Abra una secuencia para escribir datos en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia de escritura para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para escribir datos en el recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Si el `method` parámetro especifica un método que no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <summary>Abra una secuencia para escribir datos en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.IO.Stream" /> utilizado para escribir datos en el recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la se ha abierto una secuencia de escritura para el recurso de datos. Este método no bloquea el subproceso de llamada mientras se abre la secuencia.  
  
 Este método recupera un <xref:System.IO.Stream> instancia utilizada para escribir datos en el recurso especificado por el `address` parámetro. La secuencia se obtiene con recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
> [!NOTE]
>  Debe llamar a <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> cuando haya terminado con el <xref:System.IO.Stream> para evitar quedarse sin recursos del sistema.  
  
 Si el `method` parámetro especifica un método que no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el servidor proxy utilizado por este objeto <see cref="T:System.Net.WebClient" />.</summary>
        <value>Instancia de <see cref="T:System.Net.IWebProxy" /> utilizada para enviar las solicitudes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.Proxy%2A> propiedad identifica el <xref:System.Net.IWebProxy> instancia que se comunica con los servidores remotos en nombre de este <xref:System.Net.WebClient> objeto. El proxy está establecido por el sistema utilizando los archivos de configuración y la configuración de red de área Local de Internet Explorer. Para especificar que no se debe usar ningún proxy, establezca la <xref:System.Net.WebClient.Proxy%2A> propiedad `null`.  
  
 Para obtener información sobre la detección automática de proxy, consulte [detección automática de Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Net.WebClient.Proxy" /> está establecido en <see langword="null" />.</exception>
        <permission cref="T:System.Net.WebPermission">no está restringido. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una colección de pares de nombre y valor de consulta asociados a la solicitud.</summary>
        <value><see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene los pares de nombre y valor de consulta que están asociados a esta solicitud. Si no hay ningún par asociado a la solicitud, el valor es un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.QueryString%2A> propiedad contiene un <xref:System.Collections.Specialized.NameValueCollection> instancia que contiene pares nombre/valor que se anexan al URI como una cadena de consulta. El contenido de la <xref:System.Net.WebClient.QueryString%2A> propiedad van precedidas por un signo de interrogación (?) y pares nombre/valor están separados entre sí por una y comercial (&).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se toma la entrada del usuario desde la línea de comandos y compila un <xref:System.Collections.Specialized.NameValueCollection> que se asigna a la <xref:System.Net.WebClient.QueryString%2A> propiedad. A continuación, descarga la respuesta del servidor en un archivo local.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de pares de nombre/valor de encabezado asociados a la respuesta.</summary>
        <value><see cref="T:System.Net.WebHeaderCollection" /> que contiene los pares de nombre y valor de encabezado asociados a la respuesta, o <see langword="null" /> si no se ha recibido ninguna respuesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.ResponseHeaders%2A> propiedad contiene un <xref:System.Net.WebHeaderCollection> instancia que contiene información de encabezado del <xref:System.Net.WebClient> recibe con la respuesta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga y muestra el <xref:System.Net.WebClient.ResponseHeaders%2A> devuelto por un servidor.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga un búfer de datos en un recurso con el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en un recurso identificado por un URI.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadData%2A> método envía un búfer de datos a un recurso.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST. Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 El <xref:System.Net.WebClient.UploadData%2A> método envía el contenido de `data` al servidor sin codificarlo. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadDataAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se convierte una cadena especificada desde la consola para un <xref:System.Byte> de matriz y envía la matriz al servidor especificado mediante <xref:System.Net.WebClient.UploadData%2A>. Cualquier respuesta del servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al enviar los datos.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en un recurso identificado por un URI.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadData%2A> método envía un búfer de datos a un recurso.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST. Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 El <xref:System.Net.WebClient.UploadData%2A> método envía el contenido de `data` al servidor sin codificarlo. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadDataAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al enviar los datos.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método HTTP que se utiliza para enviar los datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en el recurso especificado, utilizando el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadData%2A> método envía un búfer de datos a un recurso mediante el método HTTP especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadDataAsync%2A> métodos.  
  
 El <xref:System.Net.WebClient.UploadData%2A> método envía el contenido de `data` al servidor sin codificarlo.  
  
 Si el `method` parámetro especifica un verbo que no se entienden por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente convierte una cadena escrita desde la consola en una matriz de bytes y envía la matriz al servidor especificado mediante <xref:System.Net.WebClient.UploadData%2A>. Cualquier respuesta del servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al cargar los datos.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método HTTP que se utiliza para enviar los datos al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en el recurso especificado, utilizando el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadData%2A> método envía un búfer de datos a un recurso mediante el método HTTP especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadDataAsync%2A> métodos.  
  
 El <xref:System.Net.WebClient.UploadData%2A> método envía el contenido de `data` al servidor sin codificarlo.  
  
 Si el `method` parámetro especifica un verbo que no se entienden por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al cargar los datos.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga un búfer de datos en un recurso identificado por un URI. Este método no bloquea el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en un recurso identificado mediante un URI utilizando el método POST. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos. Para recibir una notificación cuando se complete la carga de datos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadDataCompleted> eventos.  
  
 Este método no bloquea el subproceso que realiza la llamada mientras se envían los datos. Para enviar datos y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadData%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos en un recurso identificado mediante un URI utilizando el método POST. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos. Para recibir una notificación cuando se complete la carga de datos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadDataCompleted> eventos.  
  
 Este método no bloquea el subproceso que realiza la llamada mientras se envían los datos. Para enviar datos y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadData%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Carga un búfer de datos en un recurso identificado mediante un URI, utilizando el método especificado e identificando el token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos. Para recibir una notificación cuando se complete la carga de datos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadDataCompleted> eventos.  
  
 Este método no bloquea el subproceso que realiza la llamada mientras se envían los datos. Para enviar datos y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadData%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de carga de datos asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación de carga asincrónica de datos. Cargas de datos asincrónicas se inician mediante una llamada a la <xref:System.Net.WebClient.UploadDataAsync%2A> métodos.  
  
 El <xref:System.Net.UploadDataCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.UploadDataCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga un búfer de datos que contiene una matriz de <see cref="T:System.Byte" /> al URI especificado como una operación asincrónica utilizando un objeto de tarea.  Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos que contiene una matriz de <see cref="T:System.Byte" /> al URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el búfer de datos se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la un búfer de datos se ha cargado en el recurso.  
  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos que contiene una matriz de <see cref="T:System.Byte" /> al URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el búfer de datos se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la un búfer de datos se ha cargado en el recurso.  
  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos que contiene una matriz de <see cref="T:System.Byte" /> al URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el búfer de datos se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la un búfer de datos se ha cargado en el recurso.  
  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá los datos.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Búfer de datos que se enviará al recurso.</param>
        <summary>Carga un búfer de datos que contiene una matriz de <see cref="T:System.Byte" /> al URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el búfer de datos se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la un búfer de datos se ha cargado en el recurso.  
  
 Este método envía un búfer de datos a un recurso. El búfer de datos se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. No se codifican los datos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga un archivo local en un recurso con el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. Por ejemplo, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Archivo que se enviará al recurso. Por ejemplo, "samplefile.txt".</param>
        <summary>Carga el archivo local especificado en un recurso con el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadFile%2A> método envía un archivo local a un recurso. Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este método se bloquea al cargar el archivo. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFileAsync%2A> métodos.  
  
 El `POST` método se define mediante HTTP. Si la solicitud subyacente no utiliza HTTP y `POST` no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se carga el archivo especificado en el URI especificado mediante <xref:System.Net.WebClient.UploadFile%2A>. Cualquier respuesta devuelta por el servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 En el ejemplo de código siguiente se muestra una página ASP.NET que puede aceptar registra los archivos y es adecuado para su uso con el <xref:System.Net.WebClient.UploadFile%2A> método. La página debe residir en un servidor Web. Su dirección proporciona el valor para el `address` parámetro de la <xref:System.Net.WebClient.UploadFile%2A> método.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene caracteres no válidos o no existe.  
  
O bien 
Se ha producido un error al cargar el archivo.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. Por ejemplo, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Archivo que se enviará al recurso. Por ejemplo, "samplefile.txt".</param>
        <summary>Carga el archivo local especificado en un recurso con el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadFile%2A> método envía un archivo local a un recurso. Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
 Este método se bloquea al cargar el archivo. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFileAsync%2A> métodos.  
  
 El `POST` método se define mediante HTTP. Si la solicitud subyacente no utiliza HTTP y `POST` no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene caracteres no válidos o no existe.  
  
O bien 
Se ha producido un error al cargar el archivo.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo.</param>
        <param name="method">Método que se utiliza para enviar el archivo al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en el recurso especificado mediante el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando la dirección especifica un recurso HTTP, el <xref:System.Net.WebClient.UploadFile%2A> método envía un archivo local a un recurso mediante el método HTTP especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar el archivo. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFileAsync%2A> métodos.  
  
 Si el `method` parámetro especifica un verbo que no se entiende por el servidor o el `address` recursos, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se carga el archivo especificado en el URI especificado mediante <xref:System.Net.WebClient.UploadFile%2A>. Cualquier respuesta devuelta por el servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 En el ejemplo de código siguiente se muestra una página ASP.NET que puede aceptar registra los archivos y es adecuado para su uso con el <xref:System.Net.WebClient.UploadFile%2A> método. La página debe residir en un servidor Web. Su dirección proporciona el valor para el `address` parámetro de la <xref:System.Net.WebClient.UploadFile%2A> método.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene caracteres no válidos o no existe.  
  
O bien 
Se ha producido un error al cargar el archivo.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo.</param>
        <param name="method">Método que se utiliza para enviar el archivo al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en el recurso especificado mediante el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando la dirección especifica un recurso HTTP, el <xref:System.Net.WebClient.UploadFile%2A> método envía un archivo local a un recurso mediante el método HTTP especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar el archivo. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFileAsync%2A> métodos.  
  
 Si el `method` parámetro especifica un verbo que no se entiende por el servidor o el `address` recursos, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene caracteres no válidos o no existe.  
  
O bien 
Se ha producido un error al cargar el archivo.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga el archivo local especificado en el recurso especificado. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="fileName">Archivo que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en el recurso especificado mediante el método POST. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando se complete la carga de archivos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadFileCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía el archivo. Para enviar un archivo y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFile%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en el recurso especificado mediante el método POST. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando se complete la carga de archivos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadFileCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía el archivo. Para enviar un archivo y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFile%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo que se enviará al recurso.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Carga el archivo local especificado en el recurso especificado mediante el método POST. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando se complete la carga de archivos, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadFileCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía el archivo. Para enviar un archivo y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadFile%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para acceder al archivo local. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de carga de archivos asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación de carga de archivos asincrónica. Cargas de archivos asincrónicas se inician mediante una llamada a la <xref:System.Net.WebClient.UploadFileAsync%2A> métodos.  
  
 El <xref:System.Net.UploadFileCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.UploadFileCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga el archivo local especificado en un recurso como operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="fileName">Archivo local que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en un recurso como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el archivo se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez cargado el archivo al recurso. El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="fileName">Archivo local que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en un recurso como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el archivo se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez cargado el archivo al recurso. El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo local que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en un recurso como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el archivo se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez cargado el archivo al recurso. El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 De forma predeterminada, este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá el archivo. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método que se utiliza para enviar datos al recurso. Si es <see langword="null" />, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="fileName">Archivo local que se enviará al recurso.</param>
        <summary>Carga el archivo local especificado en un recurso como operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta recibida de recursos cuando el archivo se cargó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez cargado el archivo al recurso. El archivo se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 De forma predeterminada, este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="fileName" /> es <see langword="null" />, es <see cref="F:System.String.Empty" />, contiene un carácter no válido o la ruta de acceso al archivo especificada no existe.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El encabezado <see langword="Content-type" /> comienza con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando una operación de carga asincrónica transfiere correctamente una parte o la totalidad de los datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que progresa una carga asincrónica. Este evento se desencadena cuando las cargas se inician mediante cualquiera de los métodos siguientes.  
  
|Método|Descripción|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Envía un <xref:System.Byte> matriz para el recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Envía un archivo local al recurso, sin bloquear el subproceso que realiza la llamada.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Envía un <xref:System.Collections.Specialized.NameValueCollection> a los recursos y devuelve un <xref:System.Byte> matriz que contiene las respuestas, sin bloquear el subproceso que realiza la llamada.|  
  
 El <xref:System.Net.UploadProgressChangedEventHandler> es el delegado de este evento. La <xref:System.Net.UploadProgressChangedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 En el ejemplo de código siguiente se muestra una implementación de un controlador para este evento.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga la cadena especificada en el recurso especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado mediante el método POST.</summary>
        <returns><see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena. Para enviar una cadena y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este método.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado mediante el método POST.</summary>
        <returns><see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena. Para enviar una cadena y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía (""), y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. Este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método <paramref name="method" />.</param>
        <param name="method">Método HTTP utilizado para enviar la cadena al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado mediante el método especificado.</summary>
        <returns><see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena. Para enviar una cadena y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este método.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. Este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método <paramref name="method" />.</param>
        <param name="method">Método HTTP utilizado para enviar la cadena al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado mediante el método especificado.</summary>
        <returns><see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena. Para enviar una cadena y continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadStringAsync%2A> métodos.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga la cadena especificada en el recurso especificado. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía una cadena a un recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Para recibir una notificación cuando se complete la carga de la cadena, puede agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadStringCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadString%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía una cadena a un recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Para recibir una notificación cuando se complete la carga de la cadena, puede agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadStringCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadString%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Carga la cadena especificada en el recurso especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía una cadena a un recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Para recibir una notificación cuando se complete la carga de la cadena, puede agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadStringCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadString%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se completa una operación de carga de cadenas asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que finaliza una operación de carga de cadenas asincrónica. Cargas de cadenas asincrónicas se inician mediante una llamada a la <xref:System.Net.WebClient.UploadStringAsync%2A> métodos.  
  
 El <xref:System.Net.UploadStringCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.UploadStringCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer un controlador de eventos para este evento.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga la cadena especificada en el recurso especificado como una operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la cadena se ha cargado en el recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la cadena se ha cargado en el recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la cadena se ha cargado en el recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la cadena. En el caso de los recursos HTTP, este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método POST, como un script o una página ASP.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">Cadena que se va a cargar.</param>
        <summary>Carga la cadena especificada en el recurso especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.String" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la cadena se ha cargado en el recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Este método se bloquea mientras se transmite la cadena.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga una colección de nombres y valores en un recurso con el URI especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadValues%2A> método envía un <xref:System.Collections.Specialized.NameValueCollection> a un servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, el <xref:System.Net.WebClient.UploadValues%2A> método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se reúne información del usuario (nombre, edad y dirección) y envía los valores en el servidor mediante <xref:System.Net.WebClient.UploadValues%2A>. Cualquier respuesta del servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
El encabezado <see langword="Content-type" /> no es <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadValues%2A> método envía un <xref:System.Collections.Specialized.NameValueCollection> a un servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, el <xref:System.Net.WebClient.UploadValues%2A> método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
El encabezado <see langword="Content-type" /> no es <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado, utilizando el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadValues%2A> método envía un <xref:System.Collections.Specialized.NameValueCollection> a un recurso mediante el método especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos.  
  
 Si el `Content-type` encabezado es `null`, <xref:System.Net.WebClient.UploadValues%2A> método lo establece en `application/x-www-form-urlencoded`.  
  
 Si el `method` parámetro especifica un verbo que no se entienden por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se reúne información del usuario (nombre, edad y dirección) y envía los valores en el servidor mediante <xref:System.Net.WebClient.UploadValues%2A>. Cualquier respuesta del servidor se muestra en la consola.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El valor del encabezado <see langword="Content-type" /> no es <see langword="null" /> ni <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="method">Método HTTP que se utiliza para enviar el archivo al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado, utilizando el método especificado.</summary>
        <returns>Matriz <see cref="T:System.Byte" /> que contiene el cuerpo de la respuesta del recurso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.WebClient.UploadValues%2A> método envía un <xref:System.Collections.Specialized.NameValueCollection> a un recurso mediante el método especificado en el `method` parámetro y devuelve una respuesta desde el servidor. Este método se bloquea al cargar los datos. Para continuar la ejecución mientras se espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos.  
  
 Si el `Content-type` encabezado es `null`, <xref:System.Net.WebClient.UploadValues%2A> método lo establece en `application/x-www-form-urlencoded`.  
  
 Si el `method` parámetro especifica un verbo que no se entienden por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 El valor de <paramref name="data" /> es <see langword="null" />.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El valor del encabezado <see langword="Content-type" /> no es <see langword="null" /> ni <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección. Este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método predeterminado.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga los datos de la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía una cadena a un recurso. La cadena se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Antes de cargar la cadena, este método lo convierte en un <xref:System.Byte> matriz mediante la codificación especificada en el <xref:System.Net.WebClient.Encoding%2A> propiedad. Para recibir una notificación cuando se complete la carga de la cadena, puede agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadStringCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadString%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección. Este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método <paramref name="method" />.</param>
        <param name="method">Método que se utiliza para enviar la cadena al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga los datos de la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado, utilizando el método especificado. Este método no bloquea el subproceso que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía los datos contenidos en un <xref:System.Collections.Specialized.NameValueCollection> a la `address` recursos. Utilice este método para enviar datos de formulario a un URI para su procesamiento. Los datos se envían con el tipo de medio formato form-urlencoded; el valor del encabezado Content-Type debe establecerse en "application/x--www-form-urlencoded". El encabezado se establece correctamente de forma predeterminada. El <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos inician una <xref:System.Net.WebException> si se llama a este método con un conjunto diferente de valor de encabezado Content-Type en el <xref:System.Net.WebClient.Headers%2A> colección.  
  
 Si el `method` método no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 El <xref:System.Collections.Specialized.NameValueCollection> se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando se complete la operación de carga, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadValuesCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValues%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no está vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección. Este identificador URI debe identificar un recurso que pueda aceptar una solicitud enviada con el método <paramref name="method" />.</param>
        <param name="method">Método HTTP utilizado para enviar la cadena al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Carga los datos de la colección de nombres y valores especificada en el recurso identificado mediante el URI especificado, utilizando el método especificado. Este método no bloquea el subproceso que realiza la llamada y permite al llamador pasar un objeto al método que se invoca cuando la operación finaliza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método envía los datos contenidos en un <xref:System.Collections.Specialized.NameValueCollection> a la `address` recursos. Utilice este método para enviar datos de formulario a un URI para su procesamiento. Los datos se envían con el tipo de medio formato form-urlencoded; el valor del encabezado Content-Type debe establecerse en "application/x--www-form-urlencoded". El encabezado se establece correctamente de forma predeterminada. El <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos inician una <xref:System.Net.WebException> si se llama a este método con un conjunto diferente de valor de encabezado Content-Type en el <xref:System.Net.WebClient.Headers%2A> colección.  
  
 Si el `method` método no se entiende por el servidor, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 El <xref:System.Collections.Specialized.NameValueCollection> se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos. Para recibir una notificación cuando se complete la operación de carga, agregar un controlador de eventos para el <xref:System.Net.WebClient.UploadValuesCompleted> eventos.  
  
 Este método no bloquea el subproceso de llamada mientras se envía la cadena. Para enviar una cadena y bloquear mientras espera la respuesta del servidor, utilice uno de los <xref:System.Net.WebClient.UploadValues%2A> métodos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no está vacía, se anexa a `address`.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza una operación de carga asincrónica de una colección de nombres y valores.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena cada vez que una carga asincrónica de un <xref:System.Collections.Specialized.NameValueCollection> datos del objeto se complete. Estas operaciones de carga se inician mediante una llamada a la <xref:System.Net.WebClient.UploadValuesAsync%2A> métodos.  
  
 El <xref:System.Net.UploadValuesCompletedEventHandler> es el delegado de este evento. La <xref:System.Net.UploadValuesCompletedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga la colección de nombre/valor en el recurso identificado por el URI especificado como una operación asincrónica utilizando un objeto de tarea. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombre/valor en el recurso identificado por el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la colección de nombre/valor se ha cargado en el recurso. La colección de nombre/valor se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, este método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
El encabezado <see langword="Content-type" /> no es <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombre/valor en el recurso identificado por el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la colección de nombre/valor se ha cargado en el recurso. La colección de nombre/valor se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, este método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
El valor del encabezado <see langword="Content-type" /> no es <see langword="null" /> ni <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="method">Método HTTP que se utiliza para enviar la colección al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombre/valor en el recurso identificado por el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la colección de nombre/valor se ha cargado en el recurso. La colección de nombre/valor se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, este método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
El encabezado <see langword="Content-type" /> no es <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI del recurso que recibirá la colección.</param>
        <param name="method">Método HTTP que se utiliza para enviar la colección al recurso. Si es null, el valor predeterminado es POST para http y STOR para ftp.</param>
        <param name="data">La <see cref="T:System.Collections.Specialized.NameValueCollection" /> que se enviará al recurso.</param>
        <summary>Carga la colección de nombre/valor en el recurso identificado por el URI especificado como una operación asincrónica utilizando un objeto de tarea.</summary>
        <returns>Devuelve <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objeto de tarea que representa la operación asincrónica. La propiedad de <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz de <see cref="T:System.Byte" /> que contiene la respuesta enviada por el servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de la colección de nombre/valor se ha cargado en el recurso. La colección de nombre/valor se envía de forma asincrónica utilizando recursos de subproceso que se asignan automáticamente desde el grupo de subprocesos.  
  
 Se pueden cancelar operaciones asincrónicas que no se han completado con el <xref:System.Net.WebClient.CancelAsync%2A> método.  
  
 Si el servidor no entiende la solicitud subyacente, las clases del protocolo subyacente determinan lo que ocurre. Normalmente, un <xref:System.Net.WebException> se produce con la <xref:System.Net.WebException.Status%2A> propiedad se establece para indicar el error.  
  
 Si el encabezado Content-type es `null`, este método lo establece en "application/x--www-form-urlencoded".  
  
 Si el <xref:System.Net.WebClient.BaseAddress%2A> propiedad no es una cadena vacía ("") y `address` no contiene un URI absoluto, `address` debe ser un URI relativo que se combina con <xref:System.Net.WebClient.BaseAddress%2A> para formar el URI absoluto de los datos solicitados. Si el <xref:System.Net.WebClient.QueryString%2A> propiedad no es una cadena vacía, se anexa a `address`.  
  
 Este método utiliza el comando STOR para cargar un recurso FTP. Para un recurso HTTP, se utiliza el método POST.  
  
> [!NOTE]
>  Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">El identificador URI formado al combinar <see cref="P:System.Net.WebClient.BaseAddress" /> y <paramref name="address" /> no es válido.  
  
O bien 
 <paramref name="method" /> no puede utilizarse para enviar contenido.  
  
O bien 
No hubo respuesta del servidor que hospeda el recurso.  
  
O bien 
Se ha producido un error al abrir la secuencia.  
  
O bien 
El encabezado <see langword="Content-type" /> no es <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si se envían <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> con las solicitudes.</summary>
        <value>Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en `true` cuando las solicitudes realizadas por este <xref:System.Net.WebClient> objeto deban autenticarse, si lo solicita el servidor, utilizando las credenciales predeterminadas del usuario ha iniciado sesión actualmente. Para las aplicaciones cliente, este es el comportamiento deseado en la mayoría de los escenarios. Para las aplicaciones de nivel intermedio, como las aplicaciones ASP.NET, en lugar de usar esta propiedad, normalmente se establecería el <xref:System.Net.WebClient.Credentials%2A> propiedad a las credenciales del cliente en cuyo nombre se realiza la solicitud.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer esta propiedad.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se cierra una operación asincrónica para escribir datos en un recurso usando una secuencia de escritura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se provoca cada vez que una operación asincrónica utilizada para escribir datos en un recurso mediante una secuencia de escritura está cerrada. Estas operaciones como resultado de las llamadas a la <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> métodos.  
  
 El <xref:System.Net.WriteStreamClosedEventHandler> es el delegado de este evento. La <xref:System.Net.WriteStreamClosedEventArgs> clase proporciona el controlador de eventos con datos de evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>