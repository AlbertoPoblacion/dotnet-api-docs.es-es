<Type Name="IAuthenticationModule" FullName="System.Net.IAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d54d19e127f46c16df84529790dcfaf0f6146e95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAuthenticationModule" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticationModule" />
  <TypeSignature Language="DocId" Value="T:System.Net.IAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticationModule" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthenticationModule" />
  <TypeSignature Language="F#" Value="type IAuthenticationModule = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona la interfaz de autenticación base para módulos de autenticación de cliente Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IAuthenticationModule> interfaz define las propiedades y métodos que deben utilizar los módulos de autenticación personalizada.  
  
 Módulos de autenticación realizan el proceso de autenticación en su totalidad con un servidor, que responde a un desafío de autenticación según corresponda. Este proceso puede constar de las solicitudes a un servidor de autenticación independiente desde el servidor de recursos, así como las demás actividades necesarias para autenticar correctamente una solicitud para un URI.  
  
 Módulos de autenticación personalizados deben implementar la <xref:System.Net.IAuthenticationModule> de interfaz y, a continuación, registrar con el <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> método. Módulos de autenticación se registran también en la inicialización del programa al leer el archivo de configuración.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una clase de autenticación personalizada se crea mediante la implementación de la <xref:System.Net.IAuthenticationModule> interfaz. Para obtener un ejemplo completo, consulte la <xref:System.Net.AuthenticationManager> clase.  
  
 [!code-cpp[System.Net.Authentication#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#6)]
 [!code-csharp[System.Net.Authentication#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#6)]
 [!code-vb[System.Net.Authentication#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.AuthenticationManager" />
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Desafío de autenticación enviado por el servidor.</param>
        <param name="request">Instancia de <see cref="T:System.Net.WebRequest" /> asociada al desafío.</param>
        <param name="credentials">Credenciales asociadas al desafío.</param>
        <summary>Devuelve una instancia de la clase <see cref="T:System.Net.Authorization" /> en respuesta a un desafío de autenticación de un servidor.</summary>
        <returns>Instancia de <see cref="T:System.Net.Authorization" /> que contiene el mensaje de autorización para la solicitud, o <see langword="null" /> si no puede controlarse el desafío.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IAuthenticationModule.Authenticate%2A> método lleva a cabo el proceso de autenticación con el servidor y devuelve un <xref:System.Net.Authorization> de instancia para el <xref:System.Net.AuthenticationManager>.  
  
   
  
## Examples  
 En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.Net.IAuthenticationModule.Authenticate%2A>. Para obtener un ejemplo completo, consulte la <xref:System.Net.AuthenticationManager> clase.  
  
 [!code-cpp[System.Net.Authentication#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#3)]
 [!code-csharp[System.Net.Authentication#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#3)]
 [!code-vb[System.Net.Authentication#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="T:System.Net.AuthenticationManager" /> llamadas el <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> método en módulos de autenticación registrados para determinar qué módulo controla el desafío. Si el módulo de autenticación no puede controlar el desafío, el <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> método debe devolver <see langword="null" />. Si el módulo de autenticación encuentra un error mientras lleva a cabo el proceso de autenticación, <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> debe producir una excepción.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de autenticación proporcionado por este módulo de autenticación.</summary>
        <value>Cadena que indica el tipo de autenticación proporcionado por este módulo de autenticación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> propiedad identifica el tipo de autenticación implementado por este módulo de autenticación. El <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> propiedad se usa en la <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> método para determinar si se ha registrado el módulo de autenticación y por la <xref:System.Net.AuthenticationManager.Unregister%2A?displayProperty=nameWithType> método para quitar un módulo de autenticación registrado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar la propiedad <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>. Para obtener un ejemplo completo, consulte la <xref:System.Net.AuthenticationManager> clase.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPreAuthenticate">
      <MemberSignature Language="C#" Value="public bool CanPreAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPreAuthenticate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPreAuthenticate : bool" Usage="System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el módulo de autenticación admite la preautenticación.</summary>
        <value>
          <see langword="true" /> si el módulo de autorización admite la preautenticación; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> propiedad está establecida en `true` para indicar que el módulo de autenticación puede responder con válido <xref:System.Net.Authorization> instancia cuando la <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> se llama al método.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar la propiedad <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A>. Para obtener un ejemplo completo, consulte la <xref:System.Net.AuthenticationManager> clase.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Esto suele ser un valor fijo; el módulo de autenticación puede realizar la autenticación previa, o bien, no es posible.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Instancia de <see cref="T:System.Net.WebRequest" /> asociada a la solicitud de autenticación.</param>
        <param name="credentials">Credenciales asociadas a la solicitud de autenticación.</param>
        <summary>Devuelve una instancia de la clase <see cref="T:System.Net.Authorization" /> para una solicitud de autenticación a un servidor.</summary>
        <returns>Instancia de <see cref="T:System.Net.Authorization" /> que contiene el mensaje de autorización de la solicitud.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> propiedad es `true`, <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> método devolverá una instancia de la <xref:System.Net.Authorization> clase que contiene un mensaje de autenticación.  
  
   
  
## Examples  
 En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A>. Para obtener un ejemplo completo, consulte la <xref:System.Net.AuthenticationManager> clase.  
  
 [!code-cpp[System.Net.Authentication#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#4)]
 [!code-csharp[System.Net.Authentication#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#4)]
 [!code-vb[System.Net.Authentication#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>