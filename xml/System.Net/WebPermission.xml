<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebPermission.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5649954bbb823db8aa9c5cb951a2ef8c4268afaf4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">649954bbb823db8aa9c5cb951a2ef8c4268afaf4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebPermission">
          <source>Controls rights to access HTTP Internet resources.</source>
          <target state="translated">Controla los derechos de acceso a los recursos HTTP de Internet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> provides a set of methods and properties to control access to Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> Proporciona un conjunto de métodos y propiedades para controlar el acceso a recursos de Internet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>You can use a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> to provide either restricted or unrestricted access to your resource, based on the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> that is set when the <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> is created.</source>
          <target state="translated">Puede usar un <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> para proporcionar acceso restringido o sin restricción al recurso, basándose en la <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> que se establece cuando el <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> se crea.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> instance by calling its constructor using one of the following sets of parameters:</source>
          <target state="translated">Crear un <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> instancia mediante una llamada a su constructor con uno de los siguientes conjuntos de parámetros:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>No parameters.</source>
          <target state="translated">Sin parámetros.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>The default <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> is <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
          <target state="translated">El valor predeterminado de <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> es <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>A <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>Specify either <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> to allow any URI to be used in the target class, or <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> to allow access only to URIs that you specify through the use of the <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> method.</source>
          <target state="translated">Especifique <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> para permitir que cualquier URI que se usará en la clase de destino, o <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> para permitir el acceso sólo a los URI que especifican mediante el uso de la <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>A <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> value and a URI string.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> valor y una cadena URI.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>The specified URI has permissions granted by the <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> value.</source>
          <target state="translated">El URI especificado tiene los permisos concedidos por la <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>A <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> specifier and URI regular expression.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> especificador y expresión regular URI.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> hold the URIs to which you have granted access permission.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> contienen los identificadores URI a los que tienen permiso de acceso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>To add a URI to either of these lists, use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Para agregar un URI a cualquiera de estas listas, use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>If you pass <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> parameter, the URI will be added to the <ph id="ph3">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</source>
          <target state="translated">Si se pasa <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> como el <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> parámetro, el URI se agregará a la <ph id="ph3">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> will allow connections to your target class with URIs matching the <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> permitirá las conexiones a la clase de destino con el URI de coincidencia del <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>To deny access to an Internet resource, you must deny access to all the possible paths to that resource.</source>
          <target state="translated">Para denegar el acceso a un recurso de Internet, debe denegar el acceso a todas las posibles rutas de acceso a ese recurso.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>This requires calling <ph id="ph1">&lt;xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType&gt;</ph> with state parameter set to <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph>.</source>
          <target state="translated">Para ello, que realiza la llamada <ph id="ph1">&lt;xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType&gt;</ph> con parámetro de estado establecido en <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>A better approach is to allow access to the specific resource only.</source>
          <target state="translated">Un enfoque más adecuado consiste en permitir el acceso a ese recurso específico solo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>For more information about this subject, refer to the <bpt id="p1">[</bpt>NIB: Using the Deny Method<ept id="p1">](http://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)</ept> topic.</source>
          <target state="translated">Para obtener más información acerca de este tema, consulte el <bpt id="p1">[</bpt>NIB: utilizar el método Deny<ept id="p1">](http://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)</ept> tema.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>You need to deny access using only the resource canonical path.</source>
          <target state="translated">Debe denegar el acceso con solo el recurso ruta de acceso canónica.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>There is no need to use all the path's syntactical variations.</source>
          <target state="translated">No hay ninguna necesidad de usar variaciones sintácticas del todas la ruta de acceso.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>User name and default port information is stripped from the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> before the comparison with the regular expression argument that is supplied to the <ph id="ph2">&lt;xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29&gt;</ph> constructor.</source>
          <target state="translated">Información de usuario predeterminada y el nombre de puerto se extrae de la <ph id="ph1">&lt;xref:System.Uri&gt;</ph> antes de la comparación con el argumento de expresión regular que se proporciona a los <ph id="ph2">&lt;xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>If the regular expression contains user information or the default port number, then all incoming <ph id="ph1">&lt;xref:System.Uri&gt;</ph>s will fail to match the regular expression.</source>
          <target state="translated">Si la expresión regular contiene información de usuario o el número de puerto predeterminado, todos los entrantes <ph id="ph1">&lt;xref:System.Uri&gt;</ph>s se producirá un error para que coincida con la expresión regular.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>The following example demonstrates how to create a new instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una nueva instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> mediante un <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>Additional hosts are added to the connect and accept list of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">Hosts adicionales se agregan a la conexión y aceptar la lista de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebPermission">
          <source>Finally, the connect and accept list are displayed to the console.</source>
          <target state="translated">Por último, la conexión y aceptar la lista se muestran en la consola.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Net.WebPermission">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> class.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor">
          <source>This constructor creates an empty permission that does not grant any rights.</source>
          <target state="translated">Este constructor crea un permiso vacío que no concede ningún derecho.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class that passes all demands or fails all demands.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que aprueba todas las solicitudes o las desaprueba.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>The value of the <ph id="ph1">`state`</ph> parameter is either <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType&gt;</ph>, respectively yielding fully restricted or fully unrestricted access to all security variables.</source>
          <target state="translated">El valor de la <ph id="ph1">`state`</ph> parámetro sea <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType&gt;</ph>, respectivamente rinde totalmente restringido o totalmente acceso sin restricciones a todas las variables de seguridad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If you specify <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType&gt;</ph>, then you can give access to individual URIs using <ph id="ph2">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Si especifica <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType&gt;</ph>, a continuación, puede dar acceso a identificadores URI individuales mediante <ph id="ph2">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following example creates an instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> and gives access rights to specific URLs.</source>
          <target state="translated">En el ejemplo siguiente se crea una instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> y concede derechos de acceso a direcciones URL específicas.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source>A NetworkAccess value that indicates what kind of access to grant to the specified URI.</source>
          <target state="translated">Valor de NetworkAccess que indica el tipo de acceso que se debe conceder al URI especificado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph> indicates that the application is allowed to accept connections from the Internet on a local resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph> indica que la aplicación puede aceptar conexiones de Internet en un recurso local.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph> indicates that the application is allowed to connect to specific Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph> indica que la aplicación puede conectarse a recursos de Internet específicos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source>A URI string to which access rights are granted.</source>
          <target state="translated">Cadena URI a la que se conceden derechos de acceso.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class with the specified access rights for the specified URI.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> con los derechos de acceso especificados para el URI indicado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <ph id="ph2">`uriString`</ph> parameter.</source>
          <target state="translated">Este constructor inicializa un <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> y se concede el permiso de destino para establecer un control remoto conexión de host o Aceptar una conexión a host remoto mediante el URI descrito por el <ph id="ph2">`uriString`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source>The following example creates a new instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> with connect rights for the specified URI.</source>
          <target state="translated">En el ejemplo siguiente se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> con derechos de conexión para el URI especificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> value that indicates what kind of access to grant to the specified URI.</source>
          <target state="translated">Valor de <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> que indica el tipo de acceso que se debe conceder al URI especificado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph> indicates that the application is allowed to accept connections from the Internet on a local resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph> indica que la aplicación puede aceptar conexiones de Internet en un recurso local.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph> indicates that the application is allowed to connect to specific Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph> indica que la aplicación puede conectarse a recursos de Internet específicos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A regular expression that describes the URI to which access is to be granted.</source>
          <target state="translated">Una expresión regular que describe el URI al que se concede acceso.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class with the specified access rights for the specified URI regular expression.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> con los derechos de acceso especificados para la expresión regular URI indicada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <ph id="ph2">`uriRegex`</ph> parameter.</source>
          <target state="translated">Este constructor inicializa un <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> y se concede el permiso de destino para establecer un control remoto conexión de host o Aceptar una conexión a host remoto mediante el URI descrito por el <ph id="ph2">`uriRegex`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>It is recommended that you create <ph id="ph1">`uriRegex`</ph> using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated">Se recomienda que cree <ph id="ph1">`uriRegex`</ph> mediante la <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType&gt;</ph>, y <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType&gt;</ph> marcas.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
          <target state="translated">Una cadena URI candidata se comprueba con la lista de expresiones regulares pertinentes (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) de dos maneras.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
          <target state="translated">En primer lugar, la cadena URI candidata se comprueba con la lista adecuada; a continuación, si no hay ninguna coincidencia, la cadena URI candidata se convierte en un <ph id="ph1">&lt;xref:System.Uri&gt;</ph> y comprueba en la lista correspondiente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>The following example creates a new instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> with connect rights for the specified <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> con derechos de conexión para el elemento especificado <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Net.WebPermission.AcceptList">
          <source>This property returns an enumeration of a single accept permissions held by this <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Esta propiedad devuelve una enumeración de los permisos de aceptación única que ostenta este <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Net.WebPermission.AcceptList">
          <source>The possible objects types contained in the returned enumeration are <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph>.</source>
          <target state="translated">Los tipos de objeto posibles que contiene la enumeración que se devuelve son <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> y <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains accept permissions.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que contiene permisos de aceptación.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>This property gets a list of local resources permitted by this <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">Esta propiedad obtiene una lista de recursos locales que permite este <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>The class to which you have applied <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> only has permission to receive an incoming connection to local resources found in this list.</source>
          <target state="translated">La clase a la que se haya aplicado <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> solo tiene permiso para recibir una conexión entrante a los recursos locales que se encuentran en esta lista.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>You can add URIs to this list using <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Puede agregar identificadores URI a esta lista con <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
          <target state="translated">Una cadena URI candidata se comprueba con la lista de expresiones regulares pertinentes (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) de dos maneras.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
          <target state="translated">En primer lugar, la cadena URI candidata se comprueba con la lista adecuada; a continuación, si no hay ninguna coincidencia, la cadena URI candidata se convierte en un <ph id="ph1">&lt;xref:System.Uri&gt;</ph> y comprueba en la lista correspondiente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.AcceptList">
          <source>The following example prints the URLs in the <ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> to the console.</source>
          <target state="translated">El ejemplo siguiente imprime las direcciones URL en el <ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> en la consola.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Net.WebPermission">
          <source>Adds the specified URI with the specified access rights to the current <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Agrega el URI especificado con los derechos de acceso indicados al <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> that specifies the access rights that are granted to the URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> que especifica los derechos de acceso que se conceden al URI.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>A string that describes the URI to which access rights are granted.</source>
          <target state="translated">Cadena que describe el URI al que se conceden derechos de acceso.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>Adds the specified URI string with the specified access rights to the current <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Agrega la cadena URI especificada con los derechos de acceso indicados al <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>If you have specified <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> as the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to permit the use of <ph id="ph4">`uriString`</ph> in the target class.</source>
          <target state="translated">Si ha especificado <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> como el <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> para permitir el uso de <ph id="ph4">`uriString`</ph> en la clase de destino.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>The way that <ph id="ph1">`uriString`</ph> can be used by the target class is specified by <ph id="ph2">`access`</ph>.</source>
          <target state="translated">La forma en que <ph id="ph1">`uriString`</ph> se puede utilizar el destino especificada por clase <ph id="ph2">`access`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>Specify <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the access parameter to add the URI specified by the <ph id="ph2">`uriString`</ph> parameter to the list of URI accept strings, or specify <ph id="ph3">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> as the access parameter to add the URI to the list of URI connect strings.</source>
          <target state="translated">Especifique <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> como parámetro de acceso para agregar el URI especificado por el <ph id="ph2">`uriString`</ph> parámetro a la lista de URI aceptar cadenas, o especificar <ph id="ph3">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> como el acceso a las cadenas de conexión de parámetro para agregar el URI a la lista de URI.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>Calling <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> will have no effect, because permission is granted to all URIs.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> en <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> no tiene ningún efecto, ya que se concede permiso a todos los URI.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
          <target state="translated">Una cadena URI candidata se comprueba con la lista de expresiones regulares pertinentes (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) de dos maneras.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
          <target state="translated">En primer lugar, la cadena URI candidata se comprueba con la lista adecuada; a continuación, si no hay ninguna coincidencia, la cadena URI candidata se convierte en un <ph id="ph1">&lt;xref:System.Uri&gt;</ph> y comprueba en la lista correspondiente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source>The following example demonstrates how to add access rights to particular URL strings.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar permisos de acceso a las cadenas de dirección URL determinadas.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A NetworkAccess that specifies the access rights that are granted to the URI.</source>
          <target state="translated">NetworkAccess que especifica los derechos de acceso que se conceden al URI.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A regular expression that describes the set of URIs to which access rights are granted.</source>
          <target state="translated">Expresión regular que describe el conjunto de identificadores URI a los que se va a conceder derechos de acceso.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>Adds the specified URI with the specified access rights to the current <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Agrega el URI especificado con los derechos de acceso indicados al <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>If you have specified <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> as the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to allow the use of <ph id="ph4">`uriRegex`</ph> in the target class.</source>
          <target state="translated">Si ha especificado <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> como el <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> para permitir el uso de <ph id="ph4">`uriRegex`</ph> en la clase de destino.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>Specify <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the <ph id="ph2">`access`</ph> parameter to add the URI specified by the <ph id="ph3">`uriRegex`</ph> parameter to the list of URI accept strings, or specify <ph id="ph4">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> as the access parameter to add the URI to the list of URI connect strings.</source>
          <target state="translated">Especifique <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> como el <ph id="ph2">`access`</ph> parámetro para agregar el URI especificado por el <ph id="ph3">`uriRegex`</ph> parámetro a la lista de URI aceptar cadenas, o especificar <ph id="ph4">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> como el acceso a las cadenas de conexión de parámetro para agregar el URI a la lista de URI.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>Calling <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> on an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> instance will have no effect as permission is granted to all URIs.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> en un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> instancia no tiene ningún efecto tal y como se concede permiso a todos los URI.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>It is recommended that you create <ph id="ph1">`uriRegex`</ph> using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated">Se recomienda que cree <ph id="ph1">`uriRegex`</ph> mediante la <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType&gt;</ph>, y <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType&gt;</ph> marcas.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
          <target state="translated">Una cadena URI candidata se comprueba con la lista de expresiones regulares pertinentes (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) de dos maneras.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
          <target state="translated">En primer lugar, la cadena URI candidata se comprueba con la lista adecuada; a continuación, si no hay ninguna coincidencia, la cadena URI candidata se convierte en un <ph id="ph1">&lt;xref:System.Uri&gt;</ph> y comprueba en la lista correspondiente.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to give access rights for the specified URI.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> para conceder derechos de acceso para el URI especificado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
          <source>The <ph id="ph1">&lt;paramref name="uriRegex" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="uriRegex" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Net.WebPermission.ConnectList">
          <source>This property returns an enumeration of a single connect permissions held by this <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Esta propiedad devuelve una enumeración de los permisos de conexión única que ostenta este <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Net.WebPermission.ConnectList">
          <source>The possible objects types contained in the returned enumeration are <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph>.</source>
          <target state="translated">Los tipos de objeto posibles que contiene la enumeración que se devuelve son <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> y <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains connect permissions.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que contiene permisos de conexión.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>This property gets a list of remote resources that are permitted by this <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">Esta propiedad obtiene una lista de los recursos remotos que permite este <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>The class to which you have applied <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> only has permission to connect with resources found in this list.</source>
          <target state="translated">La clase a la que se haya aplicado <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> sólo tiene permiso para conectar con los recursos que se encuentran en esta lista.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>You can add URIs to this list using <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Puede agregar identificadores URI a esta lista con <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
          <target state="translated">Una cadena URI candidata se comprueba con la lista de expresiones regulares pertinentes (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) de dos maneras.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
          <target state="translated">En primer lugar, la cadena URI candidata se comprueba con la lista adecuada; a continuación, si no hay ninguna coincidencia, la cadena URI candidata se convierte en un <ph id="ph1">&lt;xref:System.Uri&gt;</ph> y comprueba en la lista correspondiente.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebPermission.ConnectList">
          <source>The following example prints the URLs in the <ph id="ph1">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph> to the console.</source>
          <target state="translated">El ejemplo siguiente imprime las direcciones URL en el <ph id="ph1">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph> en la consola.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Copy">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Crea una copia de un objeto <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Copy">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class that has the same values as the original.</source>
          <target state="translated">Una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> con los mismos valores que la original.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Copy">
          <source>The <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> returned by this method represents the same access to resources as the original <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> devuelto por este representa método el mismo acceso a los recursos que el original <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Copy">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Este método invalida <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> y se implementa para admitir el <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Copy">
          <source>The following example demonstrates how to create a second instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> using <ph id="ph2">&lt;xref:System.Net.WebPermission.Copy%2A&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una segunda instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> con <ph id="ph2">&lt;xref:System.Net.WebPermission.Copy%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Copy">
          <source>This second instance is identical to the first.</source>
          <target state="translated">Esta segunda instancia es idéntica al primero.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding from which to reconstruct the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Codificación XML desde la cual se reconstruye el <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> from an XML encoding.</source>
          <target state="translated">Reconstruye un <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> a partir de codificación XML.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> from an XML encoding that is defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> método reconstruye un <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> desde un documento XML codificación definida por el <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebPermission.ToXml%2A&gt;</ph> method to XML-encode the <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>, including state information.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.WebPermission.ToXml%2A&gt;</ph> método para codificar en XML los <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>, incluida la información de estado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Security.SecurityElement?displayProperty=nameWithType&gt;</ph>, populates its attributes, and uses <ph id="ph2">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> to transfer this information to an instance of <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Security.SecurityElement?displayProperty=nameWithType&gt;</ph>, rellena sus atributos y utiliza <ph id="ph2">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> para transferir esta información a una instancia de <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is not a permission element for this type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> no es un elemento de permiso para este tipo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> to compare with the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>Returns the logical intersection of two <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> instances.</source>
          <target state="translated">Devuelve la intersección lógica entre dos instancias de <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> that represents the intersection of the current instance and the <ph id="ph2">&lt;paramref name="target" /&gt;</ph> parameter.</source>
          <target state="translated">Nuevo <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que representa la intersección de la instancia actual y el parámetro <ph id="ph2">&lt;paramref name="target" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>If the intersection is empty, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la intersección está vacía, el método devuelve una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission.Intersect%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> that contains those permissions that are common in both <ph id="ph3">`target`</ph> and the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebPermission.Intersect%2A&gt;</ph> Devuelve un <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> que contiene los permisos que son comunes tanto en <ph id="ph3">`target`</ph> y la instancia actual.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Este método invalida <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> y se implementa para admitir el <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source>The following example shows how to create an instance of <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> using the logical intersection of two existing <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> instances.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> mediante la intersección lógica de las dos <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> instancias.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or of type <ph id="ph3">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> no es <ph id="ph2">&lt;see langword="null" /&gt;</ph>, o bien no es de tipo <ph id="ph3">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> to compare to the current <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que se va a comparar con el <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> is a subset of the specified object.</source>
          <target state="translated">Determina si el <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual es un subconjunto del objeto especificado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is a subset of the <ph id="ph2">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la instancia actual es un subconjunto del parámetro <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If the target is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for an empty current permission that is not unrestricted and <ph id="ph3">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">Si el destino es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, el método devuelve <ph id="ph2">&lt;see langword="true" /&gt;</ph> para un permiso actual vacío que no esté restringido; en caso contrario, devuelve <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If the current <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> specifies a set of associated resources that is wholly contained by the <ph id="ph2">`target`</ph> parameter, then the current <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> is a subset of <ph id="ph4">`target`</ph>.</source>
          <target state="translated">Si la actual <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> especifica un conjunto de recursos asociados que está contenido por completo la <ph id="ph2">`target`</ph> parámetro y, a continuación, actual <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> es un subconjunto de <ph id="ph4">`target`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Net.WebPermission.IsSubsetOf%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Este método invalida <ph id="ph1">&lt;xref:System.Net.WebPermission.IsSubsetOf%2A&gt;</ph> y se implementa para admitir el <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Net.WebPermission.IsSubsetOf%2A&gt;</ph> to determine whether the access rights found in one instance of <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> are found in another instance of <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">&lt;xref:System.Net.WebPermission.IsSubsetOf%2A&gt;</ph> para determinar si los derechos de acceso se encuentran en una instancia de <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> se encuentran en otra instancia de <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The target parameter is not an instance of <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">El parámetro de destino no es una instancia de <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance.</source>
          <target state="translated">La instancia actual contiene un derecho con codificación Regex y no se encuentra exactamente el mismo derecho de la instancia de destino.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsUnrestricted">
          <source>Checks the overall permission state of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Comprueba el estado de permiso global del <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> was created with the <ph id="ph3">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph><ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> se ha creado con <ph id="ph3">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph><ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; en caso contrario, es <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsUnrestricted">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> is <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, then the target class can use all URIs.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> es <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, a continuación, la clase de destino puede utilizar todos los URI.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsUnrestricted">
          <source>Otherwise, specific permission must be given for any URI you want to use with the target class.</source>
          <target state="translated">En caso contrario, se debe conceder permiso específico para cualquier URI que desee utilizar con la clase de destino.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.IsUnrestricted">
          <source>Use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to add a URI and specify its permissions.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> para agregar un URI y especificar sus permisos.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.ToXml">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> and its current state.</source>
          <target state="translated">Crea una codificación XML de un <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> y su estado actual.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.ToXml">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> that contains an XML-encoded representation of the <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>, including state information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> que contiene una representación en código XML del <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>, incluida la información de estado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.ToXml">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> método para restaurar la información de estado de un <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.ToXml">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Net.WebPermission.ToXml%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.Security.SecurityElement?displayProperty=nameWithType&gt;</ph> and print its attributes to the console.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo usar <ph id="ph1">&lt;xref:System.Net.WebPermission.ToXml%2A&gt;</ph> para crear un <ph id="ph2">&lt;xref:System.Security.SecurityElement?displayProperty=nameWithType&gt;</ph> e imprimir sus atributos en la consola.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> to combine with the current <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que se va a combinar con el <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>Returns the logical union between two instances of the <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> class.</source>
          <target state="translated">Devuelve la unión lógica entre dos instancias de la clase <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> that represents the union of the current instance and the <ph id="ph2">&lt;paramref name="target" /&gt;</ph> parameter.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que representa la unión de la instancia actual y el parámetro <ph id="ph2">&lt;paramref name="target" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>If either <ph id="ph1">&lt;see langword="WebPermission" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>, the method returns a <ph id="ph3">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> that is <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Si uno de los <ph id="ph1">&lt;see langword="WebPermission" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>, el método devuelve un <ph id="ph3">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> que es <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>If the target is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the method returns a copy of the current <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">Si el destino es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, devuelve una copia del <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission.Union%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> that contains all the permissions in both <ph id="ph3">`target`</ph> and the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebPermission.Union%2A&gt;</ph> Devuelve un <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> que contiene todos los permisos tanto en <ph id="ph3">`target`</ph> y la instancia actual.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>The following example takes the logical union of two <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> instances to create a third instance of <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
          <target state="translated">El ejemplo siguiente toma la unión lógica de dos <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> instancias para crear una tercera instancia de <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.WebPermission.Union(System.Security.IPermission)">
          <source>target is not <ph id="ph1">&lt;see langword="null" /&gt;</ph> or of type <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</source>
          <target state="translated">El destino no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, o bien no es de tipo <ph id="ph2">&lt;see cref="T:System.Net.WebPermission" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>