<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaValidator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5593dcfff13b2f3c4579da94de3116830777dc050.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">593dcfff13b2f3c4579da94de3116830777dc050</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">Representa un motor de validación de esquema del lenguaje de definición de esquemas XML (XSD).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class cannot be inherited.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> no se puede heredar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">No utilizar esquemas de orígenes desconocidos o que no se confía o ubicaciones.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">Si lo hace, pondrá en peligro la seguridad del código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">Los esquemas XML (incluyendo los esquemas alineadas) son intrínsecamente vulnerables a ataques por servicio denegado; no los acepta en escenarios de confianza.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">Excepciones y mensajes de error de validación de esquema pueden exponer información confidencial sobre el modelo de contenido o las rutas de acceso URI al archivo de esquema.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">Tenga cuidado de no exponer esta información a los llamadores de confianza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> incluye un mecanismo eficiente y de alto rendimiento para validar datos XML con esquemas XML mediante inserción.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">Por ejemplo, la clase <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> le permite validar un conjunto de información XML en el lugar sin tener que serializarla como un documento XML y, a continuación, volver a analizar el documento utilizando un sistema de lectura XML de validación.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> clase también puede usarse para compilar motores de validación en orígenes de datos XML o como forma de crear un sistema de escritura de validación XML.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> topic.</source>
          <target state="translated">Para obtener más información sobre la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> de clases, consulte la <bpt id="p1">[</bpt>validación basada en inserción de XmlSchemaValidator<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> marcas de validación de un <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> no son el objeto de conjunto sea predeterminado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Además, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto es <ph id="ph3">`null`</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, se incluyen esquemas externos que se hace referencia en, importaciones o redefine elementos no se resuelven de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object containing element and attribute names as atomized strings.</source>
          <target state="translated">Los objetos <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> contienen nombres de atributos y elementos en forma de cadenas subdivididas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> que contiene los esquemas del lenguaje de definición de esquemas XML (XSD) utilizado para la validación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object used for resolving namespaces encountered during validation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> utilizado para resolver los espacios de nombres que se encuentran durante la validación.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> value specifying schema validation options.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> que especifica las opciones de validación de esquemas.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter are copied into an internal <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> or the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation options are set.</source>
          <target state="translated">El contenido de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parámetro se copian en un interno <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> objeto cuando la <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> o <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> se establecen opciones de validación.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, changes to the input <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object during validation do not affect the outcome of validation.</source>
          <target state="translated">Como resultado, se cambia a la entrada <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> objeto durante la validación no afectan al resultado de validación.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter specified is not compiled, its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method is called.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> los parámetros especificados no se compilan, su <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parameter is especially important for validating <ph id="ph2">`xs:QName`</ph> types.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> es especialmente importante para validar el parámetro <ph id="ph2">`xs:QName`</ph> tipos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class does not copy the in-scope namespaces from the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object but instead holds a reference to it.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> clase no copia los espacios de nombres en el ámbito de la <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> del objeto, sino que contiene una referencia a él.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>This allows new namespaces to be added to the <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object during the validation process.</source>
          <target state="translated">Esto permite que los espacios de nombres nuevos para agregarse a la <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> objeto durante el proceso de validación.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> marcas de validación de un <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> no son el objeto de conjunto sea predeterminado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Además, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto es <ph id="ph3">`null`</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, se incluyen esquemas externos que se hace referencia en, importaciones o redefine elementos no se resuelven de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class reference topic.</source>
          <target state="translated">Para obtener un ejemplo de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, vea el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> tema de referencia de la clase.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o varios parámetros especificados son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An error occurred while compiling schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> parameter.</source>
          <target state="translated">Se ha producido un error durante la compilación de los esquemas en el parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the set of schemas used for validation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> que se va a agregar al conjunto de esquemas utilizado para la validación.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">Agrega un esquema del lenguaje de definición de esquemas XML (XSD) al conjunto de esquemas usado para la validación.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método se puede utilizar para simular el efecto de encontrarse un esquema XML insertado en el documento XML que se está validando.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parameter cannot match that of any element or attribute already encountered by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object.</source>
          <target state="translated">El espacio de nombres de destino del parámetro <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> no puede coincidir con el de ningún elemento o atributo que ya haya encontrado el objeto <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> validation option is not set, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method does nothing.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> no se establece la opción de validación, el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método no hace nada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> especificado es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter matches that of any element or attribute already encountered by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">El espacio de nombres de destino del parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> coincide con el de cualquier elemento o atributo que haya encontrado el objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">Finaliza la validación y comprueba las restricciones de identidad de todo el documento XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> method ends validation and checks identity constraints for the entire XML document if the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validation option is set.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> método finaliza la validación y comprueba las restricciones de identidad de todo el documento XML si la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> se establece la opción de validación.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">Se ha encontrado un error de restricción de identidad en el documento XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">Devuelve los atributos esperados para el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">Matriz de los objetos <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> o matriz vacía si no hay ningún atributo esperado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método se llama inmediatamente después de la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método, se devuelven todos los atributos que podrían aparecer en el documento XML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called after one or more calls to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método se llama después de una o más llamadas a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método, se devuelven los atributos que aún no se han validado para el elemento actual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">Devuelve las partículas esperadas en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> objects or an empty array if there are no expected particles.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> o matriz vacía si no hay ninguna partícula esperada.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The valid particles that can be returned by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method are instances of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> classes.</source>
          <target state="translated">Las partículas válidas que puede devolver el método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> son instancias de las clases <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> y <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">Cuando el compositor del modelo de contenido es <ph id="ph1">`xs:sequence`</ph>, solo se devuelve la siguiente partícula de la secuencia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">Si el compositor del modelo de contenido es <ph id="ph1">`xs:all`</ph> o <ph id="ph2">`xs:choice`</ph>, se devuelven todas las partículas válidas que pueden ir a continuación en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">Por ejemplo, en el esquema del lenguaje de definición de esquemas XML (XSD) y en el documento XML que sigue, después de validar el elemento <ph id="ph1">`book`</ph>, el elemento <ph id="ph2">`book`</ph> es el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an array containing a single <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph3">`title`</ph> element.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> devuelve una matriz que contiene un solo objeto <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> que representa el elemento <ph id="ph3">`title`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an empty array.</source>
          <target state="translated">Cuando el contexto de validación es el elemento <ph id="ph1">`title`</ph>, el método <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> devuelve una matriz vacía.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`title`</ph> element has been validated but before the <ph id="ph3">`description`</ph> element has been validated, it returns an array containing a single <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph5">`description`</ph> element.</source>
          <target state="translated">Si se llama al método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> después de que se haya validado el elemento <ph id="ph2">`title`</ph>, pero antes de validar el elemento <ph id="ph3">`description`</ph>, devuelve una matriz que contiene un solo objeto <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> que representa el elemento <ph id="ph5">`description`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`description`</ph> element has been validated then it returns an array containing a single <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> object representing the wildcard.</source>
          <target state="translated">Si se llama al método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> después de que se haya validado el elemento <ph id="ph2">`description`</ph>, devuelve una matriz que contiene un solo objeto <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> que representa el comodín.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XML as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el siguiente XML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XSD schema as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el siguiente esquema XSD.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to populate with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> que se va a rellenar con los objetos <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> de los atributos que no se hayan encontrado durante la validación en el contexto del elemento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>Validates identity constraints on the default attributes and populates the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> specified with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes with default values that have not been previously validated using the <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method in the element context.</source>
          <target state="translated">Valida restricciones de identidad en los atributos predeterminados y rellena la lista <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> especificada con objetos <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> de todos los atributos con valores predeterminados que no se hayan validado previamente usando el método <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> en el contexto del elemento.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> debe llamar al método después de validar todos los atributos para el elemento actual con el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> se debería utilizar para determinar qué atributos predeterminados se van a insertar en el documento XML que se está validando.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicializa el estado del objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicializa el estado del objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method is only valid if called immediately after the construction of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object or after a call to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método sólo es válido si se llama inmediatamente después de la construcción de un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto o después de llamar a <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">La llamada al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> es válida si se realiza inmediatamente después de la creación de un objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> o después de llamar sólo a <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object used to initialize the validation context of the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object for partial validation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> utilizado para inicializar el contexto de validación del objeto <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para realizar una validación parcial.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object using the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> specified for partial validation.</source>
          <target state="translated">Inicializa el estado del objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> utilizando el objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> especificado para la validación parcial.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> as a parameter initializes an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to its starting state for partial validation.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> que toma un objeto <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> como parámetro inicializa un objeto <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> en su estado inicial para realizar una validación parcial.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>In the following example, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> is initialized for partial validation using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">En el siguiente ejemplo, se inicializa un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> para realizar una validación parcial utilizando el método <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">`orderNumber`</ph> schema element is passed by selecting the schema element by <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> collection returned by the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object.</source>
          <target state="translated">Para pasar el elemento de esquema <ph id="ph1">`orderNumber`</ph>, se selecciona por <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> en la colección <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> que devuelve la propiedad <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> del objeto <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object then validates this specific element.</source>
          <target state="translated">A continuación, el objeto <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> valida este elemento específico.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The example takes the following XML schema as input.</source>
          <target state="translated">En el ejemplo, se toma como entrada el siguiente esquema XML.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">La llamada al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> es válida si se realiza inmediatamente después de la creación de un objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> o después de llamar sólo a <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> no es un objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> ni <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> no puede ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">Obtiene o establece la información del número de línea del nodo XML que se está validando.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Line information is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">Se notifica la información de línea por cualquier <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> produce durante el proceso de validación.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>The default <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> property returns 0 for the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> properties.</source>
          <target state="translated">El valor predeterminado <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> objeto devuelto por la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> propiedad devuelve 0 para el <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> y <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen si el contenido del elemento actual se omite correctamente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Skips validation of the current element content and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate content in the parent element's context.</source>
          <target state="translated">Omite la validación del contenido del elemento actual y prepara el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para validar contenido en el contexto del elemento primario.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method skips validation of the current element content and prepares the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> método omite la validación del contenido del elemento actual y prepara el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> para validar contenido en el contexto del elemento primario del objeto; es equivalente a la omisión de la validación para todos los elementos secundarios del elemento actual y, a continuación, llamar a la <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the current element content is successfully skipped, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Si el contenido del elemento actual se omite correctamente, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>No validation errors are reported on skipped content.</source>
          <target state="translated">No hay errores de validación se notifican en contenido omitido.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, al llamar a <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">Obtiene o establece el URI de origen del nodo XML que se está validando.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object representing the source URI for the XML node being validated; the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> que representa el URI de origen del nodo XML que se está validando; el valor predeterminado es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>The source URI is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">El origen se notifica el URI en cualquier <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> produce durante el proceso de validación.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> property is not set, the file name for the XML document is <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in validation error messages.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> propiedad no está establecida, el nombre de archivo para el documento XML es <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> en los mensajes de error de validación.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the attribute in the current element context.</source>
          <target state="translated">Valida el atributo en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Nombre local del atributo que se va a validar.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">URI del espacio de nombres del atributo que se va a validar.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The value of the attribute to validate.</source>
          <target state="translated">Valor del atributo que se va a validar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen si la validación del atributo se realiza correctamente.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Valida el nombre del atributo, el URI del espacio de nombres y el valor en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Valor del atributo validado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> debe llamar al método después de validar todos los atributos para el elemento actual con el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto se pasó a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método, el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método valida el atributo en el <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si el atributo se valida correctamente en el contexto del elemento actual, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">El atributo no es válido en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, al llamar a <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o varios parámetros especificados son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Nombre local del atributo que se va a validar.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">URI del espacio de nombres del atributo que se va a validar.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> que se usa para pasar el valor del atributo como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen si la validación del atributo se realiza correctamente.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter and can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Valida el nombre del atributo, el URI del espacio de nombres y el valor en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Valor del atributo validado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> debe llamar al método después de validar todos los atributos para el elemento actual con el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto se pasó a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método, el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método valida el atributo en el <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si el atributo se valida correctamente en el contexto del elemento actual, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">El atributo no es válido en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, al llamar a <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o varios parámetros especificados son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the element in the current context.</source>
          <target state="translated">Valida el elemento en el contexto actual.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Nombre local del elemento que se va a validar.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">URI del espacio de nombres del elemento que se va a validar.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the element in the current context.</source>
          <target state="translated">Valida el elemento en el contexto actual.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si se ha validado correctamente el nombre del elemento en el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name or any of its attributes are invalid the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Si el nombre de elemento o cualquiera de sus atributos no son válido el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; de lo contrario el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">El nombre del elemento no es válido en el contexto actual.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Nombre local del elemento que se va a validar.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">URI del espacio de nombres del elemento que se va a validar.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Valor del atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> del elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Valor del atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> del elemento.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Valor del atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> del elemento.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Valor del atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> del elemento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>Validates the element in the current context with the <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attribute values specified.</source>
          <target state="translated">Valida el elemento en el contexto actual con los valores de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept> y <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> especificados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si se ha validado correctamente el nombre del elemento en el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name or any of its attributes are invalid in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Si el nombre de elemento o cualquiera de sus atributos no son válido en el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; de lo contrario el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> value was not passed as a parameter to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> valor no se pasó como un parámetro a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> y <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> se omiten los valores de atributo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">El nombre del elemento no es válido en el contexto actual.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Comprueba si el contenido de texto del elemento es válido según su tipo de datos para los elementos con contenido simple y si el contenido del elemento actual está completo para los elementos con contenido complejo.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen si la validación del elemento se realiza correctamente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Comprueba si el contenido de texto del elemento es válido según su tipo de datos para los elementos con contenido simple y si el contenido del elemento actual está completo para los elementos con contenido complejo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">Valor de texto con tipo analizado del elemento si el contenido de éste es simple.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Para los elementos con contenido simple, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método comprueba que el contenido de texto del elemento es válido según su tipo de datos y devuelve el valor con tipo analizado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The text content of the element is obtained from the results of previous calls to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</source>
          <target state="translated">El contenido de texto del elemento se obtiene de los resultados de las llamadas anteriores a <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with complex content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies if the content of the current element is complete.</source>
          <target state="translated">Para los elementos con contenido complejo, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método comprueba si el contenido del elemento actual está completo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element has a default value, the value returned from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is the default value for the element.</source>
          <target state="translated">Si el elemento tiene un valor predeterminado, el valor devuelto desde el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método es el valor predeterminado para el elemento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto se construyó con el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> valor como un parámetro, el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método comprueba las reglas de la restricción de identidad (si existe) que se aplican al elemento.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si el elemento se valida correctamente en el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's content is not valid.</source>
          <target state="translated">El contenido del elemento no es válido.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, si se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen al realizar correctamente la validación del contenido del texto del elemento.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content of the element.</source>
          <target state="translated">Contenido del texto con tipo del elemento.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">Comprueba si el contenido del texto del elemento especificado es válido según su tipo de datos.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">Contenido del texto con tipo analizado del elemento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If you are validating against the <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, or <ph id="ph3">`xs:unique`</ph> identity constraints, do not use the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload.</source>
          <target state="translated">Si va a validar contra la <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, o <ph id="ph3">`xs:unique`</ph> las restricciones de identidad, no utilice la <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> sobrecarga del método.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method and pass it the value of the element.</source>
          <target state="translated">En su lugar, llame a la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método y pásele el valor del elemento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Then call the  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload, which takes <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">A continuación, llame a la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> sobrecarga del método que toma <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> como argumento, para comprobar que el contenido de texto del elemento es válido según su tipo de datos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Para los elementos con contenido simple, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> método comprueba que el contenido de texto del elemento es válido según su tipo de datos y devuelve el valor con tipo analizado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">El contenido de texto del elemento se obtiene del contenido con tipo pasado como parámetro.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If calls to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method have been previously made, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si llama a la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método se han hecho anteriormente, un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element has complex content an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si el elemento tiene contenido complejo un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto se construyó con el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> valor como un parámetro, el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método comprueba las reglas de la restricción de identidad (si existe) que se aplican al elemento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Si el elemento se valida correctamente en el contexto actual, la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedades se establecen con los resultados de la validación.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The element's text content is not valid.</source>
          <target state="translated">El contenido del texto del elemento no es válido.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence (for example, if the <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), calls to the <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method have been previously made, or the element has complex content.</source>
          <target state="translated">No se ha llamado al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> utilizando la secuencia correcta (por ejemplo, si se llama al método <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> después de llamar a <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), se han realizado llamadas al método <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> anteriormente o el contenido del elemento es complejo.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content parameter cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro del contenido del texto con tipo no puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cuyas propiedades se establecen al comprobar satisfactoriamente que están presentes todos los atributos necesarios en el contexto del elemento.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate the child content of the element.</source>
          <target state="translated">Comprueba si todos los atributos requeridos del contexto del elemento están presentes y prepara el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para validar el contenido secundario del elemento.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should always be called before <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> método siempre se debe llamar antes de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method must be called before proceeding with validation of an element's content.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> método debe llamarse antes de continuar con la validación de contenido de un elemento.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>If all the required attributes in the element context are present, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</source>
          <target state="translated">Si todos los atributos necesarios en el contexto del elemento están presentes, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> del objeto (si se especifica) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propiedad está establecida en <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">No se han encontrado uno o varios los atributos necesarios en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, al llamar a <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o varios parámetros especificados son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Valida si se permite texto en el contexto del elemento actual y acumula el texto para validar si el elemento actual tiene contenido simple.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>A text <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto que se va a validar en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>Validates whether the text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Valida si la cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto especificada se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Si el elemento tiene contenido simple, el texto <ph id="ph1">`string`</ph> especificada se concatena en cada llamada a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método hasta el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> se llama al método, se valida todo el texto.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Si el elemento tiene contenido complejo, se produce ninguna concatenación de texto.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">La cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto especificada no se permite en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro de la cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto no puede ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> que se usa para pasar el valor de texto como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the text returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Valida si el texto que devuelve el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> especificado se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Los siguientes son notas importantes a tener en cuenta al utilizar el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Si el elemento tiene contenido simple, el texto <ph id="ph1">`string`</ph> especificada se concatena en cada llamada a la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método hasta el <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> se llama al método, se valida todo el texto.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Si el elemento tiene contenido complejo, se produce ninguna concatenación de texto.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">La cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto especificada no se permite en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro de la cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> de texto no puede ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Valida si se permite el espacio en blanco en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>A white space <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="string" /&gt;</ph> de espacio en blanco que se va a validar en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>Validates whether the white space in the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Valida si se permite el espacio en blanco de la cadena <ph id="ph1">&lt;see langword="string" /&gt;</ph> especificada en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">No se permite el espacio en blanco en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, si se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> que se usa para pasar el valor de espacio en blanco como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the white space returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Valida si se permite el espacio en blanco que devuelve el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> especificado en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">No se permite el espacio en blanco en el contexto del elemento actual.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">No se llamó al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> en la secuencia correcta.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, si se llama al método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> después de llamar a <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> que recibe advertencias y errores detectados durante la validación del esquema.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is specified, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is thrown for all schema validation errors with an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> se especifica, un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> se produce para todos los errores de validación de esquemas con un <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> valo <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is not thrown for validation warnings with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> no se produce para las advertencias de validación con un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> valo <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">Obtiene o establece el objeto enviado como objeto de remitente de un evento de validación.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; the default is this <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; el valor predeterminado es el objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>For an example of a validation event, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> event.</source>
          <target state="translated">Para obtener un ejemplo de un evento de validación, vea el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object used to resolve <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept> elements as well as <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> and <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attributes.</source>
          <target state="translated">Establece el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> usado para resolver los elementos <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> y <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept>, así como los atributos <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> y <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object; the default is an <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>; el valor predeterminado es un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> marcas de validación de un <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> no son el objeto de conjunto sea predeterminado.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Además, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto es <ph id="ph3">`null`</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, se incluyen esquemas externos que se hace referencia en, importaciones o redefine elementos no se resuelven de forma predeterminada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>