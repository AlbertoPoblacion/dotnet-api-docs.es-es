<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaDatatype.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a9136de8d2ae0d3c1fa75491de52dcf23ca9cde2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9136de8d2ae0d3c1fa75491de52dcf23ca9cde2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> es una clase abstracta para asignar los tipos del lenguaje de definición de esquemas XML (XSD) a los tipos de Common Language Runtime (CLR).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The following example shows use of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The following XML file is used for the preceding code example.</source>
          <target state="translated">El siguiente archivo XML se utiliza para el ejemplo de código anterior.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">Este constructor llama a constructores de clases derivadas para inicializar el estado en este tipo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to another valid CLR representation of the same value.</source>
          <target state="translated">Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, en otra representación de CLR válida del mismo valor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The input value to convert to the specified type.</source>
          <target state="translated">El valor de entrada que se va a convertir al tipo especificado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The target type to convert the input value to.</source>
          <target state="translated">Tipo de destino en el que se va a convertir el valor de entrada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to the CLR type specified.</source>
          <target state="translated">Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, en el tipo CLR especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The converted input value.</source>
          <target state="translated">Valor de entrada convertido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
          <target state="translated">Para obtener más información sobre el tipo de compatibilidad en el <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> clases y conversión de tipos de datos XML, vea el <bpt id="p1">[</bpt>tipo se admite en las clases System.Xml<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
          <target state="translated">El tipo representado mediante <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> no admite una conversión del tipo del valor especificado al tipo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The input value to convert to the specified type.</source>
          <target state="translated">El valor de entrada que se va a convertir al tipo especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The target type to convert the input value to.</source>
          <target state="translated">Tipo de destino en el que se va a convertir el valor de entrada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> used for resolving namespace prefixes.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> que se utiliza para resolver los prefijos de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is only of use if the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> represents the xs:QName type or a type derived from it.</source>
          <target state="translated">Esto sólo sirve si <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> representa el tipo xs:QName o un tipo derivado de éste.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to the CLR type specified using the <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> represents the xs:QName type or a type derived from it.</source>
          <target state="translated">Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, en el tipo CLR especificado mediante <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> si <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> representa el tipo xs:QName o un tipo derivado de éste.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The converted input value.</source>
          <target state="translated">Valor de entrada convertido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
          <target state="translated">Para obtener más información sobre el tipo de compatibilidad en el <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> clases y conversión de tipos de datos XML, vea el <bpt id="p1">[</bpt>tipo se admite en las clases System.Xml<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
          <target state="translated">El tipo representado mediante <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> no admite una conversión del tipo del valor especificado al tipo especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /&gt;</ph> method always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El método <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /&gt;</ph> siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate against the simple type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="string" /&gt;</ph> que se validará frente al tipo simple.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use for atomization while parsing the <ph id="ph2">&lt;see langword="string" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> object represents the xs:NCName type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> que se va a utilizar para la atomización mientras se analiza <ph id="ph2">&lt;see langword="string" /&gt;</ph> si este objeto <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> representa el tipo xs:NCName.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object to use while parsing the <ph id="ph2">&lt;see langword="string" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> object represents the xs:QName type.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> que se va a utilizar mientras se analiza <ph id="ph2">&lt;see langword="string" /&gt;</ph> si este objeto <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> representa el tipo xs:QName.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When overridden in a derived class, validates the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified against a built-in or user-defined simple type.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, valida el objeto <ph id="ph1">&lt;see langword="string" /&gt;</ph> especificado frente a un tipo simple integrado o definido por el usuario.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast safely to the type returned by the <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /&gt;</ph> property.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se puede convertir sin ningún riesgo en el tipo que devuelve la propiedad <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method validates the <ph id="ph2">`string`</ph> specified against a built-in or user-defined simple type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> método valida el <ph id="ph2">`string`</ph> especificado frente a un tipo simple integrado o definido por el usuario.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if this <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> represents the type xs:date, then an instance of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> is returned.</source>
          <target state="translated">Por ejemplo, si este <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> representa el tipo xs: Date y, a continuación, una instancia de <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> se devuelve.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following are the steps performed during the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method's validation process.</source>
          <target state="translated">Los siguientes son los pasos realizados durante la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> proceso de validación del método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>Convert the value specified as a <ph id="ph1">`string`</ph> to its corresponding Common Language Runtime (CLR) type.</source>
          <target state="translated">Convierte el valor especificado como una <ph id="ph1">`string`</ph> escriba en su correspondiente Common Language Runtime (CLR).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>Verify that the value does not violate any facets defined for the simple type.</source>
          <target state="translated">Compruebe que el valor no infringe ningún aspecto definido para el tipo simple.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The converted value is then returned as an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and can be cast safely to the type returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">El valor convertido, a continuación, se devuelve como un <ph id="ph1">&lt;xref:System.Object&gt;</ph> y se puede convertir con seguridad en el tipo devuelto por la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, the input <ph id="ph2">`string`</ph> value is converted to a list of one or more objects.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> objeto representa un tipo de lista, la entrada <ph id="ph2">`string`</ph> valor se convierte en una lista de uno o más objetos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, an attempt is made to parse the input value as a member type of the union.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> objeto representa un tipo de lista, se realiza un intento de analizar el valor de entrada como un tipo de miembro de la unión.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</source>
          <target state="translated">Si se produce un error en el intento de análisis, a continuación, se intenta realizar la conversión con el siguiente miembro de la unión hasta que el análisis es correcto o no hay ningún otro tipo de miembro que analizar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>If the parse is unsuccessful, an exception is thrown.</source>
          <target state="translated">Si el análisis se realiza correctamente, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following example retrieves the <ph id="ph1">`LotteryNumber`</ph> simple type from the example.xsd file as an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> and then validates the <ph id="ph3">`string`</ph> value of <ph id="ph4">`5`</ph> using the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se recupera el <ph id="ph1">`LotteryNumber`</ph> tipo simple a partir del archivo example.xsd como un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> y, a continuación, valida el <ph id="ph3">`string`</ph> valo <ph id="ph4">`5`</ph> mediante el <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following XML file is used for the preceding code example.</source>
          <target state="translated">El siguiente archivo XML se utiliza para el ejemplo de código anterior.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The input value is not a valid instance of this W3C XML Schema type.</source>
          <target state="translated">El valor de entrada no es una instancia válida de este tipo de esquema XML de W3C.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The value to parse cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor que se va a analizar no puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>When overridden in a derived class, gets the type for the <ph id="ph1">&lt;see langword="string" /&gt;</ph> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el tipo de <ph id="ph1">&lt;see langword="string" /&gt;</ph> de la forma descrita en las especificaciones de XML 1.0 del World Wide Web Consortium (W3C).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlTokenizedType" /&gt;</ph> value for the <ph id="ph2">&lt;see langword="string" /&gt;</ph>.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Xml.XmlTokenizedType" /&gt;</ph> de <ph id="ph2">&lt;see langword="string" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>Allows the <ph id="ph1">`string`</ph> to be read as a particular XML type, for example, a CDATA section type.</source>
          <target state="translated">Permite el <ph id="ph1">`string`</ph> que deben leerse como un determinado tipo XML, por ejemplo, un tipo de sección CDATA.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>The following table shows the token types.</source>
          <target state="translated">La tabla siguiente muestran los tipos de token.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>XmlTokenizedType</source>
          <target state="translated">XmlTokenizedType</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>CDATA type</source>
          <target state="translated">Tipo CDATA</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ID type</source>
          <target state="translated">Tipo de Id.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>IDREF type</source>
          <target state="translated">Tipo IDREF</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>IDREFS type</source>
          <target state="translated">Tipo IDREFS</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENTITY type</source>
          <target state="translated">Tipo de entidad</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENTITIES type</source>
          <target state="translated">Tipo de entidades</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NMTOKEN type</source>
          <target state="translated">Tipo NMTOKEN</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NMTOKENS type</source>
          <target state="translated">Tipo NMTOKENS</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NOTATION type</source>
          <target state="translated">Tipo NOTATION</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENUMERATION type</source>
          <target state="translated">Tipo de enumeración</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>QName type</source>
          <target state="translated">Tipo QName</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NCName type</source>
          <target state="translated">Tipo NCName</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>No type</source>
          <target state="translated">No hay ningún tipo</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> value for the simple type.</source>
          <target state="translated">Obtiene el valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> del tipo simple.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> value for the simple type.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> del tipo simple.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
          <target state="translated">Tipos de lista de esquema XML de W3C, como xs: Entities, xs: NMTOKENS y xs: IDREFS no están representadas por la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Instead they are represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List&gt;</ph>.</source>
          <target state="translated">En su lugar se representan mediante la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> valores para los tipos xs, xs: NMTOKEN y xs: IDREF con la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> objeto establecido en <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Both the xs:anySimpleType and xs:anyType types are not represented by <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
          <target state="translated">Los tipos xs: anySimpleType tanto de xs: anyType no están representados por <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>These are represented in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> whose value is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic&gt;</ph> for xs:anySimpleType or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlTypeCode.Item&gt;</ph> for xs:anyType.</source>
          <target state="translated">Estos valores están representados en un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> objeto con un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> cuyo valor es <ph id="ph3">&lt;xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic&gt;</ph> para xs: anySimpleType o <ph id="ph4">&lt;xref:System.Xml.Schema.XmlTypeCode.Item&gt;</ph> para xs: anyType.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A&gt;</ph> property, see <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A&gt;</ph> propiedad, vea <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el tipo Common Language Runtime (CLR) del elemento.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>The Common Language Runtime (CLR) type of the item.</source>
          <target state="translated">El tipo de Common Language Runtime (CLR) del elemento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property gets the CLR type of the item.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> propiedad obtiene el tipo CLR del elemento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For example, an element of type <ph id="ph1">`xs:int`</ph> would have a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph> by default.</source>
          <target state="translated">Por ejemplo, un elemento de tipo <ph id="ph1">`xs:int`</ph> tendría un <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> de <ph id="ph3">&lt;xref:System.Int32&gt;</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>However, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> could be any one of the valid types that can be mapped to <ph id="ph2">`xs:int`</ph>, such as <ph id="ph3">&lt;xref:System.Int16&gt;</ph> or <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Sin embargo, el <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> podría ser cualquiera de los tipos válidos que se pueden asignar a <ph id="ph2">`xs:int`</ph>, como <ph id="ph3">&lt;xref:System.Int16&gt;</ph> o <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> namespace, see <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el tipo de compatibilidad en el <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> espacio de nombres, vea <bpt id="p1">[</bpt>tipo se admite en las clases System.Xml<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property, see <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> propiedad, vea <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> value for the simple type.</source>
          <target state="translated">Obtiene el valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> del tipo simple.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> value for the simple type.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> del tipo simple.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>