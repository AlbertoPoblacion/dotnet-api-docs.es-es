<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaInfo.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5790c8baa9fb8c6bb9d3a783606d6277c5a1b1148.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">790c8baa9fb8c6bb9d3a783606d6277c5a1b1148</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaInfo">
          <source>Represents the post-schema-validation infoset of a validated XML node.</source>
          <target state="translated">Representa el conjunto de información posterior a la validación del esquema de un nodo XML validado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaInfo">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaInfo">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaInfo">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaInfo">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.%23ctor%2A&gt;</ph> constructor, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> class reference topic.</source>
          <target state="translated">Para obtener un ejemplo de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.%23ctor%2A&gt;</ph> constructor, vea el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> tema de referencia de la clase.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentType" /&gt;</ph> object that corresponds to the content type of this validated XML node.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentType" /&gt;</ph> correspondiente al tipo de contenido de este nodo XML validado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentType" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
          <source>Gets or sets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.</source>
          <target state="translated">Obtiene o establece un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación de esquema del lenguaje de definición de esquemas XML (XSD).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
          <source>A <ph id="ph1">&lt;see langword="bool" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="bool" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph> property does not report DTD defaults.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph> propiedad no informa de los valores predeterminados DTD.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
          <source>Gets or sets a value indicating if the value for this validated XML node is nil.</source>
          <target state="translated">Obtiene o establece un valor que indica si el valor del nodo XML validado es nil.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
          <source>A <ph id="ph1">&lt;see langword="bool" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="bool" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
          <source>The value of an XML node is nil if its <ph id="ph1">`xsi:nil`</ph> attribute is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">El valor de un nodo XML es nil si su <ph id="ph1">`xsi:nil`</ph> atributo es <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
          <source>Gets or sets the dynamic schema type for this validated XML node.</source>
          <target state="translated">Obtiene o establece el tipo de esquema dinámico de este nodo XML validado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph> property is set only if the static type of the XML node is a union type in which case the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph> property will return the type from the union the XML node validated against.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph> propiedad se establece únicamente si el tipo estático del nodo XML es un tipo de unión, en cuyo caso el <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph> propiedad devolverá el tipo de la unión del nodo XML que se valida con respecto a.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>Gets or sets the compiled <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> object that corresponds to this validated XML node.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> compilado correspondiente a este nodo XML validado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>Gets or sets the compiled <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> object that corresponds to this validated XML node.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> compilado correspondiente a este nodo XML validado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>Gets or sets the static XML Schema Definition Language (XSD) schema type of this validated XML node.</source>
          <target state="translated">Obtiene o establece el tipo de esquema estático del lenguaje de definición de esquemas XML (XSD) de este nodo XML validado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>The static type of an XML node is the type that was declared in the XSD schema.</source>
          <target state="translated">El tipo estático de un nodo XML es el tipo que se ha declarado en el esquema XSD.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidity" /&gt;</ph> value of this validated XML node.</source>
          <target state="translated">Obtiene o establece el valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidity" /&gt;</ph> del nodo XML validado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidity" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>The possible <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;</ph> values for this XML node are <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Los posibles <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;</ph> valores para este nodo XML son <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>, y <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">En el ejemplo siguiente se valida la <ph id="ph1">`contosoBooks.xml`</ph> archivo contra el <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">El ejemplo utiliza la clase <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para deserializar el archivo <ph id="ph2">`contosoBooks.xml`</ph> y pasar el valor de los nodos a los métodos de la clase <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">En el ejemplo se toma como entrada el archivo <ph id="ph1">`contosoBooks.xml`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaInfo.Validity">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">En el ejemplo también se toma como entrada el archivo <ph id="ph1">`contosoBooks.xsd`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>