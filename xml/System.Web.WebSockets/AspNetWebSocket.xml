<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bf8cd-101">Representa una conexión dúplex completa en tiempo real entre un servidor web y un cliente en una aplicación ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf8cd-102">Cancela cualquier operación de E/S pendiente en el objeto de <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> y establece el estado del objeto de modo que no pueda usarse para iniciar operaciones de E/S adicionales.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf8cd-103">Después de la <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> ha llamado al método, todavía se pueden tener acceso a propiedades y métodos que no tienen relación con las operaciones de E/S.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-104">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="bf8cd-105">Código de estado de la operación de cierre.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="bf8cd-106">Mensaje de estado de la operación de cierre.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bf8cd-107">Objeto que cancela una operación pendiente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="bf8cd-108">Envía un mensaje asincrónico a un cliente para cerrar la conexión.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="bf8cd-109">Si el servidor inicia la solicitud para cerrar la conexión, el método espera a que el cliente confirme la solicitud antes de volver.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="bf8cd-110">Referencia a la operación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf8cd-111">Puede usar el <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> y <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> métodos para las solicitudes iniciadas por el cliente tanto iniciadas por el servidor cerrar un <xref:System.Web.WebSockets.AspNetWebSocket> conexión.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="bf8cd-112">Los dos métodos administran las solicitudes iniciadas por el cliente de la misma manera: después de que el cliente envía un mensaje al servidor para cerrar la conexión, el servidor llama a uno de estos métodos y envía una confirmación al cliente y, a continuación, el método devuelve.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="bf8cd-113">Para las solicitudes iniciadas por el servidor, los dos métodos funcionan de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="bf8cd-114">El <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> método envía un mensaje al cliente para cerrar la conexión, espera una respuesta y, a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="bf8cd-115">El servidor no espera ningún dato adicional enviada por el cliente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="bf8cd-116">En cambio, la <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> método envía un mensaje al cliente para cerrar la conexión y vuelve sin esperar una respuesta.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="bf8cd-117">Después de que el método vuelve, puede llamar a la <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> método y controlar los datos adicionales o la confirmación que envía el cliente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-118">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf8cd-119">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> es encuentra en un estado de anulación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="bf8cd-120">O bien</span><span class="sxs-lookup"><span data-stu-id="bf8cd-120">-or-</span></span>  
  
 <span data-ttu-id="bf8cd-121">Las operaciones de envío no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-121">Sending operations are unavailable.</span></span>  
  
 <span data-ttu-id="bf8cd-122">O bien</span><span class="sxs-lookup"><span data-stu-id="bf8cd-122">-or-</span></span>  
  
 <span data-ttu-id="bf8cd-123">Las operaciones de recepción no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="bf8cd-124">Código de estado de la operación de cierre.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="bf8cd-125">Mensaje de estado de la operación de cierre.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bf8cd-126">Objeto que cancela una operación pendiente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="bf8cd-127">Envía un mensaje asincrónico a un cliente para cerrar la conexión.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="bf8cd-128">Si el servidor inicia la solicitud para cerrar la conexión, el método vuelve sin esperar una respuesta.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="bf8cd-129">Referencia a la operación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf8cd-130">Puede usar el <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> y <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> métodos para las solicitudes iniciadas por el cliente tanto iniciadas por el servidor cerrar un <xref:System.Web.WebSockets.AspNetWebSocket> conexión.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="bf8cd-131">Los dos métodos administran las solicitudes iniciadas por el cliente de la misma manera: después de que el cliente envía un mensaje al servidor para cerrar la conexión, el servidor llama a uno de estos métodos y envía una confirmación al cliente y, a continuación, el método devuelve.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="bf8cd-132">Para las solicitudes iniciadas por el servidor, los dos métodos funcionan de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="bf8cd-133">El <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> método envía un mensaje al cliente para cerrar la conexión, espera una respuesta y, a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="bf8cd-134">El servidor no espera ningún dato adicional enviada por el cliente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="bf8cd-135">En cambio, la <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> método envía un mensaje al cliente para cerrar la conexión y vuelve sin esperar una respuesta.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="bf8cd-136">Después de que el método vuelve, puede llamar a la <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> método y controlar los datos adicionales o la confirmación que envía el cliente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-137">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf8cd-138">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> es encuentra en un estado de anulación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="bf8cd-139">O bien</span><span class="sxs-lookup"><span data-stu-id="bf8cd-139">-or-</span></span>  
  
 <span data-ttu-id="bf8cd-140">Las operaciones de envío no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf8cd-141">Obtiene un código de estado que indica por qué un objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="bf8cd-142">Código de estado.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-143">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf8cd-144">Obtiene un mensaje de estado que explica por qué un objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> se ha cerrado.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="bf8cd-145">El mensaje de estado.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-146">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf8cd-147">Libera todos los recursos usados por un objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf8cd-148">ASP.NET llama automáticamente a la <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> método en un <xref:System.Web.WebSockets.AspNetWebSocket> objeto que se va a liberar cualquier recurso que permanecen después de que ha finalizado el código está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bf8cd-149">Matriz que contiene el mensaje de datos.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bf8cd-150">Objeto que cancela una operación pendiente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="bf8cd-151">Recibe un único fragmento de mensaje de un cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="bf8cd-152">Referencia a la tarea de recibir un mensaje.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-153">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf8cd-154">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> es encuentra en un estado de anulación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="bf8cd-155">O bien</span><span class="sxs-lookup"><span data-stu-id="bf8cd-155">-or-</span></span>  
  
 <span data-ttu-id="bf8cd-156">Las operaciones de recepción no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bf8cd-157">Matriz que contiene el mensaje de datos.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="bf8cd-158">El tipo de mensaje.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-158">The message type.</span></span></param>
        <param name="endOfMessage">
          <span data-ttu-id="bf8cd-159"><see langword="true" /> para indicar que un fragmento es el final de un mensaje completo; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bf8cd-160">Objeto que cancela una operación pendiente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="bf8cd-161">Envía un único fragmento de mensaje a un cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="bf8cd-162">Referencia a la tarea de enviar un mensaje.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-163">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf8cd-164">El objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> es encuentra en un estado de anulación.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="bf8cd-165">O bien</span><span class="sxs-lookup"><span data-stu-id="bf8cd-165">-or-</span></span>  
  
 <span data-ttu-id="bf8cd-166">Las operaciones de envío no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf8cd-167">Obtiene un valor que indica el estado abierto o cerrado de un objeto <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="bf8cd-168">El estado actual.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-169">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf8cd-170">Obtiene el nombre de un protocolo específico de la aplicación que un cliente remoto y un servidor pueden usar para intercambiar datos en una conexión de <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="bf8cd-171">Nombre del protocolo.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bf8cd-172">El objeto se había desechado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="bf8cd-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>