<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CALLCONV.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b3240f5b89be87591569949bec693946db0c9289.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3240f5b89be87591569949bec693946db0c9289</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>Identifies the calling convention used by a method described in a <bpt id="p1">[</bpt>METHODDATA<ept id="p1">](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048)</ept> structure.</source>
          <target state="translated">Identifica la convención de llamada usada por un método descrito en una estructura <bpt id="p1">[</bpt>METHODDATA<ept id="p1">](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048)</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The calling conventions in this class describe how functions pass arguments and return values.</source>
          <target state="translated">Las convenciones de llamada de esta clase describen cómo las funciones pasan argumentos y valores devuelvan.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns.</source>
          <target state="translated">Especifican el orden de los parámetros que están configurados para las funciones llamadas, donde se almacenan los parámetros (en los registros o en memoria) y quién (llamador o función llamada) es responsable de limpiar la pila después de que la función devuelve.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>CC_CDECL uses the naming and calling conventions of the C language.</source>
          <target state="translated">CC_CDECL usa las convenciones de nomenclaturas y llamadas del lenguaje C.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The caller pushes the parameters onto the stack in reverse (right-to-left) order, and cleans the stack after the function returns.</source>
          <target state="translated">El llamador inserta los parámetros en la pila en orden inverso al (de derecha a izquierda) y limpia la pila después de que la función devuelve.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>This calling convention enables you to call functions with <ph id="ph1">`varargs`</ph>, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions <bpt id="p1">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id="p1">](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l)</ept>.</source>
          <target state="translated">Esta convención de llamada permite llamar a funciones con <ph id="ph1">`varargs`</ph>, lo que resulta adecuado para su uso con métodos que aceptan un número variable de parámetros, como las funciones de tiempo de ejecución de C <bpt id="p1">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id="p1">](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>CC_PASCAL uses the Pascal calling convention.</source>
          <target state="translated">CC_PASCAL usa la convención de llamada Pascal.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The caller pushes the parameters onto the stack in left-to-right order.</source>
          <target state="translated">El llamador inserta los parámetros en la pila en orden de izquierda a derecha.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The called function cleans the stack before returning.</source>
          <target state="translated">La función llamada limpia la pila antes de devolver.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>CC_STDCALL is the standard calling convention for Win32 functions.</source>
          <target state="translated">CC_STDCALL es la convención de llamada estándar para las funciones de Win32.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>It is the default convention for calling unmanaged functions with platform invoke.</source>
          <target state="translated">Es la convención predeterminada para llamar a funciones no administradas con la plataforma de invocación.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.</source>
          <target state="translated">El llamador inserta los parámetros en la pila en orden inverso (de derecha a izquierda) y la función llamada limpia la pila antes de devolver.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left.</source>
          <target state="translated">CC_SYSCALL es similar a CDECL en que los argumentos se insertan de derecha a izquierda.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The EAX, ECX, and EDX registers are not preserved.</source>
          <target state="translated">No se conservan los registros EAX, ECX y EDX.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>These calling convention identifiers are used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[wince](~/includes/wince-md.md)]</ph> platform, and by Automation.</source>
          <target state="translated">Estos identificadores de la convención de llamada se usan por el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, el <ph id="ph2">[!INCLUDE[wince](~/includes/wince-md.md)]</ph> plataforma y la automatización.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>For additional information about <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL&gt;</ph>, see the MSDN Library.</source>
          <target state="translated">Para obtener más información sobre <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL&gt;</ph>, vea MSDN Library.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>The common language runtime throws an exception when a COM method in native code returns an HRESULT.</source>
          <target state="translated">Common language runtime produce una excepción cuando un método COM en código nativo devuelve un valor HRESULT.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Cómo: mapa HRESULT y excepciones<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
          <source>Indicates that the C declaration (CDECL) calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada de la declaración C (CDECL) se usa para un método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
          <source>Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada de Macintosh Pascal (MACPASCAL) se usa para un método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
          <source>Indicates the end of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" /&gt;</ph> enumeration.</source>
          <target state="translated">Indica el final de la enumeración <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
          <source>Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada CDECL de Macintosh Programmers' Workbench (MPW) se usa para un método.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
          <source>Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada PASCAL de Macintosh Programmers' Workbench (MPW) se usa para un método.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
          <source>Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada de MSC Pascal (MSCPASCAL) se usa para un método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
          <source>Indicates that the Pascal calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada de Pascal se usa para un método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
          <source>This value is reserved for future use.</source>
          <target state="translated">Este valor está reservado para uso futuro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
          <source>Indicates that the standard calling convention (STDCALL) is used for a method.</source>
          <target state="translated">Indica que la convención de llamada estándar (STDCALL) se usa para un método.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
          <source>Indicates that the standard SYSCALL calling convention is used for a method.</source>
          <target state="translated">Indica que la convención de llamada SYSCALL se usa para un método.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>