<Type Name="RootedPathValidator" FullName="System.Xml.Serialization.Configuration.RootedPathValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76311afd538bb8339c0baf35fc0c00a336cb44c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30718729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootedPathValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Configuration.RootedPathValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RootedPathValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootedPathValidator : System::Configuration::ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Valida las reglas que rigen el uso del modificador de configuración <c>tempFilesLocation</c>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se agrega un `WebReference` objeto a un servicio Web en el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], archivos son creados por el proceso de detección del servicio Web.  
  
 Clientes de servicios Web averigüe dónde encontrar el documento de descripción (WSDL) del servicio Web mediante la adición de un `WebReference` objeto. Los clientes de servicio Web, a continuación, guardan los documentos detectados en el disco mediante el uso de la `WriteAll` método. Por ejemplo, los documentos detectados pueden ser archivos de esquema .xsd o descripciones del servicio. Al final del proceso, el cliente elimina los archivos. Puede cambiar la ubicación predeterminada de los archivos en la carpeta temporal mediante el `tempFilesLocation` cambiar en el `<xmlSerializer>` elemento, especificado en el archivo de configuración Machine.config, como en el ejemplo siguiente.  
  
```  
<configuration>  
  <system.web>  
  <system.xml.serialization>  
    <xmlSerializer tempFilesLocation=".."/>  
  </system.xml.serialization>  
</configuration>  
```  
  
 El valor de `tempFilesLocation` debe ser una ruta de acceso absoluta. Si la ruta de acceso especificada no es absoluta, la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] genera un <xref:System.Configuration.ConfigurationErrorsException> excepción cuando se hace referencia a la sección de configuración.  
  
 El valor de la propiedad se trunca para quitar iniciales y finales de espacios en blanco.  
  
 Si el valor de la `tempFilesLocation` propiedad se compone de un espacio en blanco, se usa la ubicación predeterminada % TMP % para la compilación. Se produce el mismo comportamiento predeterminado cuando no `tempFilesLocation` ha especificado el modificador.  
  
 El <xref:System.Xml.Serialization.XmlSerializer> no realiza una comprobación para ver si existe la ruta de acceso. Si no es así, un <xref:System.IO.DirectoryNotFoundException> se genera. Esto es idéntico al comportamiento predeterminado de la `XmlSerializer` si la ruta de acceso % TMP % no existe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootedPathValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootedPathValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo del objeto.</param>
        <summary>Determina si se puede validar el tipo del objeto.</summary>
        <returns>
          Es <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un objeto <see langword="XMLSerializer" /> válido; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valor de un objeto.</param>
        <summary>Determina si el valor de un objeto es válido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `XmlSerializer` se va a validar se pasa como un parámetro de la `Validate` método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>