<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RootedPathValidator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac576311afd538bb8339c0baf35fc0c00a336cb44c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76311afd538bb8339c0baf35fc0c00a336cb44c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>Validates the rules governing the use of the <bpt id="p1">&lt;c&gt;</bpt>tempFilesLocation<ept id="p1">&lt;/c&gt;</ept> configuration switch.</source>
          <target state="translated">Valida las reglas que rigen el uso del modificador de configuración <bpt id="p1">&lt;c&gt;</bpt>tempFilesLocation<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>When adding a <ph id="ph1">`WebReference`</ph> object to a Web service in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, files are created by the Web service discovery process.</source>
          <target state="translated">Cuando se agrega un <ph id="ph1">`WebReference`</ph> objeto a un servicio Web en el <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, archivos son creados por el proceso de detección del servicio Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>Web service clients learn where to find the Web service description (WSDL) document by adding a <ph id="ph1">`WebReference`</ph> object.</source>
          <target state="translated">Clientes de servicios Web averigüe dónde encontrar el documento de descripción (WSDL) del servicio Web mediante la adición de un <ph id="ph1">`WebReference`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The Web service clients then save the discovered documents to the disk by using the <ph id="ph1">`WriteAll`</ph> method.</source>
          <target state="translated">Los clientes de servicio Web, a continuación, guardan los documentos detectados en el disco mediante el uso de la <ph id="ph1">`WriteAll`</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>For example, the discovered documents may be .xsd schema files or service descriptions.</source>
          <target state="translated">Por ejemplo, los documentos detectados pueden ser archivos de esquema .xsd o descripciones del servicio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>At the end of the process, the client deletes the files.</source>
          <target state="translated">Al final del proceso, el cliente elimina los archivos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>You can change the default location of the files in the temporary folder by using the <ph id="ph1">`tempFilesLocation`</ph> switch in the <ph id="ph2">`&lt;xmlSerializer&gt;`</ph> element, specified in the Machine.config configuration file, as in the following example.</source>
          <target state="translated">Puede cambiar la ubicación predeterminada de los archivos en la carpeta temporal mediante el <ph id="ph1">`tempFilesLocation`</ph> cambiar en el <ph id="ph2">`&lt;xmlSerializer&gt;`</ph> elemento, especificado en el archivo de configuración Machine.config, como en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The value of <ph id="ph1">`tempFilesLocation`</ph> must be an absolute path.</source>
          <target state="translated">El valor de <ph id="ph1">`tempFilesLocation`</ph> debe ser una ruta de acceso absoluta.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If the path specified is not absolute, the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> generates a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationErrorsException&gt;</ph> exception when the configuration section is referenced.</source>
          <target state="translated">Si la ruta de acceso especificada no es absoluta, la <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> genera un <ph id="ph2">&lt;xref:System.Configuration.ConfigurationErrorsException&gt;</ph> excepción cuando se hace referencia a la sección de configuración.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The value of the property is truncated to remove leading and trailing white spaces.</source>
          <target state="translated">El valor de la propiedad se trunca para quitar iniciales y finales de espacios en blanco.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If value of the <ph id="ph1">`tempFilesLocation`</ph> property is composed of white space, the default %TMP% location is used for the compilation.</source>
          <target state="translated">Si el valor de la <ph id="ph1">`tempFilesLocation`</ph> propiedad se compone de un espacio en blanco, se usa la ubicación predeterminada % TMP % para la compilación.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The same default behavior occurs when no <ph id="ph1">`tempFilesLocation`</ph> switch is specified.</source>
          <target state="translated">Se produce el mismo comportamiento predeterminado cuando no <ph id="ph1">`tempFilesLocation`</ph> ha especificado el modificador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not check to see whether the path exists.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> no realiza una comprobación para ver si existe la ruta de acceso.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If it does not, a <ph id="ph1">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> is generated.</source>
          <target state="translated">Si no es así, un <ph id="ph1">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>This is identical to the default behavior of the <ph id="ph1">`XmlSerializer`</ph> if the %TMP% path does not exist.</source>
          <target state="translated">Esto es idéntico al comportamiento predeterminado de la <ph id="ph1">`XmlSerializer`</ph> si la ruta de acceso % TMP % no existe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source>The type of the object.</source>
          <target state="translated">Tipo del objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source>Determines whether the type of the object can be validated.</source>
          <target state="translated">Determina si se puede validar el tipo del objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> parameter matches a valid <ph id="ph3">&lt;see langword="XMLSerializer" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="type" /&gt;</ph> coincide con un objeto <ph id="ph3">&lt;see langword="XMLSerializer" /&gt;</ph> válido; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>The value of an object.</source>
          <target state="translated">Valor de un objeto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>Determines whether the value of an object is valid.</source>
          <target state="translated">Determina si el valor de un objeto es válido.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>The <ph id="ph1">`XmlSerializer`</ph> object to validate is passed as a parameter of the <ph id="ph2">`Validate`</ph> method.</source>
          <target state="translated">El <ph id="ph1">`XmlSerializer`</ph> se va a validar se pasa como un parámetro de la <ph id="ph2">`Validate`</ph> método.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>