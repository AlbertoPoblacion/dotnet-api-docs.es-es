<Type Name="ContourPoint" FullName="System.Speech.Synthesis.TtsEngine.ContourPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b0000a9158eb359fab56faa1ae79ebcf51923aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ContourPoint : IEquatable&lt;System.Speech.Synthesis.TtsEngine.ContourPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ContourPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.ContourPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
  <TypeSignature Language="VB.NET" Value="Public Structure ContourPoint&#xA;Implements IEquatable(Of ContourPoint)" />
  <TypeSignature Language="C++ CLI" Value="public value class ContourPoint : IEquatable&lt;System::Speech::Synthesis::TtsEngine::ContourPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.ContourPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa cambios de timbre para el contenido de voz de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contorno de tono se define como una matriz de destinos en las posiciones de tiempo especificado en la salida de voz. Cada destino se define mediante tres parámetros. El primer valor es un porcentaje del período del texto contenido (es decir, un número seguido de "%"). El segundo valor especifica la cantidad para aumentar o disminuir el tono. El tercer valor designa la unidad que se utilizará para el número especificado en el segundo valor; porcentaje o en hercios (Hz).  
  
 <xref:System.Speech.Synthesis.TtsEngine.ContourPoint> se obtienen los objetos por la <xref:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints%2A> método, o se usa para establecer el contorno de tono para un <xref:System.Speech.Synthesis.TtsEngine.TextFragment> por el <xref:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints%2A> (método).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContourPoint (float start, float change, System.Speech.Synthesis.TtsEngine.ContourPointChangeType changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 start, float32 change, valuetype System.Speech.Synthesis.TtsEngine.ContourPointChangeType changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.#ctor(System.Single,System.Single,System.Speech.Synthesis.TtsEngine.ContourPointChangeType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Single, change As Single, changeType As ContourPointChangeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContourPoint(float start, float change, System::Speech::Synthesis::TtsEngine::ContourPointChangeType changeType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Single" />
        <Parameter Name="change" Type="System.Single" />
        <Parameter Name="changeType" Type="System.Speech.Synthesis.TtsEngine.ContourPointChangeType" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:System.Single" /> que especifica el punto en el que se aplicará el cambio de paso en <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />. Esto se expresa como el porcentaje transcurrido de la duración de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> en ese momento.</param>
        <param name="change">
          <see cref="T:System.Single" /> que especifica la cantidad que se va a aumentar o reducir el paso.</param>
        <param name="changeType">Miembro de <see cref="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" /> que especifica la unidad que se va a usar para el número especificado en el parámetro <c>change</c>.</param>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public float Change { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Change" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Change As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Change { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que representa la cantidad para aumentar o reducir el paso en un punto de un objeto <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este valor se combina con un valor comprendido entre el <xref:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType%2A> propiedad para definir la cantidad para aumentar o disminuir el tono.  
  
 Si no se define un valor de rotación de 0% o 100%, a continuación, se copia el destino de tono más cercano. Son todos los valores relativos de la rotación en relación con el valor de tono justo antes del texto independiente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.ContourPointChangeType ChangeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.ContourPointChangeType ChangeType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeType As ContourPointChangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::ContourPointChangeType ChangeType { System::Speech::Synthesis::TtsEngine::ContourPointChangeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.ContourPointChangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un miembro de <see cref="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" /> que especifica la unidad para el número especificado en el parámetro <paramref name="change" /> de un objeto <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de esta enumeración se combina con un valor comprendido entre el <xref:System.Speech.Synthesis.TtsEngine.ContourPoint.Change%2A> propiedad para definir la cantidad para aumentar o disminuir el tono.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Proporciona métodos para comparar objetos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se puede convertir en una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />.</param>
        <summary>Determina si un objeto determinado es una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> e igual a la instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />.</summary>
        <returns>Devuelve <see langword="true" /> si la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> actual y la obtenida del argumento <paramref name="obj" /> son iguales; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método devuelve false si el <xref:System.Object> proporcionada por el `obj` argumento no se puede convertir a <xref:System.Speech.Synthesis.TtsEngine.ContourPoint>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.ContourPoint other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.ContourPoint other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ContourPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::ContourPoint other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.ContourPoint" />
      </Parameters>
      <Docs>
        <param name="other">Una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> que se comparará con la instancia actual.</param>
        <summary>Determina si una instancia determinada de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> es igual a la instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />.</summary>
        <returns>Devuelve <see langword="true" /> si tanto la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> actual como la proporcionada a través del argumento <paramref name="other" /> son iguales; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un código hash para esta instancia.</summary>
        <returns>Código hash de un entero de 32 bits con signo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos <xref:System.Speech.Synthesis.TtsEngine.ContourPoint> objetos pueden tener el mismo código hash aunque representen valores de tiempo diferentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.ContourPoint point1, System.Speech.Synthesis.TtsEngine.ContourPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.ContourPoint point1, valuetype System.Speech.Synthesis.TtsEngine.ContourPoint point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As ContourPoint, point2 As ContourPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::ContourPoint point1, System::Speech::Synthesis::TtsEngine::ContourPoint point2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Speech.Synthesis.TtsEngine.ContourPoint" />
        <Parameter Name="point2" Type="System.Speech.Synthesis.TtsEngine.ContourPoint" />
      </Parameters>
      <Docs>
        <param name="point1">Instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> que se va a comparar con la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> proporcionada por el argumento <c>point2</c>.</param>
        <param name="point2">Instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> que se va a comparar con la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> proporcionada por el argumento <c>point1</c>.</param>
        <summary>Determina si dos instancias de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> son iguales.</summary>
        <returns>Devuelve <see langword="true" /> si las instancias de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> a las que hacen referencia <paramref name="point1" /> y <paramref name="point2" /> son iguales; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[El método equivalente para este operador es <xref:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals%28System.Speech.Synthesis.TtsEngine.ContourPoint%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.ContourPoint point1, System.Speech.Synthesis.TtsEngine.ContourPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.ContourPoint point1, valuetype System.Speech.Synthesis.TtsEngine.ContourPoint point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As ContourPoint, point2 As ContourPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::ContourPoint point1, System::Speech::Synthesis::TtsEngine::ContourPoint point2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Speech.Synthesis.TtsEngine.ContourPoint" />
        <Parameter Name="point2" Type="System.Speech.Synthesis.TtsEngine.ContourPoint" />
      </Parameters>
      <Docs>
        <param name="point1">Instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> que se va a comparar con la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> proporcionada por el argumento <c>point2</c>.</param>
        <param name="point2">Instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> que se va a comparar con la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> proporcionada por el argumento <c>point1</c>.</param>
        <summary>Determina si dos instancias de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> NO son iguales.</summary>
        <returns>Devuelve <see langword="true" /> si las instancias de <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> a las que hacen referencia <paramref name="point1" /> y <paramref name="point2" /> NO son iguales; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[El método equivalente para este operador es <xref:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals%28System.Speech.Synthesis.TtsEngine.ContourPoint%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public float Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Start { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un <see cref="T:System.Single" /> que especifica el punto en el que se aplicará el cambio de paso en <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />. Esto se expresa como el porcentaje transcurrido de la duración de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> en ese momento.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menor que 0% o mayor que 100% se omiten los valores de posición de tiempo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>