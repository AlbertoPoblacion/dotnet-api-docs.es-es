<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c219b0e7a240dcdb864633218b0d33ebd17771c9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4cddf-101">Clase base abstracta que se implementará en todo el texto para los motores de síntesis de voz.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cddf-101">Abstract base class to be implemented by all text to speech synthesis engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-102">Para construir un motor de texto a voz personalizado, una aplicación siempre debe implementar una clase derivada de la clase base abstracta <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span><span class="sxs-lookup"><span data-stu-id="4cddf-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="4cddf-103">Una implementación correctamente registrada de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , a continuación, puede utilizarse como una voz de sintetizador por <xref:System.Speech.Synthesis> las aplicaciones basadas en el espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="4cddf-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="4cddf-104">Objetos heredar <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> debe reemplazar los miembros siguientes: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> y <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="4cddf-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="4cddf-105">El miembro más importante de la <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> es de clase para que se implementen los <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4cddf-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="4cddf-106">El <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> método es llamado por el analizador de texto de infraestructuras recibir:</span><span class="sxs-lookup"><span data-stu-id="4cddf-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="4cddf-107">Una referencia a la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaz, que proporciona acceso a los servicios del sistema, como incluso puesta en cola y escribir la salida de audio.</span><span class="sxs-lookup"><span data-stu-id="4cddf-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="4cddf-108">Una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia generado a partir de datos de lenguaje de marcado de síntesis de voz (SSML).</span><span class="sxs-lookup"><span data-stu-id="4cddf-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="4cddf-109">Además de texto se representan como voz, el análisis del SSML almacena información sobre los atributos solicitados de voz en un <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instancia asociado a cada entrada <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objeto.</span><span class="sxs-lookup"><span data-stu-id="4cddf-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="4cddf-110">Una aplicación de sintetizador de voz, opcionalmente, puede enviar solicitudes para un formato de salida especificado mediante la implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> para ser llamado por la plataforma cuando intenta proporcionar la salida de audio correcta.</span><span class="sxs-lookup"><span data-stu-id="4cddf-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="4cddf-111">Un implementador también puede proporcionar compatibilidad para administrar definiciones externas de pronunciación o léxicos, por su implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> y <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="4cddf-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey">
          <span data-ttu-id="4cddf-112">Nombre completo de la clave del Registro para Voice Token asociado a la implementación de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span>
          </span>
          <span data-ttu-id="4cddf-113">motor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-113">engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cddf-114">Crea una nueva instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> según una clave del Registro Voice Token apropiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-115">Las llamadas a este constructor genera normalmente <xref:System.Speech.Synthesis> aplicaciones basadas en seleccionando una voz de sintetizador para ser usado por una instancia de <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="4cddf-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="4cddf-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> debe ser el registro en HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span><span class="sxs-lookup"><span data-stu-id="4cddf-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="4cddf-117">Una instancia válida de <see langword="System.Uri" /> que indica la ubicación de la información de léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="4cddf-118">Cadena que contiene el tipo de medio del léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-118">A string containing the media type of the lexicon.</span>
          </span>
          <span data-ttu-id="4cddf-119">Los tipos de medios no distinguen entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-119">Media types are case insensitive.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4cddf-120">Una referencia a una interfaz <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> usada para interactuar con la infraestructura de la plataforma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cddf-121">Agrega un léxico a <see langword="Synthesizer" /><see langword="Voice" /> implementado por la instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-122">Una biblioteca de objetos de pronunciación es una colección de palabras o frases junto con su pronunciación especificado mediante un alfabeto pronunciación adecuado.</span><span class="sxs-lookup"><span data-stu-id="4cddf-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="4cddf-123">Normalmente se llama a este método por la infraestructura de plataforma en respuesta a un <xref:System.Speech.Synthesis> en función de las aplicaciones que llaman <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> y el uso de la voz de sintetizador implementada actualmente <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instancia.</span><span class="sxs-lookup"><span data-stu-id="4cddf-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="4cddf-124">El valor de `mediaType` es normalmente una especificación de MIME, como la especificación de SSML usa MIME para las especificaciones de medios.</span><span class="sxs-lookup"><span data-stu-id="4cddf-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4cddf-125">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> utiliza la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaz pasa al cargar una biblioteca de objetos de un recurso.</span><span class="sxs-lookup"><span data-stu-id="4cddf-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="4cddf-126">A continuación, almacena una `System.IO.Stream` a la biblioteca de objetos en un `System.Collections.Generic.Dictionary` instancia, indizado por la URI de la biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="4cddf-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4cddf-127">Es responsabilidad de la implementación para estar totalmente familiarizado con y ser capaz de procesar la biblioteca de objetos que se almacenan en <paramref name="uri" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-127">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span>
            </span>
            <span data-ttu-id="4cddf-128">La implementación también debe realizar un seguimiento y administrar las duraciones de todos los tipos de léxico agrega.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-128">The implementation must also keep track and manage the lifetimes of all lexicons it adds.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat">
          <span data-ttu-id="4cddf-129">Miembro válido de la enumeración de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> que indica el tipo de formato solicitado de la salida de audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-129">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span>
          </span>
        </param>
        <param name="targetWaveFormat">
          <span data-ttu-id="4cddf-130">Puntero a un <see langword="struct" /> que contiene el valor de detalle para el tipo de formato de audio solicitado por el argumento <c>speakOutputFormat</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-130">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <c>speakOutputFormat</c> argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cddf-131">Devuelve el mejor resultado de audio coincidente admitido por una respuesta del motor de síntesis dada a una solicitud para el motor de sintetizador de compatibilidad con un formato de salida determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-131">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cddf-132">Devuelve una instancia de <see langword="IntPtr" /> válida que hace referencia a un <see langword="struct" /> que contiene información detallada sobre el formato de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-132">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-133">La estructura utilizada como `targetWaveFormat` y devuelto por el método debe compatible con la `WAVEFORMATEX` disponible en SAPI, y se debe asignar el valor devuelto con `CoTaskMemAlloc`.</span><span class="sxs-lookup"><span data-stu-id="4cddf-133">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="4cddf-134">El `struct` debe proporcionar funcionalidad equivalente a la:</span><span class="sxs-lookup"><span data-stu-id="4cddf-134">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="4cddf-135">La implementación del ejemplo siguiente valida las entradas seleccionadas, su uso si están dentro de las tolerancias, de lo contrario con los valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="4cddf-135">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4cddf-136">Objeto que herede de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> debe examinar el formato de salida solicitado según lo especificado por <paramref name="targetWaveFormat" /> y devolver el formato más cercano que admite.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-136">Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="4cddf-137">Una instancia válida de <see langword="System.Uri" /> que indica la ubicación de la información de léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-137">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4cddf-138">Una referencia a una interfaz <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> pasada por la infraestructura de la plataforma para permitir el acceso a los recursos de la infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-138">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cddf-139">Quita un léxico cargado actualmente por <see langword="Synthesizer" /><see langword="Voice" /> implementado por la instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-139">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-140">Una biblioteca de objetos de pronunciación es una colección de palabras o frases junto con su pronunciación especificado mediante un alfabeto pronunciación adecuado.</span><span class="sxs-lookup"><span data-stu-id="4cddf-140">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="4cddf-141">Normalmente se llama a este método en respuesta a un <xref:System.Speech.Synthesis> en función de las aplicaciones que llaman <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> y el uso de la voz de sintetizador implementada actualmente <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instancia.</span><span class="sxs-lookup"><span data-stu-id="4cddf-141">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4cddf-142">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> usa la biblioteca de objetos del URI para consultar una instancia `System.Collections.Generic.Dictionary` para el `System.IO.Stream`, cierra la secuencia y quita el uri que hace referencia a la biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="4cddf-142">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4cddf-143">Es responsabilidad de la implementación para estar totalmente familiarizado con y ser capaz de procesar la biblioteca de objetos que se almacenan en <paramref name="uri" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-143">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span>
            </span>
            <span data-ttu-id="4cddf-144">La implementación también debe realizar un seguimiento y administrar las duraciones de todas las políticas que se quitan.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-144">The implementation must also keep track and manage the lifetimes of all lexicons it removes.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment">
          <span data-ttu-id="4cddf-145">Una matriz de instancias de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> que contienen el texto que se convertirá en voz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-145">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span>
          </span>
        </param>
        <param name="waveHeader">
          <span data-ttu-id="4cddf-146">
            <see langword="IntPtr" /> que señala a una estructura que contiene formato de salida de audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-146">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4cddf-147">Una referencia a una interfaz <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> pasada por la infraestructura de la plataforma para permitir el acceso a los recursos de la infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-147">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cddf-148">Presenta la matriz <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> indicada en el formato de salida especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cddf-148">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cddf-149">La estructura utilizada como `waveHeader` y devuelto por el método debe compatible con la `WAVEFORMATEX` disponible en SAPI.</span><span class="sxs-lookup"><span data-stu-id="4cddf-149">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="4cddf-150">El `struct` debe proporcionar funcionalidad equivalente a la:</span><span class="sxs-lookup"><span data-stu-id="4cddf-150">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="4cddf-151">En el ejemplo siguiente forma parte de una implementación de síntesis de voz personalizados heredando de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="4cddf-151">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="4cddf-152">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="4cddf-152">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="4cddf-153">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasan a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="4cddf-153">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="4cddf-154">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por obtener valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="4cddf-154">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="4cddf-155">Traduce Americanism a Britishisms en el texto que se va a hablar.</span><span class="sxs-lookup"><span data-stu-id="4cddf-155">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="4cddf-156">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas para la compatibilidad de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento que se crea un indicador de progreso de sintetizador de unidad.</span><span class="sxs-lookup"><span data-stu-id="4cddf-156">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="4cddf-157">A continuación, se llama a un motor de representación de voz con modificados <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="4cddf-157">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4cddf-158">Sintetizador de voz personalizado implementa con <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> y <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> profesional como filtros o los intermediarios entre aplicaciones de sintetizador construidos usando la infraestructura de plataforma a través de los miembros de la <see cref="N:System.Speech.Synthesis" /> espacio de nombres y motores de síntesis de voz de sistema subyacente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-158">Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.</span>
            </span>
            <span data-ttu-id="4cddf-159">Un <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementación:</span>
            <span class="sxs-lookup">
              <span data-stu-id="4cddf-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:</span>
            </span>  
  
1.  <span data-ttu-id="4cddf-160">Intercepte o modificar aspectos del entrante <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objetos</span><span class="sxs-lookup"><span data-stu-id="4cddf-160">Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects</span></span>  
  
2.  <span data-ttu-id="4cddf-161">Genera los eventos necesarios con la referencia de sitio a un <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instancia</span><span class="sxs-lookup"><span data-stu-id="4cddf-161">Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance</span></span>  
  
3.  <span data-ttu-id="4cddf-162">Genera la voz sintetizada real.</span><span class="sxs-lookup"><span data-stu-id="4cddf-162">Generates the actual synthesized speech.</span></span><span data-ttu-id="4cddf-163">Generación de voz normalmente se realiza mediante una llamada a <c>hablar</c> en uno de la proporcionados por el sistema operativo de motores de representación de la oración.</span><span class="sxs-lookup"><span data-stu-id="4cddf-163">Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.</span></span><span data-ttu-id="4cddf-164">Si uno de los motores de representación de voz disponibles no se utiliza, un objeto que herede de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> debe crear su propio motor de representación de voz.</span><span class="sxs-lookup"><span data-stu-id="4cddf-164">If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.</span></span><span data-ttu-id="4cddf-165">El acceso a la <c>hablar</c> método sobre el uso de obtenido el registro y la reflexión.</span><span class="sxs-lookup"><span data-stu-id="4cddf-165">Access to the <c>Speak</c> method on obtained using the registry and reflection.</span></span><span data-ttu-id="4cddf-166">.</span><span class="sxs-lookup"><span data-stu-id="4cddf-166">.</span></span><span data-ttu-id="4cddf-167">Al heredar de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, debe reemplazar los miembros siguientes: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, y <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span><span class="sxs-lookup"><span data-stu-id="4cddf-167">When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>