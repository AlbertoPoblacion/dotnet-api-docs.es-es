<Type Name="CacheItemUpdateCallback" FullName="System.Web.Caching.CacheItemUpdateCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3f705a5e1ead5f1e2de3c0aba249fdcd778e89b" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64091471" /></Metadata><TypeSignature Language="C#" Value="public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheItemUpdateCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheItemUpdateCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CacheItemUpdateCallback(key As String, reason As CacheItemUpdateReason, ByRef expensiveObject As Object, ByRef dependency As CacheDependency, ByRef absoluteExpiration As DateTime, ByRef slidingExpiration As TimeSpan)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CacheItemUpdateCallback(System::String ^ key, CacheItemUpdateReason reason, [Runtime::InteropServices::Out] System::Object ^ % expensiveObject, [Runtime::InteropServices::Out] CacheDependency ^ % dependency, [Runtime::InteropServices::Out] DateTime % absoluteExpiration, [Runtime::InteropServices::Out] TimeSpan % slidingExpiration);" />
  <TypeSignature Language="F#" Value="type CacheItemUpdateCallback = delegate of string * CacheItemUpdateReason *  *  *  *  -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="System.String" />
    <Parameter Name="reason" Type="System.Web.Caching.CacheItemUpdateReason" />
    <Parameter Name="expensiveObject" Type="System.Object" RefType="out" />
    <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" RefType="out" />
    <Parameter Name="absoluteExpiration" Type="System.DateTime" RefType="out" />
    <Parameter Name="slidingExpiration" Type="System.TimeSpan" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">El identificador del elemento que se va a quitar de la memoria caché.</param>
    <param name="reason">El motivo por el que el elemento se quita de la memoria caché.</param>
    <param name="expensiveObject">Cuando este método devuelve un resultado, contiene el objeto del elemento almacenado en caché que contiene las actualizaciones.</param>
    <param name="dependency">Cuando este método devuelve un resultado, contiene el objeto que define la dependencia entre el objeto de elemento y un archivo, una clave de caché, una matriz de uno u otro objeto <see cref="T:System.Web.Caching.CacheDependency" />.</param>
    <param name="absoluteExpiration">Cuando este método devuelve un resultado, contiene el momento en que expiró el objeto.</param>
    <param name="slidingExpiration">Cuando este método devuelve un resultado, contiene el intervalo entre el tiempo de último acceso al objeto y el momento de su expiración.</param>
    <summary>Define un método de devolución de llamada para notificar a las aplicaciones antes de que se quite un elemento almacenado en caché de la memoria caché.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando expira un objeto en la memoria caché, ASP.NET llama el <xref:System.Web.Caching.CacheItemUpdateCallback> método con la clave para el elemento de caché y el motivo que desea actualizar el elemento. Los parámetros restantes de este método son los parámetros out. Proporcione el nuevo elemento en caché y expiración opcional y los valores de dependencia que se usarán al actualizar el elemento en caché.  
  
 No se llama a la devolución de llamada de actualización si el elemento en caché se quita explícitamente mediante una llamada a <xref:System.Web.Caching.Cache.Remove%2A>.  
  
 Si desea que el elemento en caché que se quitará de la memoria caché, debe devolver `null` en el `expensiveObject` parámetro. En caso contrario, devuelve una referencia a los nuevos datos en caché mediante el uso de la `expensiveObject` parámetro. Si no especifica valores de dependencia o la expiración, el elemento se quitará de la memoria caché solo cuando se necesite memoria.  
  
 Si el método de devolución de llamada produce una excepción, ASP.NET suprime la excepción y se quita el valor almacenado en caché.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>