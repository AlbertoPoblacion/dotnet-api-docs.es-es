<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e3f5f9a2cf8d810ccd1e3c5b6394bea9e9da66f" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31907604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      Los complementos de Windows Presentation Foundation (WPF) usan <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> para pasar de una clase <see cref="T:System.Windows.FrameworkElement" /> a una interfaz <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) amplía el modelo de complemento de .NET Framework para permitir las interfaces de usuario de WPF que se pasan entre las aplicaciones de host y complementos. WPF requiere que las interfaces de usuario de WPF que se pasan ya sea directamente o indirectamente derivan de <xref:System.Windows.FrameworkElement>. Sin embargo, complementos y host de las aplicaciones suelen ejecutarse en dominios de aplicación independientes y son, por lo tanto, separadas por un límite de aislamiento. Por este motivo, el modelo de complemento de .NET Framework requiere que los tipos que se pasan a través del límite de aislamiento para ser utilizable de forma remota. Un tipo de uso remoto se ajusta a una de las siguientes acciones:  
  
-   Implementa la interfaz <xref:System.Runtime.Serialization.ISerializable>.  
  
-   Tiene la <xref:System.SerializableAttribute> atributo aplicado.  
  
-   Se deriva de la <xref:System.MarshalByRefObject> clase.  
  
 <xref:System.Windows.FrameworkElement> no está en modo remoto y se debe convertir a un tipo de uso remoto antes de pasarlo a través del límite de aislamiento entre un complemento y una aplicación host. Para ello, debe llamar el método estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> método para convertir el <xref:System.Windows.FrameworkElement> a una instancia de la remoto <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Una vez el <xref:System.AddIn.Contract.INativeHandleContract> se pasa a través del límite de aislamiento, se debe convertir a un tipo que se pueden mostrar por la aplicación host o el complemento. En este caso, el método estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> método se llama para convertir un <xref:System.AddIn.Contract.INativeHandleContract> a una <xref:System.Windows.FrameworkElement>.  
  
 Para obtener más exposición de los complementos WPF, consulte [WPF Add-Ins Overview](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> que se pasó más allá del límite de aislamiento entre la aplicación host y el complemento.</param>
        <summary>Devuelve un elemento <see cref="T:System.Windows.FrameworkElement" /> que se ha convertido a partir de <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>
          <see cref="T:System.Windows.FrameworkElement" /> que se mostrará en la aplicación host o el complemento, dependiendo de la dirección en la que se pase la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] entre los dos.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">
          <see cref="T:System.Windows.FrameworkElement" /> que se va a pasar más allá del límite de aislamiento entre la aplicación host y el complemento.</param>
        <summary>Devuelve <see cref="T:System.AddIn.Contract.INativeHandleContract" /> que se ha convertido a partir de un elemento <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> que se pasa desde la aplicación host o el complemento, dependiendo de la dirección en la que se pase la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] entre los dos.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> no es el elemento raíz de un árbol de elementos.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>