<Type Name="ContractBase" FullName="System.AddIn.Pipeline.ContractBase">
  <TypeSignature Language="C#" Value="public class ContractBase : MarshalByRefObject, System.AddIn.Contract.IContract, System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBase extends System.MarshalByRefObject implements class System.AddIn.Contract.IContract, class System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBase&#xA;Inherits MarshalByRefObject&#xA;Implements IContract, ISponsor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBase : MarshalByRefObject, System::AddIn::Contract::IContract, System::Runtime::Remoting::Lifetime::ISponsor" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Lifetime.ISponsor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="35bc4-101">Proporciona una implementación predeterminada de los miembros de <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-101">Provides a default implementation of <see cref="T:System.AddIn.Contract.IContract" /> members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35bc4-102">Los contratos definen los tipos y métodos utilizados por el host y el complemento.</span><span class="sxs-lookup"><span data-stu-id="35bc4-102">Contracts define the types and methods used by the host and the add-in.</span></span> <span data-ttu-id="35bc4-103">Todos los contratos deben derivarse <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="35bc4-103">All contracts must derive from <xref:System.AddIn.Contract.IContract>.</span></span> <span data-ttu-id="35bc4-104">Esta clase proporciona la implementación predeterminada de <xref:System.AddIn.Contract.IContract> miembros.</span><span class="sxs-lookup"><span data-stu-id="35bc4-104">This class provides the default implementation of <xref:System.AddIn.Contract.IContract> members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35bc4-105">Inicializa una nueva instancia de la clase <see cref="T:System.AddIn.Pipeline.ContractBase" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-105">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AcquireLifetimeToken();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.AcquireLifetimeToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35bc4-106">Obtiene un token de duración.</span><span class="sxs-lookup"><span data-stu-id="35bc4-106">Obtains a lifetime token.</span></span></summary>
        <returns><span data-ttu-id="35bc4-107">Número aleatorio que identifica un token.</span><span class="sxs-lookup"><span data-stu-id="35bc4-107">A random number that identifies a token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35bc4-108">Se han revocado todos los tokens previamente adquiridos.</span><span class="sxs-lookup"><span data-stu-id="35bc4-108">All previously acquired tokens have been revoked.</span></span>  <span data-ttu-id="35bc4-109">No hay más tokens disponibles.</span><span class="sxs-lookup"><span data-stu-id="35bc4-109">No further tokens are available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRemoteHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.GetRemoteHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35bc4-110">Obtiene el código hash del actual objeto <see cref="T:System.AddIn.Pipeline.ContractBase" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-110">Gets the hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></summary>
        <returns><span data-ttu-id="35bc4-111">Código hash para el objeto <see cref="T:System.AddIn.Pipeline.ContractBase" /> actual.</span><span class="sxs-lookup"><span data-stu-id="35bc4-111">A hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFinalRevoke">
      <MemberSignature Language="C#" Value="protected virtual void OnFinalRevoke ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinalRevoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinalRevoke ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinalRevoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35bc4-112">Cuando se invalida en un adaptador de conversión, libera los recursos nativos mantenidos por el adaptador.</span><span class="sxs-lookup"><span data-stu-id="35bc4-112">When overridden in an add-in-side adapter, releases native resources held by the adapter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35bc4-113">El sistema llama a este método cuando la duración de todos los tokens que se han adquirido actual <xref:System.AddIn.Pipeline.ContractBase> instancia se han revocado.</span><span class="sxs-lookup"><span data-stu-id="35bc4-113">This method is called by the system when all the lifetime tokens that have been acquired from the current <xref:System.AddIn.Pipeline.ContractBase> instance have been revoked.</span></span> <span data-ttu-id="35bc4-114">Utilice este método para limpiar los recursos nativos mantenidos por el adaptador y para señalar a las vistas adaptadas que deben hacer lo mismo.</span><span class="sxs-lookup"><span data-stu-id="35bc4-114">Use this method to clean up any native resources held by the adapter, and to signal to the adapted views that they should do the same.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public virtual System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.QueryContract(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier"><span data-ttu-id="35bc4-115">Nombre completo del contrato, incluido su nombre de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="35bc4-115">The full name of the contract, including its assembly name.</span></span></param>
        <summary><span data-ttu-id="35bc4-116">Se refleja sobre la instancia de un contrato y devuelve el puntero <see langword="this" /> si el objeto actual implementa ese contrato.</span><span class="sxs-lookup"><span data-stu-id="35bc4-116">Reflects over the instance of a contract and returns the <see langword="this" /> pointer if the current object implements that contract.</span></span></summary>
        <returns><span data-ttu-id="35bc4-117">Puntero <see langword="this" /> a una interfaz <see cref="T:System.AddIn.Contract.IContract" /> o <see langword="null" /> si no está implementado el contrato.</span><span class="sxs-lookup"><span data-stu-id="35bc4-117">The <see langword="this" /> pointer to an <see cref="T:System.AddIn.Contract.IContract" /> interface, or <see langword="null" /> if the contract is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35bc4-118">Este método puede reemplazarse.</span><span class="sxs-lookup"><span data-stu-id="35bc4-118">This method can be overridden.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35bc4-119"><paramref name="contractIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-119"><paramref name="contractIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public virtual bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="35bc4-120">Objeto cuya equivalencia con el objeto remoto se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="35bc4-120">The object to test for equality with the remote object.</span></span></param>
        <summary><span data-ttu-id="35bc4-121">Compara un objeto con un objeto remoto para ver si son iguales.</span><span class="sxs-lookup"><span data-stu-id="35bc4-121">Compares an object with a remote object for equality.</span></span></summary>
        <returns>
          <span data-ttu-id="35bc4-122">Es <see langword="true" /> si el objeto es igual que el objeto remoto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-122"><see langword="true" /> if the object is equal to the remote object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public virtual string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RemoteToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35bc4-123">Obtiene una cadena que identifica un objeto remoto.</span><span class="sxs-lookup"><span data-stu-id="35bc4-123">Gets a string that identifies a remote object.</span></span></summary>
        <returns><span data-ttu-id="35bc4-124">Cadena que identifica el objeto remoto.</span><span class="sxs-lookup"><span data-stu-id="35bc4-124">A string that identifies the remote object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renewal (lease As ILease) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan Renewal(System::Runtime::Remoting::Lifetime::ILease ^ lease);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease"><span data-ttu-id="35bc4-125">Objeto de concesión de período de duración que utiliza el servicio de duración de comunicación remota.</span><span class="sxs-lookup"><span data-stu-id="35bc4-125">The lifetime lease object that is used by the remoting lifetime service.</span></span></param>
        <summary><span data-ttu-id="35bc4-126">Solicita un cliente patrocinador para renovar el período del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="35bc4-126">Requests a sponsoring client to renew the lease for the specified object.</span></span></summary>
        <returns><span data-ttu-id="35bc4-127">Concesión renovada.</span><span class="sxs-lookup"><span data-stu-id="35bc4-127">The renewed lease.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35bc4-128"><paramref name="lease" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="35bc4-128"><paramref name="lease" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="35bc4-129">De plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="35bc4-129">for full trust for the immediate caller.</span></span> <span data-ttu-id="35bc4-130">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="35bc4-130">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RevokeLifetimeToken(int token);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="35bc4-131">Número del token.</span><span class="sxs-lookup"><span data-stu-id="35bc4-131">The token number.</span></span></param>
        <summary><span data-ttu-id="35bc4-132">Quita el token especificado de la lista de tokens de duración pendientes.</span><span class="sxs-lookup"><span data-stu-id="35bc4-132">Removes the specified token from the list of outstanding lifetime tokens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35bc4-133">Si el token no está en la lista de tokens de duración pendientes, este método produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="35bc4-133">If the token is not in the list of outstanding lifetime tokens, this method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35bc4-134"><paramref name="token" /> no se encuentra en la lista de tokens de duración pendientes.</span><span class="sxs-lookup"><span data-stu-id="35bc4-134"><paramref name="token" /> is not found in the list of outstanding lifetime tokens.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>