<Type Name="ValidationManager" FullName="System.Workflow.ComponentModel.Compiler.ValidationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c6c94b535113c789fb238707f575051421be5ce" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39898721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ValidationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValidationManager extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ValidationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationManager sealed : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ValidationManager = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Habilita el uso compartido de la información contextual (como, por ejemplo, la validación de la propiedad, la actividad primaria, etc.) por parte de los validadores durante el proceso de compilación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Para obtener una lista con los valores de propiedad iniciales relativos a una instancia de la clase <xref:System.Workflow.ComponentModel.Compiler.ValidationManager>, vea el constructor <xref:System.Workflow.ComponentModel.Compiler.ValidationManager.%23ctor%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase ValidationManager.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Workflow.ComponentModel.Compiler.ValidationManager.Context%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.Workflow.ComponentModel.Compiler.ValidationManager.ValidateChildActivities%2A>|`true`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationManager (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationManager(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Compiler.ValidationManager : IServiceProvider -&gt; System.Workflow.ComponentModel.Compiler.ValidationManager" Usage="new System.Workflow.ComponentModel.Compiler.ValidationManager serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un <see cref="T:System.IServiceProvider" /> que busca un servicio identificado GUID.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> mediante el proveedor de servicios identificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista con los valores de propiedad iniciales relativos a una instancia de la clase <xref:System.Workflow.ComponentModel.Compiler.ValidationManager>, vea el constructor <xref:System.Workflow.ComponentModel.Compiler.ValidationManager.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationManager (IServiceProvider serviceProvider, bool validateChildActivities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider, bool validateChildActivities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider, validateChildActivities As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationManager(IServiceProvider ^ serviceProvider, bool validateChildActivities);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Compiler.ValidationManager : IServiceProvider * bool -&gt; System.Workflow.ComponentModel.Compiler.ValidationManager" Usage="new System.Workflow.ComponentModel.Compiler.ValidationManager (serviceProvider, validateChildActivities)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="validateChildActivities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un <see cref="T:System.IServiceProvider" /> que busca un servicio identificado GUID.</param>
        <param name="validateChildActivities">
          <see langword="true" /> para validar las clases <see cref="T:System.Workflow.ComponentModel.Activity" /> secundarias del <see cref="T:System.Workflow.ComponentModel.Activity" /> actual; en el caso contrario, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> utilizando el proveedor de servicios identificado e indica si se deberían validar las clases <see cref="T:System.Workflow.ComponentModel.Activity" /> secundarias.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista con los valores de propiedad iniciales relativos a una instancia de la clase <xref:System.Workflow.ComponentModel.Compiler.ValidationManager>, vea el constructor <xref:System.Workflow.ComponentModel.Compiler.ValidationManager.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.ValidationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.Workflow.ComponentModel.Compiler.ValidationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el objeto de pila que un validador puede utilizar para hacer que la información esté disponible para los validadores anidados.</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que un validador puede utilizar para hacer que la información esté disponible para los validadores anidados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="validationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Objeto que especifica el <see cref="T:System.Type" /> de objeto de servicio que se va a recuperar.</param>
        <summary>Obtiene el objeto de servicio del <see cref="T:System.Type" /> especificado.</summary>
        <returns>Un objeto de servicio de tipo <paramref name="serviceType" /> o referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ningún objeto de servicio de tipo <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidators">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.Validator[] GetValidators (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.Validator[] GetValidators(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetValidators(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Workflow::ComponentModel::Compiler::Validator ^&gt; ^ GetValidators(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetValidators : Type -&gt; System.Workflow.ComponentModel.Compiler.Validator[]" Usage="validationManager.GetValidators type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.Validator[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> de la clase <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> que se va a buscar.</param>
        <summary>Devuelve la matriz de validadores asociados a un tipo mediante la búsqueda del atributo de validador aplicado al tipo.</summary>
        <returns>Matriz de clases <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la tabla hash de las clases <xref:System.Workflow.ComponentModel.Compiler.Validator> contiene la clase <xref:System.Type> indicada a través de `type`, se devuelve una matriz de las clases <xref:System.Workflow.ComponentModel.Compiler.Validator>.  
  
 Si la tabla hash no contiene <xref:System.Type> indicado a través de `type`, se crea una nueva tabla hash de las clases <xref:System.Workflow.ComponentModel.Compiler.Validator> y, a continuación, se devuelve la matriz de las clases <xref:System.Workflow.ComponentModel.Compiler.Validator>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateChildActivities">
      <MemberSignature Language="C#" Value="public bool ValidateChildActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateChildActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.ValidationManager.ValidateChildActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidateChildActivities As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateChildActivities { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidateChildActivities : bool" Usage="System.Workflow.ComponentModel.Compiler.ValidationManager.ValidateChildActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se deberían validar las clases <see cref="T:System.Workflow.ComponentModel.Activity" /> secundarias.</summary>
        <value>
          <see langword="true" /> si se deberían validar las clases <see cref="T:System.Workflow.ComponentModel.Activity" /> secundarias; en el caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>