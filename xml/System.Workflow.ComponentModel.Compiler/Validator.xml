<Type Name="Validator" FullName="System.Workflow.ComponentModel.Compiler.Validator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2613662fe095c58d561a7b5dc243eada1c5abad" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53289661" /></Metadata><TypeSignature Language="C#" Value="public class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.Validator" />
  <TypeSignature Language="VB.NET" Value="Public Class Validator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validator" />
  <TypeSignature Language="F#" Value="type Validator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Clase base para todos los componentes de validador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 La clase Validator se utiliza para asegurarse de que se configuran las actividades adecuadamente en tiempo de diseño. Se crea una instancia de los validadores durante el tiempo de diseño cuando el diseñador valida las propiedades asignadas a las actividades; si no se configuran los parámetros de la actividad correctamente, el diseñador mostrará los errores de la etiqueta inteligente para los valores incorrectos. Los validadores también se ejecutan durante el tiempo de compilación y se devolverán errores de validación si no son correctas las restricciones como objeto de tipo primario o secundario, número mínimo de elementos secundarios, etc.  Los validadores también se ejecutarán en el tiempo de ejecución cuando se crean instancias de un flujo de trabajo basado en marcado mediante el método <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>.  
  
 El propósito principal de un validador es asegurarse de que los errores se conocen durante el tiempo de diseño y que no se exponen como excepciones durante el tiempo de ejecución.  
  
 Los validadores están asociados a las actividades que validan utilizando el atributo <xref:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.ValidatorTypeName%2A>; todos los validadores de la actividad se deben heredar de la clase <xref:System.Workflow.ComponentModel.Compiler.ActivityValidator>.  
  
 De manera predeterminada, los validadores validarán las propiedades META; no validan propiedades de instancia que se pueden configurar en el tiempo de ejecución.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Validator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Validator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFullPropertyName">
      <MemberSignature Language="C#" Value="protected string GetFullPropertyName (System.Workflow.ComponentModel.Compiler.ValidationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetFullPropertyName(class System.Workflow.ComponentModel.Compiler.ValidationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetFullPropertyName (manager As ValidationManager) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetFullPropertyName(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.GetFullPropertyName : System.Workflow.ComponentModel.Compiler.ValidationManager -&gt; string" Usage="validator.GetFullPropertyName manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> vinculado a la validación.</param>
        <summary>método del asistente para extraer el nombre completo de la propiedad.</summary>
        <returns>El nombre completo de la propiedad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Útil cuando la propiedad validada está anidada.  El método recorre <xref:System.Workflow.ComponentModel.Compiler.PropertyValidationContext> en la pila para crear el nombre completo de la propiedad.  
  
 Por ejemplo: el nombre My.Actor.Bas está formado por tres elementos <xref:System.Workflow.ComponentModel.Compiler.PropertyValidationContext>.  
  
 Si la propiedad validada pertenece a un objeto que es un elemento de una colección, el método generará el nombre de la colección.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="manager" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate (System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate(class System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (manager As ValidationManager, obj As Object) As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Validate(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection&#xA;override this.Validate : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.Validate (manager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de validación vinculado a la validación.</param>
        <param name="obj"><see cref="T:System.Object" /> que se va a validar.</param>
        <summary>Valida el objeto especificado y devuelve una colección de errores de validación.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contiene los errores de validación que son el resultado de esta operación.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).

O bien

<paramref name="obj" /> es una referencia nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateActivityChange">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationError ValidateActivityChange (System.Workflow.ComponentModel.Activity activity, System.Workflow.ComponentModel.ActivityChangeAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationError ValidateActivityChange(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.ComponentModel.ActivityChangeAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationError ^ ValidateActivityChange(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::ComponentModel::ActivityChangeAction ^ action);" />
      <MemberSignature Language="F#" Value="abstract member ValidateActivityChange : System.Workflow.ComponentModel.Activity * System.Workflow.ComponentModel.ActivityChangeAction -&gt; System.Workflow.ComponentModel.Compiler.ValidationError&#xA;override this.ValidateActivityChange : System.Workflow.ComponentModel.Activity * System.Workflow.ComponentModel.ActivityChangeAction -&gt; System.Workflow.ComponentModel.Compiler.ValidationError" Usage="validator.ValidateActivityChange (activity, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="action" Type="System.Workflow.ComponentModel.ActivityChangeAction" />
      </Parameters>
      <Docs>
        <param name="activity">Objeto <see cref="T:System.Workflow.ComponentModel.Activity" /> especificado.</param>
        <param name="action">Objeto <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> especificado.</param>
        <summary>Cuando se invalida en una clase derivada, se valida un cambio basado en un <see cref="T:System.Workflow.ComponentModel.Activity" /> específico agregado o eliminado. Esta función se llama durante la aplicación de cambios que se realizan en el flujo de trabajo durante las actualizaciones dinámicas.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> generado por la operación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la implementación base, se devuelve una referencia NULL (`Nothing` en Visual Basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activity" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).

O bien

<paramref name="action" /> es una referencia nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperties">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperties (System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperties(class System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateProperties (manager As ValidationManager, obj As Object) As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ ValidateProperties(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member ValidateProperties : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection&#xA;override this.ValidateProperties : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.ValidateProperties (manager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de validación vinculado a la validación.</param>
        <param name="obj"><see cref="T:System.Workflow.ComponentModel.Activity" /> que se va a validar.</param>
        <summary>método del asistente para validar automáticamente propiedades específicas de objetos.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contiene los errores de validación que son el resultado de esta operación.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).

O bien

<paramref name="obj" /> es una referencia nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="protected internal System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperty (System.Reflection.PropertyInfo propertyInfo, object propertyOwner, object propertyValue, System.Workflow.ComponentModel.Compiler.ValidationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperty(class System.Reflection.PropertyInfo propertyInfo, object propertyOwner, object propertyValue, class System.Workflow.ComponentModel.Compiler.ValidationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ ValidateProperty(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ propertyOwner, System::Object ^ propertyValue, System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ValidateProperty : System.Reflection.PropertyInfo * obj * obj * System.Workflow.ComponentModel.Compiler.ValidationManager -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.ValidateProperty (propertyInfo, propertyOwner, propertyValue, manager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="propertyOwner" Type="System.Object" />
        <Parameter Name="propertyValue" Type="System.Object" />
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><see cref="T:System.Reflection.PropertyInfo" /> en la propiedad Subject.</param>
        <param name="propertyOwner">El propietario de la propiedad.</param>
        <param name="propertyValue">El valor de la propiedad.</param>
        <param name="manager"><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> para esta operación.</param>
        <summary>Realiza la validación en una propiedad y devuelve <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contiene los resultados de esa validación.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contiene los resultados de dicha validación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si durante la validación no se produce ningún error, se devuelve un <xref:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection> vacío.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>