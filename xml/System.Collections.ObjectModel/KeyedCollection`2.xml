<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyedCollection`2.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53375080ab008f35379a851d18f700db732edfd23.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3375080ab008f35379a851d18f700db732edfd23</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The type of keys in the collection.</source>
          <target state="translated">Tipo de claves de la colección.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The type of items in the collection.</source>
          <target state="translated">Tipo de elementos de la colección.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Provides the abstract base class for a collection whose keys are embedded in the values.</source>
          <target state="translated">Proporciona la clase base abstracta para una colección en la que sus claves están incrustadas en los valores.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> clase proporciona ambos o (1) una recuperación indizada y clave de recuperación que se aproxima a o (1).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</source>
          <target state="translated">Es un tipo abstracto o con más precisión, un conjunto infinito de tipos abstractos, porque cada uno de sus tipos genéricos construidos es una clase base abstracta.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>To use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, derive your collection type from the appropriate constructed type.</source>
          <target state="translated">Para usar <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, derivar el tipo de colección del tipo construido adecuado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is a hybrid between a collection based on the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface and a collection based on the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> clase es un híbrido entre una colección basada en la <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interfaz genérica y una colección en función de la <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interfaz genérica.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is an indexed list of items.</source>
          <target state="translated">Al igual que las recopilaciones basadas en el <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interfaz genérica, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> es una lista indizada de elementos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a key associated with each element.</source>
          <target state="translated">Al igual que las recopilaciones basadas en el <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interfaz genérica, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> tiene una clave asociada a cada elemento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Unlike dictionaries, an element of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</source>
          <target state="translated">A diferencia de los diccionarios, un elemento de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> no es un par de clave/valor; en su lugar, todo el elemento es el valor y la clave se incrusta dentro del valor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For example, an element of a collection derived from <ph id="ph1">`KeyedCollection\&lt;String,String&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of String, String)`</ph> in Visual Basic) might be "John Doe Jr."</source>
          <target state="translated">Por ejemplo, un elemento de una colección derivada de <ph id="ph1">`KeyedCollection\&lt;String,String&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of String, String)`</ph> en Visual Basic) podría ser "John Doe Jr."</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>where the value is "John Doe Jr."</source>
          <target state="translated">donde el valor es "John Doe Jr."</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>and the key is "Doe"; or a collection of employee records containing integer keys could be derived from <ph id="ph1">`KeyedCollection\&lt;int,Employee&gt;`</ph>.</source>
          <target state="translated">y la clave es "Doe"; o una colección de registros de empleados que contiene las claves de entero podría derivarse de <ph id="ph1">`KeyedCollection\&lt;int,Employee&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The abstract <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method extracts the key from the element.</source>
          <target state="translated">Abstracto <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método extrae la clave del elemento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that you can obtain with the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> incluye un diccionario de búsqueda que puede obtener con el <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Cuando se agrega un elemento a la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, la clave del elemento se extrae una vez y se guarda en el diccionario de búsqueda para realizar búsquedas más rápidas.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This behavior is overridden by specifying a dictionary creation threshold when you create the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Se invalida este comportamiento especificando un umbral de creación de diccionario, cuando se crea el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The lookup dictionary is created the first time the number of elements exceeds that threshold.</source>
          <target state="translated">El diccionario de búsqueda se crea la primera vez que el número de elementos supera ese umbral.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>If you specify –1 as the threshold, the lookup dictionary is never created.</source>
          <target state="translated">Si se especifica -1 como el umbral, el diccionario de búsqueda nunca se crea.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>When the internal lookup dictionary is used, it contains references to all the items in the collection if <ph id="ph1">`TItem`</ph> is a reference type, or copies of all the items in the collection if <ph id="ph2">`TItem`</ph> is a value type.</source>
          <target state="translated">Cuando se utiliza el diccionario de búsqueda interno, contiene referencias a todos los elementos de la colección si <ph id="ph1">`TItem`</ph> es un tipo de referencia, o copias de todos los elementos de la colección si <ph id="ph2">`TItem`</ph> es un tipo de valor.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Thus, using the lookup dictionary may not be appropriate if <ph id="ph1">`TItem`</ph> is a value type.</source>
          <target state="translated">Por lo tanto, utilizando el diccionario de búsqueda puede no ser adecuado si <ph id="ph1">`TItem`</ph> es un tipo de valor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>You can access an item by its index or key by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Puede tener acceso a un elemento por su índice o clave mediante la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>You can add items without a key, but these items can subsequently be accessed only by index.</source>
          <target state="translated">Puede agregar elementos sin una clave, pero estos elementos posteriormente son accesibles solo por su índice.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The first example shows the minimum code required to derive from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and demonstrates many of the inherited methods.</source>
          <target state="translated">El primer ejemplo muestra el código mínimo necesario para derivar de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y se muestran muchos de los métodos heredados.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The second example shows how to override the protected methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> to provide custom behavior.</source>
          <target state="translated">El segundo ejemplo muestra cómo reemplazar los métodos protegidos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> para proporcionar un comportamiento personalizado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ejemplo 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ejemplo 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the default equality comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> que utiliza el comparador de igualdad predeterminado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>A <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> creadas con este constructor utiliza el comparador de igualdad genérico predeterminado para el tipo de la clave, se obtiene desde <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>To specify a different generic equality comparer, use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor or the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">Para especificar un comparador de igualdad genérico diferente, utilice la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> incluye un diccionario de búsqueda que se crea cuando se agrega el primer elemento.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Cuando se agrega un elemento a la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, la clave del elemento se extrae una vez y se guarda en el diccionario de búsqueda para realizar búsquedas más rápidas.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Este comportamiento puede invalidarse mediante el uso de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor y especificando un umbral de creación de diccionario.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> clase es abstracta (<ph id="ph2">`MustInherit`</ph> en Visual Basic), debe derivar de ella para poder utilizarlo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">En el constructor para el tipo derivado, llame a la correspondiente <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">No es necesario exponer la funcionalidad como el comparador de igualdad o el umbral de creación de diccionario en sus constructores.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Implementación de la interfaz genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se va a usar al comparar claves, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> para usar el comparador de igualdad predeterminado para el tipo de clave, que se obtiene de <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the specified equality comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> que utiliza el comparador de igualdad especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> incluye un diccionario de búsqueda que se crea cuando se agrega el primer elemento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Cuando se agrega un elemento a la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, la clave del elemento se extrae una vez y se guarda en el diccionario de búsqueda para realizar búsquedas más rápidas.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Este comportamiento puede invalidarse mediante el uso de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor y especificando un umbral de creación de diccionario.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> clase es abstracta (<ph id="ph2">`MustInherit`</ph> en Visual Basic), debe derivar de ella para poder utilizarlo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">En el constructor para el tipo derivado, llame a la correspondiente <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">No es necesario exponer la funcionalidad como el comparador de igualdad o el umbral de creación de diccionario en sus constructores.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Implementación de la interfaz genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se va a usar al comparar claves, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> para usar el comparador de igualdad predeterminado para el tipo de clave, que se obtiene de <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</source>
          <target state="translated">Número de elementos que puede contener la colección sin crear un diccionario de búsqueda (0 crea el diccionario de búsqueda al agregar el primer elemento), o –1 para especificar que nunca se crea un diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> que utiliza el comparador de igualdad especificado y crea un diccionario de búsqueda cuando se supera el umbral especificado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> incluye un diccionario de búsqueda que se crea cuando se agrega el primer elemento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Cuando se agrega un elemento a la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, la clave del elemento se extrae una vez y se guarda en el diccionario de búsqueda para realizar búsquedas más rápidas.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This constructor allows you to override that behavior.</source>
          <target state="translated">Este constructor permite invalidar este comportamiento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</source>
          <target state="translated">Especifique 0 para crear el diccionario cuando se agrega el primer elemento, 1 para crear el diccionario cuando se agrega el segundo elemento y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>If you specify –1 as the threshold, the lookup dictionary is never created.</source>
          <target state="translated">Si se especifica -1 como el umbral, el diccionario de búsqueda nunca se crea.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</source>
          <target state="translated">Para las colecciones muy pequeñas la mejora de la velocidad de recuperación proporcionada por el diccionario de búsqueda podría no ser que vale la pena la memoria adicional necesaria para el diccionario.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Setting a threshold allows you to decide when to make that tradeoff.</source>
          <target state="translated">Establecer un umbral permite decidir cuándo realizar esa compensación.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> clase es abstracta (<ph id="ph2">`MustInherit`</ph> en Visual Basic), debe derivar de ella para poder utilizarlo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">En el constructor para el tipo derivado, llame a la correspondiente <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">No es necesario exponer la funcionalidad como el comparador de igualdad o el umbral de creación de diccionario en sus constructores.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</source>
          <target state="translated">El ejemplo de código se utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor con un umbral de 0, por lo que el diccionario interno se crea la primera vez que un objeto se agrega a la colección.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dictionaryCreationThreshold" /&gt;</ph> is less than –1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionaryCreationThreshold" /&gt;</ph> es menor que –1.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The element to change the key of.</source>
          <target state="translated">Elemento cuya clave se va a cambiar.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The new key for <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nueva clave para <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Changes the key associated with the specified element in the lookup dictionary.</source>
          <target state="translated">Cambia la clave asociada al elemento especificado en el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method does not modify the key embedded in <ph id="ph1">`item`</ph>; it simply replaces the key saved in the lookup dictionary.</source>
          <target state="translated">Este método no modifica la clave incrustada en <ph id="ph1">`item`</ph>; simplemente se sustituye la clave guardada en el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Therefore, if <ph id="ph1">`newKey`</ph> is different from the key that is embedded in <ph id="ph2">`item`</ph>, you cannot access <ph id="ph3">`item`</ph> by using the key returned by <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, si <ph id="ph1">`newKey`</ph> es diferente de la clave que se incrusta en <ph id="ph2">`item`</ph>, no se puede tener acceso a <ph id="ph3">`item`</ph> mediante el uso de la clave devuelta por <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method does nothing if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> does not have a lookup dictionary.</source>
          <target state="translated">Este método no hace nada si la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> no tiene un diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> must be unique.</source>
          <target state="translated">Todas las claves de un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> deben ser únicos.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">No puede ser una clave <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</source>
          <target state="translated">Antes de modificar la clave incrustada en un elemento, debe llamar a este método para actualizar la clave en el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>If the dictionary creation threshold is –1, calling this method is not necessary.</source>
          <target state="translated">Si el umbral de creación de diccionario es – 1, no es necesario llamar a este método.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Do not expose the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method as a public method of a derived class.</source>
          <target state="translated">No exponga el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método como un método público de una clase derivada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Misuse of this method puts the lookup dictionary out of sync with item keys.</source>
          <target state="translated">Uso incorrecto de este método hace que el diccionario de búsqueda no está sincronizado con claves de producto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>For example, setting the key to <ph id="ph1">`null`</ph> and then setting it to another value adds multiple keys for an item to the lookup dictionary.</source>
          <target state="translated">Por ejemplo, establecer la clave en <ph id="ph1">`null`</ph> y, a continuación, si se establece en otro valor, agrega varias claves para un elemento para el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</source>
          <target state="translated">Exponga este método internamente para permitir que las claves de elemento mutable: cuando se cambia la clave para un elemento, este método se utiliza para cambiar la clave en el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is not found.</source>
          <target state="translated">No se ha encontrado <ph id="ph1">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ya existe en <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Quita todos los elementos de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If there is a lookup dictionary, this method clears it but does not delete it.</source>
          <target state="translated">Si hay un diccionario de búsqueda, este método lo borra pero no para eliminarla.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Si el número de elementos ha superado el umbral de creación de diccionario y la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> está usando un diccionario de búsqueda, seguirán usando un diccionario de búsqueda, aunque el número de elementos nuevo está por debajo del umbral.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method, inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Invalide este método para proporcionar un comportamiento personalizado para el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método, se hereda de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</source>
          <target state="translated">Llame a la implementación de la clase base de este método para borrar la colección subyacente y para borrar el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph> method to provide custom behavior for clearing all objects from the collection.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código que muestran cómo se reemplaza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph> método para proporcionar un comportamiento personalizado para borrar todos los objetos de la colección.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">El primer ejemplo agrega un evento de notificación personalizada y el segundo proporciona compatibilidad para una colección de objetos con claves mutables.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>Gets the generic equality comparer that is used to determine equality of keys in the collection.</source>
          <target state="translated">Obtiene el comparador de igualdad genérico que se utiliza para determinar la igualdad de claves en la colección.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface that is used to determine equality of keys in the collection.</source>
          <target state="translated">Implementación de la interfaz genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se utiliza para determinar la igualdad de claves en la colección.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Clave que se buscará en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>Determines whether the collection contains an element with the specified key.</source>
          <target state="translated">Determina si la colección contiene un elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> contiene un elemento con la clave especificada; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to search the dictionary.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> tiene un diccionario de búsqueda, <ph id="ph2">`key`</ph> se usa para buscar en el diccionario.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
          <target state="translated">Si no hay ningún diccionario de búsqueda, la clave de cada elemento se extrae utilizando la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y se compara con la clave especificada.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>This method is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una operación o (1) si la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> tiene un diccionario de búsqueda; en caso contrario, es una O (<ph id="ph2">`n`</ph>) operación, donde <ph id="ph3">`n`</ph> es <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>Gets the lookup dictionary of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Obtiene el diccionario de búsqueda de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The lookup dictionary of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>, if it exists; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Diccionario de búsqueda de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>, si existe; de lo contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> incluye un diccionario de búsqueda que se crea cuando se agrega el primer elemento.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Cuando se agrega un elemento a la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, la clave del elemento se extrae una vez y se guarda en el diccionario de búsqueda para realizar búsquedas más rápidas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Este comportamiento puede invalidarse mediante el uso de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor y especificando un umbral de creación de diccionario.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The element from which to extract the key.</source>
          <target state="translated">Elemento del que se va a extraer la clave.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>When implemented in a derived class, extracts the key from the specified element.</source>
          <target state="translated">Cuando se implementa en una clase derivada, extrae la clave del elemento especificado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The key for the specified element.</source>
          <target state="translated">Clave para el elemento especificado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>If the key in the lookup dictionary is different from the key that is embedded in <ph id="ph1">`item`</ph>, you cannot access <ph id="ph2">`item`</ph> by using the key returned by <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
          <target state="translated">Si la clave en el diccionario de búsqueda es diferente de la clave que se incrusta en <ph id="ph1">`item`</ph>, no se puede tener acceso a <ph id="ph2">`item`</ph> mediante el uso de la clave devuelta por <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>You can implement this method to return <ph id="ph1">`null`</ph> for a collection that contains items without keys, in which case the items can be accessed only by their index.</source>
          <target state="translated">Puede implementar este método para devolver <ph id="ph1">`null`</ph> para una colección que contiene los elementos sin claves, en cuyo caso los elementos son accesibles solo por su índice.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</source>
          <target state="translated">Debe invalidar este método para proporcionar el diccionario con un medio para extraer las claves de los elementos del diccionario.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This method is called internally.</source>
          <target state="translated">Se llama internamente a este método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>It is not necessary for it to be public.</source>
          <target state="translated">No es necesario para que sea público.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero donde debe insertarse <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserta un elemento en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>, en el índice especificado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`index`</ph> es igual a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> se agrega al final de la <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> llama a la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Invalide este método para proporcionar un comportamiento personalizado para el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> métodos, se hereda de la <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Llame a la implementación de la clase base de este método para insertar el elemento en la colección subyacente y actualizar el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method to provide custom behavior for adding or inserting objects into the collection.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código que muestran cómo se reemplaza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método para proporcionar un comportamiento personalizado para agregar o insertar objetos en la colección.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">El primer ejemplo agrega un evento de notificación personalizada y el segundo proporciona compatibilidad para una colección de objetos con claves mutables.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The key of the element to get.</source>
          <target state="translated">Clave del elemento que se va a obtener.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Gets the element with the specified key.</source>
          <target state="translated">Obtiene el elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The element with the specified key.</source>
          <target state="translated">El elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If an element with the specified key is not found, an exception is thrown.</source>
          <target state="translated">Si no se encuentra un elemento con la clave especificada, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Esta propiedad proporciona la capacidad de obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This property is distinct from the inherited <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property, which gets and sets elements by numeric index.</source>
          <target state="translated">Esta propiedad es distinta de los heredados <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, que obtiene y establece los elementos por índice numérico.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>However, if <ph id="ph1">`TKey`</ph> is of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, this property masks the inherited property.</source>
          <target state="translated">Sin embargo, si <ph id="ph1">`TKey`</ph> es de tipo <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, esta propiedad enmascara la propiedad heredada.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>In that case, you can access the inherited property by casting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> to its base type.</source>
          <target state="translated">En ese caso, se puede obtener acceso a la propiedad heredada convirtiendo el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> a su tipo base.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>For example, <ph id="ph1">`KeyedCollection&lt;int, MyType&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of Integer, MyType)`</ph> in Visual Basic, <ph id="ph3">`KeyedCollection&lt;int, MyType^&gt;`</ph> in C++) can be cast to <ph id="ph4">`Collection&lt;MyType&gt;`</ph> (<ph id="ph5">`Collection(Of MyType)`</ph> in Visual Basic, <ph id="ph6">`Collection&lt;MyType^&gt;`</ph> in C++).</source>
          <target state="translated">Por ejemplo, <ph id="ph1">`KeyedCollection&lt;int, MyType&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of Integer, MyType)`</ph> en Visual Basic, <ph id="ph3">`KeyedCollection&lt;int, MyType^&gt;`</ph> en C++) pueden convertirse a <ph id="ph4">`Collection&lt;MyType&gt;`</ph> (<ph id="ph5">`Collection(Of MyType)`</ph> en Visual Basic, <ph id="ph6">`Collection&lt;MyType^&gt;`</ph> en C++).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to retrieve the element from the dictionary.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> tiene un diccionario de búsqueda, <ph id="ph2">`key`</ph> se usa para recuperar el elemento del diccionario.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
          <target state="translated">Si no hay ningún diccionario de búsqueda, la clave de cada elemento se extrae utilizando la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y se compara con la clave especificada.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Retrieving the value of this property is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Recuperación del valor de esta propiedad es una operación o (1) si la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> tiene un diccionario de búsqueda; en caso contrario, es una O (<ph id="ph2">`n`</ph>) operación, donde <ph id="ph3">`n`</ph> es <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The code example calls both the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only and retrieves by key, and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is settable and retrieves by index.</source>
          <target state="translated">El ejemplo de código llama a las del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, que es de solo lectura y se recupera por clave, y el <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, que es configurable y recupera por índice.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</source>
          <target state="translated">Muestra cómo obtener acceso a la última propiedad cuando los objetos de la colección derivada tienen claves de enteros, puede distinguir de los enteros utilizados para la recuperación indizada.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>An element with the specified key does not exist in the collection.</source>
          <target state="translated">En la colección no existe ningún elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Clave del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Quita el elemento con la clave especificada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se quita correctamente; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se encuentra <ph id="ph2">&lt;paramref name="key" /&gt;</ph> en <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of the element is also removed from the lookup dictionary.</source>
          <target state="translated">También se quita la clave del elemento del diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Si el número de elementos ha superado el umbral de creación de diccionario y la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> está usando un diccionario de búsqueda, seguirán usando un diccionario de búsqueda, aunque el número de elementos nuevo está por debajo del umbral.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>To customize the behavior of this method, override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> method.</source>
          <target state="translated">Para personalizar el comportamiento de este método, invalidar la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Este ejemplo de código muestra el código mínimo necesario derivar una clase de colección de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: reemplazar la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> método y proporciona un constructor público que delega en un constructor de clase base.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">El ejemplo de código también muestra muchas de las propiedades y métodos heredados de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The example demonstrates <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph> method inherited from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, which removes the item with a specified key, and also the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> methods inherited from <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, which remove by object and by index respectively.</source>
          <target state="translated">En el ejemplo se muestra cómo <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph> método se hereda de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, que quita el elemento con una clave especificada y también el <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> métodos heredados de <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, que quite respectivamente por objeto y por índice.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">El <ph id="ph1">`SimpleOrder`</ph> clase es una lista de pedido muy sencilla que contiene <ph id="ph2">`OrderItem`</ph> objetos, cada uno de los cuales representa un elemento de línea en el orden.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">La clave de <ph id="ph1">`OrderItem`</ph> es inmutable, una consideración importante para las clases que derivan de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The index of the element to remove.</source>
          <target state="translated">Índice del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Quita el elemento situado en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The key of the element is also removed from the lookup dictionary.</source>
          <target state="translated">También se quita la clave del elemento del diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Si el número de elementos ha superado el umbral de creación de diccionario y la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> está usando un diccionario de búsqueda, seguirán usando un diccionario de búsqueda, aunque el número de elementos nuevo está por debajo del umbral.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29&gt;</ph> method.</source>
          <target state="translated">Invalide este método para proporcionar un comportamiento personalizado para el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29&gt;</ph> y <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29&gt;</ph> métodos, se hereda de la <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y el <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Llame a la implementación de la clase base de este método para quitar el elemento de la colección subyacente y actualizar el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> method to provide custom behavior for removing objects from the collection.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código que muestran cómo se reemplaza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> método para proporcionar un comportamiento personalizado para quitar objetos de la colección.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">El primer ejemplo agrega un evento de notificación personalizada y el segundo proporciona compatibilidad para una colección de objetos con claves mutables.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The zero-based index of the item to be replaced.</source>
          <target state="translated">Índice de base cero del elemento que se va a reemplazar.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The new item.</source>
          <target state="translated">Nuevo elemento.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Replaces the item at the specified index with the specified item.</source>
          <target state="translated">Reemplaza el elemento situado en el índice determinado con el elemento especificado.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The lookup dictionary is updated accordingly.</source>
          <target state="translated">El diccionario de búsqueda se actualiza en consecuencia.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</source>
          <target state="translated">Es decir, la clave del elemento que se va a reemplazar se quita del diccionario de búsqueda, y se agrega la clave del nuevo elemento.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Notas para los implementadores</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Override this method to provide customized behavior for setting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Invalide este método para proporcionar un comportamiento personalizado para la configuración de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad se hereda de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This method does not affect the behavior of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only.</source>
          <target state="translated">Este método no afecta al comportamiento de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, que es de solo lectura.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Llame a la implementación de la clase base de este método para establecer el elemento en la colección subyacente y actualizar el diccionario de búsqueda.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> method to provide custom behavior for setting the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código que muestran cómo se reemplaza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> método para proporcionar un comportamiento personalizado para la configuración de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">El primer ejemplo agrega un evento de notificación personalizada y el segundo proporciona compatibilidad para una colección de objetos con claves mutables.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos, para proporcionar un comportamiento personalizado para el <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para establecer el valor predeterminado <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">El comportamiento personalizado que se proporciona en este ejemplo es un evento de notificación denominado <ph id="ph1">`Changed`</ph>, que se produce al final de cada uno de los métodos invalidados.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`SimpleOrder`</ph> (clase), que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> y representa un sencillo formulario de pedido.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Contiene el formulario de pedido <ph id="ph1">`OrderItem`</ph> objetos que representan los elementos ordenados.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">El ejemplo de código también crea un <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> clase que contiene la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">El ejemplo de código muestra el comportamiento personalizado mediante una llamada a las propiedades y métodos de la clase derivada, en la <ph id="ph1">`Main`</ph> método de la <ph id="ph2">`Demo`</ph> clase.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Este ejemplo de código utiliza objetos con claves inmutables.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Para obtener un ejemplo de código que utilice claves mutables, vea <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo invalidar el protegido <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> método para admitir claves mutables y cómo reemplazar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> métodos para mantener la integridad de las claves y la colección.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">El ejemplo de código se crea la <ph id="ph1">`MutableKeys`</ph> colección, que se deriva de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>y el <ph id="ph3">`MutableKey`</ph> clase.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">El <ph id="ph1">`MutableKey`</ph> clase tiene un configurables <ph id="ph2">`Key`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Cuando se asigna una nueva clave a la propiedad, el establecedor de propiedad llama el <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> en Visual Basic) <ph id="ph3">`ChangeKey`</ph> método de la colección para comprobar si la nueva clave entrarían en conflicto con una clave existente.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Si es así, se produce una excepción y no se cambia el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Para mantener la conexión entre un <ph id="ph1">`MutableKey`</ph> objeto y el <ph id="ph2">`MutableKeys`</ph> colección y para impedir que un objeto que se va a insertar en las dos colecciones, el <ph id="ph3">`MutableKey`</ph> clase tiene un <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> en Visual Basic) <ph id="ph6">`Collection`</ph>campo.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Este campo es mantenido por los métodos protegidos que proporcionan un comportamiento personalizado para agregar y quitar elementos de la colección, como el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">El campo se establece cuando el elemento se agrega a una colección y se borra cuando se quita el elemento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>