<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Collection`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6fa73ab1869f7d3db9619c3424c839a24dfe2c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6fa73ab1869f7d3db9619c3424c839a24dfe2c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Tipo de los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Provides the base class for a generic collection.</source>
          <target state="translated">Proporciona la clase base para una colección genérica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase puede usarse de inmediato mediante la creación de una instancia de uno de sus tipos construidos; lo único que debe hacer es especificar el tipo de objeto que se van a incluirse en la colección.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class itself.</source>
          <target state="translated">Además, puede derivar su propio tipo de colección de cualquier tipo construido o derivar un tipo de colección genérica de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> propia clase.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase proporciona métodos protegidos que se pueden utilizar para personalizar su comportamiento al agregar y quitar elementos, borrar la colección o establecer el valor de un elemento existente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Most <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objectscan be modified.</source>
          <target state="translated">La mayoría <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objectscan modificarse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>However, a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> object that is initialized with a read-only <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object cannot be modified.</source>
          <target state="translated">Sin embargo, un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objeto que se inicializa con un solo lectura <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> no se puede modificar el objeto.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>See <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> for a read-only version of this class.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> para obtener una versión de solo lectura de esta clase.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Pueden tener acceso a los elementos de esta colección utilizando un índice entero.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Índices de esta colección son de base cero.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta sección contiene dos ejemplos de código.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The first example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class.</source>
          <target state="translated">El primer ejemplo muestra varias propiedades y métodos de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The second example shows how to derive a collection class from a constructed type of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and how to override the protected methods of <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to provide custom behavior.</source>
          <target state="translated">El segundo ejemplo muestra cómo derivar una clase de colección de un tipo construido de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>y cómo reemplazar los métodos protegidos de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para proporcionar un comportamiento personalizado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar una clase de colección de un tipo construido de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y cómo invalidar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para proporcionar personalizado comportamiento de la <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, y <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para la configuración de la <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">El comportamiento personalizado proporcionado por este ejemplo es un <ph id="ph1">`Changed`</ph> evento de notificación que se inicia al final de cada uno de los métodos protegidos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">El <ph id="ph1">`Dinosaurs`</ph> hereda de la clase <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> en Visual Basic) y define la <ph id="ph4">`Changed`</ph> evento, que utiliza un <ph id="ph5">`DinosaursChangedEventArgs`</ph> clase para la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">El ejemplo de código llama a varias propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para mostrar el evento personalizado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Estático público (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) miembros de este tipo son seguros para subprocesos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> puede admitir varios sistemas de lectura al mismo tiempo, siempre y cuando no se modifica la colección.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Aun así, enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>This base class is provided to make it easier for implementers to create a custom collection.</source>
          <target state="translated">Esta clase base se proporciona para facilitar a los implementadores que creen una colección personalizada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Se recomienda ampliar esta clase base en lugar de crear sus propios los implementadores.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class that is empty.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> que está vacía.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The code example creates a collection of strings with the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.%23ctor&gt;</ph> constructor, uses the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.%23ctor&gt;</ph> constructor, utiliza el <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The list that is wrapped by the new collection.</source>
          <target state="translated">Lista ajustada por la nueva colección.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class as a wrapper for the specified list.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> como contenedor para la lista especificada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The elements of the list are not copied.</source>
          <target state="translated">No se copian los elementos de la lista.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">La lista ajustada por la colección, para que los cambios subsiguientes en los elementos de la lista son visibles a través de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The object to be added to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a agregar al final de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Agrega un objeto al final de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Quita todos los elementos de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> está establecido en cero, y también se liberan las referencias a otros objetos desde los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Las clases derivadas pueden invalidar <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /&gt;</ph> para cambiar el comportamiento de este método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Quita todos los elementos de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> está establecido en cero, y también se liberan las referencias a otros objetos desde los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar una clase de colección de un tipo construido de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y cómo invalidar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para proporcionar personalizado comportamiento de la <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, y <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para la configuración de la <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">El comportamiento personalizado proporcionado por este ejemplo es un <ph id="ph1">`Changed`</ph> evento de notificación que se inicia al final de cada uno de los métodos protegidos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">El <ph id="ph1">`Dinosaurs`</ph> hereda de la clase <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> en Visual Basic) y define la <ph id="ph4">`Changed`</ph> evento, que utiliza un <ph id="ph5">`DinosaursChangedEventArgs`</ph> clase para la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">El ejemplo de código llama a varias propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para mostrar el evento personalizado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>Derived classes can override this method to change the behavior of the <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /&gt;</ph> method.</source>
          <target state="translated">Las clases derivadas pueden invalidar este método para cambiar el comportamiento de la <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a buscar en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Determina si un elemento se encuentra en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se encuentra en la matriz <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> object is created using the default constructor, this method determines equality using the default equality comparer <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph3">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objeto se crea utilizando el constructor predeterminado, este método determina la igualdad utilizando el comparador de igualdad predeterminado <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph3">`T`</ph>, el tipo de valores de la lista.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Object.Equals%2A&gt;</ph> method is used.</source>
          <target state="translated">Si tipo <ph id="ph1">`T`</ph> no implementa la <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interfaz, el <ph id="ph3">&lt;xref:System.Object.Equals%2A&gt;</ph> se utiliza el método.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If the Collection object is created by passing an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object to the constructor, the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method will be determined by the <ph id="ph3">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface used by that <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object.</source>
          <target state="translated">Si el objeto de colección se crea pasando un <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> al constructor, objeto el <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método vendrá determinado por la <ph id="ph3">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz utilizado por esa <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Es decir, este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que constituye el destino de los elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">La matriz <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia la totalidad de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> en una matriz <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Este método usa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> para copiar los elementos.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Los elementos se copian en el <ph id="ph1">&lt;xref:System.Array&gt;</ph> en el mismo orden en el que el enumerador recorre en iteración la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="index" /&gt;</ph> hasta el final de la <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Gets the number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de elementos contenido realmente en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Número de elementos contenido realmente en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración la colección <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> para la colección <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">En esta posición, el valor de propiedad <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> está sin definir.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">No puede volver a establecer la propiedad <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Las implementaciones de las recopilaciones predeterminadas <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a buscar en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en todo el objeto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Índice de base cero de la primera aparición de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> en la totalidad de <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> se busca hacia delante a partir del primer elemento y terminando con el último elemento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph2">`T`</ph>, el tipo de valores de la lista.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Es decir, este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero donde debe insertarse <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserta un elemento en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, en el índice especificado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`index`</ph> es igual a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> se agrega al final de <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Las clases derivadas pueden invalidar <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /&gt;</ph> para cambiar el comportamiento de este método.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero donde debe insertarse <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserta un elemento en <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, en el índice especificado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph> is meant to be overridden in a derived class.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph> está pensado para que se invalide en una clase derivada.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>For a public method to insert an item in the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, see <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>.</source>
          <target state="translated">Para un método público insertar un elemento en el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`index`</ph> es igual a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> se agrega al final de <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar una clase de colección de un tipo construido de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y cómo invalidar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para proporcionar personalizado comportamiento de la <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, y <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para la configuración de la <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">El comportamiento personalizado proporcionado por este ejemplo es un <ph id="ph1">`Changed`</ph> evento de notificación que se inicia al final de cada uno de los métodos protegidos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">El <ph id="ph1">`Dinosaurs`</ph> hereda de la clase <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> en Visual Basic) y define la <ph id="ph4">`Changed`</ph> evento, que utiliza un <ph id="ph5">`DinosaursChangedEventArgs`</ph> clase para la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">El ejemplo de código llama a varias propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para mostrar el evento personalizado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Índice de base cero del elemento que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtiene o establece el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es igual o mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /&gt;</ph> to change the behavior of setting this property.</source>
          <target state="translated">Las clases derivadas pueden invalidar <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /&gt;</ph> para cambiar el comportamiento de establecer esta propiedad.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> wrapper around the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Obtiene un contenedor de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> para la colección <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> wrapper around the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Contenedor de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> para la colección <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>The wrapper provides the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> class and exposes all the elements of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">El contenedor proporciona la funcionalidad de la <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> clase y expone todos los elementos de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a quitar de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Quita la primera aparición de un objeto específico de la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se quita correctamente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se encontró <ph id="ph2">&lt;paramref name="item" /&gt;</ph> en el <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> original.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph2">`T`</ph>, el tipo de valores de la lista.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Es decir, este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Las clases derivadas pueden invalidar <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> para cambiar el comportamiento de este método.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Índice de base cero del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Quita el elemento situado en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra muchas de las propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">El ejemplo de código crea una colección de cadenas, utiliza el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> muestra el método para agregar varias cadenas, la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>y enumera las cadenas.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para buscar el índice de una cadena y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar si una cadena está en la colección.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">En el ejemplo se inserta una cadena con el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método y recupera y los conjuntos de cadenas con el valor predeterminado <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo quitan las cadenas mediante el uso de la identidad en la cadena la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método mediante índice y la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por último, el <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método se usa para borrar todas las cadenas de la colección.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es igual o mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Las clases derivadas pueden invalidar <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> para cambiar el comportamiento de este método.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Índice de base cero del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Quita el elemento situado en el índice especificado de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar una clase de colección de un tipo construido de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y cómo invalidar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para proporcionar personalizado comportamiento de la <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, y <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para la configuración de la <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">El comportamiento personalizado proporcionado por este ejemplo es un <ph id="ph1">`Changed`</ph> evento de notificación que se inicia al final de cada uno de los métodos protegidos.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">El <ph id="ph1">`Dinosaurs`</ph> hereda de la clase <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> en Visual Basic) y define la <ph id="ph4">`Changed`</ph> evento, que utiliza un <ph id="ph5">`DinosaursChangedEventArgs`</ph> clase para la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">El ejemplo de código llama a varias propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para mostrar el evento personalizado.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es igual o mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">Índice de base cero del elemento que se va a reemplazar.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">El nuevo valor del elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">Reemplaza el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> acepta <ph id="ph2">`null`</ph> como un valor válido para la referencia de tipos y permite a los elementos duplicados.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar una clase de colección de un tipo construido de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> clase genérica y cómo invalidar el protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para proporcionar personalizado comportamiento de la <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, y <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos y para la configuración de la <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">El comportamiento personalizado proporcionado por este ejemplo es un <ph id="ph1">`Changed`</ph> evento de notificación que se inicia al final de cada uno de los métodos protegidos.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">El <ph id="ph1">`Dinosaurs`</ph> hereda de la clase <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> en Visual Basic) y define la <ph id="ph4">`Changed`</ph> evento, que utiliza un <ph id="ph5">`DinosaursChangedEventArgs`</ph> clase para la información del evento y una enumeración para identificar el tipo de cambio.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">El ejemplo de código llama a varias propiedades y métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para mostrar el evento personalizado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> es de solo lectura; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que constituye el destino de los elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">La matriz <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copia los elementos de <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, empezando por un índice determinado de <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si el tipo del origen de <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> no puede convertirse automáticamente al tipo del destino de <ph id="ph2">`array`</ph>, las implementaciones no genéricas de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, mientras que las implementaciones genéricas inician <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> no tiene índices de base cero.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="index" /&gt;</ph> hasta el final de la <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El tipo de la <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de origen no puede convertirse automáticamente al tipo de la <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtiene un valor que indica si el acceso a la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos).</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el acceso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos); de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Las implementaciones de las recopilaciones predeterminadas <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La sincronización es efectiva sólo si todos los subprocesos bloquean este objeto antes de obtener acceso a la colección.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene un objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, esta propiedad siempre devuelve la instancia actual.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Las implementaciones de las recopilaciones predeterminadas <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La sincronización es efectiva sólo si todos los subprocesos bloquean este objeto antes de obtener acceso a la colección.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propiedad para C#, C++ y Visual Basic.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración una colección.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> también devuelve el enumerador a esta posición.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">En esta posición, el valor de propiedad <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> está sin definir.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para volver a establecer el valor de <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el primer elemento de la colección, se puede llamar primero a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> y después a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Las implementaciones de las recopilaciones predeterminadas <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a agregar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Agrega un elemento a <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">Posición en la que se insertó el nuevo elemento.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a buscar en la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Determina si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> se encuentra en <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality by first determining whether <ph id="ph1">`value`</ph> is of type <ph id="ph2">`T`</ph> (or null) and then calling <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph>.</source>
          <target state="translated">Este método determina la igualdad determinando primero si <ph id="ph1">`value`</ph> es de tipo <ph id="ph2">`T`</ph> (o null) y, a continuación, llamar a <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a buscar en la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Determina el índice de un elemento específico de <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Devuelve el índice de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> si se encuentra en la lista; de lo contrario, devuelve -1.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina la igualdad utilizando el comparador predeterminado <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> comprueba si tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> y utiliza esa implementación, si está disponible.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si no es así, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> comprueba si tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si tipo <ph id="ph1">`T`</ph> implementa ninguna de estas interfaces, este método usa <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero en el que se debe insertar <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a insertar en <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item into the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserta un elemento en la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>, en el índice especificado.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, then <ph id="ph3">`value`</ph> is appended to the end.</source>
          <target state="translated">Si <ph id="ph1">`index`</ph> es igual al número de elementos de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, entonces <ph id="ph3">`value`</ph> se agrega al final.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido para <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtiene un valor que indica si la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiene un tamaño fijo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiene un tamaño fijo; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> es de solo lectura; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Índice de base cero del elemento que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtiene o establece el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza el <bpt id="p1">[</bpt>esto<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido para <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The property is set and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">La propiedad ya está establecida y el tipo de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> no se puede asignar a la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a quitar de <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Quita la primera aparición de un objeto específico de la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina la igualdad utilizando el comparador predeterminado <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> comprueba si tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> y utiliza esa implementación, si está disponible.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si no es así, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> comprueba si tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si tipo <ph id="ph1">`T`</ph> implementa ninguna de estas interfaces, este método usa <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>