<Type Name="Queryable" FullName="System.Linq.Queryable">
  <TypeSignature Language="C#" Value="public static class Queryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Queryable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Queryable" />
  <TypeSignature Language="VB.NET" Value="Public Module Queryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queryable abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Queryable</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70e38-101">Proporciona un conjunto de métodos <see langword="static" /> (<see langword="Shared" /> en Visual Basic) para consultar estructuras de datos que implementan <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-101">Provides a set of <see langword="static" /> (<see langword="Shared" /> in Visual Basic) methods for querying data structures that implement <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-102">El conjunto de métodos declarada en el <xref:System.Linq.Queryable> clase proporciona una implementación de los operadores de consulta estándar para consultar datos de orígenes que implementan <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-102">The set of methods declared in the <xref:System.Linq.Queryable> class provides an implementation of the standard query operators for querying data sources that implement <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="70e38-103">Los operadores de consulta estándar son métodos de uso general que siguen el [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] patrón y permiten expresar operaciones de recorrido, filtro y proyección sobre los datos en cualquiera. Lenguaje de programación basado en NET.</span><span class="sxs-lookup"><span data-stu-id="70e38-103">The standard query operators are general purpose methods that follow the [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] pattern and enable you to express traversal, filter, and projection operations over data in any .NET-based programming language.</span></span>  
  
 <span data-ttu-id="70e38-104">La mayoría de los métodos de esta clase se definen como métodos de extensión que extienden la <xref:System.Linq.IQueryable%601> tipo.</span><span class="sxs-lookup"><span data-stu-id="70e38-104">The majority of the methods in this class are defined as extension methods that extend the <xref:System.Linq.IQueryable%601> type.</span></span> <span data-ttu-id="70e38-105">Esto significa que se pueden llamar como un método de instancia en cualquier objeto que implementa <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-105">This means they can be called like an instance method on any object that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="70e38-106">Estos métodos que extienden <xref:System.Linq.IQueryable%601> no realizan ninguna consulta directamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-106">These methods that extend <xref:System.Linq.IQueryable%601> do not perform any querying directly.</span></span> <span data-ttu-id="70e38-107">En su lugar, su funcionalidad consiste en generar un <xref:System.Linq.Expressions.Expression> objeto, que es un árbol de expresión que representa la consulta acumulativa.</span><span class="sxs-lookup"><span data-stu-id="70e38-107">Instead, their functionality is to build an <xref:System.Linq.Expressions.Expression> object, which is an expression tree that represents the cumulative query.</span></span> <span data-ttu-id="70e38-108">Los métodos, a continuación, pasan el nuevo árbol de expresión a ninguna el <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método o la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la entrada <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-108">The methods then pass the new expression tree to either the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method or the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the input <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="70e38-109">El método que se llama depende de si la <xref:System.Linq.Queryable> método devuelve un valor singleton, en cuyo caso <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> se llama o tiene resultados enumerables, en cuyo caso <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se llama.</span><span class="sxs-lookup"><span data-stu-id="70e38-109">The method that is called depends on whether the <xref:System.Linq.Queryable> method returns a singleton value, in which case <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> is called, or has enumerable results, in which case <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is called.</span></span>  
  
 <span data-ttu-id="70e38-110">La ejecución de la consulta real en los datos de destino se realiza mediante una clase que implementa <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-110">The actual query execution on the target data is performed by a class that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="70e38-111">La expectativa de cualquier <xref:System.Linq.IQueryable%601> implementación es que el resultado de ejecutar un árbol de expresión que se construyó con un <xref:System.Linq.Queryable> método de operador de consulta estándar es equivalente al resultado de llamar al método correspondiente la <xref:System.Linq.Enumerable> (clase), si el origen de datos fuera una <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-111">The expectation of any <xref:System.Linq.IQueryable%601> implementation is that the result of executing an expression tree that was constructed by a <xref:System.Linq.Queryable> standard query operator method is equivalent to the result of calling the corresponding method in the <xref:System.Linq.Enumerable> class, if the data source were an <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="70e38-112">Además de los métodos de operador de consulta estándar que operan en <xref:System.Linq.IQueryable%601> objetos, esta clase también contiene un método <xref:System.Linq.Queryable.AsQueryable%2A>, qué tipos de <xref:System.Collections.IEnumerable> objetos como <xref:System.Linq.IQueryable> objetos.</span><span class="sxs-lookup"><span data-stu-id="70e38-112">In addition to the standard query operator methods that operate on <xref:System.Linq.IQueryable%601> objects, this class also contains a method, <xref:System.Linq.Queryable.AsQueryable%2A>, which types <xref:System.Collections.IEnumerable> objects as <xref:System.Linq.IQueryable> objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As IQueryable(Of TSource), func As Expression(Of Func(Of TSource, TSource, TSource))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TSource, TSource&gt; ^&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TSource,TSource&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-113">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-113">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-114">Secuencia a la que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="70e38-114">A sequence to aggregate over.</span></span></param>
        <param name="func"><span data-ttu-id="70e38-115">Función de acumulador que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-115">An accumulator function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-116">Aplica una función de acumulador a una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-116">Applies an accumulator function over a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-117">Valor final del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-117">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-118">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-118">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-119">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-119">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-120">El <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-120">The <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-121">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-121">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-122">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-122">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-123">El comportamiento esperado es que la función especificada, `func`, se aplica a cada valor de la secuencia de origen y el acumulado se devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-123">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="70e38-124">El primer valor de `source` se utiliza como el valor de inicialización para el valor acumulado, que se corresponde con el primer parámetro de `func`.</span><span class="sxs-lookup"><span data-stu-id="70e38-124">The first value in `source` is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="70e38-125">Para simplificar las operaciones comunes de agregación, el conjunto de operadores de consulta estándar incluye también dos métodos de recuento, <xref:System.Linq.Queryable.Count%2A> y <xref:System.Linq.Queryable.LongCount%2A>y cuatro métodos de agregación numérica, es decir, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, y <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="70e38-125">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-126">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> para generar una frase a partir de una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="70e38-126">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> to build a sentence from an array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#1)]
 [!code-vb[System.Linq.Queryable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-127">El valor de <paramref name="source" /> o <paramref name="func" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-127"><paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-128"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-128"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate))) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-129">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-129">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="70e38-130">Tipo del valor del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-130">The type of the accumulator value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-131">Secuencia a la que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="70e38-131">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="70e38-132">Valor de inicio del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-132">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="70e38-133">Función de acumulador que se va a invocar en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-133">An accumulator function to invoke on each element.</span></span></param>
        <summary><span data-ttu-id="70e38-134">Aplica una función de acumulador a una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-134">Applies an accumulator function over a sequence.</span></span> <span data-ttu-id="70e38-135">El valor de inicialización especificado se utiliza como valor de inicio del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-135">The specified seed value is used as the initial accumulator value.</span></span></summary>
        <returns><span data-ttu-id="70e38-136">Valor final del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-136">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-137">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-137">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-138">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-138">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-139">El <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-139">The <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-140">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-140">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-141">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-141">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-142">El comportamiento esperado es que la función especificada, `func`, se aplica a cada valor de la secuencia de origen y el acumulado se devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-142">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="70e38-143">El `seed` parámetro se utiliza como el valor de inicialización para el valor acumulado, que se corresponde con el primer parámetro de `func`.</span><span class="sxs-lookup"><span data-stu-id="70e38-143">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="70e38-144">Para simplificar las operaciones comunes de agregación, el conjunto de operadores de consulta estándar incluye también dos métodos de recuento, <xref:System.Linq.Queryable.Count%2A> y <xref:System.Linq.Queryable.LongCount%2A>y cuatro métodos de agregación numérica, es decir, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, y <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="70e38-144">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-145">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> para aplicar una función de acumulador cuando se proporciona un valor de inicialización a la función.</span><span class="sxs-lookup"><span data-stu-id="70e38-145">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> to apply an accumulator function when a seed value is provided to the function.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#2)]
 [!code-vb[System.Linq.Queryable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-146">El valor de <paramref name="source" /> o <paramref name="func" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-146"><paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TAccumulate, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)), selector As Expression(Of Func(Of TAccumulate, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TResult&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-147">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-147">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="70e38-148">Tipo del valor del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-148">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-149">Tipo del valor resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-149">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-150">Secuencia a la que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="70e38-150">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="70e38-151">Valor de inicio del acumulador.</span><span class="sxs-lookup"><span data-stu-id="70e38-151">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="70e38-152">Función de acumulador que se va a invocar en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-152">An accumulator function to invoke on each element.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-153">Función que va a transformar el valor final del acumulador en el valor del resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-153">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="70e38-154">Aplica una función de acumulador a una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-154">Applies an accumulator function over a sequence.</span></span> <span data-ttu-id="70e38-155">El valor de inicialización especificado se utiliza como valor inicial del acumulador y la función especificada se utiliza para seleccionar el valor resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-155">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span></span></summary>
        <returns><span data-ttu-id="70e38-156">El valor final del acumulador transformado.</span><span class="sxs-lookup"><span data-stu-id="70e38-156">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-157">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-157">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-158">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-158">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-159">El <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-159">The <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-160">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-160">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-161">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-161">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-162">El comportamiento esperado es que la función especificada, `func`, se aplica a cada valor de la secuencia de origen y el acumulado se devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-162">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="70e38-163">El `seed` parámetro se utiliza como el valor de inicialización para el valor acumulado, que se corresponde con el primer parámetro de `func`.</span><span class="sxs-lookup"><span data-stu-id="70e38-163">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span> <span data-ttu-id="70e38-164">El valor acumulado final se pasa a `selector` para obtener el valor de resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-164">The final accumulated value is passed to `selector` to obtain the result value.</span></span>  
  
 <span data-ttu-id="70e38-165">Para simplificar las operaciones comunes de agregación, el conjunto de operadores de consulta estándar incluye también dos métodos de recuento, <xref:System.Linq.Queryable.Count%2A> y <xref:System.Linq.Queryable.LongCount%2A>y cuatro métodos de agregación numérica, es decir, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, y <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="70e38-165">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-166">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> para aplicar una función de acumulador y un selector de resultados.</span><span class="sxs-lookup"><span data-stu-id="70e38-166">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> to apply an accumulator function and a result selector.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#3)]
 [!code-vb[System.Linq.Queryable#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-167"><paramref name="source" /> o <paramref name="func" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-167"><paramref name="source" /> or <paramref name="func" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-168">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-168">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-169">Secuencia en cuyos elementos se va a comprobar una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-169">A sequence whose elements to test for a condition.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-170">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-170">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-171">Determina si todos los elementos de una secuencia satisfacen una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-171">Determines whether all the elements of a sequence satisfy a condition.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-172"><see langword="true" /> si todos los elementos de la secuencia de origen pasan la prueba del predicado especificado o si la secuencia está vacía; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-172"><see langword="true" /> if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-173">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-173">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-174">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-174">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-175">El <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-175">The <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-176">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-176">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-177">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación de la `source` tipo del parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-177">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the `source` parameter's type.</span></span> <span data-ttu-id="70e38-178">El comportamiento esperado es que determine si todos los elementos de `source` cumplan la condición de `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-178">The expected behavior is that it determines if all the elements in `source` satisfy the condition in `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-179">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para determinar si todos los elementos de una secuencia satisfacen una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-179">The following code example demonstrates how to use <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether all the elements in a sequence satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#4)]
 [!code-vb[System.Linq.Queryable#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#4)]  
  
 <span data-ttu-id="70e38-180">El valor booleano que el <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método devuelve se utiliza normalmente en el predicado de un `where` cláusula (`Where` cláusula en Visual Basic) o una llamada directa a la <xref:System.Linq.Queryable.Where%2A> método.</span><span class="sxs-lookup"><span data-stu-id="70e38-180">The Boolean value that the <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%2A> method.</span></span> <span data-ttu-id="70e38-181">En el ejemplo siguiente se muestra este uso de la `All` método.</span><span class="sxs-lookup"><span data-stu-id="70e38-181">The following example demonstrates this use of the `All` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#134](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#134)]
 [!code-vb[System.Linq.Queryable#134](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#134)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-182">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-182"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-183">Determina si algún elemento de una secuencia <see cref="T:System.Linq.IQueryable`1" /> existe o satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-183">Determines whether any element of an <see cref="T:System.Linq.IQueryable`1" /> sequence exists or satisfies a condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-184">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-184">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-185">Secuencia que se va a comprobar si está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-185">A sequence to check for being empty.</span></span></param>
        <summary><span data-ttu-id="70e38-186">Determina si una secuencia contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-186">Determines whether a sequence contains any elements.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-187"><see langword="true" /> si la secuencia de origen contiene elementos; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-187"><see langword="true" /> if the source sequence contains any elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-188">El <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-188">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-189">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-189">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-190">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-190">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-191">El comportamiento esperado es que determine si `source` contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-191">The expected behavior is that it determines if `source` contains any elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-192">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar si una secuencia contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-192">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine whether a sequence contains any elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#5)]
 [!code-vb[System.Linq.Queryable#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#5)]  
  
 <span data-ttu-id="70e38-193">El valor booleano que el <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método devuelve se utiliza normalmente en el predicado de un `where` cláusula (`Where` cláusula en Visual Basic) o una llamada directa a la <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="70e38-193">The Boolean value that the <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method.</span></span> <span data-ttu-id="70e38-194">En el ejemplo siguiente se muestra este uso de la `Any` método.</span><span class="sxs-lookup"><span data-stu-id="70e38-194">The following example demonstrates this use of the `Any` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#135](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#135)]
 [!code-vb[System.Linq.Queryable#135](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#135)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-195"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-195"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-196">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-196">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-197">Secuencia en cuyos elementos se va a comprobar una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-197">A sequence whose elements to test for a condition.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-198">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-198">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-199">Determina si algún elemento de una secuencia satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-199">Determines whether any element of a sequence satisfies a condition.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-200"><see langword="true" /> si algún elemento de la secuencia de origen pasa la prueba del predicado especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-200"><see langword="true" /> if any elements in the source sequence pass the test in the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-201">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-201">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-202">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-202">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-203">El <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-203">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-204">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-204">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-205">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-205">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-206">El comportamiento esperado es que determine si alguno de los elementos de `source` cumple la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-206">The expected behavior is that it determines if any of the elements of `source` satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-207">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para determinar si algún elemento de una secuencia satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-207">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether any element in a sequence satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#6)]
 [!code-vb[System.Linq.Queryable#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-208">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-208"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Append&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Append&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Append(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Append(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable AsQueryable(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable (source As IEnumerable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable ^ AsQueryable(System::Collections::IEnumerable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-209">Secuencia que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="70e38-209">A sequence to convert.</span></span></param>
        <summary><span data-ttu-id="70e38-210">Convierte una interfaz <see cref="T:System.Collections.IEnumerable" /> en <see cref="T:System.Linq.IQueryable" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-210">Converts an <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Linq.IQueryable" />.</span></span></summary>
        <returns><span data-ttu-id="70e38-211"><see cref="T:System.Linq.IQueryable" /> que representa la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-211">An <see cref="T:System.Linq.IQueryable" /> that represents the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-212">Si el tipo de `source` implementa <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> devuelve directamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-212">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> returns it directly.</span></span> <span data-ttu-id="70e38-213">De lo contrario, devuelve un <xref:System.Linq.IQueryable%601> que ejecuta consultas mediante una llamada a la consulta equivalente métodos de operador de <xref:System.Linq.Enumerable> en lugar de los de <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="70e38-213">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
 <span data-ttu-id="70e38-214">Este método se da por supuesto que `source` implementa <xref:System.Collections.Generic.IEnumerable%601> para algunos `T`.</span><span class="sxs-lookup"><span data-stu-id="70e38-214">This method assumes that `source` implements <xref:System.Collections.Generic.IEnumerable%601> for some `T`.</span></span> <span data-ttu-id="70e38-215">En tiempo de ejecución, el resultado es de tipo <xref:System.Linq.IQueryable%601> para el mismo `T`.</span><span class="sxs-lookup"><span data-stu-id="70e38-215">At runtime, the result is of type <xref:System.Linq.IQueryable%601> for the same `T`.</span></span> <span data-ttu-id="70e38-216">Este método resulta útil en escenarios dinámicos no conoce el tipo de forma estática `T`.</span><span class="sxs-lookup"><span data-stu-id="70e38-216">This method is useful in dynamic scenarios when you do not statically know the type of `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="70e38-217"><paramref name="source" /> no implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> para algunos parámetros <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-217"><paramref name="source" /> does not implement <see cref="T:System.Collections.Generic.IEnumerable`1" /> for some <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-218"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-218"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TElement&gt; AsQueryable&lt;TElement&gt; (this System.Collections.Generic.IEnumerable&lt;TElement&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TElement&gt; AsQueryable&lt;TElement&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable(Of TElement) (source As IEnumerable(Of TElement)) As IQueryable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TElement&gt; ^ AsQueryable(System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="70e38-219">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-219">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-220">Secuencia que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="70e38-220">A sequence to convert.</span></span></param>
        <summary><span data-ttu-id="70e38-221">Convierte un parámetro <see cref="T:System.Collections.Generic.IEnumerable`1" /> genérico en un parámetro <see cref="T:System.Linq.IQueryable`1" /> genérico.</span><span class="sxs-lookup"><span data-stu-id="70e38-221">Converts a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="70e38-222"><see cref="T:System.Linq.IQueryable`1" /> que representa la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-222">An <see cref="T:System.Linq.IQueryable`1" /> that represents the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-223">Si el tipo de `source` implementa <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> devuelve directamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-223">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> returns it directly.</span></span> <span data-ttu-id="70e38-224">De lo contrario, devuelve un <xref:System.Linq.IQueryable%601> que ejecuta consultas mediante una llamada a la consulta equivalente métodos de operador de <xref:System.Linq.Enumerable> en lugar de los de <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="70e38-224">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-225">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> para convertir un <xref:System.Collections.Generic.IEnumerable%601> a una <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-225">The following code example demonstrates how to use <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> to convert an <xref:System.Collections.Generic.IEnumerable%601> to an <xref:System.Linq.IQueryable%601>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#125](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#125)]
 [!code-vb[System.Linq.Queryable#125](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#125)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-226"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-226"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-227">Calcula el promedio de una secuencia de valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="70e38-227">Computes the average of a sequence of numeric values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-228">Secuencia de valores <see cref="T:System.Decimal" /> cuyo promedio se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-228">A sequence of <see cref="T:System.Decimal" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-229">Calcula el promedio de una secuencia de valores <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-229">Computes the average of a sequence of <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-230">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-230">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-231">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-231">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself.</span></span> <span data-ttu-id="70e38-232">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-232">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-233">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-233">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-234">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-234">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-235">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-235">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-236"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-236"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-237"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-237"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-238">Secuencia de valores <see cref="T:System.Double" /> cuyo promedio se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-238">A sequence of <see cref="T:System.Double" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-239">Calcula el promedio de una secuencia de valores <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-239">Computes the average of a sequence of <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-240">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-240">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-241">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-241">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself.</span></span> <span data-ttu-id="70e38-242">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-242">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-243">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-243">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-244">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-244">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-245">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-245">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-246"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-246"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-247"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-247"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-248">Secuencia de valores <see cref="T:System.Int32" /> cuyo promedio se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-248">A sequence of <see cref="T:System.Int32" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-249">Calcula el promedio de una secuencia de valores <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-249">Computes the average of a sequence of <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-250">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-250">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-251">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-251">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself.</span></span> <span data-ttu-id="70e38-252">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-252">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-253">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-253">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-254">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-254">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-255">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-255">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-256"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-256"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-257"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-257"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-258">Secuencia de valores <see cref="T:System.Int64" /> cuyo promedio se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-258">A sequence of <see cref="T:System.Int64" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-259">Calcula el promedio de una secuencia de valores <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-259">Computes the average of a sequence of <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-260">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-260">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-261">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-261">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself.</span></span> <span data-ttu-id="70e38-262">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-262">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-263">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-263">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-264">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-264">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-265">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-265">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-266"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-266"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-267"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-267"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-268">Secuencia de valores <see cref="T:System.Decimal" /> que admiten valores NULL para calcular el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-268">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-269">Calcula el promedio de una secuencia de valores <see cref="T:System.Decimal" /> que admiten valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-269">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-270">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia de origen está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-270">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-271">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-271">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself.</span></span> <span data-ttu-id="70e38-272">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-272">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-273">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-273">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-274">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-274">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-275">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-275">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-276"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-276"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-277">Secuencia de valores <see cref="T:System.Double" /> que admiten valores NULL para calcular el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-277">A sequence of nullable <see cref="T:System.Double" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-278">Calcula el promedio de una secuencia de valores <see cref="T:System.Double" /> que admiten valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-278">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-279">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia de origen está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-279">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-280">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-280">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself.</span></span> <span data-ttu-id="70e38-281">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-281">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-282">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-282">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-283">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-283">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-284">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-284">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-285"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-285"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-286">Secuencia de valores <see cref="T:System.Int32" /> que admiten valores NULL para calcular el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-286">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-287">Calcula el promedio de una secuencia de valores <see cref="T:System.Int32" /> que admiten valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-287">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-288">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia de origen está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-288">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-289">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-289">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself.</span></span> <span data-ttu-id="70e38-290">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-290">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-291">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-291">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-292">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-292">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-293">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-293">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-294"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-294"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-295">Secuencia de valores <see cref="T:System.Int64" /> que admiten valores NULL para calcular el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-295">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-296">Calcula el promedio de una secuencia de valores <see cref="T:System.Int64" /> que admiten valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-296">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-297">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia de origen está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-297">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-298">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-298">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself.</span></span> <span data-ttu-id="70e38-299">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-299">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-300">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-300">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-301">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-301">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-302">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-302">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-303"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-303"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-304">Secuencia de valores <see cref="T:System.Single" /> que admiten valores NULL para calcular el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-304">A sequence of nullable <see cref="T:System.Single" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-305">Calcula el promedio de una secuencia de valores <see cref="T:System.Single" /> que admiten valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-305">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-306">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia de origen está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-306">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-307">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-307">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself.</span></span> <span data-ttu-id="70e38-308">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-308">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-309">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-309">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-310">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-310">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-311">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-311">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-312"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-312"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-313">Secuencia de valores <see cref="T:System.Single" /> cuyo promedio se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-313">A sequence of <see cref="T:System.Single" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="70e38-314">Calcula el promedio de una secuencia de valores <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-314">Computes the average of a sequence of <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-315">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-315">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-316">El <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> propio.</span><span class="sxs-lookup"><span data-stu-id="70e38-316">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself.</span></span> <span data-ttu-id="70e38-317">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-317">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-318">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-318">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-319">El comportamiento esperado es que calcule el promedio de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-319">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-320">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular el promedio de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-320">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-321"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-321"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-322"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-322"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-323">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-323">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-324">Secuencia de valores que se utilizan para calcular un promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-324">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-325">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-325">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-326">Calcula el promedio de una secuencia de valores <see cref="T:System.Decimal" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-326">Computes the average of a sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-327">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-327">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-328">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-328">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-329">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-329">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-330">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-330">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-331">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-331">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-332">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-332">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-333">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-333">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-334">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-334">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-335">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-335"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-336"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-336"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-337">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-337">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-338">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-338">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-339">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-339">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-340">Calcula el promedio de una secuencia de valores <see cref="T:System.Double" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-340">Computes the average of a sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-341">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-341">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-342">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-342">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-343">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-343">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-344">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-344">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-345">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-345">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-346">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-346">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-347">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-347">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-348">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-348">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-349">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-349"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-350"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-350"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-351">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-351">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-352">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-352">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-353">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-353">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-354">Calcula el promedio de una secuencia de valores <see cref="T:System.Int32" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-354">Computes the average of a sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-355">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-355">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-356">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-356">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-357">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-357">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-358">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-358">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-359">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-359">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-360">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-360">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-361">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-361">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-362">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-362">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-363">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-363"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-364"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-364"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-365">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-365">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-366">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-366">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-367">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-367">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-368">Calcula el promedio de una secuencia de valores <see cref="T:System.Int64" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-368">Computes the average of a sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-369">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-369">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-370">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-370">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-371">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-371">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-372">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-372">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-373">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-373">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-374">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-374">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-375">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-375">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-376">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-376">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-377">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-377"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-378"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-378"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-379">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-379">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-380">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-380">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-381">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-381">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-382">Calcula el promedio de una secuencia de valores <see cref="T:System.Decimal" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-382">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-383">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia <paramref name="source" /> está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-383">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-384">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-384">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-385">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-385">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-386">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-386">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-387">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-387">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-388">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-388">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-389">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-389">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-390">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-390">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-391">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-391"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-392">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-392">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-393">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-393">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-394">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-394">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-395">Calcula el promedio de una secuencia de valores <see cref="T:System.Double" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-395">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-396">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia <paramref name="source" /> está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-396">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-397">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-397">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-398">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-398">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-399">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-399">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-400">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-400">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-401">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-401">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-402">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-402">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-403">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-403">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-404">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-404"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-405">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-405">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-406">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-406">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-407">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-407">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-408">Calcula el promedio de una secuencia de valores <see cref="T:System.Int32" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-408">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-409">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia <paramref name="source" /> está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-409">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-410">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-410">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-411">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-411">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-412">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-412">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-413">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-413">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-414">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-414">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-415">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-415">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-416">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-416">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-417">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-417"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-418">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-418">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-419">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-419">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-420">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-420">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-421">Calcula el promedio de una secuencia de valores <see cref="T:System.Int64" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-421">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-422">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia <paramref name="source" /> está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-422">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-423">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-423">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-424">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-424">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-425">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-425">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-426">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-426">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-427">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-427">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-428">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-428">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-429">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-429">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-430">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-430"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-431">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-431">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-432">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-432">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-433">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-433">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-434">Calcula el promedio de una secuencia de valores <see cref="T:System.Single" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-434">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-435">Promedio de la secuencia de valores o <see langword="null" /> si la secuencia <paramref name="source" /> está vacía o contiene solo valores <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-435">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-436">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-436">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-437">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-437">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-438">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-438">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-439">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-439">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-440">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-440">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-441">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-441">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-442">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-442">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-443">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-443"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-444">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-444">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-445">Una secuencia de valores de la que se calculará el promedio.</span><span class="sxs-lookup"><span data-stu-id="70e38-445">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-446">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-446">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-447">Calcula el promedio de una secuencia de valores <see cref="T:System.Single" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-447">Computes the average of a sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-448">El promedio de la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-448">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-449">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-449">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-450">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-450">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-451">El <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-451">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-452">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-452">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-453">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-453">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-454">El comportamiento esperado es que calcule el promedio de los valores de `source` tras invocar `selector` en cada valor.</span><span class="sxs-lookup"><span data-stu-id="70e38-454">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-455">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular la Media <xref:System.String> longitud en una secuencia de valores de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-455">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-456">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-456"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-457"><paramref name="source" /> no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-457"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Cast(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="70e38-458">El tipo se debe convertir los elementos de <c>origen</c> a.</span><span class="sxs-lookup"><span data-stu-id="70e38-458">The type to convert the elements of <c>source</c> to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-459"><see cref="T:System.Linq.IQueryable" /> que contiene los elementos que se van a convertir.</span><span class="sxs-lookup"><span data-stu-id="70e38-459">The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="70e38-460">Convierte los elementos de <see cref="T:System.Linq.IQueryable" /> en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-460">Converts the elements of an <see cref="T:System.Linq.IQueryable" /> to the specified type.</span></span></summary>
        <returns><span data-ttu-id="70e38-461"><see cref="T:System.Linq.IQueryable`1" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-461">An <see cref="T:System.Linq.IQueryable`1" /> that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-462">El <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-462">The <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-463">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-463">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-464">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-464">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-465">El comportamiento esperado es que convierte los valores de `source` al tipo `TResult`.</span><span class="sxs-lookup"><span data-stu-id="70e38-465">The expected behavior is that it converts the values in `source` to type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-466">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> para convertir objetos en una secuencia para escribir <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="70e38-466">The following code example demonstrates how to use <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> to convert objects in a sequence to type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#19)]
 [!code-vb[System.Linq.Queryable#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-467"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-467"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="70e38-468">Un elemento de la secuencia no se puede convertir al tipo <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-468">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Concat(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-469">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-469">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-470">Primera secuencia que se va a concatenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-470">The first sequence to concatenate.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-471">Secuencia que se va a concatenar con la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-471">The sequence to concatenate to the first sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-472">Concatena dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-472">Concatenates two sequences.</span></span></summary>
        <returns><span data-ttu-id="70e38-473"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos concatenados de las dos secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-473">An <see cref="T:System.Linq.IQueryable`1" /> that contains the concatenated elements of the two input sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-474">El <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-474">The <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-475">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-475">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-476">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-476">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-477">El comportamiento esperado es que los elementos de `source2` se concatenan a las de `source1` para crear una nueva secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-477">The expected behavior is that the elements in `source2` are concatenated to those of `source1` to create a new sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-478">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para concatenar dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-478">The following code example demonstrates how to use <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to concatenate two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#20)]
 [!code-vb[System.Linq.Queryable#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-479">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-479"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-480">Determina si <see cref="T:System.Linq.IQueryable`1" /> contiene un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-480">Determines whether an <see cref="T:System.Linq.IQueryable`1" /> contains a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-481">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-481">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-482"><see cref="T:System.Linq.IQueryable`1" /> en el que se va a buscar <c>item</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-482">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <c>item</c>.</span></span></param>
        <param name="item"><span data-ttu-id="70e38-483">Objeto que se va a buscar en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-483">The object to locate in the sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-484">Determina si una secuencia contiene un elemento especificado utilizando el comparador de igualdad predeterminado.</span><span class="sxs-lookup"><span data-stu-id="70e38-484">Determines whether a sequence contains a specified element by using the default equality comparer.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-485"><see langword="true" /> si la secuencia de entrada contiene un elemento que tiene el valor especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-485"><see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-486">El <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-486">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-487">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-487">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-488">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-488">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-489">El comportamiento esperado es que determine si `source` contiene `item`.</span><span class="sxs-lookup"><span data-stu-id="70e38-489">The expected behavior is that it determines if `source` contains `item`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-490">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para determinar si una secuencia contiene un elemento específico.</span><span class="sxs-lookup"><span data-stu-id="70e38-490">The following code example demonstrates how to use <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to determine whether a sequence contains a specific element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#21)]
 [!code-vb[System.Linq.Queryable#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-491"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-491"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-492">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-492">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-493"><see cref="T:System.Linq.IQueryable`1" /> en el que se va a buscar <c>item</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-493">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <c>item</c>.</span></span></param>
        <param name="item"><span data-ttu-id="70e38-494">Objeto que se va a buscar en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-494">The object to locate in the sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-495"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-495">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="70e38-496">Determina si una secuencia contiene un elemento especificado utilizando un objeto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="70e38-496">Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-497"><see langword="true" /> si la secuencia de entrada contiene un elemento que tiene el valor especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-497"><see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-498">El <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-498">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-499">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-499">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-500">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-500">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-501">El comportamiento esperado es que determine si `source` contiene `item` utilizando `comparer` para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-501">The expected behavior is that it determines if `source` contains `item` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-502"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-502"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-503">Devuelve el número de elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-503">Returns the number of elements in a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-504">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-504">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-505"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos que se van a contar.</span><span class="sxs-lookup"><span data-stu-id="70e38-505">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <summary><span data-ttu-id="70e38-506">Devuelve el número de elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-506">Returns the number of elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-507">El número de elementos de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-507">The number of elements in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-508">El <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-508">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-509">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-509">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-510">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-510">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-511">El comportamiento esperado es que cuente el número de elementos de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-511">The expected behavior is that it counts the number of items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-512">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para contar los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-512">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#22)]
 [!code-vb[System.Linq.Queryable#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-513"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-513"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-514">El número de elementos de <paramref name="source" /> es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-514">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-515">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-515">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-516"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos que se van a contar.</span><span class="sxs-lookup"><span data-stu-id="70e38-516">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-517">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-517">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-518">Devuelve el número de elementos de la secuencia especificada que satisfacen una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-518">Returns the number of elements in the specified sequence that satisfies a condition.</span></span></summary>
        <returns><span data-ttu-id="70e38-519">El número de elementos de la secuencia que satisfacen la condición de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-519">The number of elements in the sequence that satisfies the condition in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-520">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-520">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-521">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-521">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-522">El <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-522">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-523">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-523">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-524">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-524">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-525">El comportamiento esperado es que cuente el número de elementos de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-525">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-526">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para contar los elementos de una secuencia que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-526">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in a sequence that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#23)]
 [!code-vb[System.Linq.Queryable#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-527">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-527"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-528">El número de elementos de <paramref name="source" /> es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-528">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-529">Devuelve los elementos de una secuencia o una colección singleton con valores predeterminados si la secuencia está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-529">Returns the elements in a sequence or a default valued singleton collection if the sequence is empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-530">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-530">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-531"><see cref="T:System.Linq.IQueryable`1" /> para el que se va a devolver un valor predeterminado si está vacío.</span><span class="sxs-lookup"><span data-stu-id="70e38-531">The <see cref="T:System.Linq.IQueryable`1" /> to return a default value for if empty.</span></span></param>
        <summary><span data-ttu-id="70e38-532">Devuelve los elementos de la secuencia especificada o el valor predeterminado del parámetro de tipo en una colección singleton si la secuencia está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-532">Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="70e38-533"><see cref="T:System.Linq.IQueryable`1" /> que contiene <see langword="default" />(<paramref name="TSource" />) si <paramref name="source" /> está vacío; de lo contrario, <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-533">An <see cref="T:System.Linq.IQueryable`1" /> that contains <see langword="default" />(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-534">El <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-534">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-535">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-535">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-536">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-536">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-537">El comportamiento esperado es que devuelve `source` si no está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-537">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="70e38-538">De lo contrario, devuelve un <xref:System.Linq.IQueryable%601> que contiene `default(TSource)`.</span><span class="sxs-lookup"><span data-stu-id="70e38-538">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `default(TSource)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-539">Ejemplos de código siguientes muestran cómo usar <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para proporcionar un valor predeterminado en caso de que la secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-539">The following code examples demonstrate how to use <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to provide a default value in case the source sequence is empty.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#24)]
 [!code-vb[System.Linq.Queryable#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-540"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-540"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource), defaultValue As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-541">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-541">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-542"><see cref="T:System.Linq.IQueryable`1" /> para el que se va a devolver el valor especificado si está vacío.</span><span class="sxs-lookup"><span data-stu-id="70e38-542">The <see cref="T:System.Linq.IQueryable`1" /> to return the specified value for if empty.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="70e38-543">Valor que se va a devolver si la secuencia está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-543">The value to return if the sequence is empty.</span></span></param>
        <summary><span data-ttu-id="70e38-544">Devuelve los elementos de la secuencia especificada o el valor especificado en una colección singleton si la secuencia está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-544">Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="70e38-545"><see cref="T:System.Linq.IQueryable`1" /> que contiene <paramref name="defaultValue" /> si <paramref name="source" /> está vacío; de lo contrario, <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-545">An <see cref="T:System.Linq.IQueryable`1" /> that contains <paramref name="defaultValue" /> if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-546">El <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-546">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-547">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-547">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-548">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-548">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-549">El comportamiento esperado es que devuelve `source` si no está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-549">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="70e38-550">De lo contrario, devuelve un <xref:System.Linq.IQueryable%601> que contiene `defaultValue`.</span><span class="sxs-lookup"><span data-stu-id="70e38-550">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `defaultValue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-551">En el ejemplo de código siguiente se muestra una situación en la que es útil llamar a <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> en un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta.</span><span class="sxs-lookup"><span data-stu-id="70e38-551">The following code example shows a situation in which it is useful to call <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="70e38-552">Se pasa un valor predeterminado a <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="70e38-552">A default value is passed to <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in this example.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#25)]
 [!code-vb[System.Linq.Queryable#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-553"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-553"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-554">Devuelve diversos elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-554">Returns distinct elements from a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-555">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-555">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-556"><see cref="T:System.Linq.IQueryable`1" /> del que se van a quitar los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="70e38-556">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span></span></param>
        <summary><span data-ttu-id="70e38-557">Devuelve diversos elementos de una secuencia utilizando el comparador de igualdad predeterminado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-557">Returns distinct elements from a sequence by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-558">Una interfaz <see cref="T:System.Linq.IQueryable`1" /> que contiene diversos elementos de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-558">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-559">El <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-559">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-560">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-560">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-561">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-561">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-562">El comportamiento esperado es que devuelva una secuencia desordenada de los elementos únicos de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-562">The expected behavior is that it returns an unordered sequence of the unique items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-563">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para devolver diversos elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-563">The following code example demonstrates how to use <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return distinct elements from a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#27)]
 [!code-vb[System.Linq.Queryable#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-564"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-564"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-565">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-565">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-566"><see cref="T:System.Linq.IQueryable`1" /> del que se van a quitar los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="70e38-566">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-567"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-567">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="70e38-568">Devuelve diversos elementos de una secuencia utilizando un objeto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-568">Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-569">Una interfaz <see cref="T:System.Linq.IQueryable`1" /> que contiene diversos elementos de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-569">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-570">El <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-570">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-571">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-571">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-572">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-572">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-573">El comportamiento esperado es que devuelva una secuencia desordenada de los elementos únicos de `source` utilizando `comparer` para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-573">The expected behavior is that it returns an unordered sequence of the unique items in `source` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-574">El valor de <paramref name="source" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-574"><paramref name="source" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-575">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-575">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-576"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-576">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="70e38-577">Índice de base cero del elemento que se debe recuperar.</span><span class="sxs-lookup"><span data-stu-id="70e38-577">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="70e38-578">Devuelve el elemento situado en un índice especificado de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-578">Returns the element at a specified index in a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-579">El elemento situado en la posición especificada de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-579">The element at the specified position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-580">El <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-580">The <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-581">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-581">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-582">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-582">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-583">El comportamiento esperado es que devuelva el elemento situado en la posición `index` en `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-583">The expected behavior is that it returns the item at position `index` in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-584">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para devolver un elemento en una posición específica en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-584">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return an element at a specific position in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#28)]
 [!code-vb[System.Linq.Queryable#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-585"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-585"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70e38-586"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="70e38-586"><paramref name="index" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-587">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-587">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-588"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-588">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="70e38-589">Índice de base cero del elemento que se debe recuperar.</span><span class="sxs-lookup"><span data-stu-id="70e38-589">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="70e38-590">Devuelve el elemento situado en un índice especificado de una secuencia o un valor predeterminado si el índice está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="70e38-590">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-591"><c>default</c>(<paramref name="TSource" />) si <paramref name="index" /> está fuera de los límites de <paramref name="source" />; de lo contrario, el elemento situado en la posición especificada de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-591"><c>default</c>(<paramref name="TSource" />) if <paramref name="index" /> is outside the bounds of <paramref name="source" />; otherwise, the element at the specified position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-592">El <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-592">The <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-593">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-593">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-594">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-594">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-595">El comportamiento esperado es que devuelva el elemento situado en la posición `index` en `source`, o `default(TSource)` si `index` está fuera de los límites de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-595">The expected behavior is that it returns the item at position `index` in `source`, or `default(TSource)` if `index` is outside the bounds of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-596">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="70e38-596">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span></span> <span data-ttu-id="70e38-597">Este ejemplo utiliza un valor para `index` que está fuera de los límites de la secuencia de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-597">This example uses a value for `index` that is outside the bounds of the source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#29)]
 [!code-vb[System.Linq.Queryable#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-598"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-598"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-599">Proporciona la diferencia de conjuntos de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-599">Produces the set difference of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-600">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-600">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-601"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos que no se encuentren en <c>source2</c> se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-601">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <c>source2</c> will be returned.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-602"><see cref="T:System.Collections.Generic.IEnumerable`1" /> cuyos elementos que se encuentren también en la primera secuencia no aparecerán en la secuencia devuelta.</span><span class="sxs-lookup"><span data-stu-id="70e38-602">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-603">Proporciona la diferencia de conjuntos de dos secuencias utilizando el comparador de igualdad predeterminado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-603">Produces the set difference of two sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-604"><see cref="T:System.Linq.IQueryable`1" /> que contiene la diferencia de conjuntos de las dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-604">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-605">El <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-605">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-606">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la`source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-606">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-607">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-607">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of  the `source1` parameter.</span></span> <span data-ttu-id="70e38-608">El comportamiento esperado es que todos los elementos de `source1` se devuelvan excepto aquellos que también estén incluidos en `source2`.</span><span class="sxs-lookup"><span data-stu-id="70e38-608">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-609">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para devolver los elementos que solo aparecen en la primera secuencia de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-609">The following code example demonstrates how to use <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return those elements that only appear in the first source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#34)]
 [!code-vb[System.Linq.Queryable#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-610">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-610"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-611">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-611">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-612"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos que no se encuentren en <c>source2</c> se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-612">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <c>source2</c> will be returned.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-613"><see cref="T:System.Collections.Generic.IEnumerable`1" /> cuyos elementos que se encuentren también en la primera secuencia no aparecerán en la secuencia devuelta.</span><span class="sxs-lookup"><span data-stu-id="70e38-613">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-614"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-614">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="70e38-615">Proporciona la diferencia de conjuntos de dos secuencias utilizando el objeto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-615">Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-616"><see cref="T:System.Linq.IQueryable`1" /> que contiene la diferencia de conjuntos de las dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-616">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-617">El <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-617">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-618">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la`source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-618">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-619">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-619">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-620">El comportamiento esperado es que todos los elementos de `source1` se devuelvan excepto aquellos que también estén incluidos en `source2`, y `comparer` se usa para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-620">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`, and `comparer` is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-621">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-621"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-622">Devuelve el primer elemento de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-622">Returns the first element of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-623">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-623">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-624"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-624">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span></span></param>
        <summary><span data-ttu-id="70e38-625">Devuelve el primer elemento de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-625">Returns the first element of a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-626">El primer elemento de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-626">The first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-627">El <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-627">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-628">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-628">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-629">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-629">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-630">El comportamiento esperado es que devuelve el primer elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-630">The expected behavior is that it returns the first element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-631">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para devolver el primer elemento de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-631">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the first element in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#35)]
 [!code-vb[System.Linq.Queryable#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-632"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-632"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-633">La secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-633">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-634">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-634">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-635"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-635">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-636">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-636">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-637">Devuelve el primer elemento de una secuencia que satisface una condición especificada.</span><span class="sxs-lookup"><span data-stu-id="70e38-637">Returns the first element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="70e38-638">El primer elemento de <paramref name="source" /> que pasa la prueba de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-638">The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-639">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-639">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-640">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-640">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-641">El <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-641">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-642">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-642">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-643">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-643">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-644">El comportamiento esperado es que devuelve el primer elemento de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-644">The expected behavior is that it returns the first element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-645">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para devolver el primer elemento de una secuencia que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-645">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the first element of a sequence that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#36)]
 [!code-vb[System.Linq.Queryable#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-646">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-646"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-647">Ningún elemento satisface la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-647">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
 <span data-ttu-id="70e38-648">O bien</span><span class="sxs-lookup"><span data-stu-id="70e38-648">-or-</span></span>  
  
 <span data-ttu-id="70e38-649">La secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-649">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-650">Devuelve el primer elemento de una secuencia o un valor predeterminado si no se encuentra ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-650">Returns the first element of a sequence, or a default value if no element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-651">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-651">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-652"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-652">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span></span></param>
        <summary><span data-ttu-id="70e38-653">Devuelve el primer elemento de una secuencia o un valor predeterminado si la secuencia no contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-653">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-654"><c>default</c>(<paramref name="TSource" />) si <paramref name="source" /> está vacío; de lo contrario, el primer elemento de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-654"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-655">El <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-655">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-656">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-656">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-657">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-657">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-658">El comportamiento esperado es que devuelve el primer elemento de `source`, o un valor predeterminado si `source` está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-658">The expected behavior is that it returns the first element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="70e38-659">El <xref:System.Linq.Queryable.FirstOrDefault%2A> método no proporciona una manera de especificar el valor predeterminado que se devuelve si `source` está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-659">The <xref:System.Linq.Queryable.FirstOrDefault%2A> method does not provide a way to specify the default value to return if `source` is empty.</span></span> <span data-ttu-id="70e38-660">Si desea especificar un valor predeterminado distinto de `default(TSource)`, use el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método tal como se describe en la sección ejemplo.</span><span class="sxs-lookup"><span data-stu-id="70e38-660">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-661">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> en una secuencia vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-661">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#37)]
 [!code-vb[System.Linq.Queryable#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#37)]  
  
 <span data-ttu-id="70e38-662">A veces, el valor de `default(TSource)` no es el valor predeterminado que se va a utilizar si la colección no contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-662">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="70e38-663">En lugar de comprobar el resultado para el valor predeterminado no deseado y, a continuación, cámbiela si es necesario, puede usar el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar el valor predeterminado que se va a utilizar si la colección está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-663">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="70e38-664">A continuación, llame a <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obtener el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-664">Then, call <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the first element.</span></span> <span data-ttu-id="70e38-665">En el ejemplo de código siguiente se utiliza ambas técnicas para obtener un valor predeterminado de 1 si una colección de meses numéricos está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-665">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric months is empty.</span></span> <span data-ttu-id="70e38-666">Dado que el valor predeterminado de un entero es 0, que no corresponde a ningún mes, el valor predeterminado debe especificarse como 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-666">Because the default value for an integer is 0, which does not correspond to any month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="70e38-667">La primera variable del resultado se comprueba para el valor predeterminado no deseados una vez completada la consulta.</span><span class="sxs-lookup"><span data-stu-id="70e38-667">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="70e38-668">La segunda variable del resultado se obtiene mediante una llamada a <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar un valor predeterminado de 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-668">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#131](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#131)]
 [!code-vb[System.Linq.Queryable#131](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-669"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-669"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-670">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-670">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-671"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-671">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-672">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-672">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-673">Devuelve el primer elemento de una secuencia que satisface una condición especificada o un valor predeterminado si no se encuentra ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-673">Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-674"><c>default</c>(<paramref name="TSource" />) si <paramref name="source" /> está vacío o si ningún elemento pasa la prueba especificada en <paramref name="predicate" />; de lo contrario, el primer elemento de <paramref name="source" /> que pasa la prueba especificada en <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-674"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-675">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-675">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-676">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-676">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-677">El <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-677">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-678">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-678">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-679">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-679">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-680">El comportamiento esperado es que devuelve el primer elemento de `source` que satisface la condición de `predicate`, o un valor predeterminado si ningún elemento satisface la condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-680">The expected behavior is that it returns the first element in `source` that satisfies the condition in `predicate`, or a default value if no element satisfies the condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-681">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> pasando un predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-681">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="70e38-682">En la segunda consulta, no hay ningún elemento en la secuencia que satisface la condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-682">In the second query, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#38)]
 [!code-vb[System.Linq.Queryable#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-683">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-683"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-684">Agrupa los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-684">Groups the elements of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-685">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-685">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-686">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-686">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-687"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-687">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-688">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-688">A function to extract the key for each element.</span></span></param>
        <summary><span data-ttu-id="70e38-689">Agrupa los elementos de una secuencia según una función del selector de claves especificada.</span><span class="sxs-lookup"><span data-stu-id="70e38-689">Groups the elements of a sequence according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="70e38-690"><c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> en C# o <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> en Visual Basic, en que cada objeto <see cref="T:System.Linq.IGrouping`2" /> contiene una secuencia de objetos y una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-690">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a sequence of objects and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-691">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-691">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-692">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-692">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-693">El <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-693">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-694">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-694">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-695">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-695">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-696">El comportamiento esperado es que agrupe los elementos de `source` por un valor de clave que se obtiene mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-696">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-697">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para agrupar los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-697">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#14)]
 [!code-vb[System.Linq.Queryable#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-698">El valor de <paramref name="source" /> o <paramref name="keySelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-698"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-699">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-699">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-700">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-700">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-701"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-701">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-702">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-702">A function to extract the key for each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-703"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-703">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-704">Agrupa los elementos de una secuencia según una función del selector de claves especificada y compara las claves utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-704">Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-705"><c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> en C# o <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> en Visual Basic, en que cada objeto <see cref="T:System.Linq.IGrouping`2" /> contiene una secuencia de objetos y una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-705">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-706">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-706">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-707">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-707">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-708">El <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-708">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-709">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-709">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-710">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-710">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-711">El comportamiento esperado es que agrupe los elementos de `source` por un valor de clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-711">The expected behavior is that it groups the elements of `source` by a key value.</span></span> <span data-ttu-id="70e38-712">El valor de clave se obtiene mediante la invocación `keySelector` en cada elemento, y valores de clave se comparan utilizando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-712">The key value is obtained by invoking `keySelector` on each element, and key values are compared by using `comparer`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-713"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-713"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement))) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-714">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-714">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-715">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-715">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="70e38-716">Tipo de los elementos de cada <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-716">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-717"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-717">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-718">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-718">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="70e38-719">Función que asigna cada elemento de origen a un elemento de <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-719">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <summary><span data-ttu-id="70e38-720">Agrupa los elementos de una secuencia según una función del selector de claves especificada y proyecta los elementos de cada grupo utilizando una función determinada.</span><span class="sxs-lookup"><span data-stu-id="70e38-720">Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="70e38-721"><c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> en C# o <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> en Visual Basic, en que cada <see cref="T:System.Linq.IGrouping`2" /> contiene una secuencia de objetos del tipo <paramref name="TElement" />y una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-721">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-722">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-722">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-723">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-723">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-724">El <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-724">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-725">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-725">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-726">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-726">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-727">El comportamiento esperado es que agrupe los elementos de `source` por un valor de clave que se obtiene mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-727">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-728">Invoca `elementSelector` en cada elemento que se va a obtener un elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-728">It invokes `elementSelector` on each element to obtain a result element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-729">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> para agrupar los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-729">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#39)]
 [!code-vb[System.Linq.Queryable#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-730"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-730"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-731">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-731">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-732">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-732">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="70e38-733">Tipo de los elementos de cada <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-733">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-734"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-734">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-735">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-735">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="70e38-736">Función que asigna cada elemento de origen a un elemento de <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-736">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-737"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-737">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-738">Agrupa los elementos de una secuencia y proyecta los elementos de cada grupo utilizando una función especificada.</span><span class="sxs-lookup"><span data-stu-id="70e38-738">Groups the elements of a sequence and projects the elements for each group by using a specified function.</span></span> <span data-ttu-id="70e38-739">Los valores de clave se comparan utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-739">Key values are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-740"><c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> en C# o <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> en Visual Basic, en que cada <see cref="T:System.Linq.IGrouping`2" /> contiene una secuencia de objetos del tipo <paramref name="TElement" /> y una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-740">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-741">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-741">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-742">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-742">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-743">El <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-743">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-744">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-744">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-745">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-745">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-746">El comportamiento esperado es que agrupe los elementos de `source` por un valor de clave que se obtiene mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-746">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-747">Valores de clave se comparan utilizando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-747">Key values are compared by using `comparer`.</span></span> <span data-ttu-id="70e38-748">El `elementSelector` parámetro se invoca en cada elemento que se va a obtener un elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-748">The `elementSelector` parameter is invoked on each element to obtain a result element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-749"><paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-749"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-750">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-750">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-751">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-751">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-752">El tipo del valor de resultado devuelto por <c>resultSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-752">The type of the result value returned by <c>resultSelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-753"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-753">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-754">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-754">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-755">Función que va a crear un valor de resultado a partir de cada grupo.</span><span class="sxs-lookup"><span data-stu-id="70e38-755">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="70e38-756">Agrupa los elementos de una secuencia según una función del selector de claves especificada y crea un valor de resultado a partir de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-756">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span></summary>
        <returns><span data-ttu-id="70e38-757">Objeto <c>T:System.Linq.IQueryable\`1</c> que tiene un argumento de tipo <paramref name="TResult" /> y en el que cada elemento representa una proyección sobre un grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-757">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-758">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-758">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-759">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-759">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-760">El <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-760">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-761">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-761">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-762">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-762">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-763">El comportamiento esperado es que agrupe los elementos de `source` por un valor de clave que se obtiene mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-763">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-764">El `resultSelector` parámetro se usa para obtener un valor de resultado de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-764">The `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-765">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> para agrupar los elementos de una secuencia y proyectar una secuencia de resultados de tipo `TResult`.</span><span class="sxs-lookup"><span data-stu-id="70e38-765">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#15)]
 [!code-vb[System.Linq.Queryable#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-766"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-766"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-767">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-767">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-768">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-768">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-769">El tipo del valor de resultado devuelto por <c>resultSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-769">The type of the result value returned by <c>resultSelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-770"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-770">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-771">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-771">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-772">Función que va a crear un valor de resultado a partir de cada grupo.</span><span class="sxs-lookup"><span data-stu-id="70e38-772">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-773"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-773">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-774">Agrupa los elementos de una secuencia según una función del selector de claves especificada y crea un valor de resultado a partir de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-774">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="70e38-775">Las claves se comparan utilizando un comparador determinado.</span><span class="sxs-lookup"><span data-stu-id="70e38-775">Keys are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-776">Objeto <c>T:System.Linq.IQueryable\`1</c> que tiene un argumento de tipo <paramref name="TResult" /> y en el que cada elemento representa una proyección sobre un grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-776">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-777">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-777">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-778">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-778">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-779">El <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-779">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-780">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-780">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-781">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-781">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-782">El comportamiento esperado es que agrupe los elementos de `source` por valores de clave que se obtienen mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-782">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-783">El `comparer` parámetro se utiliza para comparar claves y el `resultSelector` parámetro se usa para obtener un valor de resultado de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-783">The `comparer` parameter is used to compare keys and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-784"><paramref name="source" />, <paramref name="keySelector" />, <paramref name="resultSelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-784"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-785">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-785">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-786">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-786">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="70e38-787">Tipo de los elementos de cada <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-787">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-788">El tipo del valor de resultado devuelto por <c>resultSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-788">The type of the result value returned by <c>resultSelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-789"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-789">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-790">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-790">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="70e38-791">Función que asigna cada elemento de origen a un elemento de <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-791">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-792">Función que va a crear un valor de resultado a partir de cada grupo.</span><span class="sxs-lookup"><span data-stu-id="70e38-792">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="70e38-793">Agrupa los elementos de una secuencia según una función del selector de claves especificada y crea un valor de resultado a partir de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-793">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="70e38-794">Los elementos de cada grupo se proyectan utilizando una función determinada.</span><span class="sxs-lookup"><span data-stu-id="70e38-794">The elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="70e38-795">Objeto <c>T:System.Linq.IQueryable\`1</c> que tiene un argumento de tipo <paramref name="TResult" /> y en el que cada elemento representa una proyección sobre un grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-795">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-796">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-796">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-797">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-797">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-798">El <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-798">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-799">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-799">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-800">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-800">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-801">El comportamiento esperado es que agrupe los elementos de `source` por valores de clave que se obtienen mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-801">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-802">El `elementSelector` parámetro se utiliza para proyectar los elementos de cada grupo y el `resultSelector` parámetro se usa para obtener un valor de resultado de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-802">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-803">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> para agrupar los elementos de una secuencia y proyectar una secuencia de resultados de tipo `TResult`.</span><span class="sxs-lookup"><span data-stu-id="70e38-803">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#130](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#130)]
 [!code-vb[System.Linq.Queryable#130](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-804"><paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-804"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-805">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-805">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-806">El tipo de la clave devuelta por la función representada en <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-806">The type of the key returned by the function represented in <c>keySelector</c>.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="70e38-807">Tipo de los elementos de cada <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-807">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-808">El tipo del valor de resultado devuelto por <c>resultSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-808">The type of the result value returned by <c>resultSelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-809"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="70e38-809">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-810">Función para extraer la clave de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-810">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="70e38-811">Función que asigna cada elemento de origen a un elemento de <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-811">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-812">Función que va a crear un valor de resultado a partir de cada grupo.</span><span class="sxs-lookup"><span data-stu-id="70e38-812">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-813"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-813">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-814">Agrupa los elementos de una secuencia según una función del selector de claves especificada y crea un valor de resultado a partir de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-814">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="70e38-815">Las claves se comparan utilizando un comparador especificado y los elementos de cada grupo se proyectan utilizando una función determinada.</span><span class="sxs-lookup"><span data-stu-id="70e38-815">Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="70e38-816">Objeto <c>T:System.Linq.IQueryable\`1</c> que tiene un argumento de tipo <paramref name="TResult" /> y en el que cada elemento representa una proyección sobre un grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-816">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-817">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-817">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-818">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-818">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-819">El <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-819">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-820">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-820">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-821">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-821">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-822">El comportamiento esperado es que agrupe los elementos de `source` por valores de clave que se obtienen mediante la invocación `keySelector` en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-822">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="70e38-823">El `comparer` parámetro se utiliza para comparar valores de clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-823">The `comparer` parameter is used to compare key values.</span></span> <span data-ttu-id="70e38-824">El `elementSelector` parámetro se utiliza para proyectar los elementos de cada grupo y el `resultSelector` parámetro se usa para obtener un valor de resultado de cada grupo y su clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-824">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-825"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> o <paramref name="resultSelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-825"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-826">Establece una correlación entre los elementos de dos secuencias basándose en la igualdad de clave y agrupa los resultados.</span><span class="sxs-lookup"><span data-stu-id="70e38-826">Correlates the elements of two sequences based on key equality and groups the results.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="70e38-827">Tipo de los elementos de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-827">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="70e38-828">Tipo de los elementos de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-828">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-829">Tipo de las claves devueltas por las funciones del selector de claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-829">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-830">Tipo de los elementos del resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-830">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="70e38-831">Primera secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-831">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="70e38-832">Secuencia que se va a combinar con la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-832">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="70e38-833">Función para extraer la clave de combinación a partir de cada elemento de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-833">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="70e38-834">Función para extraer la clave de combinación a partir de cada elemento de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-834">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-835">Función para crear un elemento de resultado a partir de un elemento de la primera secuencia y una colección de elementos coincidentes de la segunda.</span><span class="sxs-lookup"><span data-stu-id="70e38-835">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-836">Establece una correlación entre los elementos de dos secuencias basándose en la igualdad de clave y agrupa los resultados.</span><span class="sxs-lookup"><span data-stu-id="70e38-836">Correlates the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="70e38-837">El comparador de igualdad predeterminado se usa para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-837">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="70e38-838"><see cref="T:System.Linq.IQueryable`1" /> que contiene elementos de tipo <paramref name="TResult" /> que se han obtenido al realizar una combinación agrupada de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-838">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-839">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-839">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-840">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-840">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-841">El <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-841">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-842">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-842">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="70e38-843">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depende de la implementación del tipo de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-843">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="70e38-844">El comportamiento esperado es que la `outerKeySelector` y `innerKeySelector` funciones se usan para extraer las claves de `outer` y `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-844">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="70e38-845">Estas claves se comparan la igualdad para que coincida con cada elemento de `outer` con cero o más elementos de `inner`.</span><span class="sxs-lookup"><span data-stu-id="70e38-845">These keys are compared for equality to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="70e38-846">La `resultSelector` función se invoca para proyectar un objeto de resultado de cada grupo de elementos correlacionados.</span><span class="sxs-lookup"><span data-stu-id="70e38-846">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-847">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> para realizar una combinación agrupada de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-847">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> to perform a grouped join on two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#40)]
 [!code-vb[System.Linq.Queryable#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-848"><paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-848"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="70e38-849">Tipo de los elementos de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-849">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="70e38-850">Tipo de los elementos de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-850">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-851">Tipo de las claves devueltas por las funciones del selector de claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-851">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-852">Tipo de los elementos del resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-852">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="70e38-853">Primera secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-853">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="70e38-854">Secuencia que se va a combinar con la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-854">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="70e38-855">Función para extraer la clave de combinación a partir de cada elemento de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-855">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="70e38-856">Función para extraer la clave de combinación a partir de cada elemento de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-856">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-857">Función para crear un elemento de resultado a partir de un elemento de la primera secuencia y una colección de elementos coincidentes de la segunda.</span><span class="sxs-lookup"><span data-stu-id="70e38-857">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-858">Comparador que va a aplicar un algoritmo hash y a comparar las claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-858">A comparer to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-859">Establece una correlación entre los elementos de dos secuencias basándose en la igualdad de clave y agrupa los resultados.</span><span class="sxs-lookup"><span data-stu-id="70e38-859">Correlates the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="70e38-860">Se usa un <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-860">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="70e38-861"><see cref="T:System.Linq.IQueryable`1" /> que contiene elementos de tipo <paramref name="TResult" /> que se han obtenido al realizar una combinación agrupada de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-861">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-862">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-862">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-863">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-863">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-864">El <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-864">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-865">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-865">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="70e38-866">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depende de la implementación del tipo de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-866">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="70e38-867">El comportamiento esperado es que la `outerKeySelector` y `innerKeySelector` funciones se usan para extraer las claves de `outer` y `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-867">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="70e38-868">Estas claves se comparan para igualdad mediante `comparer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-868">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="70e38-869">El resultado de las comparaciones se utiliza para hacer coincidir cada elemento en `outer` con cero o más elementos de `inner`.</span><span class="sxs-lookup"><span data-stu-id="70e38-869">The outcome of the comparisons is used to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="70e38-870">La `resultSelector` función se invoca para proyectar un objeto de resultado de cada grupo de elementos correlacionados.</span><span class="sxs-lookup"><span data-stu-id="70e38-870">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-871"><paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-871"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-872">Proporciona la intersección de conjuntos de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-872">Produces the set intersection of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-873">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-873">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-874">Secuencia de la que se devuelven los elementos que también aparecen en <c>source2</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-874">A sequence whose distinct elements that also appear in <c>source2</c> are returned.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-875">Secuencia de la que se devuelven los elementos que también aparecen en la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-875">A sequence whose distinct elements that also appear in the first sequence are returned.</span></span></param>
        <summary><span data-ttu-id="70e38-876">Proporciona la intersección de conjuntos de dos secuencias utilizando el comparador de igualdad predeterminado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-876">Produces the set intersection of two sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-877">Una secuencia que contiene la intersección de conjuntos de las dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-877">A sequence that contains the set intersection of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-878">El <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-878">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-879">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-879">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-880">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-880">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-881">El comportamiento esperado es que todos los elementos de `source1` que también estén incluidos en `source2` se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-881">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-882">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para devolver los elementos que aparecen en cada uno de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-882">The following code example demonstrates how to use <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return the elements that appear in each of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#41)]
 [!code-vb[System.Linq.Queryable#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-883">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-883"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-884">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-884">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-885">Una secuencia <see cref="T:System.Linq.IQueryable`1" /> de la que se devuelven los elementos que también aparecen en <c>source2</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-885">An <see cref="T:System.Linq.IQueryable`1" /> whose distinct elements that also appear in <c>source2</c> are returned.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-886">Una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de la que se devuelven los elementos que también aparecen en la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-886">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements that also appear in the first sequence are returned.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-887"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-887">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="70e38-888">Proporciona la intersección de conjuntos de dos secuencias utilizando el objeto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-888">Produces the set intersection of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="70e38-889">Una interfaz <see cref="T:System.Linq.IQueryable`1" /> que contiene la intersección de conjuntos de las dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-889">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set intersection of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-890">El <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-890">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-891">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-891">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-892">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-892">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-893">El comportamiento esperado es que todos los elementos de `source1` que también estén incluidos en `source2` se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-893">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span> <span data-ttu-id="70e38-894">El `comparer` parámetro se utiliza para comparar los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-894">The `comparer` parameter is used to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-895">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-895"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-896">Establece la correlación de dos secuencias basándose en claves coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-896">Correlates the elements of two sequences based on matching keys.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="70e38-897">Tipo de los elementos de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-897">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="70e38-898">Tipo de los elementos de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-898">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-899">Tipo de las claves devueltas por las funciones del selector de claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-899">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-900">Tipo de los elementos del resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-900">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="70e38-901">Primera secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-901">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="70e38-902">Secuencia que se va a combinar con la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-902">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="70e38-903">Función para extraer la clave de combinación a partir de cada elemento de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-903">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="70e38-904">Función para extraer la clave de combinación a partir de cada elemento de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-904">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-905">Función que va a crear un elemento de resultado a partir de dos elementos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-905">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="70e38-906">Establece la correlación de dos secuencias basándose en claves coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-906">Correlates the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="70e38-907">El comparador de igualdad predeterminado se usa para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-907">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="70e38-908">Una interfaz <see cref="T:System.Linq.IQueryable`1" /> que tiene elementos de tipo <paramref name="TResult" /> que se han obtenido al realizar una combinación interna de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-908">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-909">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-909">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-910">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-910">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-911">El <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-911">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-912">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-912">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="70e38-913">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depende de la implementación del tipo de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-913">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="70e38-914">El comportamiento esperado es una combinación interna.</span><span class="sxs-lookup"><span data-stu-id="70e38-914">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="70e38-915">El `outerKeySelector` y `innerKeySelector` funciones se usan para extraer las claves de `outer` y `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-915">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="70e38-916">Estas claves se comparan la igualdad comparar los elementos de cada secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-916">These keys are compared for equality to match elements from each sequence.</span></span> <span data-ttu-id="70e38-917">Se almacena un par de elementos para cada elemento de `inner` que coincide con un elemento en `outer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-917">A pair of elements is stored for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="70e38-918">La `resultSelector` función se invoca para proyectar un objeto de resultado de cada par de elementos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-918">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-919">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> para realizar una combinación interna de dos secuencias basándose en una clave común.</span><span class="sxs-lookup"><span data-stu-id="70e38-919">The following code example demonstrates how to use <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> to perform an inner join of two sequences based on a common key.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#42)]
 [!code-vb[System.Linq.Queryable#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-920"><paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-920"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="70e38-921">Tipo de los elementos de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-921">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="70e38-922">Tipo de los elementos de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-922">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-923">Tipo de las claves devueltas por las funciones del selector de claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-923">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-924">Tipo de los elementos del resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-924">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="70e38-925">Primera secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-925">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="70e38-926">Secuencia que se va a combinar con la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-926">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="70e38-927">Función para extraer la clave de combinación a partir de cada elemento de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-927">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="70e38-928">Función para extraer la clave de combinación a partir de cada elemento de la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-928">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-929">Función que va a crear un elemento de resultado a partir de dos elementos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-929">A function to create a result element from two matching elements.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-930"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que va a aplicar un algoritmo hash y a comparar las claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-930">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-931">Establece la correlación de dos secuencias basándose en claves coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-931">Correlates the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="70e38-932">Se usa un <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-932">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="70e38-933">Una interfaz <see cref="T:System.Linq.IQueryable`1" /> que tiene elementos de tipo <paramref name="TResult" /> que se han obtenido al realizar una combinación interna de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-933">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-934">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-934">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-935">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-935">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-936">El <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-936">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-937">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-937">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="70e38-938">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depende de la implementación del tipo de la `outer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-938">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="70e38-939">El comportamiento esperado es una combinación interna.</span><span class="sxs-lookup"><span data-stu-id="70e38-939">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="70e38-940">El `outerKeySelector` y `innerKeySelector` funciones se usan para extraer las claves de `outer` y `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-940">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="70e38-941">Estas claves se comparan para igualdad mediante `comparer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-941">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="70e38-942">El resultado de las comparaciones se utiliza para crear una pareja coincidente para cada elemento de `inner` que coincide con un elemento en `outer`.</span><span class="sxs-lookup"><span data-stu-id="70e38-942">The outcome of the comparisons is used to create a matching pair for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="70e38-943">La `resultSelector` función se invoca para proyectar un objeto de resultado de cada par de elementos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="70e38-943">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-944"><paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-944"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-945">Devuelve el último elemento de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-945">Returns the last element in a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-946">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-946">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-947"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver el último elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-947">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span></span></param>
        <summary><span data-ttu-id="70e38-948">Devuelve el último elemento de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-948">Returns the last element in a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-949">El valor de la última posición de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-949">The value at the last position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-950">El <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-950">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-951">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-951">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-952">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-952">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-953">El comportamiento esperado es que devuelve el último elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-953">The expected behavior is that it returns the last element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-954">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para devolver el último elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-954">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the last element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#43)]
 [!code-vb[System.Linq.Queryable#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-955"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-955"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-956">La secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-956">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-957">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-957">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-958"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-958">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-959">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-959">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-960">Devuelve el último elemento de una secuencia que satisface una condición especificada.</span><span class="sxs-lookup"><span data-stu-id="70e38-960">Returns the last element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="70e38-961">El último elemento de <paramref name="source" /> que pasa la prueba especificada en <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-961">The last element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-962">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-962">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-963">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-963">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-964">El <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-964">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-965">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-965">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-966">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-966">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-967">El comportamiento esperado es que devuelve el último elemento de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-967">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-968">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para devolver el último elemento de una matriz que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-968">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the last element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#44)]
 [!code-vb[System.Linq.Queryable#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-969">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-969"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-970">Ningún elemento satisface la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-970">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
 <span data-ttu-id="70e38-971">O bien</span><span class="sxs-lookup"><span data-stu-id="70e38-971">-or-</span></span>  
  
 <span data-ttu-id="70e38-972">La secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-972">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-973">Devuelve el último elemento de una secuencia o un valor predeterminado si no se encuentra ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-973">Returns the last element of a sequence, or a default value if no element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-974">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-974">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-975"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver el último elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-975">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span></span></param>
        <summary><span data-ttu-id="70e38-976">Devuelve el último elemento de una secuencia o un valor predeterminado si la secuencia no contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-976">Returns the last element in a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-977"><c>default</c>(<paramref name="TSource" />) si <paramref name="source" /> está vacío; de lo contrario, el último elemento de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-977"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the last element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-978">El <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-978">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-979">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-979">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-980">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-980">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-981">El comportamiento esperado es que devuelve el último elemento de `source`, o un valor predeterminado si `source` está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-981">The expected behavior is that it returns the last element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="70e38-982">El <xref:System.Linq.Queryable.LastOrDefault%2A> método no proporciona una manera de especificar un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="70e38-982">The <xref:System.Linq.Queryable.LastOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="70e38-983">Si desea especificar un valor predeterminado distinto de `default(TSource)`, use el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método tal como se describe en la sección ejemplo.</span><span class="sxs-lookup"><span data-stu-id="70e38-983">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-984">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> en una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-984">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#45)]
 [!code-vb[System.Linq.Queryable#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#45)]  
  
 <span data-ttu-id="70e38-985">A veces, el valor de `default(TSource)` no es el valor predeterminado que se va a utilizar si la colección no contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-985">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="70e38-986">En lugar de comprobar el resultado para el valor predeterminado no deseado y, a continuación, cámbiela si es necesario, puede usar el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar el valor predeterminado que se va a utilizar si la colección está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-986">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="70e38-987">A continuación, llame a <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obtener el último elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-987">Then, call <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the last element.</span></span> <span data-ttu-id="70e38-988">En el ejemplo de código siguiente se utiliza ambas técnicas para obtener un valor predeterminado de 1 si una colección de días numéricos del mes está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-988">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric days of the month is empty.</span></span> <span data-ttu-id="70e38-989">Dado que el valor predeterminado de un entero es 0, que no corresponde a un día del mes, el valor predeterminado debe especificarse como 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-989">Because the default value for an integer is 0, which does not correspond to any day of the month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="70e38-990">La primera variable del resultado se comprueba para el valor predeterminado no deseados una vez completada la consulta.</span><span class="sxs-lookup"><span data-stu-id="70e38-990">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="70e38-991">La segunda variable del resultado se obtiene mediante una llamada a <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar un valor predeterminado de 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-991">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#132](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#132)]
 [!code-vb[System.Linq.Queryable#132](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-992"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-992"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-993">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-993">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-994"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-994">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-995">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-995">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-996">Devuelve el último elemento de una secuencia que satisface una condición o un valor predeterminado si no se encuentra dicho elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-996">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-997"><c>default</c>(<paramref name="TSource" />) si <paramref name="source" /> está vacío o si ningún elemento pasa la prueba de la función de predicado; de lo contrario, el último elemento de <paramref name="source" /> que pasa la prueba de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-997"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no elements pass the test in the predicate function; otherwise, the last element of <paramref name="source" /> that passes the test in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-998">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-998">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-999">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-999">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1000">El <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1000">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1001">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1001">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1002">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1002">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1003">El comportamiento esperado es que devuelve el último elemento de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1003">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span> <span data-ttu-id="70e38-1004">Devuelve un valor predeterminado si no hay ningún elemento en `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1004">It returns a default value if there is no such element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1005">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> pasando un predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1005">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="70e38-1006">En la segunda llamada al método, no hay ningún elemento en la secuencia que satisface la condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1006">In the second call to the method, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#46)]
 [!code-vb[System.Linq.Queryable#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1007">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1007"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1008">Devuelve un valor <see cref="T:System.Int64" /> que representa el número de elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1008">Returns an <see cref="T:System.Int64" /> that represents the number of elements in sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1009">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1009">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1010"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos que se van a contar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1010">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <summary><span data-ttu-id="70e38-1011">Devuelve un valor <see cref="T:System.Int64" /> que representa el número total de elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1011">Returns an <see cref="T:System.Int64" /> that represents the total number of elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1012">Número de elementos de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1012">The number of elements in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1013">El <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1013">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1014">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1014">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1015">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1015">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1016">El comportamiento esperado es que cuente el número de elementos de `source` y devuelve un <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1016">The expected behavior is that it counts the number of items in `source` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1017">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para contar los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1017">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#47)]
 [!code-vb[System.Linq.Queryable#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1018"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1018"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1019">El número de elementos es superior a <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1019">The number of elements exceeds <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1020">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1020">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1021"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos que se van a contar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1021">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1022">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1022">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1023">Devuelve un valor <see cref="T:System.Int64" /> que representa el número de elementos de una secuencia que satisfacen una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1023">Returns an <see cref="T:System.Int64" /> that represents the number of elements in a sequence that satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="70e38-1024">El número de elementos de <paramref name="source" /> que satisfacen la condición de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1024">The number of elements in <paramref name="source" /> that satisfy the condition in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1025">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1025">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1026">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1026">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1027">El <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1027">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1028">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1028">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1029">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1029">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1030">El comportamiento esperado es que cuente el número de elementos de `source` que satisface la condición especificada por `predicate` y devuelve un <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1030">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1031">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para contar los elementos de una matriz que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1031">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in an array that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#48)]
 [!code-vb[System.Linq.Queryable#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1032">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1032"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1033">El número de elementos que coinciden es superior a <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1033">The number of matching elements exceeds <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1034">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1034">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1035">Secuencia de valores cuyo valor máximo se va a determinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1035">A sequence of values to determine the maximum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1036">Devuelve el valor máximo de una interfaz <see cref="T:System.Linq.IQueryable`1" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="70e38-1036">Returns the maximum value in a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="70e38-1037">El valor máximo de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1037">The maximum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1038">El <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1038">The <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1039">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1039">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1040">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1040">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1041">El comportamiento esperado es que devuelva el valor máximo de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1041">The expected behavior is that it returns the maximum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1042">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar el valor máximo de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1042">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the maximum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#52](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#52)]
 [!code-vb[System.Linq.Queryable#52](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1043"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1043"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1044">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1044">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1045">El tipo de valor devuelto por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1045">The type of the value returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1046">Secuencia de valores cuyo valor máximo se va a determinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1046">A sequence of values to determine the maximum of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1047">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1047">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1048">Invoca una función de proyección en cada elemento de una interfaz <see cref="T:System.Linq.IQueryable`1" /> genérica y devuelve el valor máximo resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-1048">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the maximum resulting value.</span></span></summary>
        <returns><span data-ttu-id="70e38-1049">El valor máximo de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1049">The maximum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1050">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1050">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1051">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1051">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1052">El <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1052">The <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1053">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1053">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1054">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1054">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1055">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="70e38-1055">The expected behavior is that it invokes `selector` on each element in `source` and returns the maximum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1056">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para determinar el valor máximo de una secuencia de valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1056">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the maximum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#58](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#58)]
 [!code-vb[System.Linq.Queryable#58](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1057">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1057"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1058">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1058">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1059">Secuencia de valores cuyo valor mínimo se va a determinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1059">A sequence of values to determine the minimum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1060">Devuelve el valor mínimo de una interfaz <see cref="T:System.Linq.IQueryable`1" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="70e38-1060">Returns the minimum value of a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="70e38-1061">El valor mínimo de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1061">The minimum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1062">El <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1062">The <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1063">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1063">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1064">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1064">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1065">El comportamiento esperado es que devuelva el valor mínimo de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1065">The expected behavior is that it returns the minimum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1066">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar el valor mínimo de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1066">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the minimum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#60](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#60)]
 [!code-vb[System.Linq.Queryable#60](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1067"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1067"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1068">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1068">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1069">El tipo de valor devuelto por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1069">The type of the value returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1070">Secuencia de valores cuyo valor mínimo se va a determinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1070">A sequence of values to determine the minimum of.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1071">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1071">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1072">Invoca una función de proyección en cada elemento de una interfaz <see cref="T:System.Linq.IQueryable`1" /> genérica y devuelve el valor mínimo resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-1072">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the minimum resulting value.</span></span></summary>
        <returns><span data-ttu-id="70e38-1073">El valor mínimo de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1073">The minimum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1074">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1074">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1075">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1075">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1076">El <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1076">The <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1077">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1077">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1078">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1078">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1079">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="70e38-1079">The expected behavior is that it invokes `selector` on each element in `source` and returns the minimum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1080">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para determinar el valor mínimo de una secuencia de valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1080">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the minimum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#68](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#68)]
 [!code-vb[System.Linq.Queryable#68](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1081">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1081"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ OfType(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="70e38-1082">El tipo según el cual se van a filtrar los elementos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1082">The type to filter the elements of the sequence on.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1083"><see cref="T:System.Linq.IQueryable" /> cuyos elementos se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1083">An <see cref="T:System.Linq.IQueryable" /> whose elements to filter.</span></span></param>
        <summary><span data-ttu-id="70e38-1084">Filtra los elementos de <see cref="T:System.Linq.IQueryable" /> en función de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1084">Filters the elements of an <see cref="T:System.Linq.IQueryable" /> based on a specified type.</span></span></summary>
        <returns><span data-ttu-id="70e38-1085">Colección que contiene los elementos de <paramref name="source" /> que son de tipo <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1085">A collection that contains the elements from <paramref name="source" /> that have type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1086">El `OfType` método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada `OfType` como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1086">The `OfType` method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling `OfType` itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1087">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1087">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1088">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada `OfType` depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1088">The query behavior that occurs as a result of executing an expression tree that represents calling `OfType` depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1089">El comportamiento esperado es que filtra todos los elementos en `source` que no sean de tipo `TResult`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1089">The expected behavior is that it filters out any elements in `source` that are not of type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1090">En el ejemplo de código siguiente se muestra cómo utilizar `OfType` para filtrar los elementos que no son de tipo <xref:System.Reflection.PropertyInfo> en una lista de elementos de tipo <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1090">The following code example demonstrates how to use `OfType` to filter out elements that are not of type <xref:System.Reflection.PropertyInfo> from a list of elements of type <xref:System.Reflection.MemberInfo>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#69](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#69)]
 [!code-vb[System.Linq.Queryable#69](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1091"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1091"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1092">Ordena de manera ascendente los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1092">Sorts the elements of a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1093">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1093">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1094">El tipo de la clave devuelta por la función que se representa mediante <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1094">The type of the key returned by the function that is represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1095">Secuencia de valores que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1095">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1096">Función para extraer una clave a partir de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1096">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="70e38-1097">Ordena de manera ascendente los elementos de una secuencia en función de una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1097">Sorts the elements of a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="70e38-1098">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1098">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1099">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1099">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1100">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1100">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1101">El <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1101">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1102">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1102">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1103">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1103">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1104">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1104">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1105">El comportamiento esperado es que ordena los elementos de `source` basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1105">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1106">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para ordenar los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1106">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to sort the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#70](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#70)]
 [!code-vb[System.Linq.Queryable#70](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1107">El valor de <paramref name="source" /> o <paramref name="keySelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1107"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1108">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1108">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1109">El tipo de la clave devuelta por la función que se representa mediante <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1109">The type of the key returned by the function that is represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1110">Secuencia de valores que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1110">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1111">Función para extraer una clave a partir de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1111">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1112"><see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1112">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-1113">Ordena de manera ascendente los elementos de una secuencia utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1113">Sorts the elements of a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-1114">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1114">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1115">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1115">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1116">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1116">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1117">El <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1117">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1118">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1118">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1119">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1119">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1120">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1120">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1121">El comportamiento esperado es que ordena los elementos de `source` basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1121">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1122">El `comparer` parámetro se utiliza para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1122">The `comparer` parameter is used to compare keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1123"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1123"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1124">Ordena de manera descendente los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1124">Sorts the elements of a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1125">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1125">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1126">El tipo de la clave devuelta por la función que se representa mediante <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1126">The type of the key returned by the function that is represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1127">Secuencia de valores que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1127">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1128">Función para extraer una clave a partir de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1128">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="70e38-1129">Ordena de manera descendente los elementos de una secuencia en función de una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1129">Sorts the elements of a sequence in descending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="70e38-1130">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan de manera descendente con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1130">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1131">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1131">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1132">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1132">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1133">El <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1133">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1134">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1134">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1135">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1135">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1136">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1136">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1137">El comportamiento esperado es que ordena los elementos de `source` en orden descendente, basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1137">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1138">El valor de <paramref name="source" /> o <paramref name="keySelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1138"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1139">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1139">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1140">El tipo de la clave devuelta por la función que se representa mediante <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1140">The type of the key returned by the function that is represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1141">Secuencia de valores que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1141">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1142">Función para extraer una clave a partir de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1142">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1143"><see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1143">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-1144">Ordena de manera descendente los elementos de una secuencia utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1144">Sorts the elements of a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-1145">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan de manera descendente con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1145">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1146">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1146">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1147">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1147">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1148">El <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1148">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1149">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1149">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1150">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1150">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1151">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1151">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1152">El comportamiento esperado es que ordena los elementos de `source` en orden descendente, basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1152">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1153">El `comparer` parámetro se utiliza para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1153">The `comparer` parameter is used to compare keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1154">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> para ordenar los elementos de una secuencia en orden descendente utilizando un comparador personalizado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1154">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to sort the elements of a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#71](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#71)]
 [!code-vb[System.Linq.Queryable#71](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1155"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1155"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Prepend&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Prepend&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Prepend(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Reverse(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1156">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1156">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1157">Secuencia de valores que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="70e38-1157">A sequence of values to reverse.</span></span></param>
        <summary><span data-ttu-id="70e38-1158">Invierte el orden de los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1158">Inverts the order of the elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1159"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se corresponden en orden inverso con los de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1159">An <see cref="T:System.Linq.IQueryable`1" /> whose elements correspond to those of the input sequence in reverse order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1160">El <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1160">The <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1161">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1161">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1162">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1162">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1163">El comportamiento esperado es que invierte el orden de los elementos de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1163">The expected behavior is that it reverses the order of the elements in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1164">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para invertir el orden de los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1164">The following code example demonstrates how to use <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to reverse the order of elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#74](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#74)]
 [!code-vb[System.Linq.Queryable#74](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1165"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1165"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1166">Proyecta cada elemento de una secuencia a un nuevo formulario.</span><span class="sxs-lookup"><span data-stu-id="70e38-1166">Projects each element of a sequence into a new form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, TResult&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1167">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1167">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1168">El tipo de valor devuelto por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1168">The type of the value returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1169">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1169">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1170">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1170">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1171">Proyecta cada elemento de una secuencia en un nuevo formulario incorporando el índice del elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1171">Projects each element of a sequence into a new form by incorporating the element's index.</span></span></summary>
        <returns><span data-ttu-id="70e38-1172"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar una función de proyección en cada elemento de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1172">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1173">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1173">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1174">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1174">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1175">El <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1175">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1176">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1176">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1177">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> dependen de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1177">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> depend on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1178">El comportamiento esperado es que invoque `selector` en cada elemento de `source` para proyectar en un formato diferente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1178">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1179">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> para proyección sobre una secuencia de valores y utilizar el índice de cada elemento en el formulario proyectado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1179">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> to project over a sequence of values and use the index of each element in the projected form.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#76](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#76)]
 [!code-vb[System.Linq.Queryable#76](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1180">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1180"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1181">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1181">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1182">El tipo de valor devuelto por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1182">The type of the value returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1183">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1183">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1184">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1184">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1185">Proyecta cada elemento de una secuencia a un nuevo formulario.</span><span class="sxs-lookup"><span data-stu-id="70e38-1185">Projects each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="70e38-1186"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar una función de proyección en cada elemento de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1186">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1187">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1187">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1188">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1188">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1189">El <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1189">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1190">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1190">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1191">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1191">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1192">El comportamiento esperado es que invoque `selector` en cada elemento de `source` para proyectar en un formato diferente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1192">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1193">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> al proyecto a través de una secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-1193">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to project over a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#75](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#75)]
 [!code-vb[System.Linq.Queryable#75](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1194">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1194"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1195">Proyecta cada elemento de una secuencia en una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> y combina las secuencias resultantes en una secuencia de tipo <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1195">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence of type <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1196">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1196">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1197">El tipo de los elementos de la secuencia devuelta por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1197">The type of the elements of the sequence returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1198">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1198">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1199">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1199">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1200">Proyecta cada elemento de una secuencia en una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> y combina las secuencias resultantes en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1200">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1201"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar una función de proyección uno a varios en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1201">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1202">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1202">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1203">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1203">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1204">El <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1204">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1205">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1205">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1206">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1206">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1207">El comportamiento esperado es que invoque `selector` en cada elemento de `source` para proyectar en un formulario enumerable.</span><span class="sxs-lookup"><span data-stu-id="70e38-1207">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="70e38-1208">A continuación, concatena los resultados enumerables en una única secuencia unidimensional.</span><span class="sxs-lookup"><span data-stu-id="70e38-1208">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1209">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> para realizar una proyección de uno a varios sobre una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1209">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#77](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#77)]
 [!code-vb[System.Linq.Queryable#77](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1210">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1210"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1211">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1211">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1212">El tipo de los elementos de la secuencia devuelta por la función representada por <c>selector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1212">The type of the elements of the sequence returned by the function represented by <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1213">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1213">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1214">Función de proyección que se va a aplicar a cada elemento; el segundo parámetro de esta función representa el índice del elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1214">A projection function to apply to each element; the second parameter of this function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="70e38-1215">Proyecta cada elemento de una secuencia en una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> y combina las secuencias resultantes en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1215">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span></span> <span data-ttu-id="70e38-1216">El índice de cada elemento de origen se utiliza en el formulario proyectado de ese elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1216">The index of each source element is used in the projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="70e38-1217"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar una función de proyección uno a varios en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1217">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1218">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1218">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1219">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1219">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1220">El <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1220">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1221">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1221">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1222">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1222">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1223">El comportamiento esperado es que invoque `selector` en cada elemento de `source` para proyectar en un formulario enumerable.</span><span class="sxs-lookup"><span data-stu-id="70e38-1223">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="70e38-1224">Cada resultado enumerable incorpora el índice del elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1224">Each enumerable result incorporates the index of the source element.</span></span> <span data-ttu-id="70e38-1225">A continuación, concatena los resultados enumerables en una única secuencia unidimensional.</span><span class="sxs-lookup"><span data-stu-id="70e38-1225">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1226">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> para realizar una proyección de uno a varios sobre una matriz y utilizar el índice de cada elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1226">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array and use the index of each source element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#78](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#78)]
 [!code-vb[System.Linq.Queryable#78](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1227">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1227"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1228">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1228">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="70e38-1229">El tipo de los elementos intermedios recopilados por la función representada por <c>collectionSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1229">The type of the intermediate elements collected by the function represented by <c>collectionSelector</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1230">Tipo de los elementos de la secuencia resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-1230">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1231">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1231">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="70e38-1232">Función de proyección que se va a aplicar a cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1232">A projection function to apply to each element of the input sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-1233">Función de proyección que se va a aplicar a cada elemento de la secuencia intermedia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1233">A projection function to apply to each element of each intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-1234">Proyecta cada elemento de una secuencia en <see cref="T:System.Collections.Generic.IEnumerable`1" /> e invoca una función del selector de resultados en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1234">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and invokes a result selector function on each element therein.</span></span> <span data-ttu-id="70e38-1235">Los valores resultantes de cada secuencia intermedia se combinan en una única secuencia unidimensional y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1235">The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</span></span></summary>
        <returns><span data-ttu-id="70e38-1236"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar la función de proyección uno a varios <paramref name="collectionSelector" /> en cada elemento de <paramref name="source" /> y de asignar a continuación cada uno de los elementos de la secuencia y sus elementos de <paramref name="source" /> correspondientes a un elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1236">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1237">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1237">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1238">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1238">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1239">El <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1239">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1240">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1240">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1241">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1241">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1242">El comportamiento esperado es que invoque `collectionSelector` en cada elemento de `source` para proyectar en un formulario enumerable.</span><span class="sxs-lookup"><span data-stu-id="70e38-1242">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="70e38-1243">A continuación, la función representado por `resultSelector` se invoca en cada elemento de cada secuencia intermedia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1243">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="70e38-1244">Los valores resultantes se concatenan en una única secuencia unidimensional.</span><span class="sxs-lookup"><span data-stu-id="70e38-1244">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1245">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> para realizar una proyección de uno a varios sobre una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1245">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> to perform a one-to-many projection over an array.</span></span> <span data-ttu-id="70e38-1246">Este ejemplo utiliza una función del selector de resultados para mantener el elemento de origen que se corresponde con cada secuencia intermedia en el ámbito de la llamada final a `Select`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1246">This example uses a result selector function to keep the source element that corresponds to each intermediate sequence in scope for the final call to `Select`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#124](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#124)]
 [!code-vb[System.Linq.Queryable#124](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#124)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1247"><paramref name="source" /> o <paramref name="collectionSelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1247"><paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1248">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1248">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="70e38-1249">El tipo de los elementos intermedios recopilados por la función representada por <c>collectionSelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1249">The type of the intermediate elements collected by the function represented by <c>collectionSelector</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1250">Tipo de los elementos de la secuencia resultante.</span><span class="sxs-lookup"><span data-stu-id="70e38-1250">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1251">Secuencia de valores que se va a proyectar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1251">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="70e38-1252">Función de proyección que se va a aplicar a cada elemento de la secuencia de entrada; el segundo parámetro de esta función representa el índice del elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1252">A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-1253">Función de proyección que se va a aplicar a cada elemento de la secuencia intermedia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1253">A projection function to apply to each element of each intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-1254">Proyecta cada elemento de una secuencia en una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que incorpora el índice del elemento de origen que lo generó.</span><span class="sxs-lookup"><span data-stu-id="70e38-1254">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that incorporates the index of the source element that produced it.</span></span> <span data-ttu-id="70e38-1255">Una función del selector de resultados se invoca en cada elemento de todas las secuencias intermedias y luego los valores resultantes se combinan en una única secuencia unidimensional y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1255">A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</span></span></summary>
        <returns><span data-ttu-id="70e38-1256"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos son el resultado de invocar la función de proyección uno a varios <paramref name="collectionSelector" /> en cada elemento de <paramref name="source" /> y de asignar a continuación cada uno de los elementos de la secuencia y sus elementos de <paramref name="source" /> correspondientes a un elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1256">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1257">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1257">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1258">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1258">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1259">El <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1259">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1260">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1260">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1261">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1261">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1262">El comportamiento esperado es que invoque `collectionSelector` en cada elemento de `source` para proyectar en un formulario enumerable.</span><span class="sxs-lookup"><span data-stu-id="70e38-1262">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="70e38-1263">Cada resultado enumerable incorpora el índice del elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1263">Each enumerable result incorporates the source element's index.</span></span> <span data-ttu-id="70e38-1264">A continuación, la función representado por `resultSelector` se invoca en cada elemento de cada secuencia intermedia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1264">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="70e38-1265">Los valores resultantes se concatenan en una única secuencia unidimensional.</span><span class="sxs-lookup"><span data-stu-id="70e38-1265">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1266"><paramref name="source" /> o <paramref name="collectionSelector" /> o <paramref name="resultSelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1266"><paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1267">Determina si dos secuencias son iguales.</span><span class="sxs-lookup"><span data-stu-id="70e38-1267">Determines whether two sequences are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1268">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1268">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-1269"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a comparar con los de <c>source2</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1269">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <c>source2</c>.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-1270"><see cref="T:System.Collections.Generic.IEnumerable`1" /> cuyos elementos se van a comparar con los de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1270">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-1271">Determina si dos secuencias son iguales utilizando el comparador de igualdad predeterminado para comparar los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1271">Determines whether two sequences are equal by using the default equality comparer to compare elements.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-1272"><see langword="true" /> si las dos secuencias de origen tienen la misma longitud y sus elementos correspondientes son iguales; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1272"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1273">El <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1273">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1274">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1274">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1275">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1275">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-1276">El comportamiento esperado es que determine si las dos secuencias de origen son iguales.</span><span class="sxs-lookup"><span data-stu-id="70e38-1276">The expected behavior is that it determines if the two source sequences are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1277">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para determinar si dos secuencias son iguales.</span><span class="sxs-lookup"><span data-stu-id="70e38-1277">The following code example demonstrates how to use <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to determine whether two sequences are equal.</span></span> <span data-ttu-id="70e38-1278">En este ejemplo las secuencias son iguales.</span><span class="sxs-lookup"><span data-stu-id="70e38-1278">In this example the sequences are equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#32)]
 [!code-vb[System.Linq.Queryable#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#32)]  
  
 <span data-ttu-id="70e38-1279">En el ejemplo de código siguiente se compara dos secuencias que no son iguales.</span><span class="sxs-lookup"><span data-stu-id="70e38-1279">The following code example compares two sequences that are not equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#33)]
 [!code-vb[System.Linq.Queryable#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1280">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1280"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1281">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1281">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-1282"><see cref="T:System.Linq.IQueryable`1" /> cuyos elementos se van a comparar con los de <c>source2</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1282">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <c>source2</c>.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-1283"><see cref="T:System.Collections.Generic.IEnumerable`1" /> cuyos elementos se van a comparar con los de la primera secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1283">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1284"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que se va a utilizar para comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1284">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span></span></param>
        <summary><span data-ttu-id="70e38-1285">Determina si dos secuencias son iguales utilizando una interfaz <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificada para comparar los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1285">Determines whether two sequences are equal by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare elements.</span></span></summary>
        <returns>
          <span data-ttu-id="70e38-1286"><see langword="true" /> si las dos secuencias de origen tienen la misma longitud y sus elementos correspondientes son iguales; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1286"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1287">El <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1287">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1288">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1288">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1289">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1289">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-1290">El comportamiento esperado es que determine si el origen de las dos secuencias son iguales mediante el uso de `comparer` para comparar los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1290">The expected behavior is that it determines if the two source sequences are equal by using `comparer` to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1291">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1291"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1292">Devuelve un único elemento concreto de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1292">Returns a single, specific element of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1293">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1293">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1294"><see cref="T:System.Linq.IQueryable`1" /> cuyo único elemento se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1294">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span></span></param>
        <summary><span data-ttu-id="70e38-1295">Devuelve el único elemento de una secuencia y produce una excepción si no hay exactamente un elemento en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1295">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1296">El único elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1296">The single element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1297">El <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1297">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1298">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1298">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1299">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1299">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1300">El comportamiento esperado es que devuelva el único elemento en `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1300">The expected behavior is that it returns the only element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1301">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para seleccionar el único elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1301">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#79](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#79)]
 [!code-vb[System.Linq.Queryable#79](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1302"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1302"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-1303"><paramref name="source" /> tiene más de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1303"><paramref name="source" /> has more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1304">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1304">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1305"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un único elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1305">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1306">Función que va a probar si un elemento satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1306">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1307">Devuelve el único elemento de una secuencia que cumpla una condición especificada y produce una excepción si existe más de un elemento de este tipo.</span><span class="sxs-lookup"><span data-stu-id="70e38-1307">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="70e38-1308">El único elemento de la secuencia de entrada que satisface la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1308">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1309">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1309">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1310">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1310">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1311">El <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1311">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1312">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1312">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1313">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1313">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1314">El comportamiento esperado es que devuelva el único elemento en `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1314">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1315">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para seleccionar el único elemento de una matriz que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1315">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#81](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#81)]
 [!code-vb[System.Linq.Queryable#81](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1316">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1316"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-1317">Ningún elemento satisface la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1317">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
 <span data-ttu-id="70e38-1318">O bien</span><span class="sxs-lookup"><span data-stu-id="70e38-1318">-or-</span></span>  
  
 <span data-ttu-id="70e38-1319">Varios elementos satisfacen la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1319">More than one element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
 <span data-ttu-id="70e38-1320">O bien</span><span class="sxs-lookup"><span data-stu-id="70e38-1320">-or-</span></span>  
  
 <span data-ttu-id="70e38-1321">La secuencia de origen está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-1321">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1322">Devuelve un único elemento concreto de una secuencia o un valor predeterminado si no se encuentra dicho elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1322">Returns a single, specific element of a sequence, or a default value if no such element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1323">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1323">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1324"><see cref="T:System.Linq.IQueryable`1" /> cuyo único elemento se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1324">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span></span></param>
        <summary><span data-ttu-id="70e38-1325">Devuelve el único elemento de una secuencia o un valor predeterminado si la secuencia está vacía; este método produce una excepción si hay más de un elemento en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1325">Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1326">Único elemento de la secuencia de entrada o <c>default</c>(<paramref name="TSource" />) si la secuencia no contiene ningún elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1326">The single element of the input sequence, or <c>default</c>(<paramref name="TSource" />) if the sequence contains no elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1327">El <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1327">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1328">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1328">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1329">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1329">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1330">El comportamiento esperado es que devuelva el único elemento en `source`, o un valor predeterminado si `source` está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-1330">The expected behavior is that it returns the only element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="70e38-1331">El <xref:System.Linq.Queryable.SingleOrDefault%2A> método no proporciona una manera de especificar un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1331">The <xref:System.Linq.Queryable.SingleOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="70e38-1332">Si desea especificar un valor predeterminado distinto de `default(TSource)`, use el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método tal como se describe en la sección ejemplo.</span><span class="sxs-lookup"><span data-stu-id="70e38-1332">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1333">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para seleccionar el único elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="70e38-1333">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span> <span data-ttu-id="70e38-1334">La segunda consulta muestra que <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> devuelve un valor predeterminado cuando la secuencia no contiene exactamente un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1334">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> returns a default value when the sequence does not contain exactly one element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#83](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#83)]
 [!code-vb[System.Linq.Queryable#83](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#83)]  
  
 <span data-ttu-id="70e38-1335">A veces, el valor de `default(TSource)` no es el valor predeterminado que se va a utilizar si la colección no contiene elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1335">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="70e38-1336">En lugar de comprobar el resultado para el valor predeterminado no deseado y, a continuación, cámbiela si es necesario, puede usar el <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar el valor predeterminado que se va a utilizar si la colección está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-1336">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="70e38-1337">A continuación, llame a <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obtener el elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1337">Then, call <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the element.</span></span> <span data-ttu-id="70e38-1338">En el ejemplo de código siguiente se utiliza ambas técnicas para obtener un valor predeterminado de 1 si una colección de números de página está vacía.</span><span class="sxs-lookup"><span data-stu-id="70e38-1338">The following code example uses both techniques to obtain a default value of 1 if a collection of page numbers is empty.</span></span> <span data-ttu-id="70e38-1339">Dado que el valor predeterminado de un entero es 0, lo que no es normalmente un número de página válido, el valor predeterminado debe especificarse como 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-1339">Because the default value for an integer is 0, which is not usually a valid page number, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="70e38-1340">La primera variable del resultado se comprueba para el valor predeterminado no deseados una vez completada la consulta.</span><span class="sxs-lookup"><span data-stu-id="70e38-1340">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="70e38-1341">La segunda variable del resultado se obtiene mediante una llamada a <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar un valor predeterminado de 1.</span><span class="sxs-lookup"><span data-stu-id="70e38-1341">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#133](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#133)]
 [!code-vb[System.Linq.Queryable#133](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1342"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1342"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70e38-1343"><paramref name="source" /> tiene más de un elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1343"><paramref name="source" /> has more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1344">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1344">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1345"><see cref="T:System.Linq.IQueryable`1" /> del que se va a devolver un único elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1345">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1346">Función que va a probar si un elemento satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1346">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1347">Devuelve el único elemento de una secuencia que cumpla la condición especificada, o bien, un valor predeterminado si ese elemento no existe; este método produce una excepción si varios elementos cumplen la condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1347">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="70e38-1348">Único elemento de la secuencia de entrada que satisface la condición en <paramref name="predicate" /> o <c>default</c>(<paramref name="TSource" />) si no se encuentra dicho elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1348">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or <c>default</c>(<paramref name="TSource" />) if no such element is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1349">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1349">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1350">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1350">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1351">El <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1351">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1352">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1352">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1353">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1353">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1354">El comportamiento esperado es que devuelva el único elemento en `source` que satisface la condición especificada por `predicate`, o un valor predeterminado si no existe ese elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1354">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`, or a default value if no such element exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1355">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para seleccionar el único elemento de una matriz que satisface una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1355">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span> <span data-ttu-id="70e38-1356">La segunda consulta muestra que <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> devuelve un valor predeterminado cuando la secuencia no contiene exactamente un elemento que satisface la condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1356">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> returns a default value when the sequence does not contain exactly one element that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#85](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#85)]
 [!code-vb[System.Linq.Queryable#85](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1357">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1357"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70e38-1358">Varios elementos satisfacen la condición de <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1358">More than one element satisfies the condition in <paramref name="predicate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Skip(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1359">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1359">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1360"><see cref="T:System.Linq.IQueryable`1" /> del que se van a devolver los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1360">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="70e38-1361">Número de elementos que se van a omitir antes de devolver los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1361">The number of elements to skip before returning the remaining elements.</span></span></param>
        <summary><span data-ttu-id="70e38-1362">Omite un número especificado de elementos en una secuencia y luego devuelve los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1362">Bypasses a specified number of elements in a sequence and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="70e38-1363"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos que hay después del índice especificado en la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1363">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements that occur after the specified index in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1364">El <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1364">The <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1365">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1365">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1366">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1366">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1367">El comportamiento esperado es que omite el primer `count` elementos en `source` y devuelve los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1367">The expected behavior is that it skips the first `count` elements in `source` and returns the remaining elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1368">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para omitir un número especificado de elementos de una matriz ordenada y devolver los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1368">The following code example demonstrates how to use <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to skip a specified number of elements in a sorted array and return the remaining elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#87](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#87)]
 [!code-vb[System.Linq.Queryable#87](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1369"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1369"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1370">Omite los elementos de una secuencia en tanto que el valor de una condición especificada sea true y luego devuelve los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1370">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1371">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1371">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1372"><see cref="T:System.Linq.IQueryable`1" /> del que se van a devolver los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1372">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1373">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1373">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1374">Omite los elementos de una secuencia en tanto que el valor de una condición especificada sea true y luego devuelve los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1374">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="70e38-1375"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de <paramref name="source" /> comenzando por el primer elemento de la serie lineal que no pasa la prueba especificada por <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1375">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1376">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1376">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1377">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1377">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1378">El <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1378">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1379">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1379">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1380">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1380">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1381">El comportamiento esperado es que se aplica `predicate` a cada elemento de `source` hasta que encuentra un elemento para el que `predicate` devuelve false.</span><span class="sxs-lookup"><span data-stu-id="70e38-1381">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="70e38-1382">Se devuelven ese elemento y todos los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1382">That element and all the remaining elements are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1383">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para omitir los elementos de una matriz como una condición es true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1383">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#88](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#88)]
 [!code-vb[System.Linq.Queryable#88](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1384">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1384"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1385">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1385">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1386"><see cref="T:System.Linq.IQueryable`1" /> del que se van a devolver los elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1386">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1387">Función que va a probar cada elemento para determinar si satisface una condición; el segundo parámetro de esta función representa el índice del elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1387">A function to test each element for a condition; the second parameter of this function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="70e38-1388">Omite los elementos de una secuencia en tanto que el valor de una condición especificada sea true y luego devuelve los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1388">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span> <span data-ttu-id="70e38-1389">El índice del elemento se usa en la lógica de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1389">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="70e38-1390"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de <paramref name="source" /> comenzando por el primer elemento de la serie lineal que no pasa la prueba especificada por <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1390">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1391">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1391">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1392">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1392">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1393">El <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1393">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1394">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1394">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1395">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1395">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1396">El comportamiento esperado es que se aplica `predicate` a cada elemento de `source` hasta que encuentra un elemento para el que `predicate` devuelve false.</span><span class="sxs-lookup"><span data-stu-id="70e38-1396">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="70e38-1397">Se devuelven ese elemento y todos los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1397">That element and all the remaining elements are returned.</span></span> <span data-ttu-id="70e38-1398">El índice de cada elemento de origen se proporciona como segundo argumento `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1398">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1399">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para omitir los elementos de una matriz siempre que una condición que depende el índice del elemento sea true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1399">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition that depends on the element's index is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#89](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#89)]
 [!code-vb[System.Linq.Queryable#89](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1400">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1400"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1401">Calcula la suma de una secuencia de valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1401">Computes the sum of a sequence of numeric values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1402">Secuencia de valores <see cref="T:System.Decimal" /> cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1402">A sequence of <see cref="T:System.Decimal" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1403">Calcula la suma de una secuencia de valores <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1403">Computes the sum of a sequence of <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1404">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1404">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1405">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1405">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1406">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1406">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1407">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1407">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1408">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1408">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1409">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1409">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1410"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1410"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1411">La suma es mayor que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1411">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1412">Secuencia de valores <see cref="T:System.Double" /> cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1412">A sequence of <see cref="T:System.Double" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1413">Calcula la suma de una secuencia de valores <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1413">Computes the sum of a sequence of <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1414">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1414">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1415">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1415">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1416">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1416">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1417">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1417">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1418">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1418">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1419">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1419">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1420"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1420"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1421">Secuencia de valores <see cref="T:System.Int32" /> cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1421">A sequence of <see cref="T:System.Int32" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1422">Calcula la suma de una secuencia de valores <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1422">Computes the sum of a sequence of <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1423">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1423">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1424">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1424">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1425">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1425">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1426">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1426">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1427">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1427">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1428">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1428">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1429"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1429"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1430">La suma es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1430">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1431">Secuencia de valores <see cref="T:System.Int64" /> cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1431">A sequence of <see cref="T:System.Int64" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1432">Calcula la suma de una secuencia de valores <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1432">Computes the sum of a sequence of <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1433">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1433">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1434">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1434">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1435">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1435">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1436">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1436">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1437">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1437">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1438">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1438">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1439"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1439"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1440">La suma es mayor que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1440">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1441">Secuencia de valores <see cref="T:System.Decimal" /> que aceptan valores NULL cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1441">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1442">Calcula la suma de una secuencia de valores <see cref="T:System.Decimal" /> que aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-1442">Computes the sum of a sequence of nullable <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1443">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1443">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1444">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1444">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1445">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1445">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1446">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1446">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1447">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1447">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1448">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1448">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1449"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1449"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1450">La suma es mayor que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1450">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1451">Secuencia de valores <see cref="T:System.Double" /> que aceptan valores NULL cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1451">A sequence of nullable <see cref="T:System.Double" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1452">Calcula la suma de una secuencia de valores <see cref="T:System.Double" /> que aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-1452">Computes the sum of a sequence of nullable <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1453">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1453">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1454">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1454">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1455">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1455">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1456">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1456">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1457">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1457">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1458">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1458">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1459"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1459"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1460">Secuencia de valores <see cref="T:System.Int32" /> que aceptan valores NULL cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1460">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1461">Calcula la suma de una secuencia de valores <see cref="T:System.Int32" /> que aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-1461">Computes the sum of a sequence of nullable <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1462">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1462">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1463">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1463">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1464">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1464">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1465">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1465">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1466">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1466">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1467">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1467">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1468"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1468"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1469">La suma es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1469">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1470">Secuencia de valores <see cref="T:System.Int64" /> que aceptan valores NULL cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1470">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1471">Calcula la suma de una secuencia de valores <see cref="T:System.Int64" /> que aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-1471">Computes the sum of a sequence of nullable <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1472">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1472">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1473">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1473">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1474">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1474">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1475">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1475">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1476">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1476">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1477">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1477">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1478"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1478"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1479">La suma es mayor que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1479">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1480">Secuencia de valores <see cref="T:System.Single" /> que aceptan valores NULL cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1480">A sequence of nullable <see cref="T:System.Single" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1481">Calcula la suma de una secuencia de valores <see cref="T:System.Single" /> que aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="70e38-1481">Computes the sum of a sequence of nullable <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1482">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1482">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1483">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1483">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1484">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1484">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1485">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1485">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1486">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1486">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1487">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1487">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1488"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1488"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="70e38-1489">Secuencia de valores <see cref="T:System.Single" /> cuya suma se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="70e38-1489">A sequence of <see cref="T:System.Single" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="70e38-1490">Calcula la suma de una secuencia de valores <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1490">Computes the sum of a sequence of <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="70e38-1491">Suma de los valores de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1491">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1492">El <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1492">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1493">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1493">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1494">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1494">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1495">El comportamiento esperado es que devuelve la suma de los valores de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1495">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1496">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> que sume los valores de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1496">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1497"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1497"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1498">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1498">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1499">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1499">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1500">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1500">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1501">Calcula la suma de la secuencia de valores <see cref="T:System.Decimal" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1501">Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1502">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1502">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1503">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1503">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1504">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1504">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1505">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1505">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1506">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1506">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1507">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1507">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1508">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1508">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1509">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1509">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1510">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1510"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1511">La suma es mayor que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1511">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1512">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1512">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1513">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1513">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1514">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1514">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1515">Calcula la suma de la secuencia de valores <see cref="T:System.Double" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1515">Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1516">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1516">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1517">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1517">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1518">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1518">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1519">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1519">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1520">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1520">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1521">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depende de la implementación del tipo del `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1521">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of he `source` parameter.</span></span> <span data-ttu-id="70e38-1522">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1522">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1523">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1523">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1524">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1524"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1525">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1525">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1526">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1526">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1527">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1527">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1528">Calcula la suma de la secuencia de valores <see cref="T:System.Int32" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1528">Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1529">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1529">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1530">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1530">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1531">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1531">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1532">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1532">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1533">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1533">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1534">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1534">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1535">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1535">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1536">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1536">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1537">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1537"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1538">La suma es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1538">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1539">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1539">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1540">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1540">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1541">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1541">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1542">Calcula la suma de la secuencia de valores <see cref="T:System.Int64" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1542">Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1543">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1543">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1544">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1544">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1545">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1545">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1546">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1546">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1547">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1547">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1548">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1548">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1549">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1549">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1550">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1550">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1551">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1551"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1552">La suma es mayor que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1552">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1553">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1553">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1554">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1554">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1555">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1555">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1556">Calcula la suma de la secuencia de valores <see cref="T:System.Decimal" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1556">Computes the sum of the sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1557">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1557">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1558">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1558">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1559">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1559">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1560">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1560">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1561">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1561">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1562">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1562">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1563">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1563">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1564">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1564">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1565">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1565"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1566">La suma es mayor que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1566">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1567">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1567">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1568">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1568">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1569">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1569">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1570">Calcula la suma de la secuencia de valores <see cref="T:System.Double" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1570">Computes the sum of the sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1571">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1571">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1572">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1572">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1573">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1573">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1574">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1574">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1575">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1575">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1576">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1576">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1577">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1577">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1578">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1578">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1579">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1579"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1580">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1580">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1581">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1581">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1582">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1582">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1583">Calcula la suma de la secuencia de valores <see cref="T:System.Int32" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1583">Computes the sum of the sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1584">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1584">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1585">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1585">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1586">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1586">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1587">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1587">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1588">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1588">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1589">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1589">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1590">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1590">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1591">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1591">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1592">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1592"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1593">La suma es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1593">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1594">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1594">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1595">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1595">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1596">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1596">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1597">Calcula la suma de la secuencia de valores <see cref="T:System.Int64" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1597">Computes the sum of the sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1598">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1598">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1599">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1599">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1600">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1600">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1601">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1601">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1602">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1602">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1603">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1603">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1604">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1604">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1605">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1605">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1606">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1606"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="70e38-1607">La suma es mayor que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1607">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1608">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1608">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1609">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1609">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1610">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1610">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1611">Calcula la suma de la secuencia de valores <see cref="T:System.Single" /> que aceptan valores NULL que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1611">Computes the sum of the sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1612">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1612">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1613">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1613">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1614">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1614">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1615">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1615">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1616">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1616">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1617">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1617">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1618">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1618">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1619">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1619">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1620">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1620"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1621">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1621">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1622">Secuencia de valores de tipo <c>TSource</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1622">A sequence of values of type <c>TSource</c>.</span></span></param>
        <param name="selector"><span data-ttu-id="70e38-1623">Función de proyección que se va a aplicar a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1623">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1624">Calcula la suma de la secuencia de valores <see cref="T:System.Single" /> que se obtiene al invocar una función de proyección en cada elemento de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1624">Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1625">Suma de los valores proyectados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1625">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1626">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1626">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1627">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1627">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1628">El <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1628">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1629">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1629">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1630">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1630">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1631">El comportamiento esperado es que invoque `selector` en cada elemento de `source` y devuelve la suma de los valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1631">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1632">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para sumar los valores proyectados de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1632">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1633">El valor de <paramref name="source" /> o <paramref name="selector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1633"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Take(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1634">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1634">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1635">Secuencia cuyos elementos se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1635">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="70e38-1636">Número de elementos que se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1636">The number of elements to return.</span></span></param>
        <summary><span data-ttu-id="70e38-1637">Devuelve un número especificado de elementos contiguos desde el principio de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1637">Returns a specified number of contiguous elements from the start of a sequence.</span></span></summary>
        <returns><span data-ttu-id="70e38-1638"><see cref="T:System.Linq.IQueryable`1" /> que contiene el número especificado de elementos desde el comienzo de <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1638">An <see cref="T:System.Linq.IQueryable`1" /> that contains the specified number of elements from the start of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1639">El <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1639">The <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1640">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1640">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1641">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1641">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1642">El comportamiento esperado es que tarda la primera `count` elementos desde el principio de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1642">The expected behavior is that it takes the first `count` elements from the start of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1643">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para devolver los elementos desde el principio de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1643">The following code example demonstrates how to use <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return elements from the start of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#99](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#99)]
 [!code-vb[System.Linq.Queryable#99](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1644"><paramref name="source" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1644"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TakeLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1645">Devuelve los elementos de una secuencia siempre que el valor de una condición especificada sea true y luego omite los elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="70e38-1645">Returns elements from a sequence as long as a specified condition is true, and then skips the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1646">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1646">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1647">Secuencia cuyos elementos se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1647">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1648">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1648">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1649">Devuelve los elementos de una secuencia en tanto que el valor de una condición especificada sea true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1649">Returns elements from a sequence as long as a specified condition is true.</span></span></summary>
        <returns><span data-ttu-id="70e38-1650"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de la secuencia de entrada que se encuentran antes del elemento en el que la prueba especificada <paramref name="predicate" /> no se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1650">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1651">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1651">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1652">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1652">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1653">El <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1653">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1654">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1654">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1655">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1655">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1656">El comportamiento esperado es que se aplica `predicate` a cada elemento de `source` hasta que encuentra un elemento para el que `predicate` devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1656">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="70e38-1657">Devuelve todos los elementos hasta ese punto.</span><span class="sxs-lookup"><span data-stu-id="70e38-1657">It returns all the elements up until that point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1658">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para devolver los elementos desde el principio de una secuencia como una condición es true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1658">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#100](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#100)]
 [!code-vb[System.Linq.Queryable#100](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1659">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1659"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1660">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1660">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1661">Secuencia cuyos elementos se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="70e38-1661">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1662">Función que va a probar cada elemento para determinar si satisface una condición; el segundo parámetro de la función representa el índice del elemento de la secuencia de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1662">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-1663">Devuelve los elementos de una secuencia en tanto que el valor de una condición especificada sea true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1663">Returns elements from a sequence as long as a specified condition is true.</span></span> <span data-ttu-id="70e38-1664">El índice del elemento se usa en la lógica de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1664">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="70e38-1665"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de la secuencia de entrada que se encuentran antes del elemento en el que la prueba especificada <paramref name="predicate" /> no se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1665">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1666">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1666">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1667">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1667">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1668">El <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1668">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1669">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1669">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1670">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1670">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1671">El comportamiento esperado es que se aplica `predicate` a cada elemento de `source` hasta que encuentra un elemento para el que `predicate` devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1671">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="70e38-1672">Devuelve todos los elementos hasta ese punto.</span><span class="sxs-lookup"><span data-stu-id="70e38-1672">It returns all the elements up until that point.</span></span> <span data-ttu-id="70e38-1673">El índice de cada elemento de origen se proporciona como segundo argumento `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1673">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1674">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para devolver los elementos desde el principio de una secuencia siempre que una condición que utiliza el índice del elemento sea true.</span><span class="sxs-lookup"><span data-stu-id="70e38-1674">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition that uses the index of the element is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#101](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#101)]
 [!code-vb[System.Linq.Queryable#101](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1675">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1675"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1676">Realiza una clasificación posterior de los elementos de una secuencia en orden ascendente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1676">Performs a subsequent ordering of the elements in a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1677">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1677">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1678">El tipo de la clave devuelta por la función representada por <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1678">The type of the key returned by the function represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1679"><see cref="T:System.Linq.IOrderedQueryable`1" /> que contiene los elementos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1679">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1680">Función para extraer una clave a partir de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1680">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1681">Realiza una clasificación posterior de los elementos de una secuencia en orden ascendentes con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1681">Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="70e38-1682">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1682">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1683">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1683">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1684">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1684">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1685">El <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1685">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1686">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1686">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1687">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1687">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1688">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1688">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1689">El comportamiento esperado es que realiza una ordenación secundaria de los elementos de `source` basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1689">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1690">Todos los establecidos anteriormente se conservan los criterios de ordenación.</span><span class="sxs-lookup"><span data-stu-id="70e38-1690">All previously established sort orders are preserved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1691">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para realizar una ordenación secundaria de los elementos de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1691">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to perform a secondary ordering of the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#102](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#102)]
 [!code-vb[System.Linq.Queryable#102](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1692">El valor de <paramref name="source" /> o <paramref name="keySelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1692"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1693">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1693">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1694">El tipo de la clave devuelta por la función representada por <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1694">The type of the key returned by the function represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1695"><see cref="T:System.Linq.IOrderedQueryable`1" /> que contiene los elementos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1695">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1696">Función para extraer una clave a partir de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1696">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1697"><see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1697">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-1698">Realiza una clasificación posterior de los elementos de una secuencia en orden ascendente utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1698">Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-1699">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1699">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1700">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1700">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1701">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1701">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1702">El <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1702">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1703">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1703">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1704">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1704">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1705">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1705">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1706">El comportamiento esperado es que realiza una ordenación secundaria de los elementos de `source` basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1706">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1707">Todos los establecidos anteriormente se conservan los criterios de ordenación.</span><span class="sxs-lookup"><span data-stu-id="70e38-1707">All previously established sort orders are preserved.</span></span> <span data-ttu-id="70e38-1708">El `comparer` parámetro se utiliza para comparar valores de clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1708">The `comparer` parameter is used to compare key values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1709"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1709"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1710">Realiza una clasificación posterior de los elementos de una secuencia en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="70e38-1710">Performs a subsequent ordering of the elements in a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1711">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1711">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1712">El tipo de la clave devuelta por la función representada por <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1712">The type of the key returned by the function represented by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1713"><see cref="T:System.Linq.IOrderedQueryable`1" /> que contiene los elementos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1713">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1714">Función para extraer una clave a partir de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1714">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="70e38-1715">Realiza una clasificación posterior de los elementos de una secuencia en orden descendente con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1715">Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</span></span></summary>
        <returns><span data-ttu-id="70e38-1716">Una interfaz <see cref="T:System.Linq.IOrderedQueryable`1" /> cuyos elementos se ordenan de manera descendente con arreglo a una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1716">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1717">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1717">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1718">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1718">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1719">El <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1719">The <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1720">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1720">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1721">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1721">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1722">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1722">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1723">El comportamiento esperado es que realiza una ordenación secundaria de los elementos de `source` en orden descendente, basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1723">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1724">Todos los establecidos anteriormente se conservan los criterios de ordenación.</span><span class="sxs-lookup"><span data-stu-id="70e38-1724">All previously established sort orders are preserved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1725">El valor de <paramref name="source" /> o <paramref name="keySelector" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1725"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1726">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1726">The type of the elements of <c>source</c>.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="70e38-1727">El tipo de la clave devuelta por la <c>keySelector</c> función.</span><span class="sxs-lookup"><span data-stu-id="70e38-1727">The type of the key that is returned by the <c>keySelector</c> function.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1728"><see cref="T:System.Linq.IOrderedQueryable`1" /> que contiene los elementos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1728">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="70e38-1729">Función para extraer una clave a partir de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1729">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1730"><see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="70e38-1730">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="70e38-1731">Realiza una clasificación posterior de los elementos de una secuencia en orden descendente utilizando un comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1731">Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-1732">Colección cuyos elementos están ordenados de manera descendente de acuerdo con una clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1732">A collection whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1733">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1733">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1734">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1734">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1735">El <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1735">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1736">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1736">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="70e38-1737">El resultado de llamar al método <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> se convierte al tipo <xref:System.Linq.IOrderedQueryable%601> y se devuelven.</span><span class="sxs-lookup"><span data-stu-id="70e38-1737">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="70e38-1738">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1738">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1739">El comportamiento esperado es que realiza una ordenación secundaria de los elementos de `source` en orden descendente, basándose en la clave que se obtienen mediante la invocación `keySelector` en cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1739">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="70e38-1740">Todos los establecidos anteriormente se conservan los criterios de ordenación.</span><span class="sxs-lookup"><span data-stu-id="70e38-1740">All previously established sort orders are preserved.</span></span> <span data-ttu-id="70e38-1741">El `comparer` parámetro se utiliza para comparar valores de clave.</span><span class="sxs-lookup"><span data-stu-id="70e38-1741">The `comparer` parameter is used to compare key values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1742">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> para realizar una ordenación secundaria de los elementos de una secuencia en orden descendente utilizando un comparador personalizado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1742">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to perform a secondary ordering of the elements in a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#103](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#103)]
 [!code-vb[System.Linq.Queryable#103](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1743"><paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="comparer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1743"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1744">Proporciona la unión de conjuntos de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-1744">Produces the set union of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1745">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1745">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-1746">Secuencia cuyos elementos forman el primer conjunto de la operación de unión.</span><span class="sxs-lookup"><span data-stu-id="70e38-1746">A sequence whose distinct elements form the first set for the union operation.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-1747">Secuencia cuyos elementos forman el segundo conjunto de la operación de unión.</span><span class="sxs-lookup"><span data-stu-id="70e38-1747">A sequence whose distinct elements form the second set for the union operation.</span></span></param>
        <summary><span data-ttu-id="70e38-1748">Proporciona la unión de conjuntos de dos secuencias utilizando el comparador de igualdad predeterminado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1748">Produces the set union of two sequences by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="70e38-1749"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de las dos secuencias de entrada, excepto los duplicados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1749">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1750">El <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1750">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1751">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1751">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1752">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1752">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-1753">El comportamiento esperado es que la unión de conjuntos de los elementos de `source1` y `source2` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="70e38-1753">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1754">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para obtener la unión de conjuntos de dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-1754">The following code example demonstrates how to use <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to obtain the set union of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#109](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#109)]
 [!code-vb[System.Linq.Queryable#109](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1755">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1755"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1756">Tipo de los elementos de las secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1756">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-1757">Secuencia cuyos elementos forman el primer conjunto de la operación de unión.</span><span class="sxs-lookup"><span data-stu-id="70e38-1757">A sequence whose distinct elements form the first set for the union operation.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-1758">Secuencia cuyos elementos forman el segundo conjunto de la operación de unión.</span><span class="sxs-lookup"><span data-stu-id="70e38-1758">A sequence whose distinct elements form the second set for the union operation.</span></span></param>
        <param name="comparer"><span data-ttu-id="70e38-1759"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-1759">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="70e38-1760">Proporciona la unión de conjuntos de dos secuencias a través de un objeto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1760">Produces the set union of two sequences by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="70e38-1761"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de las dos secuencias de entrada, excepto los duplicados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1761">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1762">El <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1762">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1763">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1763">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1764">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende de la implementación del tipo de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1764">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="70e38-1765">El comportamiento esperado es que la unión de conjuntos de los elementos de `source1` y `source2` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="70e38-1765">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span> <span data-ttu-id="70e38-1766">El `comparer` parámetro se utiliza para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="70e38-1766">The `comparer` parameter is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1767">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1767"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70e38-1768">Filtra una secuencia de valores en función de un predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1768">Filters a sequence of values based on a predicate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1769">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1769">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1770"><see cref="T:System.Linq.IQueryable`1" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1770">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1771">Función para probar cada elemento de una condición.</span><span class="sxs-lookup"><span data-stu-id="70e38-1771">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="70e38-1772">Filtra una secuencia de valores en función de un predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1772">Filters a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="70e38-1773"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de la secuencia de entrada que satisfacen la condición especificada en <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1773">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1774">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1774">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1775">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1775">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1776">El <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1776">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1777">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1777">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1778">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1778">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1779">El comportamiento esperado es que devuelva los elementos de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1779">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1780">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para filtrar una secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1780">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to filter a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#110](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#110)]
 [!code-vb[System.Linq.Queryable#110](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1781">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1781"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="70e38-1782">El tipo de los elementos de <c>origen</c>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1782">The type of the elements of <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="70e38-1783"><see cref="T:System.Linq.IQueryable`1" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1783">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="70e38-1784">Función que va a probar cada elemento para determinar si satisface una condición; el segundo parámetro de la función representa el índice del elemento de la secuencia de origen.</span><span class="sxs-lookup"><span data-stu-id="70e38-1784">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span></span></param>
        <summary><span data-ttu-id="70e38-1785">Filtra una secuencia de valores en función de un predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1785">Filters a sequence of values based on a predicate.</span></span> <span data-ttu-id="70e38-1786">El índice de cada elemento se usa en la lógica de la función de predicado.</span><span class="sxs-lookup"><span data-stu-id="70e38-1786">Each element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="70e38-1787"><see cref="T:System.Linq.IQueryable`1" /> que contiene los elementos de la secuencia de entrada que satisfacen la condición especificada en <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1787">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1788">Este método no tiene al menos un parámetro de tipo <xref:System.Linq.Expressions.Expression%601> cuyo argumento de tipo es uno de los <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1788">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="70e38-1789">Para estos parámetros, puede pasar una expresión lambda y se compilará en un <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="70e38-1789">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="70e38-1790">El <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1790">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1791">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1791">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1792">El comportamiento de la consulta que se produce como resultado de ejecutar un árbol de expresión que representa la llamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende de la implementación del tipo de la `source` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1792">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="70e38-1793">El comportamiento esperado es que devuelva los elementos de `source` que satisface la condición especificada por `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1793">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span> <span data-ttu-id="70e38-1794">El índice de cada elemento de origen se proporciona como segundo argumento `predicate`.</span><span class="sxs-lookup"><span data-stu-id="70e38-1794">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1795">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para filtrar una secuencia en función de un predicado que incorpora el índice de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="70e38-1795">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to filter a sequence based on a predicate that incorporates the index of each element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#111](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#111)]
 [!code-vb[System.Linq.Queryable#111](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1796">El valor de <paramref name="source" /> o <paramref name="predicate" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1796"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.IQueryable&lt;TFirst&gt; source1, System.Collections.Generic.IEnumerable&lt;TSecond&gt; source2, System.Linq.Expressions.Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TFirst&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; source2, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (source1 As IQueryable(Of TFirst), source2 As IEnumerable(Of TSecond), resultSelector As Expression(Of Func(Of TFirst, TSecond, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Zip(System::Linq::IQueryable&lt;TFirst&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ source2, System::Linq::Expressions::Expression&lt;Func&lt;TFirst, TSecond, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TFirst,TSecond,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="70e38-1797">Tipo de los elementos de la primera secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1797">The type of the elements of the first input sequence.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="70e38-1798">Tipo de los elementos de la segunda secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1798">The type of the elements of the second input sequence.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="70e38-1799">Tipo de los elementos de la secuencia de resultados.</span><span class="sxs-lookup"><span data-stu-id="70e38-1799">The type of the elements of the result sequence.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="70e38-1800">Primera secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1800">The first sequence to merge.</span></span></param>
        <param name="source2"><span data-ttu-id="70e38-1801">Segunda secuencia que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="70e38-1801">The second sequence to merge.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="70e38-1802">Función que especifica cómo combinar los elementos de las dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-1802">A function that specifies how to merge the elements from the two sequences.</span></span></param>
        <summary><span data-ttu-id="70e38-1803">Combina dos secuencias utilizando la función de predicado especificada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1803">Merges two sequences by using the specified predicate function.</span></span></summary>
        <returns><span data-ttu-id="70e38-1804"><see cref="T:System.Linq.IQueryable`1" /> que contiene elementos combinados de las dos secuencias de entrada.</span><span class="sxs-lookup"><span data-stu-id="70e38-1804">An <see cref="T:System.Linq.IQueryable`1" /> that contains merged elements of two input sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e38-1805">El <xref:System.Linq.Queryable.Zip%2A> método genera una <xref:System.Linq.Expressions.MethodCallExpression> que representa la llamada <xref:System.Linq.Queryable.Zip%2A> como un método genérico construido.</span><span class="sxs-lookup"><span data-stu-id="70e38-1805">The <xref:System.Linq.Queryable.Zip%2A> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Zip%2A> itself as a constructed generic method.</span></span> <span data-ttu-id="70e38-1806">A continuación, pasa el <xref:System.Linq.Expressions.MethodCallExpression> a la <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de la <xref:System.Linq.IQueryProvider> representado por la <xref:System.Linq.IQueryable.Provider%2A> propiedad de la `source1` parámetro.</span><span class="sxs-lookup"><span data-stu-id="70e38-1806">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="70e38-1807">El método combina cada elemento de la primera secuencia con un elemento que tiene el mismo índice en la segunda secuencia.</span><span class="sxs-lookup"><span data-stu-id="70e38-1807">The method merges each element of the first sequence with an element that has the same index in the second sequence.</span></span> <span data-ttu-id="70e38-1808">Si las secuencias no tienen el mismo número de elementos, el método combina las secuencias hasta que llega al final de uno de ellos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1808">If the sequences do not have the same number of elements, the method merges sequences until it reaches the end of one of them.</span></span> <span data-ttu-id="70e38-1809">Por ejemplo, si una secuencia tiene tres elementos y la otra tiene cuatro, la secuencia resultante tendrá sólo tres elementos.</span><span class="sxs-lookup"><span data-stu-id="70e38-1809">For example, if one sequence has three elements and the other one has four, the resulting sequence will have only three elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e38-1810">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Linq.Queryable.Zip%2A> método para combinar dos secuencias.</span><span class="sxs-lookup"><span data-stu-id="70e38-1810">The following code example demonstrates how to use the <xref:System.Linq.Queryable.Zip%2A> method to merge two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#200](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#200)]
 [!code-vb[System.Linq.Queryable#200](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70e38-1811">El valor de <paramref name="source1" /> o <paramref name="source2" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70e38-1811"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>