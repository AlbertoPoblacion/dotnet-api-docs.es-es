<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c6e128b37249d8d187d26d1e445628ac08243ee" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32087165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">Tipo de la clave de <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <typeparam name="TElement">Tipo de los valores de <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <summary>Obtiene una colección de objetos que tienen una clave en común.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Linq.IGrouping%602> es un <xref:System.Collections.Generic.IEnumerable%601> que además tiene una clave. La clave representa el atributo que es común a cada valor de la <xref:System.Linq.IGrouping%602>.  
  
 Los valores de un <xref:System.Linq.IGrouping%602> se accede a mucho como los elementos de un <xref:System.Collections.Generic.IEnumerable%601> se tiene acceso. Por ejemplo, puede acceder a los valores mediante el uso de un `foreach` en Visual C# o `For Each` in Visual Basic para recorrer en iteración la <xref:System.Linq.IGrouping%602> objeto. La sección ejemplo contiene un ejemplo de código que muestra cómo obtener acceso a la clave y los valores de un <xref:System.Linq.IGrouping%602> objeto.  
  
 El <xref:System.Linq.IGrouping%602> tipo lo utilizan los <xref:System.Linq.Enumerable.GroupBy%2A> métodos de operador de consulta estándar, que devuelven una secuencia de elementos de tipo <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo trabajar con un <xref:System.Linq.IGrouping%602> objeto.  
  
 En este ejemplo, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> se llama en la matriz de <xref:System.Reflection.MemberInfo> objetos devueltos por <xref:System.Type.GetMembers%2A>. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> agrupa los objetos según el valor de sus <xref:System.Reflection.MemberInfo.MemberType%2A> propiedad. Cada valor único de <xref:System.Reflection.MemberInfo.MemberType%2A> en la matriz de <xref:System.Reflection.MemberInfo> objetos se convierte en una clave para un nuevo <xref:System.Linq.IGrouping%602> objeto y el <xref:System.Reflection.MemberInfo> objetos que tienen ese formulario clave el <xref:System.Linq.IGrouping%602> secuencia del objeto de valores.  
  
 Por último, el <xref:System.Linq.Enumerable.First%2A> método se llama en la secuencia de <xref:System.Linq.IGrouping%602> objetos que se va a obtener solo la primera <xref:System.Linq.IGrouping%602> objeto.  
  
 En el ejemplo, a continuación, genera la clave de la <xref:System.Linq.IGrouping%602> objeto y el <xref:System.Reflection.MemberInfo.Name%2A> propiedad de cada valor en el <xref:System.Linq.IGrouping%602> secuencia del objeto de valores. Tenga en cuenta que para tener acceso a un <xref:System.Linq.IGrouping%602> secuencia del objeto de valores, simplemente se usa el <xref:System.Linq.IGrouping%602> propia variable.  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la clave del objeto <see cref="T:System.Linq.IGrouping`2" />.</summary>
        <value>Clave de <see cref="T:System.Linq.IGrouping`2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave de un <xref:System.Linq.IGrouping%602> representa el atributo que es común a cada valor de la <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Linq.IGrouping%602.Key%2A> propiedad para etiquetar cada <xref:System.Linq.IGrouping%602> objeto en una secuencia de <xref:System.Linq.IGrouping%602> objetos. El <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> método se utiliza para obtener una secuencia de <xref:System.Linq.IGrouping%602> objetos. El `foreach` en Visual C# o `For Each` en Visual Basic bucle, a continuación, recorre en iteración cada <xref:System.Linq.IGrouping%602> objeto, generando su clave y el número de valores que contiene.  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>