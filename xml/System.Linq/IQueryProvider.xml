<Type Name="IQueryProvider" FullName="System.Linq.IQueryProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56452afc4c7d505c0f2536910bb592c559d7efff" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51871891" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryProvider" />
  <TypeSignature Language="F#" Value="type IQueryProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los métodos para crear y ejecutar las consultas descritas por un objeto <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Linq.IQueryProvider> interfaz está diseñada para la implementación en los proveedores de consultas.  
  
 Para obtener más información sobre cómo crear su propio proveedor LINQ, vea [LINQ: compilar un proveedor IQueryable](https://go.microsoft.com/fwlink/?LinkID=112370) en los Blogs de MSDN.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="CreateQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable CreateQuery (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable CreateQuery(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::IQueryable ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Árbol de expresión que representa una consulta de [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Construye un objeto <see cref="T:System.Linq.IQueryable" /> que puede evaluar la consulta representada por el árbol de expresión especificado.</summary>
        <returns><see cref="T:System.Linq.IQueryable" /> que puede evaluar la consulta representada por el árbol de expresión especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Linq.IQueryable.Expression%2A> propiedad devuelto del <xref:System.Linq.IQueryable> es igual al objeto `expression`.  
  
 El <xref:System.Linq.IQueryProvider.CreateQuery%2A> método se utiliza para crear nuevos <xref:System.Linq.IQueryable> objetos, dado un árbol de expresión. La consulta representada por el objeto devuelto se asocia con un proveedor LINQ concreto.  
  
 Algunos de los métodos de operador de consulta estándar definidos en <xref:System.Linq.Queryable>, tales como <xref:System.Linq.Queryable.OfType%2A> y <xref:System.Linq.Queryable.Cast%2A>, llame a este método. Pasa un <xref:System.Linq.Expressions.MethodCallExpression> que representa un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;TElement&gt; CreateQuery&lt;TElement&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!TElement&gt; CreateQuery&lt;TElement&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Linq::IQueryable&lt;TElement&gt; ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Tipo de los elementos del objeto <see cref="T:System.Linq.IQueryable`1" /> que se devuelve.</typeparam>
        <param name="expression">Árbol de expresión que representa una consulta de [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Construye un objeto <see cref="T:System.Linq.IQueryable`1" /> que puede evaluar la consulta representada por el árbol de expresión especificado.</summary>
        <returns><see cref="T:System.Linq.IQueryable`1" /> que puede evaluar la consulta representada por el árbol de expresión especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Linq.IQueryable.Expression%2A> propiedad devuelto del <xref:System.Linq.IQueryable%601> es igual al objeto `expression`.  
  
 El <xref:System.Linq.IQueryProvider.CreateQuery%2A> método se utiliza para crear nuevos <xref:System.Linq.IQueryable%601> objetos, dado un árbol de expresión. La consulta representada por el objeto devuelto se asocia con un proveedor LINQ concreto.  
  
 La mayoría de los <xref:System.Linq.Queryable> métodos de operador de consulta estándar que devuelven resultados enumerables, llame a este método. Pasa un <xref:System.Linq.Expressions.MethodCallExpression> que representa un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public object Execute (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Execute(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; obj" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Árbol de expresión que representa una consulta de [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Ejecuta la consulta representada por el árbol de expresión especificado.</summary>
        <returns>Valor que es el resultado de ejecutar la consulta especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Linq.IQueryProvider.Execute%2A> método ejecuta consultas que devuelven un único valor (en lugar de una secuencia enumerable de valores). Árboles de expresiones que representan las consultas que devuelven resultados enumerables se ejecutan cuando sus asociado <xref:System.Linq.IQueryable> se enumera el objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Execute&lt;TResult&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TResult&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; 'Result" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo del valor que es el resultado de ejecutar la consulta.</typeparam>
        <param name="expression">Árbol de expresión que representa una consulta de [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Ejecuta la consulta fuertemente tipada representada por el árbol de expresión especificado.</summary>
        <returns>Valor que es el resultado de ejecutar la consulta especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Linq.IQueryProvider.Execute%2A> método ejecuta consultas que devuelven un único valor (en lugar de una secuencia enumerable de valores). Árboles de expresiones que representan las consultas que devuelven resultados enumerables se ejecutan cuando el <xref:System.Linq.IQueryable%601> se enumera el objeto que contiene el árbol de expresión.  
  
 El <xref:System.Linq.Queryable> métodos de operador de consulta estándar que devuelven singleton resultados llamada <xref:System.Linq.IQueryProvider.Execute%2A>. Pasa un <xref:System.Linq.Expressions.MethodCallExpression> que representa un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>