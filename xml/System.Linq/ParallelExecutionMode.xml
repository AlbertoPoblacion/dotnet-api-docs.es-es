<Type Name="ParallelExecutionMode" FullName="System.Linq.ParallelExecutionMode">
  <TypeSignature Language="C#" Value="public enum ParallelExecutionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelExecutionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelExecutionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelExecutionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelExecutionMode" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="abf9e-101">El modo de ejecución de consultas es una sugerencia en la que se especifica el modo en que el sistema debe equilibrar el rendimiento cuando se realizan consultas en paralelo.</span><span class="sxs-lookup"><span data-stu-id="abf9e-101">The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelExecutionMode Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelExecutionMode.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelExecutionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="abf9e-102">Ésta es la configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="abf9e-102">This is the default setting.</span></span> <span data-ttu-id="abf9e-103">PLINQ examinará la estructura de la consulta y solo paralelizará la consulta si es probable que esto mejore la velocidad.</span><span class="sxs-lookup"><span data-stu-id="abf9e-103">PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup.</span></span> <span data-ttu-id="abf9e-104">Si la estructura de la consulta indica que no es probable que se obtenga una mejora de la velocidad, PLINQ ejecutará la consulta como una consulta LINQ to Objects normal.</span><span class="sxs-lookup"><span data-stu-id="abf9e-104">If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ForceParallelism">
      <MemberSignature Language="C#" Value="ForceParallelism" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelExecutionMode ForceParallelism = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelExecutionMode.ForceParallelism" />
      <MemberSignature Language="VB.NET" Value="ForceParallelism" />
      <MemberSignature Language="C++ CLI" Value="ForceParallelism" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelExecutionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="abf9e-105">Ejecuta en paralelo toda la consulta, aun cuando para ello tenga que usar algoritmos con una sobrecarga elevada.</span><span class="sxs-lookup"><span data-stu-id="abf9e-105">Parallelize the entire query, even if that means using high-overhead algorithms.</span></span> <span data-ttu-id="abf9e-106">Use esta marca cuando sepa que la ejecución paralela de la consulta mejorará la velocidad, pero PLINQ en el modo predeterminado la ejecutaría de forma secuencial.</span><span class="sxs-lookup"><span data-stu-id="abf9e-106">Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>