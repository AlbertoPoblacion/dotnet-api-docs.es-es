<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fcab2d451e7a5dffd50523a55bea65848a0295d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36444919" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa un servicio que puede devolver elementos de información sobre propiedades de ambiente o tipos de ambiente a los convertidores de tipos y las extensiones de marcado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz representa el servicio que puede ayudar a los convertidores de tipos y extensiones de marcado para obtener los identificadores de propiedad de ambiente para el sistema de tipos XAML (<xref:System.Xaml.XamlMember> objetos). El servicio también puede obtener los valores de propiedad de ambiente de clases. También pueden ser tipos de ambiente; cualquier miembro que usa ese tipo como su valor se debe considerar de ambiente.  
  
 Este servicio se devuelve normalmente mediante una llamada a <xref:System.IServiceProvider.GetService%2A>, que se realiza de un proveedor de servicios específicos del contexto. El proveedor de servicios está disponible con carácter general en contextos que lo necesitan, por ejemplo, el código de ejecución de un convertidor de valores. Para obtener más información, consulte [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) y [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Acerca de las propiedades de ambiente  
 Una propiedad de ambiente es una propiedad cuyo valor de propiedad debe estar disponible para el convertidor de tipos y usos de la extensión de marcado que existen en la estructura de nodo XAML y en el gráfico de objetos creado a partir de él. Esto es importante para un procesador XAML durante la fase de escritura de objeto de la ruta de acceso de carga o la fase de serialización de una operación de guardar ruta de acceso.  
  
 En el caso de ruta de acceso de carga, el valor de propiedad de ambiente podría influir en el valor en el gráfico de objetos de otras propiedades que se encuentran debajo de ella en una estructura de nodo XAML. Cuando se procesa como un flujo de nodo XAML, el concepto de ambiente significa que el valor de propiedad de ambiente debe estar disponible para los convertidores de tipos y extensiones de marcado `StartObject` a `EndObject`. De forma similar, un convertidor de tipos que se usa para la operación de guardar ruta de acceso puede utilizar el conocimiento de la propiedad de ambiente y su valor. Por lo tanto, el XAML que se genera es una mejor representación de ida y vuelta.  
  
 Para los miembros en general, XAML no especifica el orden en el que se deben procesar los miembros de un objeto. Sin embargo, cualquier valor de propiedad de ambiente debe procesar primero mediante el lector XAML para que los usos de extensión de marcado y convertidor de tipo que se encuentran en otras propiedades pueden tener acceso a la <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> es un concepto similar que también influye en el orden de procesamiento de nodo XAML. Sin embargo, <xref:System.Xaml.XamlMember.DependsOn%2A> solo puede usarse para relaciones de miembro y el nodo del mismo nivel; no influye en todos los descendientes. Además, <xref:System.Xaml.XamlMember.DependsOn%2A> directamente influencias objeto gráfico valor de la propiedad; mientras que la técnica ambiente se basa en las extensiones de marcado o de convertidores de tipos. En la técnica de ambiente, debe haber también un convertidor de tipos específicos o definición de extensión de marcado que especifica cómo debe interpretarse y aplicado al objeto el valor de propiedad de ambiente.  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Un escenario de propiedad de ambiente que se muestra en el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] conjunto de características es <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, que puede calificar las búsquedas de nombre de propiedad necesarios para otros valores. En este caso, el <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor califica el <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valores que se encuentran en los nodos XAML están bajo él. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> usa el comportamiento del convertidor de tipos para un <xref:System.Windows.DependencyProperty>. Este comportamiento tenga acceso al ambiente <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor consultando <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> desde un contexto de servicio que está disponible para los convertidores de tipos y extensiones de marcado.  
  
 Un escenario de tipo de ambiente que se muestra en el conjunto de características WPF es <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary> tiene un <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> propiedad que puede contener otros <xref:System.Windows.ResourceDictionary> objetos que se va a combinar y el orden que prefiera de la resolución de recursos para el escenario combinada entra en conflicto con el orden que se cargan los tipos. <xref:System.Windows.ResourceDictionary> se aplica <xref:System.Windows.Markup.AmbientAttribute> para que un procesador XAML puede procesar correctamente las referencias en un diccionario combinado con `StaticResource` usos. En concreto, `StaticResource` es una extensión de marcado, que llama a <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve un conjunto enumerable de elementos de información sobre propiedades o tipos de ambiente del ámbito solicitado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
        <summary>Devuelve un conjunto enumerable de instancias de objeto de posibles tipos de ambiente de los tipos solicitados.</summary>
        <returns>Conjunto enumerable de objetos que representan los valores para el conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
        <param name="properties">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
        <summary>Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de propiedades solicitado.</summary>
        <returns>Conjunto enumerable de elementos de información sobre las propiedades de ambiente para el conjunto de propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="properties" /> de entrada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que se devuelve contiene el <xref:System.Xaml.XamlMember> identificador y un valor de propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> para no utilizar un contexto guardado; <see langword="false" /> para utilizar un contexto guardado. El valor predeterminado es <see langword="false" />.</param>
        <param name="types">To be added.</param>
        <param name="properties">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
        <summary>Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado.</summary>
        <returns>Conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="types" /> o <paramref name="properties" /> de entrada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que se devuelve contiene el <xref:System.Xaml.XamlMember> identificador y un valor de propiedad.  
  
 Esta particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> sobrecarga puede buscar tipos de ambiente y las propiedades de ambiente en el mismo que se pasan a través de un árbol. Utilice esta sobrecarga produce una ordenación de elementos en el valor devuelto que sea diferente de <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> o <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.  
  
 Esta sobrecarga también permite la búsqueda no usar ningún contexto guardado. El <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> o <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> sobrecargas utilizan implícitamente un contexto guardado si está disponible (siempre actúan como si implícita `searchLiveStackOnly` parámetro es `false`). El concepto de un contexto guardado potencialmente se trata de forma diferente los contextos de esquema XAML concreto, o marcos que incorporan XAML. En la implementación WPF XAML, los contextos guardados se usan para la expansión de la plantilla, así como otras áreas de características.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve un único elemento de información sobre propiedades o tipos de ambiente del conjunto solicitado, en función de la propiedad que se encuentre primero.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
        <summary>Devuelve la primera coincidencia de un objeto que es un posible tipo de ambiente de los tipos solicitados.</summary>
        <returns>Primer objeto del conjunto solicitado que se obtiene como resultado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada.</param>
        <param name="properties">Especifica uno o varios objetos que identifican las propiedades que se van a considerar propiedades de ambiente.</param>
        <summary>Devuelve un único elemento de información sobre propiedades de ambiente del conjunto de propiedades solicitado, en función de la propiedad que se encuentre primero.</summary>
        <returns>Único elemento de información sobre propiedades de ambiente del primer valor de propiedad de ambiente de la lista <paramref name="properties" /> que se encuentra.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que se devuelve contiene el <xref:System.Xaml.XamlMember> identificador y un valor de propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>