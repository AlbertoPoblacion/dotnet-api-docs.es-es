<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b34e14110aa65e54e7ebad88c3081a75a17bdd15" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39796879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona servicios de nivel superior (métodos estáticos) para las tareas XAML comunes como leer XAML y escribir un gráfico de objetos, o bien leer un gráfico de objetos y escribir archivos XAML para la serialización.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los modos de la <xref:System.Xaml.XamlServices> clase que se usan en el XAML más comunes leer y escribir escenarios se basan en la creación de instancias de lectores XAML y escritores XAML. Estos lectores y escritores son implementaciones especializadas pero internas de las clases públicas, como <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, y <xref:System.Xaml.XamlObjectWriter>. Para usar <xref:System.Xaml.XamlServices> para la mayoría de los escenarios, puede confiar en las implementaciones internas de forma predeterminada para obtener los resultados que desea. Para más escenarios especializados, podría definir lectores y escritores y, a continuación, pasarlas como argumentos para las sobrecargas de los <xref:System.Xaml.XamlServices> métodos.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> está escribiendo no la lectura de XAML o XAML recomendada API establecer si va a procesar tipos definidos por WPF o tipos basados en WPF. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para leer o cargar XAML (o BAML); y <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para volver a escribir XAML. Estas clases utilizan API de servicios XAML de .NET Framework y los lectores XAML y escritores XAML internamente en su implementación; Sin embargo, también proporcionan soporte técnico y el contexto de esquema XAML especializado para conocer los conceptos de WPF específicos, como las optimizaciones para las propiedades de dependencia y los tipos conocidos de WPF.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga el origen para un lector XAML y escribe la salida como un gráfico de objetos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Secuencia que se va a cargar como entrada.</param>
        <summary>Carga un origen <see cref="T:System.IO.Stream" /> para un lector XAML y escribe la salida como un gráfico de objetos.</summary>
        <returns>Gráfico de objetos que se escribe como salida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Firmas diferentes para el <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> método especificar distintos tipos de entrada para el origen de XAML. El <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> implementación interna crea primero una <xref:System.Xml.XmlReader> mediante una llamada a <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> y, a continuación, crea una nueva instancia de un especializada <xref:System.Xaml.XamlReader> que procesa la entrada.  
  
 En orden para el <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> llama para crear correctamente un gráfico de objetos, deben cumplirse los siguientes:  
  
-   El origen es correcto y un XML válido.  
  
-   El origen es XAML válido en el nivel de lenguaje.  
  
-   Los tipos XAML que se especifican en el origen de XAML debe resolverse en tipos de respaldo en los espacios de nombres XAML pertinente. Por ejemplo, pueden resolver los tipos XAML para los espacios de nombres WPF a un espacio de nombres de WPF XAML como se especifica en el XAML; los ensamblados para WPF deben estar incluida en el proyecto o disponible en tiempo de ejecución; y así sucesivamente.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> no es la lectura recomendada de XAML o XAML escribir API establece si se procesan [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos o tipos basados en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para leer o cargar XAML; y <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para volver a escribir XAML. Usan estas clases <xref:System.Xaml> API internamente en su implementación; sin embargo, también proporcionan compatibilidad para conceptos específicos de WPF que influyen en la naturaleza de lectura y escritura, como las optimizaciones para las propiedades de dependencia XAML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> que se va a usar como base para el objeto <see cref="T:System.Xml.XmlReader" /> que se va a crear.</param>
        <summary>Crea un lector XAML a partir de un objeto <see cref="T:System.IO.TextReader" /> y devuelve un gráfico de objetos.</summary>
        <returns>Gráfico de objetos que se devuelve.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para devolver el gráfico de objetos, el `textReader` entrada debe crearse mediante el uso de su entrada pertinente. Por ejemplo, debe pasar un <xref:System.IO.StringReader> que se construye mediante el uso de una entrada de XAML como cadena válida para el <xref:System.IO.StringReader.%23ctor%28System.String%29> constructor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nombre del archivo que se va a cargar y usar como origen.</param>
        <summary>Carga un <see cref="T:System.IO.Stream" /> de origen para un lector XAML y devuelve un gráfico de objetos.</summary>
        <returns>Gráfico de objetos que se devuelve.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Firmas diferentes para el <xref:System.Xaml.XamlServices.Load%2A> método especificar distintos tipos de entrada para el origen de XAML. El <xref:System.Xaml.XamlServices.Load%2A> implementación interna crea primero una <xref:System.Xml.XmlReader> mediante una llamada a <xref:System.Xml.XmlReader.Create%28System.String%29> y, a continuación, crea una nueva instancia de un especializada <xref:System.Xaml.XamlReader> que procesa la entrada.  
  
 En orden para el <xref:System.Xaml.XamlServices.Load%28System.String%29> llama para crear correctamente un gráfico de objetos, deben cumplirse los siguientes:  
  
-   El origen es correcto y un XML válido.  
  
-   El origen es XAML válido en el nivel de lenguaje.  
  
-   Los tipos XAML que se especifican en el origen de XAML debe resolverse en tipos de respaldo en los espacios de nombres XAML pertinente. Por ejemplo, pueden resolver los tipos XAML para los espacios de nombres WPF a un espacio de nombres de WPF XAML como se especifica en el XAML; los ensamblados de WPF deben incluirse en el proyecto o estar disponibles en tiempo de ejecución; y así sucesivamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="fileName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Implementación de lector XAML que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
        <summary>Carga una implementación de lector XAML concreta y devuelve un gráfico de objetos.</summary>
        <returns>Gráfico de objetos que se devuelve.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, debe utilizar esta firma sólo en los casos siguientes:  
  
-   Define su propia implementación de un <xref:System.Xaml.XamlReader>.  
  
-   Especifica valores para un <xref:System.Xaml.XamlReader> que difieren de la configuración predeterminada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Implementación de <see cref="T:System.Xml.XmlReader" /> que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
        <summary>Carga una implementación de lector XML concreta y devuelve un gráfico de objetos.</summary>
        <returns>Gráfico de objetos de salida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente debería usar esta firma solo si se ha definido su propia implementación de un <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">Entrada de cadena XAML que se va a analizar.</param>
        <summary>Lee XAML como una cadena y devuelve un gráfico de objetos.</summary>
        <returns>Gráfico de objetos que se devuelve.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En orden para el <xref:System.Xaml.XamlServices.Parse%2A> llama para crear correctamente un árbol de objetos, deben cumplirse los siguientes:  
  
-   El `xaml` entrada esté bien formada y XML válido.  
  
-   El `xaml` entrada es XAML válido en el nivel de lenguaje.  
  
-   Los tipos XAML que se especifican en el `xaml` entrada debe resolverse en tipos de respaldo en los espacios de nombres XAML pertinente. Por ejemplo, pueden resolver los tipos XAML para un espacio de nombres WPF en un espacio de nombres de WPF XAML como se especifica en el XAML; los ensamblados de WPF deben incluirse en el proyecto o estar disponibles en tiempo de ejecución; y así sucesivamente.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> no es la lectura recomendada de XAML o XAML escribir API establece si se procesan [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos o tipos basados en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para leer o cargar XAML, y <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para volver a escribir XAML. Usan estas clases <xref:System.Xaml> API internamente en su implementación; sin embargo, también proporcionan compatibilidad para conceptos específicos de WPF que influyen en la naturaleza de lectura y escritura, como las optimizaciones para las propiedades de dependencia XAML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xaml" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en un formato de salida para la serialización.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el árbol de objetos proporcionado en una representación de nodos XAML y devuelve una representación de cadena del XAML de salida.</summary>
        <returns>Marcado XAML en forma de cadena.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El resultado de este método es el `ToString` resultado de una <xref:System.Xml.XmlWriter> que se crea mediante la llamada al método. Que <xref:System.Xml.XmlWriter> se crea mediante el uso de las siguientes opciones: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> es `true`; y <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> es `true`.  
  
 La cadena devuelta se puede cargar como XML válido a través de la <xref:System.Xml.XmlReader.Create%2A> método si se procesa la cadena en una secuencia o en un lector más específicamente dedicado para XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Flujo de destino.</param>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en un flujo de salida para la serialización.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> no es la lectura recomendada de XAML o XAML escribir API establece si se procesan [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos o tipos basados en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para leer o cargar XAML; y <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para volver a escribir XAML. Usan estas clases <xref:System.Xaml> API internamente en su implementación; sin embargo, también proporcionan compatibilidad para conceptos específicos de WPF que influyen en la naturaleza de lectura y escritura, como las optimizaciones para las propiedades de dependencia XAML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="stream" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en una salida que se dirige al objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">Nombre y ubicación del archivo en el que se va a escribir la salida.</param>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en un archivo de salida en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `fileName` el valor del parámetro se utiliza como el `outputFileName` de entrada para una llamada a <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, que crea un <xref:System.Xml.XmlWriter> como parte de la llamada al método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> es una cadena vacía.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Implementación de <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el sistema de escritura XAML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, debe utilizar esta firma sólo en los casos siguientes:  
  
-   Define su propia implementación de un <xref:System.Xaml.XamlWriter>.  
  
-   Especifica valores para el <xref:System.Xaml.XamlWriter> que difieren de la configuración predeterminada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Implementación de <see cref="T:System.Xml.XmlWriter" /> que se va a usar.</param>
        <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
        <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
        <param name="xamlWriter">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
        <summary>Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es un contenedor alrededor de <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, donde `closeWriter` se especifica como `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
        <param name="xamlWriter">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
        <param name="closeWriter">Es <see langword="true" /> para que se cierre el sistema de escritura una vez completada la llamada; es <see langword="false" /> para que el sistema de escritura se mantenga activo en la última posición de escritura.</param>
        <summary>Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen. Proporciona un parámetro para especificar si el sistema de escritura se va a cerrar después de que se complete la llamada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
      </Docs>
    </Member>
  </Members>
</Type>