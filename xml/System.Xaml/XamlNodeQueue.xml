<Type Name="XamlNodeQueue" FullName="System.Xaml.XamlNodeQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ecaa2ee4d14952694632be1e122daa0a93f1823" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39845350" /></Metadata><TypeSignature Language="C#" Value="public class XamlNodeQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlNodeQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlNodeQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlNodeQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlNodeQueue" />
  <TypeSignature Language="F#" Value="type XamlNodeQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un búfer para escribir nodos y volver a leerlos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los nodos se consumen desde el <xref:System.Xaml.XamlNodeQueue> cuando los lee el lector XAML. Si requiere una lista de nodos XAML que se puede reproducir o ver un modelo de lista que admite el acceso aleatorio, <xref:System.Xaml.XamlNodeList>.  
  
 Cuando creas un <xref:System.Xaml.XamlNodeQueue>, se crea un delegado de sistema de escritura que existe como el <xref:System.Xaml.XamlNodeQueue.Writer%2A> valor. El delegado de sistema de escritura se basa en una clase de sistema de escritura XAML interna que es específicamente para los nodos XAML.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeQueue (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeQueue(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeQueue : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlNodeQueue" Usage="new System.Xaml.XamlNodeQueue schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeQueue" /> usando un contexto de esquema XAML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se aplica el contexto de esquema para el sistema de escritura XAML que existe como el <xref:System.Xaml.XamlNodeQueue.Writer%2A> valor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlSchemaContext" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xaml.XamlNodeQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
        <value>Número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que determina si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos.</summary>
        <value>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos; es <see langword="false" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> contiene nodos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlReader ^ Reader { System::Xaml::XamlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xaml.XamlReader" Usage="System.Xaml.XamlNodeQueue.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un delegado de la implementación de lector XAML.</summary>
        <value>Delegado de la implementación de lector XAML.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlException">El sistema de escritura XAML que se usa para la lista de nodos no tiene ningún contexto de esquema XAML válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlWriter Writer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Writer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Writer As XamlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlWriter ^ Writer { System::Xaml::XamlWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.Xaml.XamlWriter" Usage="System.Xaml.XamlNodeQueue.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el sistema de escritura XAML asociado.</summary>
        <value>Sistema de escritura XAML asociado.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlObjectWriter" />
      </Docs>
    </Member>
  </Members>
</Type>