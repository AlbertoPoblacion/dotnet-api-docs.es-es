<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6eebb-101">Proporciona definiciones de base para las clases que usan la entrada de XAML y generan flujos de nodos XAML.</span><span class="sxs-lookup"><span data-stu-id="6eebb-101">Provides base definitions for classes that consume XAML input and produce XAML node streams.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-102"><xref:System.Xaml.XamlReader> es una clase abstracta y no proporciona las implementaciones o las definiciones que dan como resultado un trabajo para todos los miembros.</span><span class="sxs-lookup"><span data-stu-id="6eebb-102"><xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members.</span></span> <span data-ttu-id="6eebb-103">Los miembros que tienen una implementación en <xref:System.Xaml.XamlReader> se indican en la sección Comentarios para dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="6eebb-103">Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member.</span></span> <span data-ttu-id="6eebb-104">En concreto, <xref:System.Xaml.XamlReader> tiene varios miembros abstractos que deben implementarse y varios miembros virtuales.</span><span class="sxs-lookup"><span data-stu-id="6eebb-104">Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.</span></span>  
  
 <span data-ttu-id="6eebb-105">De los miembros virtuales, <xref:System.Xaml.XamlReader.ReadSubtree%2A> y <xref:System.Xaml.XamlReader.Skip%2A> cada uno de ellos proporcionan una implementación predeterminada que es adecuada para la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="6eebb-105">Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases.</span></span> <span data-ttu-id="6eebb-106">Sin embargo, el <xref:System.Xaml.XamlReader.ReadSubtree%2A> y <xref:System.Xaml.XamlReader.Skip%2A> las implementaciones predeterminadas que se basan en otro comportamiento esperado del lector XAML implementando; en concreto, se basan en el <xref:System.Xaml.XamlReader.Read%2A> invalidar.</span><span class="sxs-lookup"><span data-stu-id="6eebb-106">However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override.</span></span> <span data-ttu-id="6eebb-107"><xref:System.Xaml.XamlReader.Dispose%2A> También es un miembro virtual que tiene una implementación predeterminada de trabajo.</span><span class="sxs-lookup"><span data-stu-id="6eebb-107"><xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.</span></span>  
  
 <span data-ttu-id="6eebb-108">Las dos clases siguientes son las clases derivadas más prácticas y pertinentes en los servicios XAML de .NET Framework y el ensamblado System.Xaml:</span><span class="sxs-lookup"><span data-stu-id="6eebb-108">The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</span></span>  
  
-   <span data-ttu-id="6eebb-109"><xref:System.Xaml.XamlObjectReader>, que lee un gráfico de objetos, como el gráfico de objeto activo de una aplicación en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="6eebb-109"><xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.</span></span>  
  
-   <span data-ttu-id="6eebb-110"><xref:System.Xaml.XamlXmlReader>, que lee XAML en forma de un archivo de texto XML mediante el uso general <xref:System.Xml.XmlReader> que carga el archivo como una clase auxiliar intermediario.</span><span class="sxs-lookup"><span data-stu-id="6eebb-110"><xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.</span></span>  
  
 <span data-ttu-id="6eebb-111">Incluyen otros lectores XAML de otros marcos <xref:System.Windows.Baml2006.Baml2006Reader> y <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-111">Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span></span>  
  
 <span data-ttu-id="6eebb-112"><xref:System.Xaml.XamlReader> difiere de [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] y <xref:System.Xml.XmlReader> principios de diseño porque <xref:System.Xaml.XamlReader> no tiene un `Create` método devuelva un valor predeterminado subyacente implementaciones del lector XAML.</span><span class="sxs-lookup"><span data-stu-id="6eebb-112"><xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations.</span></span> <span data-ttu-id="6eebb-113">En su lugar, debe crear una instancia específicas clases derivadas de lector XAML mediante una llamada a sus constructores u otra API de específicos de las clases auxiliares.</span><span class="sxs-lookup"><span data-stu-id="6eebb-113">You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</span></span>  
  
## <a name="subtree-readers"></a><span data-ttu-id="6eebb-114">Lectores del subárbol</span><span class="sxs-lookup"><span data-stu-id="6eebb-114">Subtree Readers</span></span>  
 <span data-ttu-id="6eebb-115">En su mayor parte, se llama a <xref:System.Xaml.XamlReader> API en el contexto de las clases de lector XAML específicas que se derivan de <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-115">For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="6eebb-116">Sin embargo, en un caso concreto, accederás a <xref:System.Xaml.XamlReader> API en una instancia de lector XAML práctica que no es pública y no deriva de <xref:System.Xaml.XamlObjectReader> o <xref:System.Xaml.XamlXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-116">However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>.</span></span> <span data-ttu-id="6eebb-117">En este caso es cuando se llama a <xref:System.Xaml.XamlReader.ReadSubtree%2A>, que devuelve un <xref:System.Xaml.XamlReader> instancia.</span><span class="sxs-lookup"><span data-stu-id="6eebb-117">This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance.</span></span> <span data-ttu-id="6eebb-118">En la implementación predeterminada, la <xref:System.Xaml.XamlReader> que es devuelto por esta API es una clase interna.</span><span class="sxs-lookup"><span data-stu-id="6eebb-118">In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.</span></span>  
  
 <span data-ttu-id="6eebb-119">El <xref:System.Xaml.XamlReader> obtenido de lectura del subárbol tiene acciones válidas para las API como <xref:System.Xaml.XamlReader.Read%2A> y <xref:System.Xaml.XamlReader.NodeType%2A>, y dichas acciones se basan en la clase de lector primaria.</span><span class="sxs-lookup"><span data-stu-id="6eebb-119">The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class.</span></span> <span data-ttu-id="6eebb-120">Este diseño permite que la clase interna hacer un seguimiento del nivel del marco donde se escribió el subárbol.</span><span class="sxs-lookup"><span data-stu-id="6eebb-120">This design enables the internal class to track the frame level where the subtree was entered.</span></span> <span data-ttu-id="6eebb-121">El subárbol de actuación <xref:System.Xaml.XamlReader> se asegura de que si se mueve la posición del nodo actual más allá de los límites del subárbol, el lector del subárbol concreto notifica el final de archivo o `null` en el nodo actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-121">The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.</span></span>  
  
 <span data-ttu-id="6eebb-122">Notas sobre el uso de lector de subárbol se incluyen en determinados <xref:System.Xaml.XamlReader> API.</span><span class="sxs-lookup"><span data-stu-id="6eebb-122">Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-123">Inicializa la clase <see cref="T:System.Xaml.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-123">Initializes the <see cref="T:System.Xaml.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-124">Cierra el flujo de nodos XAML.</span><span class="sxs-lookup"><span data-stu-id="6eebb-124">Closes the XAML node stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-125">En la implementación base, llamar a <xref:System.Xaml.XamlReader.Close%2A> llamadas <xref:System.Xaml.XamlReader.Dispose%2A> con el `isDisposing` parámetro como `true`.</span><span class="sxs-lookup"><span data-stu-id="6eebb-125">In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6eebb-126">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-126"><see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6eebb-127">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlReader" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="6eebb-127">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlReader" />, and optionally, releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-128">Debe llamar a la clase base para obtener <xref:System.Xaml.XamlReader.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="6eebb-128">You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-129">Obtiene un valor que indica si se ha llamado al método <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-129">Gets whether <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called.</span></span></summary>
        <value>
          <span data-ttu-id="6eebb-130"><see langword="true" /> si se ha llamado a <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-130"><see langword="true" /> if <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-131">Cuando se implementa en una clase derivada, obtiene un valor que notifica si la posición del lector está al final del archivo.</span><span class="sxs-lookup"><span data-stu-id="6eebb-131">When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</span></span></summary>
        <value>
          <span data-ttu-id="6eebb-132">Es <see langword="true" /> si la posición está en el final conceptual del archivo de la secuencia de nodos XAML; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-132"><see langword="true" /> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-133">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.IsEof%2A>, con un comportamiento que refleja correctamente los límites del subárbol escrito.</span><span class="sxs-lookup"><span data-stu-id="6eebb-133">Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree.</span></span> <span data-ttu-id="6eebb-134">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-134">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-135">Cuando se implementa en una clase derivada, obtiene el miembro actual situado en la posición del lector, si la posición del lector está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-135">When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span></span></summary>
        <value><span data-ttu-id="6eebb-136">Miembro actual o <see langword="null" /> si el lector no se encuentra en un miembro.</span><span class="sxs-lookup"><span data-stu-id="6eebb-136">The current member; or <see langword="null" />, if the reader position is not on a member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-137">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.Member%2A>, con restricciones de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="6eebb-137">Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions.</span></span> <span data-ttu-id="6eebb-138">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-138">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-139">Cuando se implementa en una clase derivada, obtiene la información del espacio de nombres XAML del nodo actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-139">When implemented in a derived class, gets the XAML namespace information from the current node.</span></span></summary>
        <value><span data-ttu-id="6eebb-140">Información del espacio de nombres XAML, si está disponible; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-140">The XAML namespace information, if it is available; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-141">El diseño previsto de esta API es devolver un resultado no nulo solamente si la <xref:System.Xaml.XamlReader.NodeType%2A> del nodo actual es <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-141">The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="6eebb-142">La propiedad no notifica el espacio de nombres XAML que se aplica a objetos o miembros en un sentido de ámbito general, tal y como se interpreta bajo un contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="6eebb-142">The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</span></span> <span data-ttu-id="6eebb-143">La aplicación debe proporcionar un medio para almacenar en caché información para la actuación espacio de nombres XAML que atraviesa los nodos XAML, si necesita esa información en una forma que no sea cómo el contexto de esquema XAML lo notifica a un sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="6eebb-143">Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</span></span> <span data-ttu-id="6eebb-144">Consulte <xref:System.Xaml.XamlXmlReader.Namespace%2A> para las notas de la implementación de referencia.</span><span class="sxs-lookup"><span data-stu-id="6eebb-144">See <xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-145">Cuando se implementa en una clase derivada, obtiene el tipo del nodo actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-145">When implemented in a derived class, gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="6eebb-146">Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-146">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-147">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.NodeType%2A>, con restricciones de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="6eebb-147">Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions.</span></span> <span data-ttu-id="6eebb-148">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-148">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-149">Cuando se implementa en una clase derivada, proporciona el siguiente nodo XAML del origen, si hay alguno disponible.</span><span class="sxs-lookup"><span data-stu-id="6eebb-149">When implemented in a derived class, provides the next XAML node from the source, if a node is available.</span></span></summary>
        <returns>
          <span data-ttu-id="6eebb-150">Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-150"><see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-151">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.Read%2A>, con restricciones de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="6eebb-151">Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions.</span></span> <span data-ttu-id="6eebb-152">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-152">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-153">Devuelve un objeto <see cref="T:System.Xaml.XamlReader" /> que se basa en el objeto <see cref="T:System.Xaml.XamlReader" /> actual, donde el objeto <see cref="T:System.Xaml.XamlReader" /> devuelto se usa para recorrer en iteración un subárbol de la estructura de nodos XAML.</span><span class="sxs-lookup"><span data-stu-id="6eebb-153">Returns a <see cref="T:System.Xaml.XamlReader" /> that is based on the current <see cref="T:System.Xaml.XamlReader" />, where the returned <see cref="T:System.Xaml.XamlReader" /> is used to iterate through a subtree of the XAML node structure.</span></span></summary>
        <returns><span data-ttu-id="6eebb-154">Nueva instancia de lector XAML para el subárbol.</span><span class="sxs-lookup"><span data-stu-id="6eebb-154">A new XAML reader instance for the subtree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-155">Este método tiene una implementación predeterminada y devuelve válido <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-155">This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="6eebb-156">El valor devuelto <xref:System.Xaml.XamlReader> es una clase interna que restringe ciertas <xref:System.Xaml.XamlReader> acciones.</span><span class="sxs-lookup"><span data-stu-id="6eebb-156">The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions.</span></span> <span data-ttu-id="6eebb-157">Las restricciones son coherentes con el objetivo de leer solo un subárbol con dimensiones de un origen de mayor para un conjunto de nodos XAML y devolver el final del archivo o `null` en el nodo actual cuando se sale del subárbol.</span><span class="sxs-lookup"><span data-stu-id="6eebb-157">The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.</span></span>  
  
 <span data-ttu-id="6eebb-158">Por lo general, debería comprobar el nodo actual de la inicial <xref:System.Xaml.XamlReader.Read%2A> para determinar si necesita un lector del subárbol.</span><span class="sxs-lookup"><span data-stu-id="6eebb-158">Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader.</span></span> <span data-ttu-id="6eebb-159">Cómo comprobar esto puede ser específico de la implementación; Sin embargo, evite crear varios lectores del subárbol para cada subárbol.</span><span class="sxs-lookup"><span data-stu-id="6eebb-159">How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</span></span> <span data-ttu-id="6eebb-160">Además, evite invocar un lector de subárbol para ciertos casos (por ejemplo, para <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) que no puede contener un subárbol de nodos.</span><span class="sxs-lookup"><span data-stu-id="6eebb-160">In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.</span></span>  
  
 <span data-ttu-id="6eebb-161">Después de obtener un lector de subárbol, debe llamar a <xref:System.Xaml.XamlReader.Read%2A> en él para obtener un nodo actual (o llamar a <xref:System.Xaml.XamlReader.Skip%2A> para obtener un nodo siguiente).</span><span class="sxs-lookup"><span data-stu-id="6eebb-161">After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node).</span></span> <span data-ttu-id="6eebb-162">No obtiene automáticamente una posición inicial del nodo del lector del subárbol cuando lo crea.</span><span class="sxs-lookup"><span data-stu-id="6eebb-162">You do not automatically obtain an initial node position from the subtree reader when you create it.</span></span>  
  
 <span data-ttu-id="6eebb-163">El lector obtener mediante una llamada a <xref:System.Xaml.XamlReader.ReadSubtree%2A> desde este comportamiento predeterminado implementación es una clase interna.</span><span class="sxs-lookup"><span data-stu-id="6eebb-163">The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class.</span></span> <span data-ttu-id="6eebb-164">La clase interna basa su comportamiento en el <xref:System.Xaml.XamlReader> implementación que se va a utilizar cuando <xref:System.Xaml.XamlReader.ReadSubtree%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="6eebb-164">The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called.</span></span> <span data-ttu-id="6eebb-165">El propósito de la clase interna es ajustar la <xref:System.Xaml.XamlReader.Read%2A> y el comportamiento de recorrido general.</span><span class="sxs-lookup"><span data-stu-id="6eebb-165">The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior.</span></span> <span data-ttu-id="6eebb-166">El recorrido permanece en el subárbol previsto manteniendo <xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember> pares o <xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject> pares.</span><span class="sxs-lookup"><span data-stu-id="6eebb-166">The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs.</span></span> <span data-ttu-id="6eebb-167">Devuelve también correctamente `false` para <xref:System.Xaml.XamlReader.Read%2A> y `true` para <xref:System.Xaml.XamlReader.IsEof%2A> cuando el lector está al final del subárbol, tal como se define por su punto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6eebb-167">It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point.</span></span> <span data-ttu-id="6eebb-168">En general, se asume que cualquier <xref:System.Xaml.XamlReader> API llame desde un lector del subárbol tiene la misma implementación que la global <xref:System.Xaml.XamlReader> excepto el comportamiento de delimitador transversal.</span><span class="sxs-lookup"><span data-stu-id="6eebb-168">In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.</span></span>  
  
 <span data-ttu-id="6eebb-169">Sin embargo, <xref:System.Xaml.XamlReader.ReadSubtree%2A> es virtual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-169">However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual.</span></span> <span data-ttu-id="6eebb-170">Por lo tanto, un determinado <xref:System.Xaml.XamlReader> implementación puede proporcionar un comportamiento que difiere de la <xref:System.Xaml.XamlReader> comportamiento de contenedor interna; y un <xref:System.Xaml.XamlReader> implementación incluso puede deshabilitar la funcionalidad de lector de subárbol devolviendo <xref:System.NotImplementedException> u otras excepciones.</span><span class="sxs-lookup"><span data-stu-id="6eebb-170">Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-171">Cuando se implementa en una clase derivada, obtiene un objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</span><span class="sxs-lookup"><span data-stu-id="6eebb-171">When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</span></span></summary>
        <value><span data-ttu-id="6eebb-172">Objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</span><span class="sxs-lookup"><span data-stu-id="6eebb-172">An object that provides XAML schema context information for the information set.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-173">Omite el nodo actual y avanza la posición del lector hasta el nodo siguiente.</span><span class="sxs-lookup"><span data-stu-id="6eebb-173">Skips the current node and advances the reader position to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-174">Una vez se ha omitido; <xref:System.Xaml.XamlReader.Read%2A> se llama por el valor predeterminado <xref:System.Xaml.XamlReader.Skip%2A> implementación.</span><span class="sxs-lookup"><span data-stu-id="6eebb-174">Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation.</span></span> <span data-ttu-id="6eebb-175">Normalmente no se llama <xref:System.Xaml.XamlReader.Skip%2A> y <xref:System.Xaml.XamlReader.Read%2A> en secuencia.</span><span class="sxs-lookup"><span data-stu-id="6eebb-175">You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.</span></span>  
  
 <span data-ttu-id="6eebb-176">En el valor predeterminado <xref:System.Xaml.XamlReader.Skip%2A> implementación, se llevan a cabo acciones diferentes dependiendo de qué <xref:System.Xaml.XamlReader.NodeType%2A> está actualmente en la posición del lector.</span><span class="sxs-lookup"><span data-stu-id="6eebb-176">In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on.</span></span> <span data-ttu-id="6eebb-177">Si la posición del lector está actualmente en una <xref:System.Xaml.XamlNodeType.StartMember> o <xref:System.Xaml.XamlNodeType.StartObject>, que no miembro u objeto.</span><span class="sxs-lookup"><span data-stu-id="6eebb-177">If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped.</span></span> <span data-ttu-id="6eebb-178">Para otros <xref:System.Xaml.XamlReader.NodeType%2A> valores, se realiza ninguna acción que no sea de llamar a <xref:System.Xaml.XamlReader.Read%2A> desde la posición actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-178">For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.</span></span>  
  
 <span data-ttu-id="6eebb-179">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.Skip%2A>, con restricciones de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="6eebb-179">Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions.</span></span> <span data-ttu-id="6eebb-180">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-180">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 <span data-ttu-id="6eebb-181">El comportamiento del árbol de nodo de <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> se basa en el equivalente XML <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-181">The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6eebb-182">En función de la <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> equivalencia de comportamiento, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> omite el nodo y su subárbol, no solo el nodo de entrada única.</span><span class="sxs-lookup"><span data-stu-id="6eebb-182">Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> skips the node and its subtree, not just the single entry node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6eebb-183">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xaml.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-183">Releases all resources used by the current instance of the <see cref="T:System.Xaml.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-184">Cuando se implementa en una clase derivada, obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-184">When implemented in a derived class, gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span></span></summary>
        <value><span data-ttu-id="6eebb-185">Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un objeto.</span><span class="sxs-lookup"><span data-stu-id="6eebb-185">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eebb-186">Pueden llamar los lectores del subárbol <xref:System.Xaml.XamlReader.Type%2A>, con restricciones de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="6eebb-186">Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions.</span></span> <span data-ttu-id="6eebb-187">Para obtener más información, vea la sección "Lectores del subárbol" en <xref:System.Xaml.XamlReader>, o vea <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="6eebb-187">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6eebb-188">Cuando se implementa en una clase derivada, obtiene el valor del nodo actual.</span><span class="sxs-lookup"><span data-stu-id="6eebb-188">When implemented in a derived class, gets the value of the current node.</span></span></summary>
        <value><span data-ttu-id="6eebb-189">Valor del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</span><span class="sxs-lookup"><span data-stu-id="6eebb-189">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>