<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3cb020dadf6911a6184d7c73f01746771d9bdf1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c6a36-101">Define un contexto reutilizable para interpretar o asignar tipos XAML, y los tipos de los ensamblados subyacentes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6a36-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-102">Un contexto de esquema XAML proporciona una capa de abstracción entre un esquema o vocabulario para XAML y una implementación del analizador concreta.</span><span class="sxs-lookup"><span data-stu-id="c6a36-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="c6a36-103">Insertando el concepto de un contexto de esquema, el esquema se puede usar con analizadores XAML diferentes y el contexto de esquema rellena los detalles que se necesitan para interactuar con un analizador XAML específico.</span><span class="sxs-lookup"><span data-stu-id="c6a36-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="c6a36-104">Por ejemplo, el contexto de esquema XAML proporciona API de consulta que relacionados con los conceptos de XAML o el enlace de CLR para el sistema de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="c6a36-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="c6a36-105">El contexto de esquema XAML también es responsable de mantener la lista de ensamblados de los ensamblados cargados, que define donde un analizador XAML busca tipos de respaldo.</span><span class="sxs-lookup"><span data-stu-id="c6a36-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="c6a36-106">En un <see cref="T:System.AppDomain" />, un <see cref="T:System.Xaml.XamlSchemaContext" /> pueden compartirse entre varios llamadores, que incluyen ambos completa y los llamadores de confianza parcial.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-106">In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers.</span>
        </span>
        <span data-ttu-id="c6a36-107">Esta situación existe en marcos como WPF, que proporcionan acceso de confianza parcial de XAML en cargar para partes del modelo de aplicación de WPF.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-107">This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</span>
        </span>
        <span data-ttu-id="c6a36-108">El valor predeterminado <see cref="T:System.Xaml.XamlSchemaContext" /> implementación proporciona medidas de seguridad en este escenario manteniendo todas sus propiedades y valores inmutables.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-108">The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</span>
        </span>
        <span data-ttu-id="c6a36-109">Las implementaciones derivadas también deberían considerar seguir este modelo de inmutabilidad para las propiedades y la configuración de un contexto de esquema XAML.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-109">Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</span>
        </span>
        <span data-ttu-id="c6a36-110">La <see cref="T:System.Xaml.XamlSchemaContext" /> clase base está diseñada para que las búsquedas no tengan efectos deseados externamente observables.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-110">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects.</span>
        </span>
        <span data-ttu-id="c6a36-111">Los tipos que se hace referencia por <see cref="T:System.Xaml.XamlSchemaContext" /> API en la base de la clase, como <see cref="T:System.Xaml.XamlType" /> o <see cref="T:System.Xaml.XamlMember" />, también se producen efectos no deseados de las búsquedas.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-111">The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups.</span>
        </span>
        <span data-ttu-id="c6a36-112">Todos los datos que es necesaria para tomar una determinación del esquema deben estar disponibles desde la construcción y la configuración de la <see cref="T:System.AppDomain" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-112">All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />.</span>
        </span>
        <span data-ttu-id="c6a36-113">Observe que ninguna búsqueda API basadas en servicios de pasa de forma explícita; su entrada se basa en la cadena de entrada solo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-113">Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</span>
        </span>
        <span data-ttu-id="c6a36-114">El <see cref="T:System.Xaml.XamlSchemaContext" /> de la clase base y <see cref="T:System.Xaml.XamlType" /> y <see cref="T:System.Xaml.XamlMember" /> son seguras en sus implementaciones base todos los subprocesos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-114">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations.</span>
        </span>
        <span data-ttu-id="c6a36-115">Si deriva de <see cref="T:System.Xaml.XamlSchemaContext" /> o derivar clases de sistema de tipos XAML como <see cref="T:System.Xaml.XamlType" /> y <see cref="T:System.Xaml.XamlMember" /> , puede elegir si sus clases se comportarán como seguras para subprocesos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6a36-115">If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-116">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-116">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-117">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-117">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="c6a36-118">Conjunto enumerable de elementos de información de ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-118">An enumerable set of assembly information items.</span>
          </span>
          <span data-ttu-id="c6a36-119">La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-119">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-120">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-120">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="c6a36-121">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-121">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-122">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un objeto de configuración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-123">El objeto de configuración almacena información sobre características específicas de la extensión de marcado para el contexto de esquema y el convertidor de texto.</span><span class="sxs-lookup"><span data-stu-id="c6a36-123">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="c6a36-124">Para obtener más información, vea <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="c6a36-124">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="c6a36-125">Conjunto enumerable de información de ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-125">An enumerable set of assembly information.</span>
          </span>
          <span data-ttu-id="c6a36-126">La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-126">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="c6a36-127">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-127">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-128">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia y un objeto de configuración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-129">Proporciona una implementación de <see langword="Finalize" /> no estándar que no invoca a <see langword="Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-129">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-130">Contextos de esquema XAML no deberían eliminarse mediante una recolección automática o mediante las operaciones manuales.</span><span class="sxs-lookup"><span data-stu-id="c6a36-130">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="c6a36-131">Aunque los contextos de esquema XAML tienen recursos no administrados, <xref:System.Windows.Markup.XamlDeferLoadAttribute> propiedades todavía pueden estar activas y desechar un contexto de esquema XAML puede interferir con la operación de carga-aplazar relacionados.</span><span class="sxs-lookup"><span data-stu-id="c6a36-131">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="c6a36-132"><xref:System.AppDomain.AssemblyLoad> controladores de eventos, que están enlazados internamente como referencias débiles, se limpian mediante la implementación.</span><span class="sxs-lookup"><span data-stu-id="c6a36-132"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-133">Obtiene un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-133">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a36-134">Es <see langword="true" /> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-134">
              <see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-135">Esta propiedad devuelve el <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> valor que se establece en la configuración de la <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del constructor.</span><span class="sxs-lookup"><span data-stu-id="c6a36-135">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="c6a36-136">Si otras firmas se usaron para la construcción o si <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> no se establece específicamente `true`, el valor de esta propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="c6a36-136">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="c6a36-137">El valor de esta propiedad influye en las cadenas que se devuelven por <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6a36-137">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="c6a36-138">Si <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> es `true`, la parte del ensamblado de la cadena notificará el equivalente de <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c6a36-138">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-139">Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de espacios de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-139">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-140">Conjunto enumerable de identificadores de espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-140">An enumerable set of namespace identifiers.</span>
          </span>
          <span data-ttu-id="c6a36-141">Estos identificadores se proporcionan como cadenas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-141">These identifiers are provided as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-142">Este método sólo busca los ensamblados de referencia si se pasan a través de la configuración de construcción o de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c6a36-142">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="c6a36-143">Si ningún ensamblado se establece como ensamblados de referencia, la lógica de este método examina todos los ensamblados cargados donde esto <xref:System.Xaml.XamlSchemaContext> está activo.</span><span class="sxs-lookup"><span data-stu-id="c6a36-143">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c6a36-144">Espacio de nombres XAML del que se van a devolver tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-144">The XAML namespace to return types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-145">Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de tipos del espacio de nombres XAML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-145">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-146">Conjunto enumerable de tipos XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-146">An enumerable set of XAML types.</span>
          </span>
          <span data-ttu-id="c6a36-147">Cada tipo XAML del conjunto está representado por un objeto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-147">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns">
          <span data-ttu-id="c6a36-148">Espacio de nombres XAML del que se va a obtener el prefijo preferido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-148">The XAML namespace to get the preferred prefix for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-149">Obtiene una cadena que se notifica como el prefijo preferido para uso de los consumidores cuando asignan el espacio de nombres XAML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-149">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-150">Cadena que los consumidores deberían usar cuando asignan el espacio de nombres XAML especificado para uso del marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-150">A string that consumers should use when they map the specified XAML namespace for markup use.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-151">El consumidor más inmediato de la información suele ser un escritor de XAML.</span><span class="sxs-lookup"><span data-stu-id="c6a36-151">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="c6a36-152">Otros consumidores indirectos incluyen herramientas de diseño.</span><span class="sxs-lookup"><span data-stu-id="c6a36-152">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="c6a36-153">Como parte del enlace XAML para common language runtime (CLR), puede especificar esta información mediante la aplicación <xref:System.Windows.Markup.XmlnsPrefixAttribute> en el nivel de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c6a36-153">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a36-154">
            <paramref name="xmlns" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-154">
              <paramref name="xmlns" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase">
          <span data-ttu-id="c6a36-155">Clase base concreta del convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-155">The specific converter base class.</span>
          </span>
        </typeparam>
        <param name="converterType">
          <span data-ttu-id="c6a36-156">Implementación del convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-156">The converter implementation.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="c6a36-157">Tipo de destino deseado para el convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-157">The desired destination type for the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-158">Devuelve un convertidor de valores que puede realizar la conversión al valor <paramref name="targetType" /> solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-158">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-159">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción que coincide con la restricción que se coloca en la llamada al método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-159">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c6a36-160">Espacio de nombres XAML que contiene la directiva con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-160">The XAML namespace that contains the named directive.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c6a36-161">Nombre de la directiva que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-161">The name of the directive to obtain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-162">Devuelve un valor <see cref="T:System.Xaml.XamlDirective" /> que representa una directiva, bien para el lenguaje XAML o para una implementación determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-162">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-163">Objeto <see cref="T:System.Xaml.XamlDirective" /> que representa la directiva solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-163">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-164">Invalide este método si crea una clase derivada de <xref:System.Xaml.XamlDirective> como parte de un escenario de extensión de sistema de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="c6a36-164">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a36-165">El valor de <paramref name="xamlNamespace" /> o <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-165">
              <paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-166">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un identificador de tipo de CLR o XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-166">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c6a36-167">Tipo para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-167">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-168">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un identificador de tipo de CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-168">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-169">
            <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="type" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-169">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-170">Esta sobrecarga se da por supuesto que está utilizando el CLR para el sistema de tipos de respaldo.</span><span class="sxs-lookup"><span data-stu-id="c6a36-170">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="c6a36-171">Si no se usa el sistema de tipos CLR, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="c6a36-171">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a36-172">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-172">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName">
          <span data-ttu-id="c6a36-173">Nombre de tipo XAML para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-173">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-174">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un nombre de tipo de sistema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-174">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-175">
            <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="xamlTypeName" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-175">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c6a36-176">Un componente de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-176">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a36-177">
            <paramref name="xamlTypeName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-177">
              <paramref name="xamlTypeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c6a36-178">Espacio de nombres XAML que contiene el tipo deseado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-178">The XAML namespace that contains the desired type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c6a36-179">Nombre de cadena del tipo deseado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-179">The string name of the desired type.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="c6a36-180">Argumentos de tipo de inicialización para un tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-180">The initialization type arguments for a generic type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-181">Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> basado en un espacio de nombres XAML y una cadena para el nombre de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-181">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span>
          </span>
          <span data-ttu-id="c6a36-182">Esta firma puede especificar los argumentos de tipo para aquellos casos en los que el tipo deseado es un tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-182">This signature can specify the type arguments for cases where the desired type is a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-183">
            <see cref="T:System.Xaml.XamlType" /> que coincide con el criterio de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-183">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="c6a36-184">Nombre del ensamblado que se va a cargar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-184">The name of the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-185">Se llama cuando las operaciones usan este contexto de esquema para resolver un ensamblado requerido para resolver los espacios de nombres XAML que contiene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-185">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-186">Ensamblado resuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-186">The resolved assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-187">La técnica de resolución de ensamblado subyacente, que es una API interna, ha integrado tolerancias para distintas formas de cadena de un nombre de ensamblado como basada en la <xref:System.Reflection.AssemblyName> comportamiento de construcción.</span><span class="sxs-lookup"><span data-stu-id="c6a36-187">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="c6a36-188">El propósito de esta API es habilitar la resolución de primera oportunidad en conjuntos de ensamblados, conocidos como en los ensamblados de referencia en lugar de en una memoria caché global de ensamblados.</span><span class="sxs-lookup"><span data-stu-id="c6a36-188">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="c6a36-189">Si se rellena la lista de ensamblados de referencia, la implementación predeterminada puede tener acceso a los ensamblados de referencia conocidas.</span><span class="sxs-lookup"><span data-stu-id="c6a36-189">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-190">Obtiene un conjunto enumerable de ensamblados de referencia para el contexto de esquema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-190">Gets an enumerable set of reference assemblies for the XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a36-191">Conjunto enumerable de ensamblados de referencia para el contexto de esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-191">An enumerable set of reference assemblies for the schema context.</span>
          </span>
          <span data-ttu-id="c6a36-192">La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-192">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a36-193">Obtiene un valor que especifica si un esquema XAML y su contexto admiten extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-193">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a36-194">Es <see langword="true" /> si el contexto de esquema permite extensiones de marcado con aridad duplicada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-194">
              <see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c6a36-195">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-195">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-196">Esta propiedad devuelve el <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> valor que se establece en la configuración de la <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del constructor.</span><span class="sxs-lookup"><span data-stu-id="c6a36-196">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="c6a36-197">Si otras firmas se usan para la construcción o si <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> no se establece específicamente `true`, el valor de esta propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="c6a36-197">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="c6a36-198">Aridad duplicada de las extensiones de marcado no se trata específicamente por la especificación XAML [MS-XAML] sección 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="c6a36-198">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="c6a36-199">Esto es porque la información del elemento de información de XAML para una extensión de marcado es idéntica independientemente de aridad duplicada que puedan existir en la implementación de extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="c6a36-199">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="c6a36-200">Solo la invocación real de la extensión de marcado y su `ProvideValue` expone los problemas asociados con aridad duplicada.</span><span class="sxs-lookup"><span data-stu-id="c6a36-200">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="c6a36-201">Comportamiento para administrar la aridad duplicada es indefinido y se deja en cada contexto de esquema XAML y su integración de sistema de escritura XAML.</span><span class="sxs-lookup"><span data-stu-id="c6a36-201">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="c6a36-202">El contexto de esquema XAML predeterminado tal como se implementa para las operaciones de servicios XAML de .NET Framework no admite la aridad duplicada; varias API de servicios XAML de .NET Framework producirán excepciones al procesar el uso de la extensión de marcado con aridad duplicada subyacente.</span><span class="sxs-lookup"><span data-stu-id="c6a36-202">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="c6a36-203">Para obtener más información acerca de cómo definir las extensiones de marcado, vea [extensiones de marcado para XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c6a36-203">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c6a36-204">Cadena <see langword="xmlns" /> del espacio de nombres XAML en el que se va a buscar un resultado compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-204">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span>
          </span>
        </param>
        <param name="compatibleNamespace">
          <span data-ttu-id="c6a36-205">Cuando este método devuelve un valor, es la cadena <see langword="xmlns" /> para una solicitud de espacio de nombres XAML compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-205">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span>
          </span>
          <span data-ttu-id="c6a36-206">Puede ser idéntico a <c>xamlNamespace</c> si el método devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-206">This might be identical to <c>xamlNamespace</c> if the method returns <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a36-207">Devuelve un valor que indica si ha sido correcta o no la solicitud de un espacio de nombres XAML compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-207">Returns the success or failure of a request for a compatible XAML namespace.</span>
          </span>
          <span data-ttu-id="c6a36-208">Si la solicitud es correcta, se notifica ese espacio de nombres XAML como parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-208">A successful request reports that XAML namespace as an out parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a36-209">Es <see langword="true" /> si <paramref name="compatibleNamespace" /> contiene un resultado utilizable; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-209">
              <see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a36-210">Internamente, este método utiliza el siguiente orden de búsqueda:</span><span class="sxs-lookup"><span data-stu-id="c6a36-210">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="c6a36-211">Un diccionario de compatibilidad implementado internamente, que se han rellenado por una búsqueda anterior.</span><span class="sxs-lookup"><span data-stu-id="c6a36-211">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="c6a36-212">El <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> evaluación del parámetro.</span><span class="sxs-lookup"><span data-stu-id="c6a36-212">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="c6a36-213">Si no se detecta ningún otro espacio de nombres compatible y este método devuelve `false`, `compatibleNamespace` salida parámetro podría tener el mismo valor que el `xamlNamespace` entrada.</span><span class="sxs-lookup"><span data-stu-id="c6a36-213">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a36-214">
            <paramref name="xamlNamespace" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a36-214">
              <paramref name="xamlNamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>