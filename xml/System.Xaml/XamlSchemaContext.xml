<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlSchemaContext.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3cb020dadf6911a6184d7c73f01746771d9bdf1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3cb020dadf6911a6184d7c73f01746771d9bdf1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">Define un contexto reutilizable para interpretar o asignar tipos XAML, y los tipos de los ensamblados subyacentes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">Un contexto de esquema XAML proporciona una capa de abstracción entre un esquema o vocabulario para XAML y una implementación del analizador concreta.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">Insertando el concepto de un contexto de esquema, el esquema se puede usar con analizadores XAML diferentes y el contexto de esquema rellena los detalles que se necesitan para interactuar con un analizador XAML específico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">Por ejemplo, el contexto de esquema XAML proporciona API de consulta que relacionados con los conceptos de XAML o el enlace de CLR para el sistema de tipos XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">El contexto de esquema XAML también es responsable de mantener la lista de ensamblados de los ensamblados cargados, que define donde un analizador XAML busca tipos de respaldo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>In an <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> can be shared between multiple callers, which include both full and partial trust callers.</source>
          <target state="translated">En un <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, un <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> pueden compartirse entre varios llamadores, que incluyen ambos completa y los llamadores de confianza parcial.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</source>
          <target state="translated">Esta situación existe en marcos como WPF, que proporcionan acceso de confianza parcial de XAML en cargar para partes del modelo de aplicación de WPF.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</source>
          <target state="translated">El valor predeterminado <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementación proporciona medidas de seguridad en este escenario manteniendo todas sus propiedades y valores inmutables.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</source>
          <target state="translated">Las implementaciones derivadas también deberían considerar seguir este modelo de inmutabilidad para las propiedades y la configuración de un contexto de esquema XAML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class is designed so that lookups have no externally observable side effects.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> clase base está diseñada para que las búsquedas no tengan efectos deseados externamente observables.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The types that are referenced by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> APIs in the base class, such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, also produce no side effects from lookups.</source>
          <target state="translated">Los tipos que se hace referencia por <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> API en la base de la clase, como <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, también se producen efectos no deseados de las búsquedas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>All data that is needed to make a schema determination should be available from the construction and settings of the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">Todos los datos que es necesaria para tomar una determinación del esquema deben estar disponibles desde la construcción y la configuración de la <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</source>
          <target state="translated">Observe que ninguna búsqueda API basadas en servicios de pasa de forma explícita; su entrada se basa en la cadena de entrada solo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class, and <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> are all thread safe in their base implementations.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> de la clase base y <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> son seguras en sus implementaciones base todos los subprocesos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>If you derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> or derive XAML type system classes such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , you can choose whether your classes will behave as thread safe.</source>
          <target state="translated">Si deriva de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> o derivar clases de sistema de tipos XAML como <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , puede elegir si sus clases se comportarán como seguras para subprocesos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">Conjunto enumerable de elementos de información de ensamblado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">La información de cada elemento viene especificada por un valor <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> basándose en un conjunto de ensamblados de referencia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Objeto de configuración que se va a usar para crear el objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a settings object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> basándose en un objeto de configuración.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">El objeto de configuración almacena información sobre características específicas de la extensión de marcado para el contexto de esquema y el convertidor de texto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">Conjunto enumerable de información de ensamblado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">La información de cada elemento viene especificada por un valor <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Objeto de configuración que se va a usar para crear el objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> basándose en un conjunto de ensamblados de referencia y un objeto de configuración.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Provides a nonstandard <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> implementation that does not invoke <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Proporciona una implementación de <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> no estándar que no invoca a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">Contextos de esquema XAML no deberían eliminarse mediante una recolección automática o mediante las operaciones manuales.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Although XAML schema contexts  have no unmanaged resources, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">Aunque los contextos de esquema XAML tienen recursos no administrados, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> propiedades todavía pueden estar activas y desechar un contexto de esquema XAML puede interferir con la operación de carga-aplazar relacionados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> controladores de eventos, que están enlazados internamente como referencias débiles, se limpian mediante la implementación.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">Obtiene un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Esta propiedad devuelve el <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> valor que se establece en la configuración de la <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> firma del constructor.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If other signatures were used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si otras firmas se usaron para la construcción o si <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> no se establece específicamente <ph id="ph2">`true`</ph>, el valor de esta propiedad es <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>The value of this property influences the strings that are returned by <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</source>
          <target state="translated">El valor de esta propiedad influye en las cadenas que se devuelven por <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the assembly portion of the string reports the equivalent of <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> es <ph id="ph2">`true`</ph>, la parte del ensamblado de la cadena notificará el equivalente de <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of namespaces.</source>
          <target state="translated">Busca en los ensamblados que contiene <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> y devuelve un conjunto de espacios de nombres.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">Conjunto enumerable de identificadores de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">Estos identificadores se proporcionan como cadenas.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">Este método sólo busca los ensamblados de referencia si se pasan a través de la configuración de construcción o de propiedad.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is active.</source>
          <target state="translated">Si ningún ensamblado se establece como ensamblados de referencia, la lógica de este método examina todos los ensamblados cargados donde esto <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> está activo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">Espacio de nombres XAML del que se van a devolver tipos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">Busca en los ensamblados que contiene <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> y devuelve un conjunto de tipos del espacio de nombres XAML especificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">Conjunto enumerable de tipos XAML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Each XAML type in the set is represented by a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object.</source>
          <target state="translated">Cada tipo XAML del conjunto está representado por un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">Espacio de nombres XAML del que se va a obtener el prefijo preferido.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">Obtiene una cadena que se notifica como el prefijo preferido para uso de los consumidores cuando asignan el espacio de nombres XAML especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">Cadena que los consumidores deberían usar cuando asignan el espacio de nombres XAML especificado para uso del marcado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">El consumidor más inmediato de la información suele ser un escritor de XAML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">Otros consumidores indirectos incluyen herramientas de diseño.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> at the assembly level.</source>
          <target state="translated">Como parte del enlace XAML para common language runtime (CLR), puede especificar esta información mediante la aplicación <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> en el nivel de ensamblado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The specific converter base class.</source>
          <target state="translated">Clase base concreta del convertidor.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The converter implementation.</source>
          <target state="translated">Implementación del convertidor.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The desired destination type for the converter.</source>
          <target state="translated">Tipo de destino deseado para el convertidor.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>Returns a value converter that can convert to the requested <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>.</source>
          <target state="translated">Devuelve un convertidor de valores que puede realizar la conversión al valor <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> solicitado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with a constraint that matches the constraint that is put on the method call.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> con una restricción que coincide con la restricción que se coloca en la llamada al método.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">Espacio de nombres XAML que contiene la directiva con nombre.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The name of the directive to obtain.</source>
          <target state="translated">Nombre de la directiva que se va a obtener.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">Devuelve un valor <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> que representa una directiva, bien para el lenguaje XAML o para una implementación determinada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> object that represents the requested directive.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> que representa la directiva solicitada.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Override this method if you create a derived class from <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> as part of a XAML type system extension scenario.</source>
          <target state="translated">Invalide este método si crea una clase derivada de <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> como parte de un escenario de extensión de sistema de tipos XAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> o <ph id="ph2">&lt;paramref name="name" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on either a CLR or XAML type identifier.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que se basa en un identificador de tipo de CLR o XAML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The type to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Tipo para el que se va a obtener un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a CLR type identifier.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que se basa en un identificador de tipo de CLR.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que coincide con el valor <ph id="ph2">&lt;paramref name="type" /&gt;</ph> de entrada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">Esta sobrecarga se da por supuesto que está utilizando el CLR para el sistema de tipos de respaldo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>If you are not using the CLR type system, use <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</source>
          <target state="translated">Si no se usa el sistema de tipos CLR, use <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The XAML type name to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Nombre de tipo XAML para el que se va a obtener un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML system type name.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que se basa en un nombre de tipo de sistema XAML.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que coincide con el valor <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph> de entrada.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>A component of <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un componente de <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> o <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) es <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">Espacio de nombres XAML que contiene el tipo deseado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The string name of the desired type.</source>
          <target state="translated">Nombre de cadena del tipo deseado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">Argumentos de tipo de inicialización para un tipo genérico.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> basado en un espacio de nombres XAML y una cadena para el nombre de tipo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">Esta firma puede especificar los argumentos de tipo para aquellos casos en los que el tipo deseado es un tipo genérico.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input criteria.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que coincide con el criterio de entrada.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The name of the assembly to load.</source>
          <target state="translated">Nombre del ensamblado que se va a cargar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">Se llama cuando las operaciones usan este contexto de esquema para resolver un ensamblado requerido para resolver los espacios de nombres XAML que contiene.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The resolved assembly.</source>
          <target state="translated">Ensamblado resuelto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> construction behavior.</source>
          <target state="translated">La técnica de resolución de ensamblado subyacente, que es una API interna, ha integrado tolerancias para distintas formas de cadena de un nombre de ensamblado como basada en la <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> comportamiento de construcción.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">El propósito de esta API es habilitar la resolución de primera oportunidad en conjuntos de ensamblados, conocidos como en los ensamblados de referencia en lugar de en una memoria caché global de ensamblados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">Si se rellena la lista de ensamblados de referencia, la implementación predeterminada puede tener acceso a los ensamblados de referencia conocidas.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">Obtiene un conjunto enumerable de ensamblados de referencia para el contexto de esquema XAML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">Conjunto enumerable de ensamblados de referencia para el contexto de esquema.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">La información de cada elemento viene especificada por un valor <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">Obtiene un valor que especifica si un esquema XAML y su contexto admiten extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schema context permits markup extensions that have duplicate arity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el contexto de esquema permite extensiones de marcado con aridad duplicada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Esta propiedad devuelve el <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> valor que se establece en la configuración de la <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> firma del constructor.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>If other signatures are used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si otras firmas se usan para la construcción o si <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> no se establece específicamente <ph id="ph2">`true`</ph>, el valor de esta propiedad es <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">Aridad duplicada de las extensiones de marcado no se trata específicamente por la especificación XAML [MS-XAML] sección 6.6.7.2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">Esto es porque la información del elemento de información de XAML para una extensión de marcado es idéntica independientemente de aridad duplicada que puedan existir en la implementación de extensión de marcado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">Solo la invocación real de la extensión de marcado y su <ph id="ph1">`ProvideValue`</ph> expone los problemas asociados con aridad duplicada.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">Comportamiento para administrar la aridad duplicada es indefinido y se deja en cada contexto de esquema XAML y su integración de sistema de escritura XAML.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">El contexto de esquema XAML predeterminado tal como se implementa para las operaciones de servicios XAML de .NET Framework no admite la aridad duplicada; varias API de servicios XAML de .NET Framework producirán excepciones al procesar el uso de la extensión de marcado con aridad duplicada subyacente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo definir las extensiones de marcado, vea <bpt id="p1">[</bpt>extensiones de marcado para XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated">Cadena <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> del espacio de nombres XAML en el que se va a buscar un resultado compatible.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>When this method returns, the <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for a compatible XAML namespace request.</source>
          <target state="translated">Cuando este método devuelve un valor, es la cadena <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> para una solicitud de espacio de nombres XAML compatible.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>This might be identical to <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> if the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Puede ser idéntico a <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> si el método devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">Devuelve un valor que indica si ha sido correcta o no la solicitud de un espacio de nombres XAML compatible.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">Si la solicitud es correcta, se notifica ese espacio de nombres XAML como parámetro de salida.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contains a usable result; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contiene un resultado utilizable; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Internally, this method uses the following lookup order:</source>
          <target state="translated">Internamente, este método utiliza el siguiente orden de búsqueda:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">Un diccionario de compatibilidad implementado internamente, que se han rellenado por una búsqueda anterior.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> parameter evaluation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> evaluación del parámetro.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">Si no se detecta ningún otro espacio de nombres compatible y este método devuelve <ph id="ph1">`false`</ph>, <ph id="ph2">`compatibleNamespace`</ph> salida parámetro podría tener el mismo valor que el <ph id="ph3">`xamlNamespace`</ph> entrada.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>