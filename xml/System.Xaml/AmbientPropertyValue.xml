<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a44eb2004abcae643ccb9cf6df0b05aa26fb2db" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39985655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Informa sobre una propiedad de ambiente durante el proceso de implementación de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> Representa un elemento de información que se devuelve mediante una llamada a un <xref:System.Xaml.IAmbientProvider> método de servicio. El `GetAll` métodos devuelven enumeraciones o matrices de <xref:System.Xaml.AmbientPropertyValue> elementos; el `GetFirst` métodos devuelven un único <xref:System.Xaml.AmbientPropertyValue>.  
  
## <a name="about-ambient-properties"></a>Acerca de las propiedades de ambiente  
 Una propiedad de ambiente es una propiedad cuyo valor de propiedad debe estar disponible para uso del convertidor de valores en la estructura de nodo XAML y el gráfico de objetos debajo de ella. El concepto de ambiente es relevante para un procesador XAML durante la fase de escritura de objeto de la ruta de acceso de carga o la fase de serialización de una operación de guardar ruta de acceso.  
  
 Un tipo también se puede atribuir como ambiente. En este caso, todas las propiedades que usan el tipo con atributos se notifican como ambiente.  
  
 En el caso de ruta de acceso de carga, el valor de propiedad de ambiente podría influir en el valor del objeto gráfico generado de otras propiedades que se encuentran debajo de ella en una estructura de nodo XAML. Cuando se procesa como un flujo de nodo XAML, el concepto de ambiente implica que el valor de propiedad de ambiente debe estar disponible para los convertidores de tipos y extensiones de marcado `StartObject` a `EndObject`. De forma similar, una tipo convertidor de tipos o extensión de marcado que se usa para la operación de guardar ruta de acceso puede buscar la propiedad de ambiente y su valor. Por lo tanto, el XAML que se genera es una mejor representación de ida y vuelta.  
  
 Por su definición de lenguaje XAML no especifica el orden en el que se deben procesar los miembros de un objeto. Sin embargo, cualquier valor de propiedad de ambiente debe procesar primero mediante el lector XAML para que el convertidor de tipos y marcado extensión uso del tipo que se encuentran en otras propiedades puede tener acceso a la <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> es un concepto similar que también influye en el orden de procesamiento de nodo XAML. Sin embargo, <xref:System.Xaml.XamlMember.DependsOn%2A> solo puede usarse para relaciones de miembro y el nodo del mismo nivel; no influye en todos los descendientes. Además, <xref:System.Xaml.XamlMember.DependsOn%2A> directamente influencias objeto gráfico valor de la propiedad, mientras que la técnica ambiente se basa en las extensiones de marcado o de convertidores de tipos. En la técnica de ambiente, debe haber también un convertidor de tipos específicos o definición de extensión de marcado. Es responsabilidad de cada convertidor de tipos o extensión de marcado para determinar cómo debe interpretarse y aplicar a la ubicación del gráfico de objetos donde se usa el convertidor de tipos o extensión de marcado el valor de propiedad de ambiente.  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Un escenario de propiedad de ambiente que se muestra en el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] conjunto de características es <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, que puede calificar las búsquedas de nombre de propiedad necesarios para otros valores. En este caso, el <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor califica el <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valores de los nodos XAML están bajo él. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> usa el comportamiento del convertidor de tipos para un <xref:System.Windows.DependencyProperty>. Este comportamiento tenga acceso al ambiente <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor consultando <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> desde un contexto de servicio que está disponible para los convertidores de tipos y extensiones de marcado.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">Identificador que representa la propiedad de ambiente.</param>
        <param name="value">Valor que se va a notificar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador del sistema de tipos XAML (<see cref="T:System.Xaml.XamlMember" />) que representa la propiedad de ambiente.</summary>
        <value>Identificador que representa la propiedad de ambiente.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de la propiedad de ambiente.</summary>
        <value>Valor de la propiedad de ambiente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>