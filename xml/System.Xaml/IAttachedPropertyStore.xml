<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c605e0956d5d6b54081ce7cb70c25a5645e9ac22" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <TypeSignature Language="F#" Value="type IAttachedPropertyStore = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6f6e2-101">Representa un almacén de miembros que se pueden asociar de un objeto en el que se definen los miembros que se pueden asociar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f6e2-101">Represents an attachable member store for an object where attachable members are set.</span>
      </span>
      <span data-ttu-id="6f6e2-102">Se puede hacer referencia a este almacén de miembros que se pueden asociar con <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f6e2-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f6e2-103">Normalmente se implementa y se utiliza como una propiedad que se puede asociar un miembro adjuntable.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="6f6e2-104">El término "miembro adjuntable" se proporciona con la posibilidad de que una tecnología también define un sistema para eventos adjuntables.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="6f6e2-105">Como un elemento en un almacén de propiedad, un evento que se puede asociar almacena una referencia al controlador que se asigna a través del uso del miembro adjuntable.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="6f6e2-106">Un evento asociable en XAML puede usar el mismo almacén que hacen de las propiedades que se pueden asociar, aun cuando el evento asociable no es realmente una propiedad para el sistema de tipos subyacente o como se considera en el uso del mundo real.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyPropertiesTo : System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="iAttachedPropertyStore.CopyPropertiesTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6f6e2-107">Matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-107">The destination array.</span>
          </span>
          <span data-ttu-id="6f6e2-108">La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6f6e2-109">Índice de origen donde debe comenzar la operación de copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-109">The source index where copying should begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f6e2-110">Copia todos los pares de miembro y valor que se pueden adjuntar de este almacén de miembros adjuntables en una matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f6e2-111">Obtiene el recuento de las entradas de miembros que se pueden asociar de este almacén de miembros que se pueden asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-111">Gets the count of the attachable member entries in this attachable member store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f6e2-112">Recuento de enteros de las entradas del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-112">The integer count of entries in the store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="iAttachedPropertyStore.RemoveProperty attachableMemberIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="6f6e2-113">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-113">The XAML type system identifier for the attachable member entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f6e2-114">Quita la entrada del miembro que se puede asociar especificado del almacén de miembros que se pueden asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f6e2-115">Es <see langword="true" /> si una entrada de miembro que se puede asociar de <paramref name="attachableMemberIdentifier" /> se encuentra en el almacén y se quita; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-115">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="iAttachedPropertyStore.SetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="6f6e2-116">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-116">The XAML type system identifier for the attachable member entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6f6e2-117">Valor que se va a establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-117">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f6e2-118">Establece un valor para el miembro que se puede asociar indicado en el almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-118">Sets a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f6e2-119">Una implementación no debería iniciar una excepción si el miembro adjuntable específico ya existe.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="6f6e2-120">Si ya existe un miembro, la implementación debería sobrescribir cualquier valor existente con `value`.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProperty : System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="iAttachedPropertyStore.TryGetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="6f6e2-121">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-121">The XAML type system identifier for the attachable member entry to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6f6e2-122">Parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-122">Out parameter.</span>
          </span>
          <span data-ttu-id="6f6e2-123">Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <c>attachableMemberIdentifier</c> existe en el almacén y tiene un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f6e2-124">Intenta obtener un valor para el miembro que se puede asociar indicado del almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f6e2-125">Es <see langword="true" /> si se encontró una entrada de miembro que se puede asociar para <paramref name="attachableMemberIdentifier" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f6e2-125">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f6e2-126">Una implementación no debería iniciar una excepción si no se encuentra el miembro adjuntable específico en el almacén.</span><span class="sxs-lookup"><span data-stu-id="6f6e2-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>