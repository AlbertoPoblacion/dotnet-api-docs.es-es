<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="284b342cd8ec18017e3ac4ac33597d46dbc3c75f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721109" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4b88c-101">Proporciona el identificador del sistema de tipos XAML para miembros de tipos XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b88c-101">Provides the XAML type system identifier for members of XAML types.</span>
      </span>
      <span data-ttu-id="4b88c-102">Los lectores XAML y los sistemas de escritura XAML usan el identificador al procesar los nodos de miembro (cuando el lector XAML está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />) y también para la lógica general del sistema de tipos de XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b88c-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-103"><xref:System.Xaml.XamlMember> Puede usar metodologías de tres para devolver información acerca de un miembro XAML: common language runtime (CLR) reflexión estándar; una técnica de reflexión solo referencia interna de la llamada API ese bit usar marcas; o una llamada a virtual reemplazos de la `Lookup*` API proporcionada por posibles <xref:System.Xaml.XamlMember> las subclases.</span><span class="sxs-lookup"><span data-stu-id="4b88c-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="4b88c-104">Para la mayoría de los usos de la API de servicios XAML de .NET Framework y el <xref:System.Xaml.XamlMember> API, se usa el contexto de esquema XAML predeterminado.</span><span class="sxs-lookup"><span data-stu-id="4b88c-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="4b88c-105">El contexto de esquema XAML predeterminado para servicios XAML de .NET Framework usa para el sistema de tipos de respaldo de CLR.</span><span class="sxs-lookup"><span data-stu-id="4b88c-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="4b88c-106">Esto permite a los lectores XAML y escritores de XAML trabajar con cualquier tipo o miembro que se define en, o de otro modo disponibles para, el CLR y sus técnicas de reflexión.</span><span class="sxs-lookup"><span data-stu-id="4b88c-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="4b88c-107">Las clases derivadas de API de búsqueda y XamlMember</span><span class="sxs-lookup"><span data-stu-id="4b88c-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="4b88c-108"><xref:System.Xaml.XamlMember> define varios miembros virtuales que las clases derivadas pueden invalidar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="4b88c-109">Estos miembros tienen nombres que siempre comienzan con la cadena `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="4b88c-110">El resto de la API de nombre las referencias a continuación, la propiedad que influye en el método virtual.</span><span class="sxs-lookup"><span data-stu-id="4b88c-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="4b88c-111">Por ejemplo, un <xref:System.Xaml.XamlMember> podría invalidar la clase derivada <xref:System.Xaml.XamlMember.LookupTargetType%2A> para influir en qué la propiedad definida por la base de <xref:System.Xaml.XamlMember.TargetType%2A> devuelve en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="4b88c-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="4b88c-112">Puede predecir valores devueltos para tales propiedades en <xref:System.Xaml.XamlMember> o existente de las clases derivadas, lea la documentación correspondiente `Lookup*` métodos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="4b88c-113">El propósito de la `Lookup*` métodos es proporcionar una técnica de extensión de sistema de tipos XAML que incorpora la <xref:System.Xaml.XamlMember> clase base.</span><span class="sxs-lookup"><span data-stu-id="4b88c-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="4b88c-114">Al derivar de <xref:System.Xaml.XamlMember> e invalidar la `Lookup` los miembros virtuales, puede definir el concepto de un miembro XAML para un esquema XAML en un sistema de tipos XAML sin estar vinculado a los detalles de un sistema de tipos de respaldo o tecnología.</span><span class="sxs-lookup"><span data-stu-id="4b88c-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="4b88c-115">Puede usar un contexto de esquema XAML proporcionado con este esquema y devuelve los resultados deseados.</span><span class="sxs-lookup"><span data-stu-id="4b88c-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="4b88c-116">Por ejemplo, considere la <xref:System.Xaml.XamlMember> propiedad <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="4b88c-117">Esta propiedad informa a los llamadores que las operaciones como el uso de un <xref:System.Xaml.XamlWriter> de serialización puede escribir un valor para este miembro en un objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="4b88c-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="4b88c-118">En la implementación predeterminada, se realiza la determinación de si el miembro es grabable mediante técnicas de reflexión en el CLR de respaldo <xref:System.Type> y sus miembros (el <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="4b88c-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="4b88c-119">Por lo tanto, de forma predeterminada, el sistema de tipos XAML depende del sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="4b88c-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="4b88c-120">Sin embargo, puede quitar esta dependencia para los informes de sistema de tipo XAML de <xref:System.Xaml.XamlMember.IsWritePublic%2A> invalidando la API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="4b88c-121">Dentro de su invalidación, puede usar otras determinaciones, como metadatos que son específicos de la tecnología, una tabla de búsqueda principal que se optimiza para un vocabulario XAML fijo o una variedad de otras estrategias para determinar si un miembro XAML es grabable en el vocabulario XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="4b88c-122">Construir XamlMember sin contexto de esquema XAML</span><span class="sxs-lookup"><span data-stu-id="4b88c-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="4b88c-123">La mayoría de los constructores de <xref:System.Xaml.XamlMember> requieren un <xref:System.Xaml.XamlSchemaContext> como parte de su inicialización.</span><span class="sxs-lookup"><span data-stu-id="4b88c-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="4b88c-124">El <xref:System.Xaml.XamlSchemaContext> también es necesario para muchos interno <xref:System.Xaml.XamlSchemaContext> operaciones, como obtener la información que se reenvían desde el tipo de respaldo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="4b88c-125">Cuando se trabaja con el <xref:System.Xaml.XamlMember> API, normalmente es necesario un <xref:System.Xaml.XamlSchemaContext> que está disponible en una construcción circundante como un <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="4b88c-126">En este caso, puede pasar la <xref:System.Xaml.XamlSchemaContext> hacer una referencia a través de todas las llamadas de sistema de tipo XAML que requieren un contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="4b88c-127">Un constructor específico, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, no requiere un <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="4b88c-128">Sin embargo, un <xref:System.Xaml.XamlMember> que se construye con el <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma devuelve `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-129">Para una ruta de acceso de carga que implica <xref:System.Xaml.XamlObjectWriter>, dicho miembro no se puede escribir en un gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="4b88c-130">Mediante la implementación de servicios XAML de .NET Framework, el <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> llamarlos inicia un <xref:System.Xaml.XamlObjectWriterException> cuando lo relevante <xref:System.Xaml.XamlMember> informes `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-131">No debería construir un <xref:System.Xaml.XamlMember> que tiene un valor de `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> a menos que su implementación puede controlar las excepciones de <xref:System.Xaml.XamlObjectWriter>, o tienen otras maneras de ajustar la <xref:System.Xaml.XamlObjectWriter> comportamiento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="4b88c-132">Por ejemplo, puede true de la implementación de una o varias de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="4b88c-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="4b88c-133">El contexto de esquema XAML está disponible más adelante.</span><span class="sxs-lookup"><span data-stu-id="4b88c-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="4b88c-134">Utilice un patrón de invocador de miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="4b88c-135">Invalida deliberadamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> en un sistema de escritura XAML personalizado.</span><span class="sxs-lookup"><span data-stu-id="4b88c-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-136">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="4b88c-137">
            <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-138">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-139">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-140">Utilice este constructor si el miembro representa un evento (propiedad de punto de conexión del controlador de eventos).</span><span class="sxs-lookup"><span data-stu-id="4b88c-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="4b88c-141">
            <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-142">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-143">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-144">Utilice este constructor si el miembro representa una propiedad (y específicamente no es una conexión de controlador de eventos).</span><span class="sxs-lookup"><span data-stu-id="4b88c-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="4b88c-145">
            <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-146">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="4b88c-147">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-148">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-149">Utilice este constructor si el miembro representa un evento (o una propiedad de punto de conexión del controlador de eventos).</span><span class="sxs-lookup"><span data-stu-id="4b88c-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="4b88c-150">
            <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-151">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="4b88c-152">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-153">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> de reflexión y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-154">Utilice este constructor solo si el miembro representa una propiedad y no es una conexión de controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="4b88c-155">El nombre de cadena del evento que se puede asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-155">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="4b88c-156">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-157">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-158">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-159">Utilice este constructor si el miembro representa a un miembro de evento que se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4b88c-160">El nombre de cadena del miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-160">The string name of the member.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="4b88c-161">Información de <see cref="T:System.Xaml.XamlType" /> para el tipo declarativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span>
          </span>
        </param>
        <param name="isAttachable">
          <span data-ttu-id="4b88c-162">Es <see langword="true" /> para indicar que el miembro se puede adjuntar; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-162">
              <see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-163">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando un nombre de cadena y declarando información de <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span>
          </span>
          <span data-ttu-id="4b88c-164">Un <see cref="T:System.Xaml.XamlMember" /> que se construye con esta firma tiene limitaciones importantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-165">A <xref:System.Xaml.XamlMember> que se construye con el <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma devuelve `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-166">Para una ruta de acceso de carga que implica <xref:System.Xaml.XamlObjectWriter>, dicho miembro no se puede escribir en un gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="4b88c-167">Mediante la implementación de servicios XAML de .NET Framework, el <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> llamarlos inicia un <xref:System.Xaml.XamlObjectWriterException> cuando lo relevante <xref:System.Xaml.XamlMember> informes `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-168">No debería construir un <xref:System.Xaml.XamlMember> con <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` a menos que su implementación puede controlar las excepciones de <xref:System.Xaml.XamlObjectWriter>, o tienen otras maneras de ajustar la <xref:System.Xaml.XamlObjectWriter> comportamiento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="4b88c-169">Por ejemplo, puede true de la implementación de una o varias de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="4b88c-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="4b88c-170">El contexto de esquema XAML está disponible más adelante.</span><span class="sxs-lookup"><span data-stu-id="4b88c-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="4b88c-171">Utilice un patrón de invocador de miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="4b88c-172">Invalida deliberadamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> en un sistema de escritura XAML personalizado.</span><span class="sxs-lookup"><span data-stu-id="4b88c-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b88c-173">El valor de <paramref name="name" /> o <paramref name="declaringType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-173">
              <paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="4b88c-174">El nombre de cadena de la propiedad que se puede asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-174">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="4b88c-175">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="4b88c-176">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-177">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-178">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-179">Utilice este constructor si el miembro representa una propiedad que se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="4b88c-180">El nombre de cadena del evento que se puede asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-180">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="4b88c-181">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-182">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="4b88c-183">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-184">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-185">Utilice este constructor si el miembro representa a un miembro de evento que se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="4b88c-186">El nombre de cadena de la propiedad que se puede asociar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-186">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="4b88c-187">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="4b88c-188">
            <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="4b88c-189">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="4b88c-190">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-191">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-192">Utilice este constructor si el miembro representa a un miembro de propiedad que se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-193">Obtiene el <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-194">
            <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-195">Este valor se establece normalmente durante la inicialización y no suele ser `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b88c-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> constructores puede pasar en la información para la inicialización.</span><span class="sxs-lookup"><span data-stu-id="4b88c-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="4b88c-197">Mediante una llamada directamente a los constructores base, la inicialización de <xref:System.Xaml.XamlMember> las clases derivadas pueden omitir algunas de las comprobaciones de valor que se realizan en la clase base.</span><span class="sxs-lookup"><span data-stu-id="4b88c-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="4b88c-198">Por lo tanto, la inicialización derivada puede cambiar la información de relación de miembro de tipo informó de un miembro XAML para que ya no se alinea de la manera esperada con la información del sistema de tipo de su declaración de CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="4b88c-199">Para comprobaciones crítico para la seguridad de la declaración de información de tipo, use el tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-200">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se usa para la carga diferida de objetos declarados en XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-201">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-202">Al llamar a <xref:System.Xaml.XamlMember.DeferringLoader%2A> invoca <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-203">Este comportamiento se produce en casos donde la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-204">Obtiene una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="4b88c-205">Indican los miembros donde existen relaciones de dependencia para el orden de inicialización con respecto a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-206">Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-207">Al llamar a <xref:System.Xaml.XamlMember.DependsOn%2A> invoca <xref:System.Xaml.XamlMember.LookupDependsOn%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-208">Este comportamiento se produce en casos donde la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="4b88c-209">El `DependsOn` patrón se puede aplicar a los casos del modelo de objeto que contradicen deliberadamente una regla XAML general.</span><span class="sxs-lookup"><span data-stu-id="4b88c-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="4b88c-210">La regla XAML general es que los miembros de un tipo que no se pasan como texto de inicialización (o por un método de fábrica en XAML 2009) deben poder asignarse en cualquier orden.</span><span class="sxs-lookup"><span data-stu-id="4b88c-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="4b88c-211">Aplicando un `DependsOn` de modelo a un miembro, puede indicar a los escritores de XAML que procesen siempre el miembro que se hace referencia antes de este miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="4b88c-212">Puede aplicar este modelo en situaciones donde el valor del miembro actual requiere contexto u otra información que solo está disponible después de establece el otro miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="4b88c-213">El `DependsOn` patrón debe aplicarse con prudencia y reservado para escenarios de propiedad donde sirve para un propósito arquitectónico.</span><span class="sxs-lookup"><span data-stu-id="4b88c-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="4b88c-214">Gran número de dependencias tiene el potencial para reducir el procesamiento de XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="4b88c-215">Además, es posible generar dependencias circulares, en cuyo caso el comportamiento de procesamiento de XAML es indefinido.</span><span class="sxs-lookup"><span data-stu-id="4b88c-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="4b88c-216">En el ejemplo se `DependsOn` escenarios de WPF incluyen ciertas propiedades en <xref:System.Windows.Controls.ControlTemplate> y <xref:System.Windows.DataTemplate>, en <xref:System.Windows.Trigger>y en <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-217">Indica si el objeto actual es igual que otro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-217">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4b88c-218">Objeto que se va a comparar con este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-218">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-219">Indica si el objeto actual es igual que otro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-219">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-220">
            <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-220">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4b88c-221">Objeto que se va a comparar con este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-221">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-222">Indica si el objeto actual es igual que otro objeto del mismo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-222">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-223">
            <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-223">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-224">Devuelve el código hash de este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-224">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-225">Código hash entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-225">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-226">Devuelve una lista de los espacios de nombres XAML donde este miembro XAML puede existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-226">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-227">Lista de identificadores de espacio de nombres XAML, en forma de cadenas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-227">A list of XAML namespace identifiers as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-228">La implementación predeterminada devuelve el <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> resultado de llamada la <xref:System.Xaml.XamlMember.DeclaringType%2A> que está asociado a este <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-229">Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-230">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-231">El `Invoker` patrón es una técnica avanzada de extensión de sistema de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="4b88c-232">El `Invoker` patrón proporciona una manera de insertar el comportamiento de asignación de tipos de esquema diferente, mientras se sigue usando definiciones de sistema de tipos XAML de los servicios XAML de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4b88c-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="4b88c-233">Si un <xref:System.Xaml.XamlMember.LookupInvoker%2A> invalidar devuelve `null`, o si la implementación predeterminada devuelve `null` porque carece del <xref:System.Xaml.XamlMember.UnderlyingMember%2A> para este <xref:System.Xaml.XamlMember>, el <xref:System.Xaml.XamlMember.Invoker%2A> propiedad devuelve <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4b88c-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="4b88c-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="4b88c-235">Esto es cierto para la mayoría de las operaciones que utilizan servicios XAML de .NET Framework y el contexto de esquema XAML predeterminado y donde ningún modelo específico invalidan `Invoker` patrones se pasan a la construcción de las entidades del sistema de tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="4b88c-236">Al llamar a <xref:System.Xaml.XamlMember.Invoker%2A> invoca <xref:System.Xaml.XamlMember.LookupInvoker%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-237">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se notifica como una propiedad de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-238">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> se notifica como propiedad de ambiente; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-238">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-239">Al llamar a <xref:System.Xaml.XamlMember.IsAmbient%2A> invoca <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-240">Este comportamiento se produce en las implementaciones donde la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="4b88c-241">Comprobar las propiedades de ambiente es normalmente forman parte de la lógica de procesamiento de XAML para asegurarse de que los objetos y los valores que se basan en el uso de ambiente para la calificación de tipo pueden funcionar correctamente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="4b88c-242">Las API de servicios XAML de .NET Framework y el contexto de esquema XAML predeterminado rellena este valor basado en atribución con <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="4b88c-243">La implementación predeterminada de <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> usa este existente <xref:System.Windows.Markup.AmbientAttribute> técnica y devuelve `true` si <xref:System.Windows.Markup.AmbientAttribute> existe en una declaración de miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="4b88c-244"><xref:System.Windows.Markup.AmbientAttribute> no se encuentra en los miembros de varios tipos WPF, que incluyen <xref:System.Windows.Application>, <xref:System.Windows.Setter>, y <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="4b88c-245">También se encuentra en la <xref:System.Windows.ResourceDictionary> tipo, que indica la existencia de que cualquier miembro que usa <xref:System.Windows.ResourceDictionary> como su tipo debería estar considerado ambiente aun cuando el miembro no tiene el atributo específicamente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-246">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-247">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-247">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-248">El <xref:System.Xaml.XamlMember.IsAttachable%2A> valor se inicializa en función de qué constructor se utiliza para construir un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-249">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-250">Es <see langword="true" /> si <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-250">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-251">El <xref:System.Xaml.XamlMember.IsDirective%2A> valor se inicializa en función de qué constructor se utiliza para construir un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="4b88c-252">La base de <xref:System.Xaml.XamlMember> constructores inicializan para que <xref:System.Xaml.XamlMember.IsDirective%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="4b88c-253">Sin embargo, el <xref:System.Xaml.XamlDirective> clase (una <xref:System.Xaml.XamlMember> clase derivada) inicializa para que <xref:System.Xaml.XamlMember.IsDirective%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="4b88c-254">Si desea informar <xref:System.Xaml.XamlMember.IsDirective%2A> como `true` a los llamadores de una clase de esquema XAML personalizada para los miembros XAML, asegúrese de que derivan de <xref:System.Xaml.XamlDirective> porque esa es la única manera de habilitar ese comportamiento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-255">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-256">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-256">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-257">Al llamar a <xref:System.Xaml.XamlMember.IsEvent%2A> invoca <xref:System.Xaml.XamlMember.LookupIsEvent%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-258">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-259">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-259">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-260">Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-261">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-262">Al llamar a <xref:System.Xaml.XamlMember.IsReadOnly%2A> invoca <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-263">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro con un descriptor de acceso <see langword="get" /> público invocable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-264">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="get" /> público invocable; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-264">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-265">El <xref:System.Xaml.XamlMember.IsReadPublic%2A> valor comprueba si la <xref:System.Xaml.XamlMember.DeclaringType%2A> es público.</span><span class="sxs-lookup"><span data-stu-id="4b88c-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="4b88c-266">Si <xref:System.Xaml.XamlMember.DeclaringType%2A> es no público, el `get` descriptor de acceso no es invocable de manera práctica y <xref:System.Xaml.XamlMember.IsReadPublic%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="4b88c-267">Al llamar a <xref:System.Xaml.XamlMember.IsReadPublic%2A> invoca <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b88c-268">El <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> método es virtual y por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="4b88c-269">El reemplazo tiene el potencial de cambiar (malintencionadamente o de otro modo) la información de acceso que se notifica de un miembro XAML para que ya no se alinea de la manera esperada con la información de acceso del sistema de tipo de su declaración de CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="4b88c-270">Para cualquier comprobación crítica para la seguridad de niveles de acceso, use el tipo subyacente de CLR en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-271">Obtiene un valor que indica si el sistema de respaldo usado para la resolución de tipos y de miembros no puede resolver el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-272">Es <see langword="true" /> si el miembro no se puede resolver y <see langword="false" /> si el miembro se puede resolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-272">
              <see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-273">A <xref:System.Xaml.XamlMember> que se construye con el <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma devuelve `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-274">Para una ruta de acceso de carga que implica <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> con `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> no se puede escribir en un gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="4b88c-275">En las implementaciones predeterminadas de la API de servicios XAML de .NET Framework, el <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> llamarlos inicia un <xref:System.Xaml.XamlObjectWriterException> cuando lo relevante <xref:System.Xaml.XamlMember> informes `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-276">No debería construir un <xref:System.Xaml.XamlMember> que tiene un valor de `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> a menos que su implementación puede controlar las excepciones de <xref:System.Xaml.XamlObjectWriter>, o tienen otras maneras de ajustar la <xref:System.Xaml.XamlObjectWriter> comportamiento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="4b88c-277">Al llamar a <xref:System.Xaml.XamlMember.IsUnknown%2A> invoca <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-278">Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-279">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-280">Al llamar a <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invoca <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-281">Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público invocable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-282">Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="set" /> público invocable; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-282">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-283">El <xref:System.Xaml.XamlMember.IsWritePublic%2A> valor tiene en cuenta si la <xref:System.Xaml.XamlMember.DeclaringType%2A> es público como parte de la determinación.</span><span class="sxs-lookup"><span data-stu-id="4b88c-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="4b88c-284">Si <xref:System.Xaml.XamlMember.DeclaringType%2A> es no público, el `set` descriptor de acceso no es invocable de manera práctica y <xref:System.Xaml.XamlMember.IsWritePublic%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="4b88c-285">Al llamar a <xref:System.Xaml.XamlMember.IsWritePublic%2A> invoca <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b88c-286">El <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> método es virtual y por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="4b88c-287">El reemplazo tiene el potencial de cambiar (malintencionadamente o de otro modo) la información de acceso que se notifica de un miembro XAML para que ya no se alinea de la manera esperada con la información de acceso del sistema de tipo de su declaración de CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="4b88c-288">Para cualquier comprobación crítica para la seguridad de niveles de acceso, use el tipo subyacente de CLR en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-289">Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-290">Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-291">Invalide este método para proporcionar la reflexión interna con una manera alternativa de obtener valores de atributo CLR.</span><span class="sxs-lookup"><span data-stu-id="4b88c-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="4b88c-292">En ausencia de una invalidación, el reflector interno usa la lógica de reflexión de CLR típica como llamadas a <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-293">La implementación predeterminada devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-294">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga diferida de objetos declarados en XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-295">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-296">Este método se invoca cuando un llamador recibe un valor de la <xref:System.Xaml.XamlMember.DeferringLoader%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="4b88c-297">Invalide este método si desea <xref:System.Xaml.XamlMember.DeferringLoader%2A> para devolver un valor que es diferente del valor de que está habilitado por la reflexión interna predeterminada, y si también va a proporcionar personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="4b88c-298">La implementación predeterminada devuelve un objeto ya sea mediante la lectura de <xref:System.Windows.Markup.XamlDeferLoadAttribute> o mediante un <xref:System.Xaml.XamlDeferringLoader> del tipo declarativo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="4b88c-299">Si no hay ningún objeto está disponible, este método puede devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-300">Devuelve una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="4b88c-301">Los elementos de la lista notifican los miembros en los que existen relaciones de dependencia para el orden de inicialización con respecto a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-302">Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-303">Este método se invoca cuando un llamador recibe un valor de la <xref:System.Xaml.XamlMember.DependsOn%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="4b88c-304">Invalide este método si desea <xref:System.Xaml.XamlMember.DependsOn%2A> para devolver un valor que es diferente del valor de que está habilitado por la reflexión interna predeterminada, y si también va a proporcionar personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="4b88c-305">Las implementaciones de lector y escritor de XAML de WPF atribuye este caso con <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="4b88c-306">La implementación predeterminada usa esta existente <xref:System.Windows.Markup.DependsOnAttribute> técnica.</span><span class="sxs-lookup"><span data-stu-id="4b88c-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="4b88c-307">Invalide este método si no usas <xref:System.Windows.Markup.DependsOnAttribute> para este propósito y piensa reemplazar esa técnica para indicar el orden de procesamiento de la propiedad con su propia técnica.</span><span class="sxs-lookup"><span data-stu-id="4b88c-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="4b88c-308">Si no piensa admitir un orden de procesamiento de propiedad, puede usar la implementación predeterminada porque no devuelve ningún resultado, lo que es adecuado.</span><span class="sxs-lookup"><span data-stu-id="4b88c-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="4b88c-309">Se trata de una lista de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4b88c-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-310">Devuelve un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-311">Información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este objeto <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-312">Este método se invoca mediante llamadas a <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="4b88c-313">La implementación predeterminada no requiere que un <xref:System.Xaml.XamlMember> se construye mediante uno de los constructores que pasan un inicial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="4b88c-314">Sin embargo, un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> valor debe existir para que la <xref:System.Xaml.XamlMember>; en caso contrario, la implementación predeterminada devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="4b88c-315">Invalide este método si también se deriva de <xref:System.Xaml.Schema.XamlMemberInvoker> y va a devolver la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="4b88c-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="4b88c-316">Si devuelve `null`, <xref:System.Xaml.XamlMember.Invoker%2A> devuelve <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> a los llamadores.</span><span class="sxs-lookup"><span data-stu-id="4b88c-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-317">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se considera una propiedad de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-318">Es <see langword="true" /> para notificar este <see cref="T:System.Xaml.XamlMember" /> como una propiedad de ambiente; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-318">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-319">Este método se invoca mediante llamadas internas que buscan información sobre propiedades de ambiente XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="4b88c-320">Comportamiento de la propiedad de ambiente se tiene en cuenta el comportamiento de API pública de lectores XAML y escritores de XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="4b88c-321">Estas llamadas internas que hacen referencia a <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> normalmente forman parte de la lógica de procesamiento de XAML para asegurarse de que los objetos y los valores que se basan en el uso de ambiente para la calificación de tipo pueden funcionar correctamente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="4b88c-322">La implementación de servicios XAML de .NET Framework predeterminada usa atributos de CLR para obtener esta información de reflexión a través de tipos de respaldo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="4b88c-323">En concreto, la implementación predeterminada busca <xref:System.Windows.Markup.AmbientAttribute> y devuelve `true` para <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> si <xref:System.Windows.Markup.AmbientAttribute> existe en una definición de miembro.</span><span class="sxs-lookup"><span data-stu-id="4b88c-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="4b88c-324">Invalide este método si no usas <xref:System.Windows.Markup.AmbientAttribute> para este propósito y piensa reemplazar esa técnica para indicar las propiedades de ambiente XAML con su propia técnica.</span><span class="sxs-lookup"><span data-stu-id="4b88c-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="4b88c-325">Ejemplo de las API de WPF que atribuir a <xref:System.Windows.Markup.AmbientAttribute> son <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> y <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-326">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-327">Es <see langword="true" /> para notificar que este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-327">
              <see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-328">Las comprobaciones predeterminadas de implementación si <xref:System.Xaml.XamlMember.UnderlyingMember%2A> es de tipo <xref:System.Reflection.EventInfo>y si no, devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="4b88c-329">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="4b88c-330">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si tiene metadatos disponible que pueden interpretarse para determinar XAML especializados escriba representaciones de sistema por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-331">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-332">Es <see langword="true" /> para indicar si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-332">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-333">La implementación predeterminada devuelve `true` si <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe, pero un complemento público `set` descriptor de acceso no existe, según lo determinado por la reflexión interna.</span><span class="sxs-lookup"><span data-stu-id="4b88c-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="4b88c-334">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="4b88c-335">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si tiene metadatos disponible que pueden interpretarse para determinar XAML especializados escriba representaciones de sistema por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-336">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-337">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-337">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-338">La implementación predeterminada devuelve resultados basados en reflexión interna o la negación de <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, procesamiento en ese orden.</span><span class="sxs-lookup"><span data-stu-id="4b88c-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="4b88c-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Devuelve si el propio miembro sea público; Devuelve `true` para un miembro público en un nonpublic el tipo declarativo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="4b88c-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> en su lugar, si también desea tener en cuenta la visibilidad del tipo declarativo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="4b88c-341">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="4b88c-342">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b88c-343">El <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> método es virtual y por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="4b88c-344">El reemplazo tiene el potencial de cambiar (malintencionadamente o de otro modo) la información de acceso que se notifica de un miembro XAML para que ya no se alinea de la manera esperada con la información de acceso del sistema de tipo de su declaración de CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="4b88c-345">Para cualquier comprobación crítica para la seguridad de niveles de acceso, use el tipo subyacente de CLR en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-346">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no puede ser resuelto por el sistema de respaldo que se usa para la resolución de tipos y miembros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-347">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no se puede resolver; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-347">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-348">Se puede invocar este método cuando el llamador obtiene un valor de <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="4b88c-349">La implementación predeterminada devuelve resultados que están basado en reflexión interna o comprobar si hay un `null` valo <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, procesamiento en ese orden.</span><span class="sxs-lookup"><span data-stu-id="4b88c-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="4b88c-350">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-351">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público pero no un descriptor de acceso <see langword="get" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-352">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-352">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-353">La implementación predeterminada devuelve `true` si un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe que tiene un complemento público `set` descriptor de acceso y un nonpublic `get` descriptor de acceso, según lo determinado por la reflexión interna.</span><span class="sxs-lookup"><span data-stu-id="4b88c-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="4b88c-354">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="4b88c-355">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-356">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-357">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que permite escritura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-357">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-358">La implementación predeterminada devuelve resultados basados en reflexión interna o la negación de <xref:System.Xaml.XamlMember.IsReadOnly%2A>, procesamiento en ese orden.</span><span class="sxs-lookup"><span data-stu-id="4b88c-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="4b88c-359">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="4b88c-360">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b88c-361">El <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> método es virtual y por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="4b88c-362">El reemplazo tiene el potencial de cambiar (malintencionadamente o de otro modo) la información de acceso que se notifica de un miembro XAML para que ya no se alinea de la manera esperada con la información de acceso del sistema de tipo de su declaración de CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="4b88c-363">Para cualquier comprobación crítica para la seguridad de niveles de acceso, use el tipo subyacente de CLR en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-364">Devuelve los caracteres de corchete de apertura y cierre de una extensión de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-364">Returns the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-365">Colección que contiene los caracteres de corchete de apertura y cierre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-365">A collection containing the opening and closing bracket characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-366">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-367">Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-368">La implementación predeterminada distingue entre los miembros que se pueden asociar y que no se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="4b88c-369">Para los miembros que no se puede asociar, <xref:System.Xaml.XamlMember.LookupTargetType%2A> siempre devuelve <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="4b88c-370">Para los miembros que se pueden asociar, <xref:System.Xaml.XamlMember.LookupTargetType%2A> devuelve un resultado basado en Examinar el <xref:System.Xaml.XamlMember.UnderlyingMember%2A> tipo de parámetro de descriptor de acceso e interpreta que el tipo se basa en el contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="4b88c-371">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="4b88c-372">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-373">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-374">
            <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-375">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="4b88c-376">Invalide este método si desea <xref:System.Xaml.XamlMember.Type%2A> para devolver un valor que es diferente del valor de que está habilitado por la reflexión interna predeterminada, y si también va a proporcionar personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="4b88c-377">La implementación predeterminada usa rutas de acceso de código diferentes y significados conceptuales para el valor devuelto <xref:System.Xaml.XamlType> que se basa en Si esto <xref:System.Xaml.XamlMember> representa una propiedad, método o evento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="4b88c-378">Para una propiedad, el valor devuelto <xref:System.Xaml.XamlType> es el tipo que establece la propiedad o devuelto por la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="4b88c-379">Para un evento, el valor devuelto <xref:System.Xaml.XamlType> es el tipo de controlador de eventos necesarios (un delegado en una implementación de CLR).</span><span class="sxs-lookup"><span data-stu-id="4b88c-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="4b88c-380">Para un método, <xref:System.Xaml.XamlType> es el tipo de valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="4b88c-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="4b88c-381">En cada caso, el contexto de esquema XAML se usa para evaluar el tipo XAML del tipo de sistema subyacente.</span><span class="sxs-lookup"><span data-stu-id="4b88c-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="4b88c-382">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="4b88c-383">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-384">Devuelve una implementación de convertidor de tipos que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-385">Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-386">La implementación predeterminada usa la lógica siguiente y el orden de procesamiento:</span><span class="sxs-lookup"><span data-stu-id="4b88c-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="4b88c-387">Si existen atributos en el nivel de miembro (<xref:System.ComponentModel.TypeConverterAttribute>), la información de atributo se usa para una llamada a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> en el contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="4b88c-388">Si <xref:System.Xaml.XamlMember.Type%2A> es válido, se devuelve un convertidor de tipos que está asociado con el tipo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="4b88c-389">Si el miembro es un evento, se devuelve un convertidor de tipo específico de evento.</span><span class="sxs-lookup"><span data-stu-id="4b88c-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="4b88c-390">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="4b88c-391">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-392">Devuelve un descriptor de acceso <see langword="get" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-393">
            <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="get" /> asociado o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-394">La implementación predeterminada interpreta la <xref:System.Xaml.XamlMember.UnderlyingMember%2A> propiedad como <xref:System.Reflection.PropertyInfo> y devuelve el valor de <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (con el parámetro establecido en `true`), lo que significa que el método devuelto puede ser no público.</span><span class="sxs-lookup"><span data-stu-id="4b88c-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="4b88c-395">Este comportamiento puede producir `null` para determinados casos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="4b88c-396">incluidos los casos en que no existe ningún descriptor de acceso asociado o el miembro no es una propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="4b88c-397">Este método se invoca cuando un llamador recibe un valor de la <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> propiedad asociada <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="4b88c-398">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="4b88c-399">Asegúrese de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, y <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que devuelvan resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="4b88c-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-400">Devuelve un objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-401">Objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-402">La implementación predeterminada devuelve la información de miembro subyacente, que se basa en construcción.</span><span class="sxs-lookup"><span data-stu-id="4b88c-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="4b88c-403">Si el <xref:System.Reflection.MemberInfo> objeto se construyó con una firma que no proporciona suficiente información para establecer el miembro subyacente, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="4b88c-404">Si un miembro subyacente se estableció durante la construcción, no es necesario llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="4b88c-405">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="4b88c-406">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="4b88c-407">Asegúrese de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, y <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que devuelvan resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="4b88c-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-408">Devuelve un descriptor de acceso <see langword="set" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-409">
            <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="set" /> asociado o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-410">La implementación predeterminada interpreta <xref:System.Xaml.XamlMember.UnderlyingMember%2A> como <xref:System.Reflection.PropertyInfo> y devuelve el valor de <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (con el parámetro establecido en `true`), lo que significa que el método devuelto puede ser no público.</span><span class="sxs-lookup"><span data-stu-id="4b88c-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="4b88c-411">Esto puede dar lugar `null` para determinados casos, incluidos los casos en que no hay ningún descriptor de acceso de este tipo o el miembro no es una propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="4b88c-412">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> en asociada <xref:System.Xaml.Schema.XamlMemberInvoker>. Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="4b88c-413">Asegúrese de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, y <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que devuelvan resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="4b88c-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-414">Devuelve una implementación de serializador de valor que está asociada a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-415">Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que está asociada a la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-416">La implementación predeterminada usa la lógica siguiente y el orden de procesamiento:</span><span class="sxs-lookup"><span data-stu-id="4b88c-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="4b88c-417">Si existen atributos en el nivel de miembro (<xref:System.Windows.Markup.ValueSerializerAttribute>), la información de atributo se usa para una llamada a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> en el contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="4b88c-418">Si <xref:System.Xaml.XamlMember.Type%2A> es válido, se devuelve un convertidor de valores que está asociado con el tipo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="4b88c-419">Si no se cumplen las condiciones anteriores, `null` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="4b88c-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="4b88c-420">Este método se invoca cuando un llamador recibe un valor de <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="4b88c-421">Invalide este método si desea notificar los resultados uniformes para toda una <xref:System.Xaml.XamlMember> clase derivada, o si dispone de especializado metadatos disponibles para determinarlo por caso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-422">Define los caracteres de corchete de apertura y cierre de una extensión de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-422">Defines the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-423">Colección que contiene los caracteres de corchete de apertura y cierre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-423">A collection containing the opening and closing bracket characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-424">Obtiene la cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-425">Cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-426">Este valor siempre se establece durante la construcción.</span><span class="sxs-lookup"><span data-stu-id="4b88c-426">This value is always set during construction.</span></span> <span data-ttu-id="4b88c-427">Los constructores que se implementan mediante <xref:System.Xaml.XamlMember> normalmente produce una excepción si no se especifica un nombre inicial; por lo tanto, no espera que esta propiedad para que sea `null` o una cadena vacía, si está utilizando las implementaciones predeterminadas de servicios XAML de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4b88c-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="4b88c-428">[XamlName (gramática)](~/docs/framework/xaml-services/xamlname-grammar.md) y las reglas de nomenclatura para el tipo CLR y los miembros no son una intersección exacta.</span><span class="sxs-lookup"><span data-stu-id="4b88c-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="4b88c-429">Es posible declarar un nombre de miembro que es legal bajo CLR pero no válido bajo la denominación de XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="4b88c-430">Debe evitar esta situación si es posible.</span><span class="sxs-lookup"><span data-stu-id="4b88c-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="4b88c-431">
            <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="4b88c-432">
            <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-433">Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen el mismo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-434">
            <see langword="true" /> si el valor de <paramref name="xamlMember1" /> es el mismo que el valor de <paramref name="xamlMember2" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-434">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="4b88c-435">
            <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="4b88c-436">
            <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b88c-437">Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen valores diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-438">Es <see langword="true" /> si el valor de <paramref name="xamlMember1" /> difiere del valor de <paramref name="xamlMember2" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-438">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-439">Obtiene el identificador URI único del espacio de nombres XAML que identifica el espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-440">Identificador del espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />, en forma de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-441">El <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> propiedad proporciona el mismo valor que llamar al método <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> y, a continuación, se obtiene la primera cadena de valor de la lista devuelta.</span><span class="sxs-lookup"><span data-stu-id="4b88c-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="4b88c-442">El espacio de nombres XAML preferido debe usarse al escribir al miembro de vuelta al texto u otras representaciones que conservan información del espacio de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-443">Obtiene un valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica cómo un diseñador visual debería procesar el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-444">Valor de la enumeración <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="4b88c-445">El valor predeterminado es <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-446">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-447">Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-448">El valor devuelto es diferente para los miembros que se pueden asociar y que no se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="4b88c-449">Para los miembros que no se puede asociar, <xref:System.Xaml.XamlMember.TargetType%2A> devuelve <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="4b88c-450">Para los miembros que se pueden asociar, <xref:System.Xaml.XamlMember.LookupTargetType%2A> devuelve un resultado que se basa en esta lógica:</span><span class="sxs-lookup"><span data-stu-id="4b88c-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="4b88c-451">Si la reflexión no puede resolver un respaldo (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), este método devuelve una constante interna que representa un tipo de objeto genérico.</span><span class="sxs-lookup"><span data-stu-id="4b88c-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="4b88c-452">Si la condición anterior no se aplica, <xref:System.Xaml.XamlMember.LookupTargetType%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="4b88c-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="4b88c-453">La implementación predeterminada devuelve un <xref:System.Xaml.XamlType> que se basa en el examen de los métodos que implementan el `get` y `set` descriptores de acceso.</span><span class="sxs-lookup"><span data-stu-id="4b88c-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="4b88c-454">Una clase puede reemplazar <xref:System.Xaml.XamlMember.LookupTargetType%2A> usar un comportamiento diferente como otros metadatos de forma que podría notificar los tipos de destino para los miembros que se puede asociar.</span><span class="sxs-lookup"><span data-stu-id="4b88c-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-455">Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b88c-456">Representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-457">Esta implementación devuelve <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-458">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-459">
            <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-460">Al llamar a <xref:System.Xaml.XamlMember.Type%2A> invoca <xref:System.Xaml.XamlMember.LookupType%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-461">Esto se produce cuando la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="4b88c-462">En el comportamiento predeterminado (ninguna <xref:System.Xaml.XamlMember.LookupType%2A> invalidar), el valor devuelto <xref:System.Xaml.XamlType> pueden tener diferentes significados conceptuales.</span><span class="sxs-lookup"><span data-stu-id="4b88c-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="4b88c-463">El significado que se aplica depende de si esto <xref:System.Xaml.XamlMember> representa una propiedad, método o evento, como se muestra en la lista siguiente:</span><span class="sxs-lookup"><span data-stu-id="4b88c-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="4b88c-464">Para una propiedad, el valor devuelto <xref:System.Xaml.XamlType> es el tipo que establece la propiedad o devuelto por la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4b88c-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="4b88c-465">Para un evento, el valor devuelto <xref:System.Xaml.XamlType> es el tipo de controlador de eventos necesarios (un delegado en una implementación de CLR).</span><span class="sxs-lookup"><span data-stu-id="4b88c-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="4b88c-466">Para un método, <xref:System.Xaml.XamlType> es el tipo de valor devuelto de ese método, que puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="4b88c-467">En cada caso, el contexto de esquema XAML se usa para evaluar el tipo XAML del tipo de respaldo.</span><span class="sxs-lookup"><span data-stu-id="4b88c-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-468">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se puede usar para la construcción de la conversión de tipos de objetos XAML declarados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-469">Valor <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción <see cref="T:System.ComponentModel.TypeConverter" /> en el tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-470">Al llamar a <xref:System.Xaml.XamlMember.TypeConverter%2A> invoca <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-471">Este comportamiento se produce cuando la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="4b88c-472">Valor de las implementaciones que devuelven una propiedad no es null para <xref:System.Xaml.XamlMember.TypeConverter%2A> no son necesariamente un trabajo <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="4b88c-473">La siguiente es una lista de posibles valores devueltos no nulo para <xref:System.Xaml.XamlMember.TypeConverter%2A> y lo que representan estos valores:</span><span class="sxs-lookup"><span data-stu-id="4b88c-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="4b88c-474">El valor devuelto notifica un convertidor de tipos que se atribuye específicamente a ese miembro o más generalmente al tipo de destino del convertidor.</span><span class="sxs-lookup"><span data-stu-id="4b88c-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="4b88c-475">Este comportamiento suele ser qué mayoría sistemas de tipos XAML y procesadores XAML buscan en orden para crear instancias de un convertidor de tipos e invocar sus métodos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="4b88c-476">El valor devuelto notifica un convertidor de valores integrados.</span><span class="sxs-lookup"><span data-stu-id="4b88c-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="4b88c-477">Estos convertidores existen para determinadas operaciones internas realizadas por un escritor de XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="4b88c-478">En concreto, estos convertidores de valores integrados convierten los valores de cadena de atributo sin formato en las primitivas de nivel de lenguaje XAML.</span><span class="sxs-lookup"><span data-stu-id="4b88c-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="4b88c-479">La implementación de servicios XAML de .NET Framework, estas conversiones del tipo integrado reenvían a menudo a un convertidor de tipos que se define en el ensamblado del sistema.</span><span class="sxs-lookup"><span data-stu-id="4b88c-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="4b88c-480">Por ejemplo, una conversión para un <xref:System.Int32> valor tiene integrado reenvían conversión y por lo tanto, la <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> valor referencias <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="4b88c-481">El valor devuelto notifica el caso especial de un modelo de objetos sin restricciones; es decir, el <xref:System.Xaml.XamlMember> tiene un <xref:System.Xaml.XamlMember.Type%2A> valo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="4b88c-482">En este caso, el <xref:System.Xaml.Schema.XamlValueConverter%601> le indica que la <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> es {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="4b88c-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="4b88c-483">Sin embargo, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> es `null` porque ningún tipo o instancia está disponible para realizar esta conversión.</span><span class="sxs-lookup"><span data-stu-id="4b88c-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="4b88c-484">En su lugar, el comportamiento del modelo de objetos no se puede determinar hasta el tiempo de ejecución, cuando el tiempo de ejecución de la tecnología concreta determina el control de su gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="4b88c-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="4b88c-485">Si puede tener acceso a un trabajo <xref:System.ComponentModel.TypeConverter> de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, puede invocar sus métodos de conversión.</span><span class="sxs-lookup"><span data-stu-id="4b88c-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="4b88c-486">Sin embargo, muchos de los métodos de conversión se basan en el contexto de servicio.</span><span class="sxs-lookup"><span data-stu-id="4b88c-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="4b88c-487">Si no tiene el mismo contexto de servicio disponible que espera el convertidor de tipos para su rol típico de la escritura de objetos para los gráficos de objetos, los métodos de convertidor pueden producir excepciones.</span><span class="sxs-lookup"><span data-stu-id="4b88c-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-488">Obtiene el objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está disponible para un miembro construido por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-489">Información <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR, según se convierte de los parámetros del constructor iniciales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span>
          </span>
          <span data-ttu-id="4b88c-490">Un <see cref="T:System.Xaml.XamlMember" /> que se construye con la firma <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-491">Al llamar a <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invoca <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b88c-492">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la serialización de valores de objetos declarados en XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b88c-493">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> en el tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b88c-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b88c-494">Al llamar a <xref:System.Xaml.XamlMember.ValueSerializer%2A> invoca <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="4b88c-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="4b88c-495">Este comportamiento se produce cuando la lógica de reflexión interna inicial aún no ha establecido la información.</span><span class="sxs-lookup"><span data-stu-id="4b88c-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="4b88c-496">No todos los casos que devuelven una propiedad no null valor <xref:System.Xaml.XamlMember.ValueSerializer%2A> son necesariamente un <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="4b88c-497">Vea <xref:System.Xaml.XamlMember.TypeConverter%2A>; las mismas consideraciones se aplican a <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b88c-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>