<Type Name="AttachablePropertyServices" FullName="System.Xaml.AttachablePropertyServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edb4bad6a7c43069c98b55ccfba2f6dc386f4ef0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444984" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttachablePropertyServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttachablePropertyServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AttachablePropertyServices" />
  <TypeSignature Language="VB.NET" Value="Public Class AttachablePropertyServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachablePropertyServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttachablePropertyServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7004d-101">Proporciona métodos de aplicación auxiliar estáticos que obtienen valores e información del método descriptor de acceso de una propiedad que se puede adjuntar y funcionan con un almacén de propiedades adjuntas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7004d-101">Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7004d-102">Mayoría de las funciones de esta clase se basa en un almacén de propiedad adjunta, que generalmente se implementa el <xref:System.Xaml.IAttachedPropertyStore> interfaz.</span><span class="sxs-lookup"><span data-stu-id="7004d-102">Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface.</span></span> <span data-ttu-id="7004d-103">Sin embargo, los parámetros para pasar el almacén en <xref:System.Xaml.AttachablePropertyServices> no se tipifica como la interfaz y en su lugar, son de tipo `object`.</span><span class="sxs-lookup"><span data-stu-id="7004d-103">However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`.</span></span> <span data-ttu-id="7004d-104">Esto es porque se puede pasar un objeto arbitrario y en este caso, se utiliza un almacén de propiedad adjuntable predeterminados internos.</span><span class="sxs-lookup"><span data-stu-id="7004d-104">This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.</span></span>  
  
 <span data-ttu-id="7004d-105">Procedimiento recomendado para el objeto arbitrario es pasar el objeto que estaría asociado con el almacén.</span><span class="sxs-lookup"><span data-stu-id="7004d-105">Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store.</span></span> <span data-ttu-id="7004d-106">No pase `null` para indicar que no tiene un <xref:System.Xaml.IAttachedPropertyStore> a usar.</span><span class="sxs-lookup"><span data-stu-id="7004d-106">Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use.</span></span> <span data-ttu-id="7004d-107">Pasar `null` entra en las rutas de código que no hacen nada.</span><span class="sxs-lookup"><span data-stu-id="7004d-107">Passing `null` enters code paths that do nothing.</span></span> <span data-ttu-id="7004d-108">Pasar un objeto que no es null, pero se evalúa como `null` en un intento <xref:System.Xaml.IAttachedPropertyStore> convierte, utiliza el almacén de propiedad que se puede asociar de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="7004d-108">Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyPropertiesTo(object instance, valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyPropertiesTo (instance As Object, array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyPropertiesTo(System::Object ^ instance, cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member CopyPropertiesTo : obj * System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.CopyPropertiesTo (instance, array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7004d-109">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-109">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="7004d-110">Matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-110">The destination array.</span>
          </span>
          <span data-ttu-id="7004d-111">La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-111">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7004d-112">Índice de origen en el que se va a realizar la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-112">The source index into which to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-113">Copia a una matriz de destino todos los pares propiedad-valor que se puede adjuntar de un almacén especificado de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-113">Copies all attachable property/value pairs from a specified attachable property store and into a destination array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7004d-114">Al llamar a este método invoca una subyacente <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementación que está restringido a un par de clave/valor, que podría ser el origen de excepciones que no aparecen en este tema.</span><span class="sxs-lookup"><span data-stu-id="7004d-114">Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedPropertyCount">
      <MemberSignature Language="C#" Value="public static int GetAttachedPropertyCount (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttachedPropertyCount(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttachedPropertyCount (instance As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetAttachedPropertyCount(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttachedPropertyCount : obj -&gt; int" Usage="System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7004d-115">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-115">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-116">Devuelve el recuento de las entradas de propiedades que se pueden adjuntar que se encuentran en el almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-116">Returns the count of the attachable property entries that are in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7004d-117">Recuento de enteros de las entradas del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-117">The integer count of entries in the store.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveProperty(object instance, class System.Xaml.AttachableMemberIdentifier name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveProperty (instance As Object, name As AttachableMemberIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RemoveProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name);" />
      <MemberSignature Language="F#" Value="static member RemoveProperty : obj * System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.RemoveProperty (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7004d-118">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-118">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7004d-119">Identificador de la entrada de propiedad adjuntable que se va a quitar del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-119">The identifier for the attachable property entry to remove from the store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-120">Quita la entrada para la propiedad que se puede asociar especificada del almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-120">Removes the entry for the specified attachable property from the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7004d-121">Es <see langword="true" /> si se encontró en el almacén y se quitó de él una entrada de propiedad adjuntable para <paramref name="name" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-121">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and removed from it; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7004d-122">Las tiendas son por instancia; por lo tanto, en un almacén, el `name` valor debe ser inequívoco.</span><span class="sxs-lookup"><span data-stu-id="7004d-122">Stores are per instance; therefore, in a store, the `name` value should be unambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProperty (instance As Object, name As AttachableMemberIdentifier, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetProperty : obj * System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.SetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7004d-123">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-123">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to use a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7004d-124">Identificador de la entrada de propiedad adjuntable para la que se establece un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-124">The identifier of the attachable property entry for which to set a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7004d-125">Valor que se va a establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-125">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-126">Establece un valor para la propiedad que se puede asociar especificada en el almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-126">Sets a value for the specified attachable property in the specified store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7004d-127">No se pudo establecer un valor en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-127">A value could not be set in the store.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7004d-128">
            <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-128">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty (instance As Object, name As AttachableMemberIdentifier, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7004d-129">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-129">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to use a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7004d-130">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-130">The identifier of the attachable property entry for which to get a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7004d-131">Parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-131">Out parameter.</span>
          </span>
          <span data-ttu-id="7004d-132">Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <c>name</c> existe en el almacén y tiene un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-132">When this method returns, contains the destination object for the value if <c>name</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-133">Intenta obtener un valor para la propiedad que se va a asociar indicada del almacén especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-133">Attempts to get a value for the specified attachable property in the specified store.</span>
          </span>
          <span data-ttu-id="7004d-134">No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-134">Does not throw an exception if the specific attachable property does not exist in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7004d-135">Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-135">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty&lt;T&gt; (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty&lt;T&gt;(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty(Of T) (instance As Object, name As AttachableMemberIdentifier, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7004d-136">El tipo esperado de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-136">The expected type of the output.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="7004d-137">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-137">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7004d-138">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-138">The identifier of the attachable property entry for which to get a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7004d-139">Parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-139">Out parameter.</span>
          </span>
          <span data-ttu-id="7004d-140">Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <c>name</c> existe en el almacén y tiene un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-140">When this method returns, contains the destination object for the value if <c>name</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7004d-141">Intenta obtener un valor para la propiedad que se puede adjuntar especificada del almacén indicado, devolviendo un formulario de resultado genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-141">Attempts to get a value for the specified attachable property in the specified store, returning a generic output form.</span>
          </span>
          <span data-ttu-id="7004d-142">No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-142">Does not throw an exception if the specific attachable property does not exist in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7004d-143">Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7004d-143">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>