<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttachablePropertyServices.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ffebc592a471cb22b852f78d3980b230f75ecd5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ffebc592a471cb22b852f78d3980b230f75ecd5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.</source>
          <target state="translated">Proporciona métodos de aplicación auxiliar estáticos que obtienen valores e información del método descriptor de acceso de una propiedad que se puede adjuntar y funcionan con un almacén de propiedades adjuntas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Most functionality in this class relies on an attached property store, which generally implements the <ph id="ph1">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> interface.</source>
          <target state="translated">Mayoría de las funciones de esta clase se basa en un almacén de propiedad adjunta, que generalmente se implementa el <ph id="ph1">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>However, parameters for passing the store into <ph id="ph1">&lt;xref:System.Xaml.AttachablePropertyServices&gt;</ph> are not typed as the interface and are instead typed as <ph id="ph2">`object`</ph>.</source>
          <target state="translated">Sin embargo, los parámetros para pasar el almacén en <ph id="ph1">&lt;xref:System.Xaml.AttachablePropertyServices&gt;</ph> no se tipifica como la interfaz y en su lugar, son de tipo <ph id="ph2">`object`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.</source>
          <target state="translated">Esto es porque se puede pasar un objeto arbitrario y en este caso, se utiliza un almacén de propiedad adjuntable predeterminados internos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store.</source>
          <target state="translated">Procedimiento recomendado para el objeto arbitrario es pasar el objeto que estaría asociado con el almacén.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Do not pass <ph id="ph1">`null`</ph> to indicate that you do not have an <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> to use.</source>
          <target state="translated">No pase <ph id="ph1">`null`</ph> para indicar que no tiene un <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> a usar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Passing <ph id="ph1">`null`</ph> enters code paths that do nothing.</source>
          <target state="translated">Pasar <ph id="ph1">`null`</ph> entra en las rutas de código que no hacen nada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Passing an object that is non-null, but evaluates as <ph id="ph1">`null`</ph> on an attempted <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> cast, uses the default attachable property store.</source>
          <target state="translated">Pasar un objeto que no es null, pero se evalúa como <ph id="ph1">`null`</ph> en un intento <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> convierte, utiliza el almacén de propiedad que se puede asociar de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The destination array.</source>
          <target state="translated">Matriz de destino.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The array is a generic array, should be passed undimensioned, and should have components of <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> and <ph id="ph2">&lt;see langword="object" /&gt;</ph>.</source>
          <target state="translated">La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> y <ph id="ph2">&lt;see langword="object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The source index into which to copy.</source>
          <target state="translated">Índice de origen en el que se va a realizar la copia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>Copies all attachable property/value pairs from a specified attachable property store and into a destination array.</source>
          <target state="translated">Copia a una matriz de destino todos los pares propiedad-valor que se puede adjuntar de un almacén especificado de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>Calling this method invokes an underlying <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.CopyTo%2A&gt;</ph> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.</source>
          <target state="translated">Al llamar a este método invoca una subyacente <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.CopyTo%2A&gt;</ph> implementación que está restringido a un par de clave/valor, que podría ser el origen de excepciones que no aparecen en este tema.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>Returns the count of the attachable property entries that are in the specified store.</source>
          <target state="translated">Devuelve el recuento de las entradas de propiedades que se pueden adjuntar que se encuentran en el almacén especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>The integer count of entries in the store.</source>
          <target state="translated">Recuento de enteros de las entradas del almacén.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>The identifier for the attachable property entry to remove from the store.</source>
          <target state="translated">Identificador de la entrada de propiedad adjuntable que se va a quitar del almacén.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>Removes the entry for the specified attachable property from the specified store.</source>
          <target state="translated">Quita la entrada para la propiedad que se puede asociar especificada del almacén especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and removed from it; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se encontró en el almacén y se quitó de él una entrada de propiedad adjuntable para <ph id="ph2">&lt;paramref name="name" /&gt;</ph>; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>Stores are per instance; therefore, in a store, the <ph id="ph1">`name`</ph> value should be unambiguous.</source>
          <target state="translated">Las tiendas son por instancia; por lo tanto, en un almacén, el <ph id="ph1">`name`</ph> valor debe ser inequívoco.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to use a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The identifier of the attachable property entry for which to set a value.</source>
          <target state="translated">Identificador de la entrada de propiedad adjuntable para la que se establece un valor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The value to set.</source>
          <target state="translated">Valor que se va a establecer.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>Sets a value for the specified attachable property in the specified store.</source>
          <target state="translated">Establece un valor para la propiedad que se puede asociar especificada en el almacén especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>A value could not be set in the store.</source>
          <target state="translated">No se pudo establecer un valor en el almacén.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to use a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>The identifier of the attachable property entry for which to get a value.</source>
          <target state="translated">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Out parameter.</source>
          <target state="translated">Parámetro de salida.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>When this method returns, contains the destination object for the value if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> exists in the store and has a value.</source>
          <target state="translated">Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> existe en el almacén y tiene un valor.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Attempts to get a value for the specified attachable property in the specified store.</source>
          <target state="translated">Intenta obtener un valor para la propiedad que se va a asociar indicada del almacén especificado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Does not throw an exception if the specific attachable property does not exist in the store.</source>
          <target state="translated">No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and a value was posted to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se encontró una entrada de propiedad que se puede asociar para <ph id="ph2">&lt;paramref name="name" /&gt;</ph> en el almacén y se envió un valor para <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>The expected type of the output.</source>
          <target state="translated">El tipo esperado de resultado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">Almacén específico de propiedades que se pueden adjuntar que implementa <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>The identifier of the attachable property entry for which to get a value.</source>
          <target state="translated">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Out parameter.</source>
          <target state="translated">Parámetro de salida.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>When this method returns, contains the destination object for the value if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> exists in the store and has a value.</source>
          <target state="translated">Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> existe en el almacén y tiene un valor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Attempts to get a value for the specified attachable property in the specified store, returning a generic output form.</source>
          <target state="translated">Intenta obtener un valor para la propiedad que se puede adjuntar especificada del almacén indicado, devolviendo un formulario de resultado genérico.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Does not throw an exception if the specific attachable property does not exist in the store.</source>
          <target state="translated">No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and a value was posted to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se encontró una entrada de propiedad que se puede asociar para <ph id="ph2">&lt;paramref name="name" /&gt;</ph> en el almacén y se envió un valor para <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>