<Type Name="AttachablePropertyServices" FullName="System.Xaml.AttachablePropertyServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edb4bad6a7c43069c98b55ccfba2f6dc386f4ef0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444984" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttachablePropertyServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttachablePropertyServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AttachablePropertyServices" />
  <TypeSignature Language="VB.NET" Value="Public Class AttachablePropertyServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachablePropertyServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttachablePropertyServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos de aplicación auxiliar estáticos que obtienen valores e información del método descriptor de acceso de una propiedad que se puede adjuntar y funcionan con un almacén de propiedades adjuntas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mayoría de las funciones de esta clase se basa en un almacén de propiedad adjunta, que generalmente se implementa el <xref:System.Xaml.IAttachedPropertyStore> interfaz. Sin embargo, los parámetros para pasar el almacén en <xref:System.Xaml.AttachablePropertyServices> no se tipifica como la interfaz y en su lugar, son de tipo `object`. Esto es porque se puede pasar un objeto arbitrario y en este caso, se utiliza un almacén de propiedad adjuntable predeterminados internos.  
  
 Procedimiento recomendado para el objeto arbitrario es pasar el objeto que estaría asociado con el almacén. No pase `null` para indicar que no tiene un <xref:System.Xaml.IAttachedPropertyStore> a usar. Pasar `null` entra en las rutas de código que no hacen nada. Pasar un objeto que no es null, pero se evalúa como `null` en un intento <xref:System.Xaml.IAttachedPropertyStore> convierte, utiliza el almacén de propiedad que se puede asociar de forma predeterminada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyPropertiesTo(object instance, valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyPropertiesTo (instance As Object, array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyPropertiesTo(System::Object ^ instance, cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member CopyPropertiesTo : obj * System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.CopyPropertiesTo (instance, array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <param name="array">Matriz de destino. La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</param>
        <param name="index">Índice de origen en el que se va a realizar la copia.</param>
        <summary>Copia a una matriz de destino todos los pares propiedad-valor que se puede adjuntar de un almacén especificado de propiedades que se pueden adjuntar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al llamar a este método invoca una subyacente <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementación que está restringido a un par de clave/valor, que podría ser el origen de excepciones que no aparecen en este tema.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedPropertyCount">
      <MemberSignature Language="C#" Value="public static int GetAttachedPropertyCount (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttachedPropertyCount(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttachedPropertyCount (instance As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetAttachedPropertyCount(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttachedPropertyCount : obj -&gt; int" Usage="System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <summary>Devuelve el recuento de las entradas de propiedades que se pueden adjuntar que se encuentran en el almacén especificado.</summary>
        <returns>Recuento de enteros de las entradas del almacén.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveProperty(object instance, class System.Xaml.AttachableMemberIdentifier name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveProperty (instance As Object, name As AttachableMemberIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RemoveProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name);" />
      <MemberSignature Language="F#" Value="static member RemoveProperty : obj * System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.RemoveProperty (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <param name="name">Identificador de la entrada de propiedad adjuntable que se va a quitar del almacén.</param>
        <summary>Quita la entrada para la propiedad que se puede asociar especificada del almacén especificado.</summary>
        <returns>Es <see langword="true" /> si se encontró en el almacén y se quitó de él una entrada de propiedad adjuntable para <paramref name="name" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las tiendas son por instancia; por lo tanto, en un almacén, el `name` valor debe ser inequívoco.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProperty (instance As Object, name As AttachableMemberIdentifier, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetProperty : obj * System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.SetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <param name="name">Identificador de la entrada de propiedad adjuntable para la que se establece un valor.</param>
        <param name="value">Valor que se va a establecer.</param>
        <summary>Establece un valor para la propiedad que se puede asociar especificada en el almacén especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">No se pudo establecer un valor en el almacén.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty (instance As Object, name As AttachableMemberIdentifier, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <param name="name">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
        <param name="value">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <c>name</c> existe en el almacén y tiene un valor.</param>
        <summary>Intenta obtener un valor para la propiedad que se va a asociar indicada del almacén especificado. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
        <returns>Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty&lt;T&gt; (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty&lt;T&gt;(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty(Of T) (instance As Object, name As AttachableMemberIdentifier, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo esperado de resultado.</typeparam>
        <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
        <param name="name">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
        <param name="value">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <c>name</c> existe en el almacén y tiene un valor.</param>
        <summary>Intenta obtener un valor para la propiedad que se puede adjuntar especificada del almacén indicado, devolviendo un formulario de resultado genérico. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
        <returns>Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>