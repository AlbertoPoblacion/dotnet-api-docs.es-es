<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlWriter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0eee4990fee035e3caee65baff737024203a8eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0eee4990fee035e3caee65baff737024203a8eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlWriter">
          <source>Provides default implementation and base class definitions for a XAML writer.</source>
          <target state="translated">Proporciona las definiciones de la implementación predeterminada y de clase base para un sistema de escritura XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlWriter">
          <source>This is not a working default XAML writer; you must either derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> and implement its abstract members, or use an existing <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> derived class.</source>
          <target state="translated">No es un sistema de escritura XAML predeterminado activo; debe derivar de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> e implementar sus miembros abstractos o emplear una clase derivada <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> existente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The two most relevant practical derived classes of <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> are the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes, as the following details explain:</source>
          <target state="translated">Los dos prácticos más relevantes las clases derivadas de <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> son la <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> y <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> clases, tal y como se explican en los detalles siguientes:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> processes a XAML node set and produces an XML text file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> procesa un conjunto de nodos XAML y genera un archivo de texto XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</source>
          <target state="translated">Esta clase puede usarse para la serialización o como parte de la función de una herramienta que funciona con la representación en memoria de XAML y genera el resultado del archivo XAML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes a XAML node set and produces an object graph.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> procesa un conjunto de nodos XAML y genera un gráfico de objetos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>This class might be used as part of a full or partial customization of a technology's XAML parser.</source>
          <target state="translated">Esta clase puede usarse como parte de una personalización completa o parcial del analizador de XAML de una tecnología.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> is a class for settings that are used by a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>; however, by default, the <ph id="ph3">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> class does not hold any specific settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> es una clase de configuración que se utiliza en una <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>; sin embargo, de forma predeterminada, la <ph id="ph3">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> clase no contiene ninguna configuración específica.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> base constructor does not use this settings class as an argument, nor does any other <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph> member.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> constructor base no utiliza esta clase de configuración como un argumento, ni tampoco ningún otro <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph> miembro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes include their own settings classes as construction arguments.</source>
          <target state="translated">En su lugar, el <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> y <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> clases incluyen sus propias clases de configuración como argumentos de construcción.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>These settings classes are <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">Estas clases de configuración son <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> y <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The settings classes define actual settings values and are based on <ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph>, so that they can use the <ph id="ph2">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> merge feature.</source>
          <target state="translated">Las clases de configuración, defina los valores de configuración real y se basan en <ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph>, de modo que puede usar el <ph id="ph2">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> función de combinación.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Close">
          <source>Closes the XAML writer object.</source>
          <target state="translated">Cierra el objeto de sistema de escritura XAML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.Close">
          <source>In the base implementation, calling <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.Close%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;</ph> method with the <ph id="ph3">`isDisposing`</ph> parameter as <ph id="ph4">`true`</ph>.</source>
          <target state="translated">En la implementación base, llamar a <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.Close%2A&gt;</ph> llamadas el <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;</ph> método con el <ph id="ph3">`isDisposing`</ph> parámetro como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the managed resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar los recursos administrados; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source>You must call the base class to get <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
          <target state="translated">Debe llamar a la clase base para obtener <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</ph> <ph id="ph2"> = </ph> <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlWriter.IsDisposed">
          <source>Gets whether <ph id="ph1">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> has been called.</source>
          <target state="translated">Obtiene un valor que indica si se ha llamado al método <ph id="ph1">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlWriter.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> has been called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha llamado a <ph id="ph2">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlWriter.SchemaContext">
          <source>When implemented in a derived class, gets the active XAML schema context.</source>
          <target state="translated">Cuando se implementa en una clase derivada, obtiene el contexto de esquema XAML activo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlWriter.SchemaContext">
          <source>The active XAML schema context.</source>
          <target state="translated">Contexto de esquema XAML activo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
          <source>See <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>.</source>
          <target state="translated">Vea <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteEndMember">
          <source>When implemented in a derived class, produces the representation of an end member node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, produce la representación de un nodo de miembro final.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteEndObject">
          <source>When implemented in a derived class, produces the representation of an end object node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, produce la representación de un nodo de objeto final.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteGetObject">
          <source>When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</source>
          <target state="translated">Cuando se implementa en una clase derivada, produce un objeto para los casos en los que el objeto es un valor predeterminado o implícito de la propiedad que se está estableciendo, en lugar de especificarse como un valor de objeto discreto en el conjunto de nodos XAML de entrada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The namespace declaration to write.</source>
          <target state="translated">Declaración de espacio de nombres que se va a escribir.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>When implemented in a derived class, writes a XAML namespace declaration node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, escribe un nodo de declaración de espacio de nombres XAML.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The reader to use for node determination.</source>
          <target state="translated">Lector que se va a usar para determinar el nodo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Performs switching based on node type from the XAML reader (<ph id="ph1">&lt;see cref="P:System.Xaml.XamlReader.NodeType" /&gt;</ph>) and calls the relevant <ph id="ph2">&lt;see langword="Write" /&gt;</ph> method for the writer implementation.</source>
          <target state="translated">Realiza el cambio basándose en el tipo de nodo del lector XAML (<ph id="ph1">&lt;see cref="P:System.Xaml.XamlReader.NodeType" /&gt;</ph>) y llama al método <ph id="ph2">&lt;see langword="Write" /&gt;</ph> pertinente para la implementación del sistema de escritura.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Notes for Inheritors</source>
          <target state="translated">Notas para los herederos</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> method is not a virtual method because it has practical implementation for all existing <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> método no es un método virtual porque tiene la implementación práctica para todas las existentes <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Based on <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls into the <ph id="ph3">`Write`</ph> virtual members that are dedicated to particular node types.</source>
          <target state="translated">En función de <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> llama a la <ph id="ph3">`Write`</ph> los miembros virtuales dedicadas a tipos de nodo concreto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls in your logic.</source>
          <target state="translated">Si tiene un escenario de escritura de XAML avanzado que expande el sistema de tipos XAML y el concepto de flujo de nodo XAML es un nuevo se definen los tipos de nodos, no use <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> llama en su lógica.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</source>
          <target state="translated">En su lugar, debe proporcionar su propia alternativa para la lógica de cambio de tipo de nodo de la clase o en reemplazos virtuales.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The default implementation encountered a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> that is not in the default enumeration.</source>
          <target state="translated">La implementación predeterminada encontró <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> que no está en la enumeración predeterminada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The member node to write.</source>
          <target state="translated">Nodo de miembro que se va a escribir.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>When implemented in a derived class, writes the representation of a start member node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, escribe la representación de un nodo de miembro inicial.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The XAML type of the object to write.</source>
          <target state="translated">Tipo XAML del objeto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>When implemented in a derived class, writes the representation of a start object node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, escribe la representación de un nodo de objeto inicial.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
          <source>The value to write.</source>
          <target state="translated">Valor que se va a escribir.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
          <source>When implemented in a derived class, writes a value node.</source>
          <target state="translated">Cuando se implementa en una clase derivada, escribe un nodo de valor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>