<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50aef69f20a4e0e6146c69f5c8de036effb7f170" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51875063" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa un servicio que puede devolver un identificador de sistema de tipos de CLR para el tipo de destino. El tipo de destino es pertinente cuando se notifica indirectamente el tipo de destino de una operación de establecimiento de propiedad, mediante reflexión u otros mecanismos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo devuelto por <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> se resuelve desde la posición actual del flujo de nodo XAML mediante el contexto de esquema XAML actual.  
  
 Si usa el sistema de tipos XAML tal como está implementado por los servicios XAML de .NET Framework y acceso en estas condiciones, el contexto de servicio <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> devuelve el <xref:System.Xaml.XamlType.UnderlyingType%2A> según la información de sistema de tipos XAML disponible y el contexto de esquema XAML basado en CLR.  
  
 Este servicio es relevante para las situaciones donde pura reflexión CLR u otros mecanismos podrían no proporcionar suficiente información sobre un tipo de destino. La siguiente es una lista de algunos escenarios pertinentes para <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   El sistema de tipos CLR informa de un tipo indirecto debido a cómo CLR define y utiliza los tipos y desea que un tipo de destino es true. Por ejemplo, las API en los servicios XAML de .NET Framework utilizan este servicio internamente cuando procesan los miembros de evento. Se notifican los eventos mediante reflexión CLR pura como un <xref:System.Delegate>.  
  
-   Desea asegurarse de que el tipo de destino de un uso del convertidor de tipos coincide con el tipo esperado que puede producir el convertidor de tipos. Este escenario es útil cuando se parametriza el tipo de destino o genéricos.  
  
-   Se llama el convertidor de valores de un uso que anidado en otro convertidor de valores. En este caso, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> el anidamiento se desenreda y devuelve el tipo de destino de la propiedad real que se va a establecer, en lugar de devolver el tipo de salida de cualquier convertidor que intervengan.  
  
 Pueden consultar los convertidores de tipos y extensiones de marcado <xref:System.Xaml.IDestinationTypeProvider> como un servicio en el contexto de servicio que proporciona un escritor de objetos XAML, cuando el escritor de objetos XAML invoca el comportamiento de conversión de valor. Para obtener más información, consulte [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) y [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Convertidores de tipos o extensiones de marcado para XAML</related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el <see cref="T:System.Type" /> de CLR que identifica el tipo de destino para el convertidor de tipos o la extensión de marcado pertinente.</summary>
        <returns>Valor de <see cref="T:System.Type" /> de CLR para el tipo de destino.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no tiene ningún parámetro de entrada. Qué devolver (y si se deben devolver algo distinto `null`) viene determinada por la posición del nodo actual en el flujo de nodo XAML.  
  
## <a name="service-implementers"></a>Implementadores de servicio  
 Si volver a implementar este servicio, el <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> método debe devolver el tipo que espera un convertidor de tipos o extensión de marcado que se comprueba con su tipo de conversión o la salida más específico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>