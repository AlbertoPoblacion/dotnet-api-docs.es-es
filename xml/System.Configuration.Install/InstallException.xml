<Type Name="InstallException" FullName="System.Configuration.Install.InstallException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7e14922b3fb82d4e1476493dd3a1e39290a4d76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378999" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstallException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InstallException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallException" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Excepción que se produce cuando se genera un error durante la fase en la que se confirma, se revierte o se desinstala una instalación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el siguiente ejemplo, además de los ejemplos de la <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructores, se forman parte de un ejemplo que muestra un ensamblado que tenga su propio programa de instalación. El instalador se denomina `MyInstaller`, que tiene un atributo `RunInstallerAttribute`, lo que indica que este instalador invocará [Installutil.exe (herramienta Installer)](~/docs/framework/tools/installutil-exe-installer-tool.md). [Installutil.exe (herramienta Installer)](~/docs/framework/tools/installutil-exe-installer-tool.md) llama a los métodos <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, <xref:System.Configuration.Install.Installer.Install%2A> y <xref:System.Configuration.Install.Installer.Uninstall%2A>. El código en <xref:System.Configuration.Install.Installer.Commit%2A> presupone que un archivo llamado `FileDoesNotExist.txt` existe antes de que se pueda confirmar la instalación del ensamblado. Si el archivo `FileDoesNotExist.txt` no existe, <xref:System.Configuration.Install.Installer.Commit%2A> genera un <xref:System.Configuration.Install.InstallException>. El mismo es el caso de <xref:System.Configuration.Install.Installer.Uninstall%2A> en que se realizará una desinstalación solo si un archivo denominado `FileDoesNotExist.txt` existe. En caso contrario, genera un <xref:System.Configuration.Install.InstallException>. En <xref:System.Configuration.Install.Installer.Rollback%2A>, se ejecuta un fragmento de código, que puede provocar una excepción. Si se produce la excepción, ésta se captura y un <xref:System.Configuration.Install.InstallException> se genera con la excepción que se pasa a él.  
  
> [!NOTE]
>  Ejecutar este ejemplo con la Ayuda de Installutil.exe. En el símbolo del sistema, escriba lo siguiente:  
  
 `Installutil InstallException.exe`  
  
 O bien  
  
 `Installutil /u InstallException.exe`  
  
 [!code-cpp[InstallException#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#1)]
 [!code-csharp[InstallException#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#1)]
 [!code-vb[InstallException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Install.InstallException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Install.InstallException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra el <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructor. Es una parte del ejemplo de la <xref:System.Configuration.Install.InstallException> clase.  
  
 En este ejemplo, Installutil.exe llama el <xref:System.Configuration.Install.Installer.Commit%2A> método. El código en <xref:System.Configuration.Install.Installer.Commit%2A> presupone que un archivo llamado `FileDoesNotExist.txt` existe antes de que se pueda confirmar la instalación del ensamblado. Si el archivo `FileDoesNotExist.txt` no existe, <xref:System.Configuration.Install.Installer.Commit%2A> genera un <xref:System.Configuration.Install.InstallException>.  
  
> [!NOTE]
>  Este ejemplo muestra cómo utilizar una de las versiones sobrecargadas de los <xref:System.Configuration.Install.InstallException> constructor. Para obtener otros ejemplos, vea los temas individuales de sobrecarga.  
  
 [!code-cpp[InstallException#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#2)]
 [!code-csharp[InstallException#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#2)]
 [!code-vb[InstallException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje que se va a mostrar al usuario.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Install.InstallException" /> y especifica el mensaje que se va a mostrar al usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra el <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructor. Es una parte del ejemplo de la <xref:System.Configuration.Install.InstallException> clase.  
  
 En este ejemplo, Installutil.exe llama el <xref:System.Configuration.Install.Installer.Uninstall%2A> método. Desinstalación solo sucederá si un archivo denominado `FileDoesNotExist.txt` existe. En caso contrario, genera un <xref:System.Configuration.Install.InstallException>.  
  
> [!NOTE]
>  Este ejemplo muestra cómo utilizar una de las versiones sobrecargadas de los <xref:System.Configuration.Install.InstallException> constructor. Para obtener otros ejemplos, vea los temas individuales de sobrecarga.  
  
 [!code-cpp[InstallException#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#4)]
 [!code-csharp[InstallException#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#4)]
 [!code-vb[InstallException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstallException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstallException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Install.InstallException" /> con datos serializados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje que se va a mostrar al usuario.</param>
        <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Install.InstallException" /> y especifica el mensaje que se va a mostrar al usuario y una referencia a la excepción interna que ha provocado esta excepción.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>