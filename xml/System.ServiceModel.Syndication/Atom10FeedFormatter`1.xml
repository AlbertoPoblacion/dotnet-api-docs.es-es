<Type Name="Atom10FeedFormatter&lt;TSyndicationFeed&gt;" FullName="System.ServiceModel.Syndication.Atom10FeedFormatter&lt;TSyndicationFeed&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a08ac689a58d5249ad55bbc7fd39bf446f24fc75" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32690725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Atom10FeedFormatter&lt;TSyndicationFeed&gt; : System.ServiceModel.Syndication.Atom10FeedFormatter where TSyndicationFeed : SyndicationFeednew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Atom10FeedFormatter`1&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt; extends System.ServiceModel.Syndication.Atom10FeedFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Atom10FeedFormatter(Of TSyndicationFeed)&#xA;Inherits Atom10FeedFormatter" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : SyndicationFeedgcnew()public ref class Atom10FeedFormatter : System::ServiceModel::Syndication::Atom10FeedFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSyndicationFeed">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.Syndication.Atom10FeedFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlRoot("feed", Namespace="http://www.w3.org/2005/Atom")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TSyndicationFeed">El tipo derivado de <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> que se va a serializar.</typeparam>
    <summary>Una clase que serializa las clases derivadas de <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> a y desde el formato Atom 1.0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta clase para serializar instancias de las clases derivadas de <xref:System.ServiceModel.Syndication.SyndicationFeed> y para crear instancias de las clases derivadas de <xref:System.ServiceModel.Syndication.SyndicationFeed> a partir de documentos XML que contienen fuentes Atom 1.0. Si debe serializar una instancia de <xref:System.ServiceModel.Syndication.SyndicationFeed>, utilice en su lugar el formateador <xref:System.ServiceModel.Syndication.Atom10FeedFormatter>.  
  
> [!NOTE]
>  La especificación Atom 1.0 permite especificar segundos fraccionarios en cualquiera de sus estructuras de fechas. Al serializar y deserializar, la implementación de WCF omite las fracciones de segundo.  
  
   
  
## Examples  
 El siguiente código muestra cómo crear una clase derivada de <xref:System.ServiceModel.Syndication.SyndicationFeed> y serializarla a Atom 1.0.  
  
 [!code-csharp[AtomFormatter#2](~/samples/snippets/csharp/VS_Snippets_CFX/atomformatter/cs/snippets.cs#2)]
 [!code-vb[AtomFormatter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/atomformatter/vb/snippets.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Atom10FeedFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Atom10FeedFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente código muestra cómo crear una clase derivada de <xref:System.ServiceModel.Syndication.SyndicationFeed> y serializarla a Atom 1.0.  
  
 [!code-csharp[AtomFormatter#3](~/samples/snippets/csharp/VS_Snippets_CFX/atomformatter/cs/snippets.cs#3)]
 [!code-vb[AtomFormatter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/atomformatter/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Atom10FeedFormatter (TSyndicationFeed feedToWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TSyndicationFeed feedToWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (feedToWrite As TSyndicationFeed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Atom10FeedFormatter(TSyndicationFeed feedToWrite);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="feedToWrite" Type="TSyndicationFeed" />
      </Parameters>
      <Docs>
        <param name="feedToWrite">La fuente que se va a serializar.</param>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> con la instancia derivada de <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente código muestra cómo crear una clase derivada de <xref:System.ServiceModel.Syndication.SyndicationFeed> y serializarla a Atom 1.0.  
  
 [!code-csharp[AtomFormatter#2](~/samples/snippets/csharp/VS_Snippets_CFX/atomformatter/cs/snippets.cs#2)]
 [!code-vb[AtomFormatter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/atomformatter/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFeedInstance">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Syndication.SyndicationFeed CreateFeedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Syndication.SyndicationFeed CreateFeedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.CreateFeedInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateFeedInstance () As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Syndication::SyndicationFeed ^ CreateFeedInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase derivada de <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <returns>Nueva instancia de la clase <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>