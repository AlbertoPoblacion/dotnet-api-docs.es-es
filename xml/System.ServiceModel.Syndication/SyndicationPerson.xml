<Type Name="SyndicationPerson" FullName="System.ServiceModel.Syndication.SyndicationPerson">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea6267fca2ea127b27ae9715cce6abb1b9eb3218" /><Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/27/2018" /><Meta Name="ms.locfileid" Value="50171950" /></Metadata><TypeSignature Language="C#" Value="public class SyndicationPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationPerson" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationPerson" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationPerson" />
  <TypeSignature Language="F#" Value="type SyndicationPerson = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa a un autor o colaborador de contenido de distribución.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los objetos <xref:System.ServiceModel.Syndication.SyndicationPerson> se pueden agregar a las colecciones de autores y colaboradores en los objetos <xref:System.ServiceModel.Syndication.SyndicationFeed> y <xref:System.ServiceModel.Syndication.SyndicationItem>.  
  
 Cuando se serializa a Atom 1.0, <xref:System.ServiceModel.Syndication.SyndicationPerson> se escribe como un elemento `<author>` o `<contributor>`.  
  
 Cuando se serializa a RSS 2.0, una instancia de <xref:System.ServiceModel.Syndication.SyndicationPerson> se escribe como un elemento `<managingEditor>`, `<a10:author>`o `<a10:contributor>`. La forma en la que se serializa una <xref:System.ServiceModel.Syndication.SyndicationPerson> depende del número de objetos <xref:System.ServiceModel.Syndication.SyndicationPerson> agregado a una <xref:System.ServiceModel.Syndication.SyndicationFeed> o a un <xref:System.ServiceModel.Syndication.SyndicationItem>, de a qué colección se agregan las instancias de <xref:System.ServiceModel.Syndication.SyndicationPerson> y del valor del parámetro `SerializeExtensionAsAtom` al constructor <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29>. Si se agrega una sola <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>), la <xref:System.ServiceModel.Syndication.SyndicationPerson> se serializa a un elemento `<managingEditor>`. Si se agrega más de una <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) y `SerializeExtensionsAsAtom` se establece en `true`, todos los objetos <xref:System.ServiceModel.Syndication.SyndicationPerson> se serializan a los elementos `<a10:author>`. Si `SerializeExtensionsAsAtom` se establece como `false`, la instancia <xref:System.ServiceModel.Syndication.SyndicationPerson> no se serializa. Todas las instancias de <xref:System.ServiceModel.Syndication.SyndicationPerson> agregadas a la colección <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A>) sólo se serializan si `SerializeExtensionsAsAtom` se establece como `true`, en cuyo caso se serializan a los elementos `<a10:contributor>`.  
  
   
  
## Examples  
 El código siguiente muestra cómo agregar <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores de una instancia <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationPerson#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#8)]
 [!code-vb[SyndicationPerson#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#8)]  
  
 El siguiente XML muestra cómo se serializa una <xref:System.ServiceModel.Syndication.SyndicationPerson> a Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 El siguiente XML muestra cómo una <xref:System.ServiceModel.Syndication.SyndicationPerson> se serializa a RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationPerson (System.ServiceModel.Syndication.SyndicationPerson source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationPerson source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationPerson(System::ServiceModel::Syndication::SyndicationPerson ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : System.ServiceModel.Syndication.SyndicationPerson -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationPerson" />
      </Parameters>
      <Docs>
        <param name="source">La instancia <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> para inicializar la nueva instancia.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> con la instancia especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson email" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Dirección de correo electrónico de la persona.</param>
        <summary>Inicializa una nueva instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> con la dirección de correo electrónico especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo muestra cómo llamar a este constructor.  
  
 [!code-csharp[SyndicationPerson#2](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#2)]
 [!code-vb[SyndicationPerson#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email, string name, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email, string name, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String, name As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email, System::String ^ name, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string * string * string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson (email, name, uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Dirección de correo electrónico de la persona.</param>
        <param name="name">Nombre de la persona.</param>
        <param name="uri">URI de la página web de la persona.</param>
        <summary>Inicializa una nueva instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> con la dirección de correo electrónico, el nombre y el URI (identificador uniforme de recursos) especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo muestra cómo llamar a este constructor.  
  
 [!code-csharp[SyndicationPerson#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#3)]
 [!code-vb[SyndicationPerson#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las extensiones de atributo para la <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Un diccionario que contiene una colección de extensiones de atributo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El modelo de objetos de distribución le permite agregar atributos personalizados a una instancia de <xref:System.ServiceModel.Syndication.SyndicationPerson>. Puede agregar cualquier atributo o valor XML válido.  
  
 Cuando se serializa a Atom 1.0, cualquier atributo o valor personalizado se escribe como un atributo en los elementos `<author>` o `<contributor>`. Cuando se serializa a RSS 2.0, cualquier atributo o valor personalizado se escribe como un atributo en los elementos `<managingEditor>`, `<a10:contributor>` o `<a10:author>`.  
  
   
  
## Examples  
 El código siguiente muestra cómo agregar una extensión de atributo a una instancia <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#9)]
 [!code-vb[SyndicationPerson#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#9)]  
  
 El siguiente XML muestra cómo se serializa la colección <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> a Atom 1.0.  
  
 [!code-xml[SyndicationPerson#4](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#4)]  
  
 El siguiente XML muestra cómo se serializa la colección <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> a RSS 2.0.  
  
 [!code-xml[SyndicationPerson#5](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationPerson Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="syndicationPerson.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de la instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> existente.</summary>
        <returns>Nueva instancia de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra cómo clonar una instancia <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#14](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#14)]
 [!code-vb[SyndicationPerson#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las extensiones de elemento para el <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value><see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> que contiene las extensiones de elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El modelo de objetos de distribución le permite agregar elementos XML personalizados a una instancia de <xref:System.ServiceModel.Syndication.SyndicationPerson>. Puede agregar cualquier elemento XML válido con tal de que el espacio de nombres del elemento y el espacio de nombres contenedor sean diferentes.  
  
 Cuando se serializa a Atom 1.0, cualquier elemento personalizado se escribe como un elemento XML dentro de un elemento `<author>` o `<contributor>`.  
  
 Cuando se serializa a RSS 2.0, cualquier elemento personalizado se escribe como un elemento XML dentro de los elementos `<managingEditor>`, `<a10:contributor>` o `<a10:author>`.  
  
   
  
## Examples  
 El código siguiente muestra cómo agregar una extensión de elemento a una instancia <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#10)]
 [!code-vb[SyndicationPerson#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#10)]  
  
 El siguiente XML muestra cómo se serializa la colección <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> a Atom 1.0.  
  
 [!code-xml[SyndicationPerson#6](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#6)]  
  
 El siguiente XML muestra cómo se serializa la colección <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> a RSS 2.0.  
  
 [!code-xml[SyndicationPerson#7](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberSignature Language="VB.NET" Value="Public Property Email As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Email { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Email : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece la dirección de correo electrónico de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Dirección de correo electrónico de la persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se serializa a Atom 1.0, la propiedad <xref:System.ServiceModel.Syndication.SyndicationPerson> se escribe como un elemento `<email>`. El elemento `<email>` aparece dentro de un elemento `<author>` o `<contributor>`, que depende de a qué colección (autores o colaboradores) se agregue la <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 Cuando se serializa a RSS 2.0, este valor se escribe como un elemento `<a10:email>`. El elemento `<a10:email>` aparece dentro de un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Si se agrega una única <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<email>` se escribe dentro del elemento `<managingEditor>`. Si se agrega más de una <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<email>` se escribe dentro de un elemento `<a10:author>`. Si la <xref:System.ServiceModel.Syndication.SyndicationPerson> se agrega a la colección de colaboradores, el elemento `<email>` se escribe dentro de un elemento `<a10:contributor>`.  
  
   
  
## Examples  
 El código siguiente muestra cómo establecer la dirección de correo electrónico de una instancia <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#11)]
 [!code-vb[SyndicationPerson#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#11)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> para Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> para RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece el nombre de <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Nombre de la persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se serializa a Atom 1.0, la propiedad <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> se escribe como un elemento `<name>`. El elemento `<name>` aparece dentro de un elemento `<author>` o `<contributor>`, que depende de a qué colección (autores o colaboradores) se agregue la <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 Cuando se serializa a RSS 2.0, la propiedad <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> se escribe como un elemento `<a10:name>`. El elemento `<a10:name>` aparece dentro de un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Si se agrega una única <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<a10:name>` se escribe dentro del elemento `<managingEditor>`. Si se agrega más de una <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<a10:name>` se escribe dentro del elemento `<a10:author>`. Si la <xref:System.ServiceModel.Syndication.SyndicationPerson> se agrega a la colección de colaboradores, el elemento `<a10:name>` se escribe dentro del elemento `<a10:contributor>`.  
  
   
  
## Examples  
 El código siguiente muestra cómo definir el nombre de una <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#12)]
 [!code-vb[SyndicationPerson#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#12)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> para Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> para RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationPerson.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del elemento.</param>
        <param name="ns">Espacio de nombres del elemento.</param>
        <param name="value">Atributo que se va a analizar.</param>
        <param name="version">La versión de distribución que se va a usar en el análisis.</param>
        <summary>Intenta analizar una extensión de atributo.</summary>
        <returns>Un valor que especifica si se analizó la extensión de atributo correctamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las extensiones de atributo son atributos personalizados que no están definidos en las características técnicas de Atom 1.0 o RSS 2.0. Se serializan como un atributo del elemento `<author>` o `<contributor>` para Atom 1.0, o del elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>` para RSS 2.0. Este método es un punto de la extensión que permite administrar la deserialización de una extensión de atributo personalizada. Para ello, debe derivar una clase de <xref:System.ServiceModel.Syndication.SyndicationPerson> e invalidar este método. Todas las extensiones de atributo desconocidas llaman a este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Se ha encontrado un XML no válido durante la lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationPerson.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
        <param name="version">Versión de distribución que se va a usar en el análisis.</param>
        <summary>Intenta analizar una extensión de elemento.</summary>
        <returns>Valor que especifica si se analizó la extensión de elemento correctamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las extensiones de elemento son elementos XML válidos que no se especifican en las especificaciones Atom 1.0 o RSS 2.0. Puede agregar cualquier elemento XML válido como una extensión, con tal de que su espacio de nombres sea diferente del espacio de nombres indicado. Este método es un punto de la extensión que permite administrar la deserialización de una extensión de elemento personalizada. Para ello, debe derivar una clase de <xref:System.ServiceModel.Syndication.SyndicationPerson> e invalidar este método. Todas las extensiones de elemento desconocidas llaman a este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Se ha encontrado un XML no válido durante la lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece el URI de la <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>URI del sitio web de la persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se serializa a Atom 1.0, la propiedad <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> se escribe como un elemento `<uri>`. El elemento `<uri>` aparece dentro de un elemento `<author>` o `<contributor>`, que depende de a qué colección (autores o colaboradores) se agregue la <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 Cuando se serializa a RSS 2.0, la propiedad <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> se escribe como un elemento `<a10:uri>`. El elemento `<a10:uri>` aparece dentro de un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Si se agrega una única <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<a10:uri>` se escribe dentro del elemento `<managingEditor>`. Si se agrega más de una <xref:System.ServiceModel.Syndication.SyndicationPerson> a la colección de autores, el elemento `<a10:uri>` se escribe dentro del elemento `<a10:author>`. Si la <xref:System.ServiceModel.Syndication.SyndicationPerson> se agrega a la colección de colaboradores, el elemento `<a10:uri>` se escribe dentro del elemento `<a10:contributor>`.  
  
   
  
## Examples  
 En el código siguiente se muestra cómo establecer el URI para una instancia de <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#13)]
 [!code-vb[SyndicationPerson#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#13)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> para Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 El siguiente XML muestra cómo se serializa la <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> para RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Xml.XmlReader" /> en el que se va a escribir.</param>
        <param name="version">Versión de distribución que se va a usar en la escritura.</param>
        <summary>Escribe las extensiones de atributo en el <see cref="T:System.Xml.XmlWriter" /> especificado utilizando la versión de distribución especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las extensiones de atributo son atributos personalizados que no están definidos en las características técnicas de Atom 1.0 o RSS 2.0. Se serializan como un atributo del elemento `<author>` o `<contributor>` para Atom 1.0, o del elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>` para RSS 2.0. Este método es un punto de la extensión que permite administrar la serialización de extensiones de atributo personalizadas. Para ello, debe derivar una clase de <xref:System.ServiceModel.Syndication.SyndicationLink> e invalidar este método. Todas las extensiones de atributo desconocidas llaman a este método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Xml.XmlReader" /> en el que se va a escribir.</param>
        <param name="version">Versión de distribución que se va a usar en la escritura.</param>
        <summary>Escribe las extensiones de elemento en el <see cref="T:System.Xml.XmlWriter" /> especificado utilizando la versión de distribución especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las extensiones de elemento son elementos XML válidos que no se especifican en las especificaciones Atom 1.0 o RSS 2.0. Puede agregar cualquier elemento XML válido como una extensión, con tal de que su espacio de nombres sea diferente del espacio de nombres indicado. Este método es un punto de la extensión que permite administrar la serialización de extensiones de elemento personalizadas. Para ello, debe derivar una clase de <xref:System.ServiceModel.Syndication.SyndicationPerson> e invalidar este método. Todas las extensiones de elemento desconocidas llaman a este método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>