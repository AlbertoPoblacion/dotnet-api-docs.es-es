<Type Name="GenericUriParser" FullName="System.GenericUriParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df1082446a95937cd93cd58c704e34204d3b971d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GenericUriParser : UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericUriParser extends System.UriParser" />
  <TypeSignature Language="DocId" Value="T:System.GenericUriParser" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericUriParser&#xA;Inherits UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericUriParser : UriParser" />
  <TypeSignature Language="F#" Value="type GenericUriParser = class&#xA;    inherit UriParser" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.UriParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Analizador personalizable para un URI jerárquico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si desea crear un analizador basado en un esquema conocido, utilice <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, o <xref:System.NewsStyleUriParser>.  
  
 Cuando se crea un analizador personalizable, se especifica el comportamiento del analizador pasando una combinación bit a bit de los valores disponibles en la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeración para el <xref:System.GenericUriParser> constructor.  
  
 Existente <xref:System.Uri?displayProperty=nameWithType> clase se ha ampliado para proporcionar compatibilidad con los identificadores de recursos internacionales (IRI) y los nombres de dominio internacionalizados (IDN). Los usuarios actuales no percibirán ningún cambio respecto al comportamiento de .NET Framework 2.0, a menos que habiliten IRI específicamente. Esto garantiza la compatibilidad de las aplicaciones con versiones anteriores de .NET Framework.  
  
 Todos los analizadores derivan <xref:System.GenericUriParser> no obtendrá compatibilidad con IRI e IDN de forma predeterminada. El <xref:System.GenericUriParserOptions.Default> opción no incluye IRI e IDN admite. Dos nuevos valores se agregan a la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeración para indicar si un analizador personalizado admita IRI e IDN.  
  
 Para obtener más información sobre la compatibilidad con IRI e IDN, consulte la sección Comentarios para el <xref:System.Uri?displayProperty=nameWithType> clase.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericUriParser (GenericUriParserOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.GenericUriParserOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As GenericUriParserOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenericUriParser(GenericUriParserOptions options);" />
      <MemberSignature Language="F#" Value="new GenericUriParser : GenericUriParserOptions -&gt; GenericUriParser" Usage="new System.GenericUriParser options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.GenericUriParserOptions" />
      </Parameters>
      <Docs>
        <param name="options">Especifica las opciones de <see cref="T:System.GenericUriParser" />.</param>
        <summary>Crea un analizador personalizable para un URI jerárquico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor como argumento a <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 Si desea crear un analizador basado en un esquema conocido, utilice <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, o <xref:System.NewsStyleUriParser>.  
  
 Cuando se crea un analizador personalizable, se especifica el comportamiento del analizador pasando una combinación bit a bit de los valores disponibles en la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeración para el <xref:System.GenericUriParser> constructor.  
  
 Existente <xref:System.Uri?displayProperty=nameWithType> clase se ha ampliado para proporcionar compatibilidad con los identificadores de recursos internacionales (IRI) y los nombres de dominio internacionalizados (IDN). Los usuarios actuales no percibirán ningún cambio respecto al comportamiento de .NET Framework 2.0, a menos que habiliten IRI específicamente. Esto garantiza la compatibilidad de las aplicaciones con versiones anteriores de .NET Framework.  
  
 Todos los analizadores derivan <xref:System.GenericUriParser> no obtendrá compatibilidad con IRI e IDN de forma predeterminada. El <xref:System.GenericUriParserOptions.Default> opción no incluye IRI e IDN admite. Dos nuevos valores se agregan a la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeración para indicar si un analizador personalizado admita IRI e IDN.  
  
 El tipo <xref:System.GenericUriParserOptions.IriParsing> indica que el analizador admite las reglas de análisis especificadas en RFC 3987 para los Identificadores de recursos internacionales (IRI). El uso de IRI viene determinado por los valores de configuración.  
  
 El tipo <xref:System.GenericUriParserOptions.Idn> indica que el analizador admite el análisis del Nombre de dominio internacionalizado (IDN) de los nombres de host. El uso de IDN viene determinado por los valores de configuración.  
  
 El valor de configuración para el <xref:System.Configuration.IdnElement?displayProperty=nameWithType> controla indirectamente la <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> valor de configuración que controla el procesamiento de IRI la <xref:System.Uri?displayProperty=nameWithType> clase. El procesamiento de IRI debe estar habilitado para que el procesamiento de IDN sea posible. Si el procesamiento de IRI está deshabilitado, el procesamiento de IDN se establecerá en el valor predeterminado, según el cual se usa el comportamiento de .NET Framework 2.0 para la compatibilidad y no se usan nombres IDN.  
  
 El atributo de nombre de dominio internacionalizado (IDN) sólo controla el procesamiento IDN. Todos los otra (por ejemplo, la normalización de caracteres) de procesamiento de IRI se realiza de forma predeterminada.  
  
 Para obtener más información sobre la compatibilidad con IRI e IDN, consulte la sección Comentarios para el <xref:System.Uri?displayProperty=nameWithType> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>