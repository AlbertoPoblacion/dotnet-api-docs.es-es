<Type Name="ConsoleKeyInfo" FullName="System.ConsoleKeyInfo">
  <TypeSignature Language="C#" Value="public struct ConsoleKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit ConsoleKeyInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ConsoleKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConsoleKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class ConsoleKeyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b3858-101">Describe la tecla presionada de la consola, incluidos el carácter representado por la tecla de consola y el estado de las teclas modificadoras MAYÚS, ALT y CTRL.</span><span class="sxs-lookup"><span data-stu-id="b3858-101">Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-102">El <xref:System.ConsoleKeyInfo> tipo no está pensado para ser creados por usuarios.</span><span class="sxs-lookup"><span data-stu-id="b3858-102">The <xref:System.ConsoleKeyInfo> type is not intended to be created by users.</span></span> <span data-ttu-id="b3858-103">En su lugar, se devuelve al usuario en respuesta a una llamada a la <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b3858-103">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b3858-104">El <xref:System.ConsoleKeyInfo> objeto describe el <xref:System.ConsoleKey> constante y el carácter Unicode, si existe, que corresponden a la tecla presionada de la consola.</span><span class="sxs-lookup"><span data-stu-id="b3858-104">The <xref:System.ConsoleKeyInfo> object describes the <xref:System.ConsoleKey> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="b3858-105">El <xref:System.ConsoleKeyInfo> objeto también describe, en una combinación bit a bit de <xref:System.ConsoleModifiers> valores, si uno o más teclas modificadoras MAYÚS, ALT o CTRL se presionaron al mismo tiempo la tecla de consola.</span><span class="sxs-lookup"><span data-stu-id="b3858-105">The <xref:System.ConsoleKeyInfo> object also describes, in a bitwise combination of <xref:System.ConsoleModifiers> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3858-106">En el ejemplo siguiente se muestra cómo utilizar un <xref:System.ConsoleKeyInfo> objeto en una operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="b3858-106">The following example demonstrates using a <xref:System.ConsoleKeyInfo> object in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ConsoleModifiers" />
    <altmember cref="T:System.ConsoleKey" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar, valuetype System.ConsoleKey key, bool shift, bool alt, bool control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char, key As ConsoleKey, shift As Boolean, alt As Boolean, control As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleKeyInfo(char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
        <Parameter Name="key" Type="System.ConsoleKey" />
        <Parameter Name="shift" Type="System.Boolean" />
        <Parameter Name="alt" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="b3858-107">Carácter Unicode correspondiente al parámetro <c>key</c>.</span><span class="sxs-lookup"><span data-stu-id="b3858-107">The Unicode character that corresponds to the <c>key</c> parameter.</span></span></param>
        <param name="key"><span data-ttu-id="b3858-108">Tecla de consola correspondiente al parámetro <c>keyChar</c>.</span><span class="sxs-lookup"><span data-stu-id="b3858-108">The console key that corresponds to the <c>keyChar</c> parameter.</span></span></param>
        <param name="shift">
          <span data-ttu-id="b3858-109"><see langword="true" /> para indicar que se presionó una tecla MAYÚS; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-109"><see langword="true" /> to indicate that a SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="alt">
          <span data-ttu-id="b3858-110"><see langword="true" /> para indicar que se presionó una tecla ALT; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-110"><see langword="true" /> to indicate that an ALT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="control">
          <span data-ttu-id="b3858-111"><see langword="true" /> para indicar que se presionó una tecla CTRL; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-111"><see langword="true" /> to indicate that a CTRL key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b3858-112">Inicializa una nueva instancia de la estructura <see cref="T:System.ConsoleKeyInfo" /> utilizando el carácter especificado, la tecla de consola y las teclas modificadoras.</span><span class="sxs-lookup"><span data-stu-id="b3858-112">Initializes a new instance of the <see cref="T:System.ConsoleKeyInfo" /> structure using the specified character, console key, and modifier keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-113">Este tipo no pretende ser creadas por los usuarios.</span><span class="sxs-lookup"><span data-stu-id="b3858-113">This type is not intended to be created by users.</span></span> <span data-ttu-id="b3858-114">En su lugar, se devuelve al usuario en respuesta a una llamada a la <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b3858-114">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b3858-115">El <xref:System.ConsoleKeyInfo> tipo no especifica si se presionó la tecla modificadora izquierda o derecha de MAYÚS, ALT o CTRL.</span><span class="sxs-lookup"><span data-stu-id="b3858-115">The <xref:System.ConsoleKeyInfo> type does not specify whether the left or right SHIFT, ALT, or CTRL modifier key was pressed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3858-116">El valor numérico del parámetro <paramref name="key" /> es menor que 0 o mayor que 255.</span><span class="sxs-lookup"><span data-stu-id="b3858-116">The numeric value of the <paramref name="key" /> parameter is less than 0 or greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3858-117">Obtiene un valor que indica si un objeto o un objeto <see cref="T:System.ConsoleKeyInfo" /> especificado es igual al objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-117">Gets a value indicating whether an object or specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ConsoleKeyInfo obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ConsoleKeyInfo obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ConsoleKeyInfo obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b3858-118">Objeto para comparar con el objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-118">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="b3858-119">Obtiene un valor que indica si el objeto <see cref="T:System.ConsoleKeyInfo" /> especificado es igual al objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-119">Gets a value indicating whether the specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="b3858-120"><see langword="true" /> si <paramref name="obj" /> es igual al objeto <see cref="T:System.ConsoleKeyInfo" /> actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-120"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-121">Dos <xref:System.ConsoleKeyInfo> objetos son iguales si sus correspondientes <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, y <xref:System.ConsoleKeyInfo.Modifiers%2A> las propiedades son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-121">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="b3858-122">El <xref:System.ConsoleKeyInfo.Equals%2A> método ofrece un rendimiento ligeramente mejor que la <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> método porque no tiene que convertir `obj` a un objeto.</span><span class="sxs-lookup"><span data-stu-id="b3858-122">The <xref:System.ConsoleKeyInfo.Equals%2A> method performs slightly better than the <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert `obj` to an object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3858-123">Objeto para comparar con el objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-123">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="b3858-124">Obtiene un valor que indica si el objeto especificado es igual al objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-124">Gets a value indicating whether the specified object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="b3858-125"><see langword="true" /> si <paramref name="value" /> es un objeto <see cref="T:System.ConsoleKeyInfo" /> y es igual al objeto <see cref="T:System.ConsoleKeyInfo" /> actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-125"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.ConsoleKeyInfo" /> object and is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-126">Dos <xref:System.ConsoleKeyInfo> objetos son iguales si sus correspondientes <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, y <xref:System.ConsoleKeyInfo.Modifiers%2A> las propiedades son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-126">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3858-127">En el ejemplo siguiente se muestra el <xref:System.ConsoleKeyInfo.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b3858-127">The following example demonstrates the <xref:System.ConsoleKeyInfo.Equals%2A> method.</span></span>  
  
 [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cpp/consolekeyinfo.equals.cpp#1)]
 [!code-csharp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cs/equals.cs#1)]
 [!code-vb[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/vb/equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3858-128">Devuelve el código hash del objeto <see cref="T:System.ConsoleKeyInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="b3858-128">Returns the hash code for the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3858-129">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="b3858-129">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-130">El valor devuelto por la <xref:System.ConsoleKeyInfo.GetHashCode%2A> método no es adecuado para distinguir una <xref:System.ConsoleKeyInfo> objeto desde otro.</span><span class="sxs-lookup"><span data-stu-id="b3858-130">The value returned by the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method is not suitable for distinguishing one <xref:System.ConsoleKeyInfo> object from another.</span></span> <span data-ttu-id="b3858-131">Si la aplicación necesita un código hash único, reemplace el <xref:System.ConsoleKeyInfo.GetHashCode%2A> método con su propio método.</span><span class="sxs-lookup"><span data-stu-id="b3858-131">If your application needs a unique hash code, override the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method with your own method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3858-132">En el ejemplo siguiente se muestra el <xref:System.ConsoleKeyInfo.GetHashCode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b3858-132">The following example demonstrates the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method.</span></span>  
  
 [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cpp/hash.cpp#1)]
 [!code-csharp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cs/hash.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/vb/hash.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public ConsoleKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleKey Key" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As ConsoleKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleKey Key { ConsoleKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3858-133">Obtiene la tecla de consola a la que el objeto <see cref="T:System.ConsoleKeyInfo" /> representa.</span><span class="sxs-lookup"><span data-stu-id="b3858-133">Gets the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="b3858-134">Valor que identifica la tecla de consola que se presionó.</span><span class="sxs-lookup"><span data-stu-id="b3858-134">A value that identifies the console key that was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3858-135">En el ejemplo siguiente se muestra cómo utilizar un <xref:System.ConsoleKeyInfo.Key%2A> propiedad en una operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="b3858-135">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Key%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3858-136">Obtiene el carácter Unicode al que el objeto <see cref="T:System.ConsoleKeyInfo" /> actual representa.</span><span class="sxs-lookup"><span data-stu-id="b3858-136">Gets the Unicode character represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="b3858-137">Objeto correspondiente a la tecla de consola a la que el objeto <see cref="T:System.ConsoleKeyInfo" /> representa.</span><span class="sxs-lookup"><span data-stu-id="b3858-137">An object that corresponds to the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-138">Si la tecla presionada no se asigna a un carácter Unicode (por ejemplo, si el usuario presiona el **F1** clave o el **inicio** clave), el valor de la <xref:System.ConsoleKeyInfo.KeyChar%2A> propiedad es \U0000.</span><span class="sxs-lookup"><span data-stu-id="b3858-138">If the key pressed does not map to a Unicode character (for example, if the user presses the **F1** key or the **Home** key), the value of the <xref:System.ConsoleKeyInfo.KeyChar%2A> property is \U0000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3858-139">En el ejemplo siguiente se usa el <xref:System.ConsoleKeyInfo.KeyChar%2A> propiedad que se va a agregar la entrada de caracteres por el usuario en una cadena.</span><span class="sxs-lookup"><span data-stu-id="b3858-139">The following example uses the <xref:System.ConsoleKeyInfo.KeyChar%2A> property to add the characters input by the user into a string.</span></span> <span data-ttu-id="b3858-140">En el ejemplo se pasa por alto las teclas especiales distintos de **ENTRAR**, **ESC**, y **retroceso**.</span><span class="sxs-lookup"><span data-stu-id="b3858-140">The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.</span></span>  
  
 [!code-csharp[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/cs/keychar1.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/vb/keychar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public ConsoleModifiers Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleModifiers Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ConsoleModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleModifiers Modifiers { ConsoleModifiers get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleModifiers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3858-141">Obtiene una combinación bit a bit de valores de <see cref="T:System.ConsoleModifiers" /> que especifica que una o más teclas modificadoras se han presionado al mismo tiempo que la tecla de consola.</span><span class="sxs-lookup"><span data-stu-id="b3858-141">Gets a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values that specifies one or more modifier keys pressed simultaneously with the console key.</span></span></summary>
        <value><span data-ttu-id="b3858-142">Combinación bit a bit de los valores de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="b3858-142">A bitwise combination of the enumeration values.</span></span> <span data-ttu-id="b3858-143">No existe ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="b3858-143">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3858-144">En el ejemplo siguiente se muestra cómo utilizar un <xref:System.ConsoleKeyInfo.Modifiers%2A> propiedad en una operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="b3858-144">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Modifiers%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b3858-145">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="b3858-145">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="b3858-146">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="b3858-146">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="b3858-147">Indica si los objetos <see cref="T:System.ConsoleKeyInfo" /> especificados son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-147">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="b3858-148"><see langword="true" /> si <paramref name="a" /> es igual a <paramref name="b" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-148"><see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-149">Dos <xref:System.ConsoleKeyInfo> objetos son iguales si sus correspondientes <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, y <xref:System.ConsoleKeyInfo.Modifiers%2A> las propiedades son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-149">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="b3858-150">El método equivalente para este operador es <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b3858-150">The equivalent method for this operator is <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b3858-151">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="b3858-151">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="b3858-152">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="b3858-152">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="b3858-153">Indica si los objetos <see cref="T:System.ConsoleKeyInfo" /> especificados no son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-153">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="b3858-154">Es <see langword="true" /> si <paramref name="a" /> no es igual a <paramref name="b" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b3858-154"><see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3858-155">Dos <xref:System.ConsoleKeyInfo> objetos son iguales si sus correspondientes <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, y <xref:System.ConsoleKeyInfo.Modifiers%2A> las propiedades son iguales.</span><span class="sxs-lookup"><span data-stu-id="b3858-155">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>