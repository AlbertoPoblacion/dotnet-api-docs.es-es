<Type Name="AggregateException" FullName="System.AggregateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fcc0cfa4dcb5ad7036165288c041668d7dd7120" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433229" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AggregateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AggregateException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.AggregateException" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateException : Exception" />
  <TypeSignature Language="F#" Value="type AggregateException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {InnerExceptionCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8daef-101">Representa uno o más errores que se producen durante la ejecución de una aplicación.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8daef-101">Represents one or more errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-102"><xref:System.AggregateException> se utiliza para consolidar varios errores en un objeto único, puede producir excepciones.</span><span class="sxs-lookup"><span data-stu-id="8daef-102"><xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object.</span></span> <span data-ttu-id="8daef-103">Se usa ampliamente en la [tarea Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) y [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span><span class="sxs-lookup"><span data-stu-id="8daef-103">It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span> <span data-ttu-id="8daef-104">Para obtener más información, consulte el [agregar excepciones](http://go.microsoft.com/fwlink/p/?LinkId=259617) entrada en el blog de .NET Matters.</span><span class="sxs-lookup"><span data-stu-id="8daef-104">For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog.</span></span> <span data-ttu-id="8daef-105">Para obtener un ejemplo, vea [NIB: Cómo: controlar excepciones iniciadas por tareas](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d) y [Cómo: controlar excepciones en una consulta PLINQ](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).</span><span class="sxs-lookup"><span data-stu-id="8daef-105">For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-106">El ejemplo siguiente, se detecta el <xref:System.AggregateException> excepción y llama el <xref:System.AggregateException.Handle%2A> método para controlar las excepciones contiene.</span><span class="sxs-lookup"><span data-stu-id="8daef-106">The following example catches the <xref:System.AggregateException> exception and calls the <xref:System.AggregateException.Handle%2A> method to handle each exception it contains.</span></span> <span data-ttu-id="8daef-107">Compilar y ejecutar el ejemplo con la primera `task1` variable debe tener como resultado un <xref:System.AggregateException> objeto que contiene un <xref:System.UnauthorizedAccessException> excepción.</span><span class="sxs-lookup"><span data-stu-id="8daef-107">Compiling and running the example with the first `task1` variable should result in an <xref:System.AggregateException> object that contains an <xref:System.UnauthorizedAccessException> exception.</span></span> <span data-ttu-id="8daef-108">Comentar esa línea, comentario de la segunda `task1` variable y compila y ejecuta el ejemplo, se genera un <xref:System.AggregateException> objeto que contiene un <xref:System.IndexOutOfRangeException> excepción.</span><span class="sxs-lookup"><span data-stu-id="8daef-108">Commenting out that line, uncommenting the second `task1` variable, and compiling and running the example produces an <xref:System.AggregateException> object that contains an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
 [!code-csharp[System.AggregateException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.aggregateexception.class/cs/exception1.cs#1)]
 [!code-vb[System.AggregateException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.aggregateexception.class/vb/exception1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="8daef-109">Todos los miembros públicos y protegidos de <see cref="T:System.AggregateException" /> son seguras para subprocesos y se pueden usar simultáneamente desde varios subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8daef-109">All public and protected members of <see cref="T:System.AggregateException" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8daef-110">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-110">Initializes a new instance of the <see cref="T:System.AggregateException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8daef-111">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con un mensaje proporcionado por el sistema que describe el error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-111">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a system-supplied message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-112">Este constructor inicializa la <xref:System.Exception.Message%2A> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "System.AggregateException: uno o más errores."</span><span class="sxs-lookup"><span data-stu-id="8daef-112">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</span></span> <span data-ttu-id="8daef-113">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</span><span class="sxs-lookup"><span data-stu-id="8daef-113">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="8daef-114">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.AggregateException>.</span><span class="sxs-lookup"><span data-stu-id="8daef-114">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="8daef-115">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="8daef-115">Property</span></span>|<span data-ttu-id="8daef-116">Valor</span><span class="sxs-lookup"><span data-stu-id="8daef-116">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8daef-117">`null`.</span><span class="sxs-lookup"><span data-stu-id="8daef-117">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8daef-118">La cadena del mensaje de error localizado.</span><span class="sxs-lookup"><span data-stu-id="8daef-118">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : seq&lt;Exception&gt; -&gt; AggregateException" Usage="new System.AggregateException innerExceptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="innerExceptions">
          <span data-ttu-id="8daef-119">Excepciones que representan la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-119">The exceptions that are the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-120">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> que hace referencia a las excepciones internas que representan la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-120">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-121">El argumento <paramref name="innerExceptions" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-121">The <paramref name="innerExceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8daef-122">Un elemento de <paramref name="innerExceptions" /> es NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-122">An element of <paramref name="innerExceptions" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : Exception[] -&gt; AggregateException" Usage="new System.AggregateException innerExceptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="innerExceptions">
          <span data-ttu-id="8daef-123">Excepciones que representan la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-123">The exceptions that are the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-124">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> que hace referencia a las excepciones internas que representan la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-124">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-125">El argumento <paramref name="innerExceptions" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-125">The <paramref name="innerExceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8daef-126">Un elemento de <paramref name="innerExceptions" /> es NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-126">An element of <paramref name="innerExceptions" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new AggregateException : string -&gt; AggregateException" Usage="new System.AggregateException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="8daef-127">Mensaje que describe la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-127">The message that describes the exception.</span>
          </span>
          <span data-ttu-id="8daef-128">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-128">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-129">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con un mensaje especificado que describe el error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-129">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-130">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.AggregateException>.</span><span class="sxs-lookup"><span data-stu-id="8daef-130">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="8daef-131">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="8daef-131">Property</span></span>|<span data-ttu-id="8daef-132">Valor</span><span class="sxs-lookup"><span data-stu-id="8daef-132">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8daef-133">`null`.</span><span class="sxs-lookup"><span data-stu-id="8daef-133">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8daef-134">La cadena de mensaje de error especificada en `message`.</span><span class="sxs-lookup"><span data-stu-id="8daef-134">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AggregateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AggregateException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new AggregateException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; AggregateException" Usage="new System.AggregateException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="8daef-135">Objeto que contiene los datos del objeto serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-135">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8daef-136">Información contextual acerca del origen o del destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-136">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-137">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con datos serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-137">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-138">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="8daef-138">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="8daef-139">Para obtener más información, consulte [serialización XML y SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="8daef-139">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-140">El argumento <paramref name="info" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-140">The <paramref name="info" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="8daef-141">No se pudo deserializar la excepción correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-141">The exception could not be deserialized correctly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * seq&lt;Exception&gt; -&gt; AggregateException" Usage="new System.AggregateException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="8daef-142">Mensaje de error que explica el motivo de la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-142">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerExceptions">
          <span data-ttu-id="8daef-143">Excepciones que representan la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-143">The exceptions that are the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-144">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con un mensaje de error especificado y referencias a las excepciones internas que representan la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-144">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-145">El argumento <paramref name="innerExceptions" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-145">The <paramref name="innerExceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8daef-146">Un elemento de <paramref name="innerExceptions" /> es NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-146">An element of <paramref name="innerExceptions" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * Exception -&gt; AggregateException" Usage="new System.AggregateException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="8daef-147">Mensaje que describe la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-147">The message that describes the exception.</span>
          </span>
          <span data-ttu-id="8daef-148">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-148">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="8daef-149">Excepción que es la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-149">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="8daef-150">Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-150">If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-151">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-151">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-152">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="8daef-152">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="8daef-153">La propiedad <xref:System.Exception.InnerException%2A> devuelve el mismo valor que se haya pasado al constructor, o bien `null` en caso de que la propiedad <xref:System.Exception.InnerException%2A> no le haya proporcionado al constructor el valor de la excepción interna.</span><span class="sxs-lookup"><span data-stu-id="8daef-153">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="8daef-154">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.AggregateException>.</span><span class="sxs-lookup"><span data-stu-id="8daef-154">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="8daef-155">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="8daef-155">Property</span></span>|<span data-ttu-id="8daef-156">Valor</span><span class="sxs-lookup"><span data-stu-id="8daef-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8daef-157">`null`.</span><span class="sxs-lookup"><span data-stu-id="8daef-157">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="8daef-158">La cadena de mensaje de error especificada en `message`.</span><span class="sxs-lookup"><span data-stu-id="8daef-158">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-159">El argumento <paramref name="innerException" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-159">The <paramref name="innerException" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, ... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * Exception[] -&gt; AggregateException" Usage="new System.AggregateException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="8daef-160">Mensaje de error que explica el motivo de la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-160">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerExceptions">
          <span data-ttu-id="8daef-161">Excepciones que representan la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-161">The exceptions that are the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-162">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con un mensaje de error especificado y referencias a las excepciones internas que representan la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-162">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-163">El argumento <paramref name="innerExceptions" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-163">The <paramref name="innerExceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8daef-164">Un elemento de <paramref name="innerExceptions" /> es NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-164">An element of <paramref name="innerExceptions" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public AggregateException Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AggregateException Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Function Flatten () As AggregateException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException ^ Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; AggregateException" Usage="aggregateException.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AggregateException</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8daef-165">Reduce las instancias de <see cref="T:System.AggregateException" /> a una sola instancia nueva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-165">Flattens an <see cref="T:System.AggregateException" /> instances into a single, new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8daef-166">Nueva instancia reducida de <see cref="T:System.AggregateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-166">A new, flattened <see cref="T:System.AggregateException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-167">Si una tarea tiene una tarea secundaria adjunta que inicia una excepción, esa excepción se encapsula en un <xref:System.AggregateException> excepción antes de que se propague a la tarea primaria, que encapsula esa excepción en su propio <xref:System.AggregateException> excepción antes de propagarla de nuevo a la subproceso que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="8daef-167">If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread.</span></span> <span data-ttu-id="8daef-168">En tales casos, la <xref:System.AggregateException.InnerExceptions%2A> propiedad de la <xref:System.AggregateException> excepción detectada por el <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Task.Wait*>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType> o <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> método contiene uno o varios <xref:System.AggregateException> instancias, no las excepciones originales que se produjo el error.</span><span class="sxs-lookup"><span data-stu-id="8daef-168">In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Task.Wait*>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault.</span></span> <span data-ttu-id="8daef-169">Para evitar tener que iterar sobre anidado <xref:System.AggregateException> excepciones, puede usar el <xref:System.AggregateException.Flatten%2A> método para quitar todos los anidado <xref:System.AggregateException> excepciones, para que la <xref:System.AggregateException.InnerExceptions%2A> propiedad de devuelto <xref:System.AggregateException> objeto contiene la versión original excepciones.</span><span class="sxs-lookup"><span data-stu-id="8daef-169">To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.</span></span>  
  
 <span data-ttu-id="8daef-170">Este método recursivamente aplana todas las instancias de <xref:System.AggregateException> las excepciones que son excepciones internas del elemento actual <xref:System.AggregateException> instancia.</span><span class="sxs-lookup"><span data-stu-id="8daef-170">This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance .</span></span> <span data-ttu-id="8daef-171">Las excepciones internas se devuelven en el nuevo <xref:System.AggregateException> son la unión de todas las excepciones internas del árbol de excepciones con raíz en el actual <xref:System.AggregateException> instancia.</span><span class="sxs-lookup"><span data-stu-id="8daef-171">The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-172">En el ejemplo siguiente, las instancias anidadas de <xref:System.AggregateException> se reducen y se controlan en un solo bucle.</span><span class="sxs-lookup"><span data-stu-id="8daef-172">In the following example, nested <xref:System.AggregateException> instances are flattened and handled in just one loop.</span></span>  
  
 [!code-csharp[TPL_Exceptions#22](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/flatten2.cs#22)]
 [!code-vb[TPL_Exceptions#22](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/flatten2.vb#22)]  
  
 <span data-ttu-id="8daef-173">También puede utilizar el método <xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> para volver a generar las excepciones internas de varias instancias de <xref:System.AggregateException> iniciadas por varias tareas en una sola instancia de <xref:System.AggregateException>, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="8daef-173">You can also use the <xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> method to rethrow the inner exceptions from multiple <xref:System.AggregateException> instances thrown by multiple tasks in a single <xref:System.AggregateException> instance, as the following example shows.</span></span>  
  
 [!code-csharp[TPL_Exceptions#13](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions2.cs#13)]
 [!code-vb[TPL_Exceptions#13](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions2.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public override Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="override this.GetBaseException : unit -&gt; Exception" Usage="aggregateException.GetBaseException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8daef-174">Devuelve la excepción <see cref="T:System.AggregateException" /> que es la causa principal de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-174">Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8daef-175">Devuelve la excepción <see cref="T:System.AggregateException" /> que es la causa principal de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-175">Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="aggregateException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="8daef-176">Objeto que contiene los datos del objeto serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-176">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8daef-177">Información contextual acerca del origen o del destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-177">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-178">Inicializa una nueva instancia de la clase <see cref="T:System.AggregateException" /> con datos serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-178">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-179">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="8daef-179">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="8daef-180">Para obtener más información, consulte [serialización XML y SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="8daef-180">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-181">El argumento <paramref name="info" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-181">The <paramref name="info" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public void Handle (Func&lt;Exception,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Handle(class System.Func`2&lt;class System.Exception, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Handle (predicate As Func(Of Exception, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Handle(Func&lt;Exception ^, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="member this.Handle : Func&lt;Exception, bool&gt; -&gt; unit" Usage="aggregateException.Handle predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Exception,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">
          <span data-ttu-id="8daef-182">Predicado que se va a ejecutar para cada excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-182">The predicate to execute for each exception.</span>
          </span>
          <span data-ttu-id="8daef-183">El predicado acepta como argumento el objeto <see cref="T:System.Exception" /> que se va a procesar y devuelve un valor booleano para indicar si se controló la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-183">The predicate accepts as an argument the <see cref="T:System.Exception" /> to be processed and returns a Boolean to indicate whether the exception was handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8daef-184">Invoca un controlador en cada objeto <see cref="T:System.Exception" /> contenido en esta excepción <see cref="T:System.AggregateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-184">Invokes a handler on each <see cref="T:System.Exception" /> contained by this <see cref="T:System.AggregateException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-185">Cada invocación de la `predicate` devuelve true o false para indicar si el <xref:System.Exception> se controló.</span><span class="sxs-lookup"><span data-stu-id="8daef-185">Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled.</span></span> <span data-ttu-id="8daef-186">Después de todas las invocaciones, si las excepciones no controló, todas las excepciones no controladas se colocarán en un nuevo <xref:System.AggregateException> que se iniciará.</span><span class="sxs-lookup"><span data-stu-id="8daef-186">After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown.</span></span> <span data-ttu-id="8daef-187">En caso contrario, el <xref:System.AggregateException.Handle%2A> simplemente devuelve el método.</span><span class="sxs-lookup"><span data-stu-id="8daef-187">Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns.</span></span> <span data-ttu-id="8daef-188">Si cualquier invocación de la `predicate` produce una excepción, se detendrá el procesamiento de las excepciones más y propagarse de inmediato la excepción como-es.</span><span class="sxs-lookup"><span data-stu-id="8daef-188">If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-189">Normalmente, un controlador de excepciones que detecta un <xref:System.AggregateException> excepción usa un `foreach` bucle (en C#) o `For Each` bucle (en Visual Basic) para controlar las excepciones en su <xref:System.AggregateException.InnerExceptions%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="8daef-189">Ordinarily, an exception handler that catches an <xref:System.AggregateException> exception uses a `foreach` loop (in C#) or `For Each` loop (in Visual Basic) to handle each exception in its <xref:System.AggregateException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="8daef-190">En su lugar, en el ejemplo siguiente se usa el <xref:System.AggregateException.Handle%2A> método para controlar cada excepción y solo vuelve a iniciar excepciones que no son `CustomException` instancias.</span><span class="sxs-lookup"><span data-stu-id="8daef-190">Instead, the following example uses the <xref:System.AggregateException.Handle%2A> method to handle each exception, and only re-throws exceptions that are not `CustomException` instances.</span></span>  
  
 [!code-csharp[TPL_Exceptions#16](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/handlemethod2.cs#16)]
 [!code-vb[TPL_Exceptions#16](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/handlemethod2.vb#16)]  
  
 <span data-ttu-id="8daef-191">Éste es un ejemplo más completo que usa el <xref:System.AggregateException.Handle%2A> método para proporcionar un control especial para un <xref:System.UnauthorizedAccessException> al enumerar los archivos.</span><span class="sxs-lookup"><span data-stu-id="8daef-191">The following is a more complete example that uses the <xref:System.AggregateException.Handle%2A> method to provide special handling for an <xref:System.UnauthorizedAccessException> when enumerating files.</span></span>  
  
 [!code-csharp[TPL_Exceptions#12](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions.cs#12)]
 [!code-vb[TPL_Exceptions#12](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8daef-192">El argumento <paramref name="predicate" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-192">The <paramref name="predicate" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="8daef-193">No se controló ninguna excepción incluida en esta excepción <see cref="T:System.AggregateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-193">An exception contained by this <see cref="T:System.AggregateException" /> was not handled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As ReadOnlyCollection(Of Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ InnerExceptions { System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerExceptions : System.Collections.ObjectModel.ReadOnlyCollection&lt;Exception&gt;" Usage="System.AggregateException.InnerExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8daef-194">Obtiene una colección de solo lectura de las instancias de <see cref="T:System.Exception" /> que causaron la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-194">Gets a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8daef-195">Devuelve una colección de solo lectura de las instancias de <see cref="T:System.Exception" /> que causaron la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-195">Returns a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.AggregateException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="aggregateException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8daef-196">Crea y devuelve una representación de cadena del objeto <see cref="T:System.AggregateException" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-196">Creates and returns a string representation of the current <see cref="T:System.AggregateException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8daef-197">Representación de cadena de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8daef-197">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>