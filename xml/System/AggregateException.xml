<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AggregateException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Represents one or more errors that occur during application execution.</source>
          <target state="translated">Representa uno o más errores que se producen durante la ejecución de una aplicación.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> is used to consolidate multiple failures into a single, throwable exception object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> se utiliza para consolidar varios errores en un objeto único, puede producir excepciones.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>It is used extensively in the <bpt id="p1">[</bpt>Task Parallel Library (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
          <target state="translated">Se usa ampliamente en la <bpt id="p1">[</bpt>tarea Parallel Library (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> y <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For additional information, see the <bpt id="p1">[</bpt>Aggregating Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entry in the .NET Matters blog.</source>
          <target state="translated">Para obtener más información, consulte el <bpt id="p1">[</bpt>agregar excepciones<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entrada en el blog de .NET Matters.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For an example, see <bpt id="p1">[</bpt>NIB: How to: Handle Exceptions Thrown by Tasks<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> and <bpt id="p2">[</bpt>How to: Handle Exceptions in a PLINQ Query<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</source>
          <target state="translated">Para obtener un ejemplo, vea <bpt id="p1">[</bpt>NIB: Cómo: controlar excepciones iniciadas por tareas<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> y <bpt id="p2">[</bpt>Cómo: controlar excepciones en una consulta PLINQ<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>The following example catches the <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception and calls the <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception it contains.</source>
          <target state="translated">El ejemplo siguiente, se detecta el <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> excepción y llama el <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> método para controlar las excepciones contiene.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Compiling and running the example with the first <ph id="ph1">`task1`</ph> variable should result in an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> exception.</source>
          <target state="translated">Compilar y ejecutar el ejemplo con la primera <ph id="ph1">`task1`</ph> variable debe tener como resultado un <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> objeto que contiene un <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Commenting out that line, uncommenting the second <ph id="ph1">`task1`</ph> variable, and compiling and running the example produces an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Comentar esa línea, comentario de la segunda <ph id="ph1">`task1`</ph> variable y compila y ejecuta el ejemplo, se genera un <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> objeto que contiene un <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Todos los miembros públicos y protegidos de <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> son seguras para subprocesos y se pueden usar simultáneamente desde varios subprocesos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con un mensaje proporcionado por el sistema que describe el error.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</source>
          <target state="translated">Este constructor inicializa la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "System.AggregateException: uno o más errores."</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">La cadena del mensaje de error localizado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Excepciones que representan la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> que hace referencia a las excepciones internas que representan la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un elemento de <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es NULL.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Excepciones que representan la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> que hace referencia a las excepciones internas que representan la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un elemento de <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es NULL.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">Mensaje que describe la excepción.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con un mensaje especificado que describe el error.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">La cadena de mensaje de error especificada en <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objeto que contiene los datos del objeto serializados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Información contextual acerca del origen o del destino.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con datos serializados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serialización XML y SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="info" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The exception could not be deserialized correctly.</source>
          <target state="translated">No se pudo deserializar la excepción correctamente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica el motivo de la excepción.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Excepciones que representan la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con un mensaje de error especificado y referencias a las excepciones internas que representan la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un elemento de <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es NULL.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">Mensaje que describe la excepción.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Excepción que es la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si el parámetro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se genera la excepción actual en un bloque <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que controla la excepción interna.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> devuelve el mismo valor que se haya pasado al constructor, o bien <ph id="ph2">`null`</ph> en caso de que la propiedad <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> no le haya proporcionado al constructor el valor de la excepción interna.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">La cadena de mensaje de error especificada en <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica el motivo de la excepción.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Excepciones que representan la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con un mensaje de error especificado y referencias a las excepciones internas que representan la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un elemento de <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> es NULL.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>Flattens an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> instances into a single, new instance.</source>
          <target state="translated">Reduce las instancias de <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> a una sola instancia nueva.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>A new, flattened <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Nueva instancia reducida de <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>If a task has an attached child task that throws an exception, that exception is wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception before it is propagated to the parent task, which wraps that exception in its own <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception before it propagates it back to the calling thread.</source>
          <target state="translated">Si una tarea tiene una tarea secundaria adjunta que inicia una excepción, esa excepción se encapsula en un <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> excepción antes de que se propague a la tarea primaria, que encapsula esa excepción en su propio <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> excepción antes de propagarla de nuevo al subproceso que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In such cases, the <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception that is caught by the <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> method contains one or more <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> instances, not the original exceptions that caused the fault.</source>
          <target state="translated">En tales casos, la <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> excepción detectada por el <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> método contiene uno o varios <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> instancias, no las excepciones originales que produjeron el error.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>To avoid having to iterate over nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions, you can use the <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> method to remove all the nested <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exceptions, so that the <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> object contains the original exceptions.</source>
          <target state="translated">Para evitar tener que iterar sobre anidado <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> excepciones, puede usar el <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> método para quitar todos los anidado <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> excepciones, para que la <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> propiedad de devuelto <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> objeto contiene las excepciones originales.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>This method recursively flattens all instances of  <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions that are inner exceptions of the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance .</source>
          <target state="translated">Este método recursivamente aplana todas las instancias de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> las excepciones que son excepciones internas del elemento actual <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>The inner exceptions returned in the new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> are the union of all the inner exceptions from exception tree rooted at the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</source>
          <target state="translated">Las excepciones internas se devuelven en el nuevo <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> son la unión de todas las excepciones internas del árbol de excepciones con raíz en el actual <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In the following example, nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> instances are flattened and handled in just one loop.</source>
          <target state="translated">En el ejemplo siguiente, las instancias anidadas de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> se reducen y se controlan en un solo bucle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>You can also use the <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> method to rethrow the inner exceptions from multiple <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instances thrown by multiple tasks in a single <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> instance, as the following example shows.</source>
          <target state="translated">También puede utilizar el método <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> para volver a generar las excepciones internas de varias instancias de <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> iniciadas por varias tareas en una sola instancia de <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph>, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">Devuelve la excepción <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> que es la causa principal de esta excepción.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">Devuelve la excepción <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> que es la causa principal de esta excepción.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objeto que contiene los datos del objeto serializados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Información contextual acerca del origen o del destino.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> con datos serializados.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serialización XML y SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="info" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate to execute for each exception.</source>
          <target state="translated">Predicado que se va a ejecutar para cada excepción.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate accepts as an argument the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> to be processed and returns a Boolean to indicate whether the exception was handled.</source>
          <target state="translated">El predicado acepta como argumento el objeto <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que se va a procesar y devuelve un valor booleano para indicar si se controló la excepción.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Invokes a handler on each <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Invoca un controlador en cada objeto <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> contenido en esta excepción <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Each invocation of the <ph id="ph1">`predicate`</ph> returns true or false to indicate whether the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> was handled.</source>
          <target state="translated">Cada invocación de la <ph id="ph1">`predicate`</ph> devuelve true o false para indicar si el <ph id="ph2">&lt;xref:System.Exception&gt;</ph> se controló.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> which will be thrown.</source>
          <target state="translated">Después de todas las invocaciones, si las excepciones no controló, todas las excepciones no controladas se colocarán en un nuevo <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> que se iniciará.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method simply returns.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> simplemente devuelve el método.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>If any invocations of the <ph id="ph1">`predicate`</ph> throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</source>
          <target state="translated">Si cualquier invocación de la <ph id="ph1">`predicate`</ph> produce una excepción, se detendrá el procesamiento de las excepciones más y propagarse de inmediato la excepción como-es.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Ordinarily, an exception handler that catches an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception uses a <ph id="ph2">`foreach`</ph> loop (in C#) or <ph id="ph3">`For Each`</ph> loop (in Visual Basic) to handle each exception in its <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> collection.</source>
          <target state="translated">Normalmente, un controlador de excepciones que detecta un <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> excepción usa un <ph id="ph2">`foreach`</ph> bucle (en C#) o <ph id="ph3">`For Each`</ph> bucle (en Visual Basic) para controlar las excepciones en su <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Instead, the following example uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception, and only re-throws exceptions that are not <ph id="ph2">`CustomException`</ph> instances.</source>
          <target state="translated">En su lugar, en el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> método para controlar cada excepción y solo vuelve a iniciar excepciones que no son <ph id="ph2">`CustomException`</ph> instancias.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The following is a more complete example that uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to provide special handling for an <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> when enumerating files.</source>
          <target state="translated">Éste es un ejemplo más completo que usa el <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> método para proporcionar un control especial para un <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> al enumerar los archivos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>An exception contained by this <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> was not handled.</source>
          <target state="translated">No se controló ninguna excepción incluida en esta excepción <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.AggregateException.InnerExceptions">
          <source>Gets a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">Obtiene una colección de solo lectura de las instancias de <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que causaron la excepción actual.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AggregateException.InnerExceptions">
          <source>Returns a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">Devuelve una colección de solo lectura de las instancias de <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que causaron la excepción actual.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>Creates and returns a string representation of the current <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Crea y devuelve una representación de cadena del objeto <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>A string representation of the current exception.</source>
          <target state="translated">Representación de cadena de la excepción actual.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>