<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="beab496f598c06940c92c932e76930d473484cd8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727989" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">Tipo de datos de evento generados por el evento.</typeparam>
    <param name="sender">Origen del evento.</param>
    <param name="e">Objeto que contiene los datos del evento.</param>
    <summary>Representa el método que controlará un evento si el evento proporciona datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El modelo de evento de .NET Framework se basa en tener un delegado del evento que se conecta un evento con su controlador. Para generar un evento, se necesitan dos elementos:  
  
-   Un delegado que hace referencia a un método que proporciona la respuesta al evento.  
  
-   Si lo desea, una clase que contiene los datos del evento, si el evento proporciona datos.  
  
 El delegado es un tipo que define una firma, es decir, el tipo de valor devuelto y los tipos de lista de parámetros para un método. Puede usar el tipo de delegado para declarar una variable que pueda hacer referencia a cualquier método con la misma firma que el delegado.  
  
 La firma de un delegado de controlador de eventos estándar define un método que no devuelve un valor. Primer parámetro de este método es de tipo <xref:System.Object> y hace referencia a la instancia que genera el evento. Se deriva su segundo parámetro de tipo <xref:System.EventArgs> y contiene los datos del evento. Si el evento no genera datos de eventos, el segundo parámetro es simplemente el valor de la <xref:System.EventArgs.Empty?displayProperty=nameWithType> campo. En caso contrario, el segundo parámetro es un tipo derivado de <xref:System.EventArgs> y proporciona los campos o propiedades que se necesitan para contener los datos del evento.  
  
 El <xref:System.EventHandler%601> delegado es un delegado predefinido que representa un método de controlador de eventos para un evento que genera los datos. La ventaja de usar <xref:System.EventHandler%601> es que no es necesario codificar su propio delegado personalizado si el evento genera datos de eventos. Basta con proporcionar el tipo de datos del objeto de evento como el parámetro genérico.  
  
 Para asociar el evento con el método que controlará el evento, agregue una instancia del delegado al evento. Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.  
  
 Para obtener más información sobre los delegados de controladores de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un evento denominado `ThresholdReached`. El evento está asociado con un <xref:System.EventHandler%601> delegar.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>