<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47a41597696fe73fafe1896e5d76fb0c038684e7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39926353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Tipo de valor subyacente del tipo genérico <see cref="T:System.Nullable`1" />.</typeparam>
    <summary>Representa un tipo de valor que se puede asignar como <see langword="null" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo se dice que acepta valores NULL si se puede asignar un valor o se pueden asignar `null`, lo que significa que el tipo no tiene ningún valor de ningún tipo. De forma predeterminada, todos los tipos de referencia, como <xref:System.String>, son que acepta valores NULL, pero el valor de todos los tipos, como <xref:System.Int32>, no.  
  
 En C# y Visual Basic, marcar un tipo de valor que acepta valores NULL mediante el `?` notación después el tipo de valor. Por ejemplo, `int?` en C# o `Integer?` en Visual Basic, declara un tipo de valor entero que se puede asignar `null`.  
  
 El <xref:System.Nullable%601> estructura admite el uso de un solo tipo de valor como un tipo que acepta valores NULL como tipos de referencia aceptan valores NULL por diseño.  
  
 El <xref:System.Nullable> proporciona compatibilidad complementario para el <xref:System.Nullable%601> estructura. La <xref:System.Nullable> clase admite la obtención del tipo subyacente de un tipo que acepta valores NULL y las operaciones de comparación e igualdad en pares de tipos que aceptan valores NULL cuyo subyacente de un tipo de valor no admite operaciones de comparación e igualdad genéricas.  
  
## <a name="fundamental-properties"></a>Propiedades fundamentales  
 Los dos miembros fundamentales de la <xref:System.Nullable%601> estructura son el <xref:System.Nullable%601.HasValue%2A> y <xref:System.Nullable%601.Value%2A> propiedades. Si el <xref:System.Nullable%601.HasValue%2A> propiedad para un <xref:System.Nullable%601> objeto es `true`, puede tener acceso al valor del objeto con el <xref:System.Nullable%601.Value%2A> propiedad. Si el <xref:System.Nullable%601.HasValue%2A> propiedad es `false`, no está definido el valor del objeto y se intenta tener acceso a la <xref:System.Nullable%601.Value%2A> propiedad produce una <xref:System.InvalidOperationException>.  
  
## <a name="boxing-and-unboxing"></a>Conversión boxing y conversión unboxing  
 Cuando se aplica un tipo que acepta valores NULL, common language runtime cuadros automáticamente el valor subyacente de la <xref:System.Nullable%601> objeto, no el <xref:System.Nullable%601> propio objeto. Es decir, si la <xref:System.Nullable%601.HasValue%2A> propiedad es `true`, el contenido de la <xref:System.Nullable%601.Value%2A> se aplica la propiedad. Cuando el valor subyacente de un tipo que acepta valores NULL es conversión unboxing, common language runtime crea un nuevo <xref:System.Nullable%601> estructura inicializada en el valor subyacente.  
  
 Si el `HasValue` es propiedad de un tipo que acepta valores NULL `false`, el resultado de una operación de conversión boxing es `null`. Por lo tanto, si se pasa un tipo que acepta valores NULL con conversión boxing a un método que espera un argumento de objeto, ese método debe estar preparado para controlar el caso donde el argumento es `null`. Cuando `null` es conversión unboxing en un tipo que acepta valores NULL, common language runtime crea un nuevo <xref:System.Nullable%601> estructura e inicializa sus `HasValue` propiedad `false`.  
  
## <a name="includenetv451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)] y los componentes de Windows en tiempo de ejecución  
 A partir de la [!INCLUDE[net_v451](~/includes/net-v451-md.md)], puede incluir un <xref:System.Nullable%601> tipo como un miembro de una estructura exportado en una biblioteca WinMD. Anteriormente, esto no se admite.  
  
   
  
## Examples  
 El ejemplo de código siguiente define tres filas de una tabla en la base de datos de ejemplo Pubs de Microsoft. La tabla contiene dos columnas que no admiten valores NULL y dos columnas que aceptan valores NULL.  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Tipo de valor.</param>
        <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Nullable`1" /> en el valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Nullable%601.%23ctor%2A> constructor inicializa el <xref:System.Nullable%601.HasValue%2A> propiedad del nuevo <xref:System.Nullable%601> objeto `true`y el <xref:System.Nullable%601.Value%2A> en el valor de la `value` parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Objeto.</param>
        <summary>Indica si el objeto <see cref="T:System.Nullable`1" /> actual es igual a un objeto especificado.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="other" /> es igual al objeto <see cref="T:System.Nullable`1" /> actual; de lo contrario, <see langword="false" />.  
  
En esta tabla se describe cómo se define la igualdad para los valores comparados: 
 <list type="table"><listheader><term> Valor devuelto </term><description> Descripción </description></listheader><item><term><see langword="true" /></term><description> La propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />, y el parámetro <paramref name="other" /> es <see langword="null" />. Es decir, dos valores NULL son iguales por definición o la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />, y el valor devuelto por la propiedad <see cref="P:System.Nullable`1.Value" /> es igual al parámetro <paramref name="other" />.  </description></item><item><term><see langword="false" /></term><description> La propiedad <see cref="P:System.Nullable`1.HasValue" /> de la estructura <see cref="T:System.Nullable`1" /> actual es <see langword="true" /> y el parámetro <paramref name="other" /> es <see langword="null" /> o la propiedad <see cref="P:System.Nullable`1.HasValue" /> de la estructura actual <see cref="T:System.Nullable`1" /> es <see langword="false" /> y el parámetro <paramref name="other" /> no es <see langword="null" />, o bien la propiedad <see cref="P:System.Nullable`1.HasValue" /> de la estructura <see cref="T:System.Nullable`1" /> actual es <see langword="true" />, y el valor devuelto por la propiedad <see cref="P:System.Nullable`1.Value" /> no es igual al parámetro <paramref name="other" />. </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Nullable%601.HasValue%2A> propiedad del elemento actual <xref:System.Nullable%601> estructura es `true` y el `other` argumento no es `null`, igualdad viene determinada por pasar la `other` parámetro para el `Equals` método de la valor del elemento actual subyacente <xref:System.Nullable%601> estructura.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un objeto y un <xref:System.Nullable%601> son iguales que el actual objeto <xref:System.Nullable%601> objeto.  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el código hash del objeto devuelto por la propiedad <see cref="P:System.Nullable`1.Value" />.</summary>
        <returns>Código hash del objeto devuelto por la propiedad <see cref="P:System.Nullable`1.Value" /> si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />, o cero si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el valor del objeto <see cref="T:System.Nullable`1" /> actual o un valor predeterminado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el valor del objeto <see cref="T:System.Nullable`1" /> actual o el valor predeterminado del tipo subyacente.</summary>
        <returns>El valor de la propiedad <see cref="P:System.Nullable`1.Value" /> si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />; de lo contrario, el valor predeterminado del tipo subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Nullable%601.GetValueOrDefault%2A> método devuelve un valor incluso si la <xref:System.Nullable%601.HasValue%2A> propiedad es `false` (a diferencia de la <xref:System.Nullable%601.Value%2A> propiedad, que produce una excepción). Si el <xref:System.Nullable%601.HasValue%2A> propiedad es `false`, el método devuelve el [predeterminada](~/docs/csharp/language-reference/keywords/default-values-table.md) valor del tipo subyacente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se recupera el valor de un <xref:System.Nullable%601> objeto si dicho valor está definido; en caso contrario, recupera el valor predeterminado o un valor predeterminado específico.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valor que se devuelve si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />.</param>
        <summary>Recupera el valor del objeto <see cref="T:System.Nullable`1" /> actual o el valor predeterminado especificado.</summary>
        <returns>Valor de la propiedad <see cref="P:System.Nullable`1.Value" /> si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />; de lo contrario, el parámetro <paramref name="defaultValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Nullable%601.GetValueOrDefault%2A> método devuelve un valor incluso si la <xref:System.Nullable%601.HasValue%2A> propiedad es `false` (a diferencia de la <xref:System.Nullable%601.Value%2A> propiedad, que produce una excepción).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se recupera el valor de un <xref:System.Nullable%601> objeto si dicho valor está definido; en caso contrario, recupera el valor predeterminado o un valor predeterminado específico.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Nullable`1" /> actual tiene un valor válido de su tipo subyacente.</summary>
        <value>Es <see langword="true" /> si el objeto <see cref="T:System.Nullable`1" /> actual tiene un valor; es <see langword="false" /> si el objeto <see cref="T:System.Nullable`1" /> actual no tiene ningún valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Nullable%601.HasValue%2A> propiedad es `true`, el valor del elemento actual <xref:System.Nullable%601> puede acceder al objeto con el <xref:System.Nullable%601.Value%2A> propiedad. En caso contrario, intentar tener acceso a su valor se produce un <xref:System.InvalidOperationException> excepción.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Nullable%601.HasValue%2A> propiedad de un `Nullable<int>` (`Nullable(Of Integer)` en Visual Basic) para determinar si debe mostrar el objeto <xref:System.Nullable%601.Value%2A> propiedad o sus <xref:System.Nullable%601.GetValueOrDefault%2A> propiedad.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Valor que acepta valores NULL.</param>
        <summary>Define una conversión explícita de una instancia <see cref="T:System.Nullable`1" /> a su valor subyacente.</summary>
        <returns>Valor de la propiedad <see cref="P:System.Nullable`1.Value" /> para el parámetro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este operador admite la conversión explícita de actual <xref:System.Nullable%601> instancia escriba `T`, el tipo de <xref:System.Nullable%601.Value%2A>. La sintaxis para estas conversiones explícitas es dependiente del idioma. También puede realizar la conversión mediante una llamada a la <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> método.  
  
 Es el método equivalente para este operador <xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 El <xref:System.Nullable%601.op_Explicit%2A> operador permite que el código como el siguiente, que convierte un `Nullable(Of Int32)` valor a un <xref:System.Int32> valor.  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Tipo de valor.</param>
        <summary>Crea un nuevo objeto <see cref="T:System.Nullable`1" /> inicializado en un valor especificado.</summary>
        <returns>Objeto <see cref="T:System.Nullable`1" /> cuya propiedad <see cref="P:System.Nullable`1.Value" /> se inicializa con el parámetro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `value` parámetro no es `null`, el <xref:System.Nullable%601.Value%2A> propiedad del nuevo <xref:System.Nullable%601> valor se inicializa en el `value` parámetro y el <xref:System.Nullable%601.HasValue%2A> propiedad se inicializa en `true`.  
  
 Si el `value` parámetro es `null`, el <xref:System.Nullable%601.Value%2A> propiedad del nuevo <xref:System.Nullable%601> valor se inicializa en el valor predeterminado, que es el valor binarios todo ceros, y la <xref:System.Nullable%601.HasValue%2A> propiedad se inicializa en `false` .  
  
 Es el método equivalente para este operador <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la representación de texto del valor del objeto <see cref="T:System.Nullable`1" /> actual.</summary>
        <returns>Representación de texto del valor del objeto <see cref="T:System.Nullable`1" /> actual si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />, o una cadena vacía ("") si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Nullable%601.ToString%2A> propiedad devuelve la cadena de resultado de una llamada a la `ToString` propiedad del objeto devuelto por la <xref:System.Nullable%601.Value%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el valor del elemento actual <xref:System.Nullable%601> objeto.  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del objeto <see cref="T:System.Nullable`1" /> actual si se asignó un valor subyacente válido.</summary>
        <value>Valor del objeto <see cref="T:System.Nullable`1" /> actual si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" />. Si la propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />, se produce una excepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un valor de tipo `T` no se ha asignado a la <xref:System.Nullable%601> objeto, puede compararla con `null` y recuperar su <xref:System.Nullable%601.HasValue%2A> propiedad, pero no puede acceder a su <xref:System.Nullable%601.Value%2A> propiedad o llamada de sus otros miembros.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Nullable%601.HasValue%2A> propiedad de un `Nullable<int>` (`Nullable(Of Integer)` en Visual Basic) para determinar si debe mostrar el objeto <xref:System.Nullable%601.Value%2A> propiedad o sus <xref:System.Nullable%601.GetValueOrDefault%2A> propiedad.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>