<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Nullable`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The underlying value type of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> generic type.</source>
          <target state="translated">Tipo de valor subyacente del tipo genérico <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Represents a value type that can be assigned <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Representa un tipo de valor que se puede asignar como <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>A type is said to be nullable if it can be assigned a value or can be assigned <ph id="ph1">`null`</ph>, which means the type has no value whatsoever.</source>
          <target state="translated">Un tipo se dice que aceptan valores NULL si se le puede asignar un valor o se puede asignar <ph id="ph1">`null`</ph>, lo que significa que el tipo tiene ningún valor en absoluto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>By default, all reference types, such as <ph id="ph1">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, are not.</source>
          <target state="translated">De forma predeterminada, todos los tipos de referencia, como <ph id="ph1">&lt;xref:System.String&gt;</ph>, están que aceptan valores NULL, pero el valor de todos los tipos, como <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, no son.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>In C# and Visual Basic, you mark a value type as nullable by using the <ph id="ph1">`?`</ph> notation after the value type.</source>
          <target state="translated">En C# y Visual Basic, marcar un tipo de valor que acepta valores NULL mediante el <ph id="ph1">`?`</ph> notación después el tipo de valor.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>For example, <ph id="ph1">`int?`</ph> in C# or <ph id="ph2">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">`int?`</ph> en C# o <ph id="ph2">`Integer?`</ph> en Visual Basic, declara un tipo de valor entero que se puede asignar <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure supports using only a value type as a nullable type because reference types are nullable by design.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> admite el uso de un tipo de valor como un tipo que acepta valores NULL como tipos de referencia aceptan valores NULL en el diseño de la estructura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> clase proporciona compatibilidad complementaria para el <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> clase admite la obtención del tipo subyacente de un tipo que acepta valores NULL y las operaciones de comparación e igualdad en pares de tipos que aceptan valores NULL cuyo subyacente de un tipo de valor no admite operaciones de comparación e igualdad genéricas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Fundamental Properties</source>
          <target state="translated">Propiedades fundamentales</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The two fundamental members of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure are the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> properties.</source>
          <target state="translated">Los dos miembros fundamentales de la <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> estructura son el <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object is <ph id="ph3">`true`</ph>, the value of the object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad para un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objeto es <ph id="ph3">`true`</ph>, puede tener acceso al valor del objeto con el <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of the object is undefined and an attempt to access the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, el valor del objeto es indefinido e intenta tener acceso a la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad produce un <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Boxing and Unboxing</source>
          <target state="translated">Conversión boxing y conversión unboxing</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object itself.</source>
          <target state="translated">Cuando se encuadra un tipo que acepta valores NULL, common language runtime la conversión boxing automáticamente el valor subyacente de la <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> el objeto, no el <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> propio objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>That is, if the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the contents of the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.</source>
          <target state="translated">Es decir, si la <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, el contenido de la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad es una conversión boxing.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.</source>
          <target state="translated">Cuando el valor subyacente de un tipo que acepta valores NULL es aplicar la conversión unboxing, common language runtime crea un nuevo <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> estructura inicializada en el valor subyacente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">`HasValue`</ph> property of a nullable type is <ph id="ph2">`false`</ph>, the result of a boxing operation is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`HasValue`</ph> propiedad de un tipo que acepta valores NULL es <ph id="ph2">`false`</ph>, el resultado de una operación de conversión boxing es <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Por lo tanto, si un tipo que acepta valores NULL sometidas a conversión boxing se pasa a un método que espera un argumento de objeto, ese método debe estar preparado para controlar el caso donde el argumento es <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When <ph id="ph1">`null`</ph> is unboxed into a nullable type, the common language runtime creates a new <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure and initializes its <ph id="ph3">`HasValue`</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cuando <ph id="ph1">`null`</ph> es conversión unboxing a un tipo que acepta valores NULL, common language runtime crea un nuevo <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> estructura e inicializa su <ph id="ph3">`HasValue`</ph> propiedad <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> and Windows Runtime Components</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> y componentes de Windows en tiempo de ejecución</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, you can include a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type as a member of a structure exported in a WinMD library.</source>
          <target state="translated">A partir de la <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, puede incluir un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> tipo como un miembro de una estructura exportado en una biblioteca de WinMD.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Previously, this was not supported.</source>
          <target state="translated">Anteriormente, esto no se admite.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The following code example defines three rows of a table in the Microsoft Pubs sample database.</source>
          <target state="translated">En el ejemplo de código siguiente se define tres filas de una tabla en la base de datos de ejemplo Pubs de Microsoft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The table contains two columns that are not nullable and two columns that are nullable.</source>
          <target state="translated">La tabla contiene dos columnas que no admiten valores NULL y dos columnas que admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>A value type.</source>
          <target state="translated">Tipo de valor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure to the specified value.</source>
          <target state="translated">Inicializa una nueva instancia de la estructura <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> en el valor especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.#ctor(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property to the value of the <ph id="ph6">`value`</ph> parameter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor inicializa la <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad del nuevo <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> el objeto a <ph id="ph4">`true`</ph>y el <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> en el valor de la <ph id="ph6">`value`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">Objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Indica si el objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual es igual a un objeto especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="other" /&gt;</ph> es igual al objeto <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>This table describes how equality is defined for the compared values:</source>
          <target state="translated">En esta tabla se describe cómo se define la igualdad para los valores comparados:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descripción</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La propiedad <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph7">&lt;see langword="false" /&gt;</ph> y el parámetro <ph id="ph8">&lt;paramref name="other" /&gt;</ph> es <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>That is, two null values are equal by definition.</source>
          <target state="translated">Es decir, dos valores null son iguales por definición.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is equal to the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph2">&lt;see langword="true" /&gt;</ph> y el valor que devuelve la propiedad <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> es igual al parámetro <ph id="ph4">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph8">&lt;see langword="true" /&gt;</ph>, and the <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La propiedad <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> de la estructura <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual es <ph id="ph8">&lt;see langword="true" /&gt;</ph> y el parámetro <ph id="ph9">&lt;paramref name="other" /&gt;</ph> es <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter is not <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> para la estructura <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual es <ph id="ph3">&lt;see langword="false" /&gt;</ph> y el parámetro <ph id="ph4">&lt;paramref name="other" /&gt;</ph> no es <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is not equal to the <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> para la estructura <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual es <ph id="ph3">&lt;see langword="true" /&gt;</ph> y el valor que devuelve la propiedad <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> no es igual al parámetro <ph id="ph5">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure is <ph id="ph3">`true`</ph> and the <ph id="ph4">`other`</ph> argument is not <ph id="ph5">`null`</ph>, equality is determined by passing the <ph id="ph6">`other`</ph> parameter to the <ph id="ph7">`Equals`</ph> method of the underlying value of the current <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad del elemento actual <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> estructura es <ph id="ph3">`true`</ph> y <ph id="ph4">`other`</ph> el argumento no es <ph id="ph5">`null`</ph>, igualdad se determina pasando la <ph id="ph6">`other`</ph> parámetro para el <ph id="ph7">`Equals`</ph> método del valor subyacente del elemento actual <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The following code example determines whether an object and a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object are equal to the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">En el ejemplo de código siguiente se determina si un objeto y un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> objeto son iguales al actual <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>Retrieves the hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property.</source>
          <target state="translated">Recupera el código hash del objeto devuelto por la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>The hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or zero if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Código hash del objeto devuelto por la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>, o cero si la propiedad <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or a default value.</source>
          <target state="translated">Recupera el valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual o un valor predeterminado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the object's default value.</source>
          <target state="translated">Recupera el valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual o el valor predeterminado del objeto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the  <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the default value of the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>; de lo contrario, valor predeterminado del objeto <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The type of the default value is the type argument of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, and the value of the default value consists solely of binary zeroes.</source>
          <target state="translated">El tipo del valor predeterminado es el argumento de tipo del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual y el valor del valor predeterminado consiste únicamente en ceros binarios.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> método devuelve un valor incluso si la <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad es <ph id="ph3">`false`</ph> (a diferencia de la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad, que produce una excepción).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">En el ejemplo de código siguiente se recupera el valor de un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> si ese valor se define; en caso contrario, recupera el valor predeterminado o un valor predeterminado concreto del objeto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>A value to return if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Valor que se devuelve si la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the specified default value.</source>
          <target state="translated">Recupera el valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual o el valor predeterminado especificado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parameter.</source>
          <target state="translated">Valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>; de lo contrario, el parámetro <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> método devuelve un valor incluso si la <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad es <ph id="ph3">`false`</ph> (a diferencia de la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad, que produce una excepción).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">En el ejemplo de código siguiente se recupera el valor de un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> si ese valor se define; en caso contrario, recupera el valor predeterminado o un valor predeterminado concreto del objeto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.HasValue">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a valid value of its underlying type.</source>
          <target state="translated">Obtiene un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual tiene un valor válido de su tipo subyacente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a value; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has no value.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual tiene un valor; es <ph id="ph3">&lt;see langword="false" /&gt;</ph> si el objeto <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual no tiene ningún valor.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the current <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, el valor del elemento actual <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> objeto puede tener acceso mediante el <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>Otherwise, attempting to access its value throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">En caso contrario, se intenta tener acceso a su valor produce un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad de un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> objeto para determinar si debe mostrar el objeto <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad o su <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>A nullable value.</source>
          <target state="translated">Valor que acepta valores NULL.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> instance to its underlying value.</source>
          <target state="translated">Define una conversión explícita de una instancia <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> a su valor subyacente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property for the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> para el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>This operator supports the explicit conversion of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance to type <ph id="ph2">`T`</ph>, the type of <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita del elemento actual <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instancia al tipo <ph id="ph2">`T`</ph>, el tipo de <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The syntax for such explicit conversions is language-dependent.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas es dependiente del idioma.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>You may also be able to perform the conversion by calling the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">También puede realizar la conversión mediante una llamada a la <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operator enables code such as the following, which converts a <ph id="ph2">`Nullable(Of Int32)`</ph> value to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operador permite que el código como el siguiente, que convierte un <ph id="ph2">`Nullable(Of Int32)`</ph> valor a un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A value type.</source>
          <target state="translated">Tipo de valor.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object initialized to a specified value.</source>
          <target state="translated">Crea un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> inicializado en un valor especificado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is initialized with the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> cuya propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> se inicializa con el parámetro <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the <ph id="ph5">`value`</ph> parameter and the <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`value`</ph> parámetro no es <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad del nuevo <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valor se inicializa en el <ph id="ph5">`value`</ph> parámetro y el <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad se inicializa en <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the default value, which is the value that is all binary zeroes, and the <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`value`</ph> parámetro es <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad del nuevo <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valor se inicializa en el valor predeterminado, que es el valor binarios todos los ceros, y la <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad se inicializa en <ph id="ph6">`false`</ph> .</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>Returns the text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Devuelve la representación de texto del valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>The text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or an empty string ("") if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Representación de texto del valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual si la propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>, o una cadena vacía ("") si la propiedad <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> property returns the string yielded by calling the <ph id="ph2">`ToString`</ph> property of the object returned by the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> propiedad devuelve la cadena de resultado de una llamada a la <ph id="ph2">`ToString`</ph> propiedad del objeto devuelto por la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The following code example displays the value of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el valor del elemento actual <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if it has been assigned a valid underlying value.</source>
          <target state="translated">Obtiene el valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual si se asignó un valor subyacente válido.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Valor del objeto <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actual si la propiedad <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>An exception is thrown if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Si la propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph2">&lt;see langword="false" /&gt;</ph>, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>If a value of type <ph id="ph1">`T`</ph> has not been assigned to the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object, you can compare it to <ph id="ph3">`null`</ph> and retrieve its <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property, but you cannot access its <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or call its other members.</source>
          <target state="translated">Si un valor de tipo <ph id="ph1">`T`</ph> no se ha asignado a la <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objeto, puede compararlo con <ph id="ph3">`null`</ph> y recuperar su <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad, pero no se puede tener acceso a su <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad o llamada a sus otros miembros.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propiedad de un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> objeto para determinar si debe mostrar el objeto <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propiedad o su <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>