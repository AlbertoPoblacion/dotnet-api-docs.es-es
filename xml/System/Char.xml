<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d749c6a63f9748e113f570ba94e2982062f0213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39854167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e2052-101">Representa un carácter como unidad de código UTF-16.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2052-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-102">El [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] usa el <xref:System.Char> estructura para representar un carácter Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="e2052-103">El estándar Unicode identifica cada carácter Unicode con un número escalar de 21 bits único denominado punto de código y define el formato de codificación UTF-16 que especifica cómo se codifica un punto de código en una secuencia de uno o más valores de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="e2052-104">Cada valor de 16 bits comprendido entre hexadecimal 0 x 0000 a 0xFFFF y se almacena en un <xref:System.Char> estructura.</span><span class="sxs-lookup"><span data-stu-id="e2052-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="e2052-105">El valor de un <xref:System.Char> objeto es su valor numérico de 16 bits (ordinal).</span><span class="sxs-lookup"><span data-stu-id="e2052-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="e2052-106">Las secciones siguientes examinan la relación entre un <xref:System.Char> objeto y un carácter y se describen algunas tareas comunes realizadas con <xref:System.Char> instancias.</span><span class="sxs-lookup"><span data-stu-id="e2052-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="e2052-107">[Cadenas, caracteres Unicode y objetos Char](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="e2052-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="e2052-108">[Caracteres y las categorías de caracteres](#Categories) </span><span class="sxs-lookup"><span data-stu-id="e2052-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="e2052-109">[Elementos de texto y caracteres adicionales.](#Elements) </span><span class="sxs-lookup"><span data-stu-id="e2052-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="e2052-110">[Operaciones comunes](#Operations) </span><span class="sxs-lookup"><span data-stu-id="e2052-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="e2052-111">Interoperabilidad y valores char</span><span class="sxs-lookup"><span data-stu-id="e2052-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="e2052-112">Cadenas, caracteres Unicode y objetos Char</span><span class="sxs-lookup"><span data-stu-id="e2052-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="e2052-113">Un <xref:System.String> objeto es una colección secuencial de <xref:System.Char> estructuras que representa una cadena de texto.</span><span class="sxs-lookup"><span data-stu-id="e2052-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="e2052-114">Mayoría de los caracteres Unicode se puede representar mediante un único <xref:System.Char> objeto, pero un carácter que se codifica como un carácter base, par suplente o combinación de secuencia de caracteres se representa mediante varias <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="e2052-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="e2052-115">Por este motivo, un <xref:System.Char> estructura en un <xref:System.String> objeto no es necesariamente equivalente a un único carácter Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="e2052-116">Varias unidades de código de 16 bits se utilizan para representar caracteres Unicode en los casos siguientes:</span><span class="sxs-lookup"><span data-stu-id="e2052-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="e2052-117">Glifos, que pueden constar de un solo carácter o de un carácter base seguido de uno o más caracteres de combinación.</span><span class="sxs-lookup"><span data-stu-id="e2052-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="e2052-118">Por ejemplo, el carácter Unicote se representa mediante un <xref:System.Char> cuyo código está en la unidad U + 0061 seguido de un objeto <xref:System.Char> objeto cuya unidad de código es + u+0308.</span><span class="sxs-lookup"><span data-stu-id="e2052-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="e2052-119">(El Unicote caracteres también puede definirse mediante una sola <xref:System.Char> objeto que tiene una unidad de código de 00E4 U +.) El ejemplo siguiente se muestra que el Unicote carácter consta de dos <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="e2052-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="e2052-120">Carácter fuera del plano multilingüe básico de Unicode (BMP).</span><span class="sxs-lookup"><span data-stu-id="e2052-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="e2052-121">Unicode es compatible con dieciséis planos además del BMP, que representa el plano de 0.</span><span class="sxs-lookup"><span data-stu-id="e2052-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="e2052-122">Un punto de código Unicode se representa en UTF-32 por un valor de 21 bits que incluye el plano.</span><span class="sxs-lookup"><span data-stu-id="e2052-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="e2052-123">Por ejemplo, U + 1D160 representa el carácter de MUSICAL de OCTAVA símbolos.</span><span class="sxs-lookup"><span data-stu-id="e2052-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="e2052-124">Dado que la codificación UTF-16 tiene solo de 16 bits, los caracteres fuera del BMP se representan mediante pares suplentes UTF-16.</span><span class="sxs-lookup"><span data-stu-id="e2052-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="e2052-125">El ejemplo siguiente se muestra que el equivalente de UTF-32 de U + 1D160, el carácter de OCTAVA símbolo MUSICAL, U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="e2052-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="e2052-126">U + D834 es un suplente alto; intervalo de caracteres suplentes altos de U+D800 a U+DBFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="e2052-127">U + DD60 es un suplente bajo; intervalo de caracteres suplentes bajos u+DC00 a U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="e2052-128">Caracteres y las categorías de caracteres</span><span class="sxs-lookup"><span data-stu-id="e2052-128">Characters and character categories</span></span>  
 <span data-ttu-id="e2052-129">Cada carácter Unicode o par suplente válido pertenece a una categoría de Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="e2052-130">En .NET Framework, las categorías Unicode se representan mediante los miembros de la <xref:System.Globalization.UnicodeCategory> enumeración y no incluya valores como <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, y <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, por ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e2052-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="e2052-131">Para determinar la categoría Unicode de un carácter, llame a la <xref:System.Char.GetUnicodeCategory%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2052-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="e2052-132">Por ejemplo, en el ejemplo siguiente se llama el <xref:System.Char.GetUnicodeCategory%2A> para mostrar la categoría Unicode de cada carácter en una cadena.</span><span class="sxs-lookup"><span data-stu-id="e2052-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="e2052-133">Internamente, para los caracteres fuera del intervalo ASCII (U + 0000 a U + 00FF), el <xref:System.Char.GetUnicodeCategory%2A> método depende de las categorías Unicode notificadas por el <xref:System.Globalization.CharUnicodeInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="e2052-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="e2052-134">A partir de la [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode se clasifican según [el estándar Unicode, versión 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="e2052-135">En las versiones de .NET Framework desde el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] a la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], se clasifican según [el estándar Unicode, versión 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="e2052-136">Elementos de texto y caracteres adicionales.</span><span class="sxs-lookup"><span data-stu-id="e2052-136">Characters and text elements</span></span>  
 <span data-ttu-id="e2052-137">Dado que un solo carácter puede representarse mediante varias <xref:System.Char> objetos, no siempre es significativo para trabajar con la persona <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="e2052-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="e2052-138">Por ejemplo, el siguiente ejemplo convierte los puntos de código Unicode que representan los números menores del 0 al 9 para unidades de código con codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="e2052-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="e2052-139">Porque equipara erróneamente <xref:System.Char> objetos con caracteres adicionales, de manera inexacta informa de que la cadena resultante tiene 20 caracteres.</span><span class="sxs-lookup"><span data-stu-id="e2052-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="e2052-140">Puede hacer lo siguiente para evitar la suposición de que un <xref:System.Char> objeto representa un único carácter.</span><span class="sxs-lookup"><span data-stu-id="e2052-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="e2052-141">Puede trabajar con un <xref:System.String> objeto en su totalidad en lugar de trabajar con sus caracteres individuales para representar y analizar el contenido lingüístico.</span><span class="sxs-lookup"><span data-stu-id="e2052-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="e2052-142">Puede usar el <xref:System.Globalization.StringInfo> clase para trabajar con elementos de texto en lugar de persona <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="e2052-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="e2052-143">En el ejemplo siguiente se usa el <xref:System.Globalization.StringInfo> objeto para contar el número de elementos de texto en una cadena que consta del Egeo números cero a nueve.</span><span class="sxs-lookup"><span data-stu-id="e2052-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="e2052-144">Porque considera que un par suplente de un único carácter, se notifica correctamente que la cadena contiene diez caracteres.</span><span class="sxs-lookup"><span data-stu-id="e2052-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="e2052-145">Si una cadena contiene un carácter base que tiene uno o más caracteres de combinación, puede llamar a la <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para convertir la subcadena en una sola unidad de código con codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="e2052-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="e2052-146">El ejemplo siguiente se llama el <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para convertir el carácter base u+0061 (A letra minúscula del alfabeto LATINO) y caracteres combinables + u+0308 (DIÉRESIS combinar) U + 00E4 (LATÍN pequeña letra A con DIÉRESIS).</span><span class="sxs-lookup"><span data-stu-id="e2052-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="e2052-147">Operaciones comunes</span><span class="sxs-lookup"><span data-stu-id="e2052-147">Common operations</span></span>  
 <span data-ttu-id="e2052-148">El <xref:System.Char> estructura proporciona métodos para comparar <xref:System.Char> objetos, convertir el valor del elemento actual <xref:System.Char> a un objeto de otro tipo de objeto y determinar la categoría Unicode de un <xref:System.Char> objeto:</span><span class="sxs-lookup"><span data-stu-id="e2052-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="e2052-149">Para</span><span class="sxs-lookup"><span data-stu-id="e2052-149">To do this</span></span>|<span data-ttu-id="e2052-150">Use estos `System.Char` métodos</span><span class="sxs-lookup"><span data-stu-id="e2052-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="e2052-151">Comparar <xref:System.Char> objetos</span><span class="sxs-lookup"><span data-stu-id="e2052-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="e2052-152"><xref:System.Char.CompareTo%2A> y <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="e2052-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="e2052-153">Convertir un punto de código en una cadena</span><span class="sxs-lookup"><span data-stu-id="e2052-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="e2052-154">Convertir un <xref:System.Char> objeto o un par suplente de <xref:System.Char> objetos a un punto de código</span><span class="sxs-lookup"><span data-stu-id="e2052-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="e2052-155">Para un único carácter: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e2052-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="e2052-156">Para un par suplente o un carácter en una cadena: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e2052-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="e2052-157">Obtiene la categoría de Unicode de un carácter</span><span class="sxs-lookup"><span data-stu-id="e2052-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="e2052-158">Determinar si un carácter está en una categoría Unicode determinada como dígitos, letras, signos de puntuación, carácter de control etc.</span><span class="sxs-lookup"><span data-stu-id="e2052-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="e2052-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, y <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="e2052-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="e2052-160">Convertir un <xref:System.Char> objeto que representa un número en un tipo de valor numérico</span><span class="sxs-lookup"><span data-stu-id="e2052-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="e2052-161">Convierte un carácter en una cadena en un <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="e2052-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="e2052-162"><xref:System.Char.Parse%2A> y <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="e2052-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="e2052-163">Convertir un <xref:System.Char> objeto a un <xref:System.String> objeto</span><span class="sxs-lookup"><span data-stu-id="e2052-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="e2052-164">Cambiar el caso de un <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="e2052-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="e2052-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> y <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="e2052-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="e2052-166">Interoperabilidad y valores char</span><span class="sxs-lookup"><span data-stu-id="e2052-166">Char values and interop</span></span>  
<span data-ttu-id="e2052-167">Cuando un administrado <xref:System.Char> tipo, que se representa como una unidad de código con codificación Unicode UTF-16, se pasa a código no administrado, el serializador de interoperabilidad convierte el carácter ANSI establecido de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="e2052-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="e2052-168">Puede aplicar el <xref:System.Runtime.InteropServices.DllImportAttribute> las declaraciones de invocación de atributo para la plataforma y el <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo a una declaración de interoperabilidad COM para controlar qué juego de caracteres un cálculo de referencias <xref:System.Char> tipo que utiliza.</span><span class="sxs-lookup"><span data-stu-id="e2052-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-169">El ejemplo de código siguiente muestra algunos de los métodos de <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="e2052-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e2052-170">Todos los miembros de este tipo son seguros para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2052-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="e2052-171">Los miembros que aparecen modificar el estado de instancia devuelven realmente una nueva instancia inicializada con el nuevo valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2052-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="e2052-172">Como con cualquier otro tipo, leer y escribir en una variable compartida que contiene una instancia de este tipo deben protegerse mediante un bloqueo para garantizar la seguridad para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2052-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-173">Compara esta instancia con un objeto o tipo de valor especificados e indica si esta instancia precede o sigue al objeto o tipo de valor especificado o aparece en la misma posición que él en el criterio de ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e2052-174">Objeto <see cref="T:System.Char" /> que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-175">Compara esta instancia con un objeto <see cref="T:System.Char" /> especificado e indica si esta instancia precede o sigue al objeto <see cref="T:System.Char" /> especificado o aparece en la misma posición que él en el criterio de ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-176">Número con signo que indica la posición de esta instancia en el criterio de ordenación respecto al parámetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="e2052-177">
            <list type="table">
              <listheader>
                <term> Valor devuelto </term>
                <description> Descripción </description>
              </listheader>
              <item>
                <term> Menor que cero </term>
                <description> Esta instancia precede a <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Cero </term>
                <description> En el criterio de ordenación, esta instancia tiene la misma posición que <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Mayor que cero </term>
                <description> Esta instancia sigue a <paramref name="value" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-178">Este método implementa el <xref:System.IComparable%601?displayProperty=nameWithType> interfaz y realiza un poco mejor que el <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> método porque no tiene que convertir el `value` parámetro a un objeto.</span><span class="sxs-lookup"><span data-stu-id="e2052-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="e2052-179">La comparación realizada por este método se basa en los valores codificados de esta instancia y `value`, no en sus características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="e2052-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="e2052-180">Si el <xref:System.Char.CompareTo%2A> tipo de parámetro de método tiene menos bits (es más estrecho) que el tipo de instancia, algunos lenguajes de programación realizan una conversión de ampliación implícita que transforma el valor del parámetro en un valor con más bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="e2052-181">Por ejemplo, suponga que el tipo de instancia es <xref:System.Int32> y el tipo de parámetro es <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="e2052-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="e2052-182">El compilador de Microsoft C# genera instrucciones para representar el valor del parámetro como un <xref:System.Int32> objeto, a continuación, genera un <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> método que compara los valores de la <xref:System.Int32> instancia y el <xref:System.Int32> parámetro representación.</span><span class="sxs-lookup"><span data-stu-id="e2052-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="e2052-183">Normalmente, las conversiones de ampliación implícitas se realizan en tipos numéricos.</span><span class="sxs-lookup"><span data-stu-id="e2052-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="e2052-184">Consulte la documentación de su lenguaje de programación para determinar si el compilador realiza las conversiones de ampliación.</span><span class="sxs-lookup"><span data-stu-id="e2052-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="e2052-185">Si no está disponible la discordancia de tipos de instancia y los parámetros y una conversión adecuada, el compilador genera instrucciones cuadro del parámetro e invocar el <xref:System.Char.CompareTo%2A> sobrecarga que toma un <xref:System.Object> parámetro.</span><span class="sxs-lookup"><span data-stu-id="e2052-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-186">El ejemplo de código siguiente muestra las versiones no genéricas y de la `CompareTo` método para varios tipos de valor y de referencia.</span><span class="sxs-lookup"><span data-stu-id="e2052-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e2052-187">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-188">Compara esta instancia con un objeto <see cref="T:System.Object" /> especificado e indica si esta instancia precede o sigue al objeto especificado o aparece en la misma posición que él en el criterio de ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-189">Número con signo que indica la posición de esta instancia en el criterio de ordenación respecto al parámetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="e2052-190">
            <list type="table">
              <listheader>
                <term> Valor devuelto </term>
                <description> Descripción </description>
              </listheader>
              <item>
                <term> Menor que cero </term>
                <description> Esta instancia precede a <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Cero </term>
                <description> En el criterio de ordenación, esta instancia tiene la misma posición que <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Mayor que cero </term>
                <description> Esta instancia sigue a <paramref name="value" />. -o bien- <paramref name="value" /> es <see langword="null" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-191">El <xref:System.Char.CompareTo%2A> método implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="e2052-192">El `value` parámetro debe ser `null` o una instancia de <xref:System.Char>; de lo contrario, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="e2052-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e2052-193">La comparación realizada por este método se basa en los valores codificados de esta instancia y `value`, no necesariamente en sus características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="e2052-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="e2052-194">Cualquier instancia de <xref:System.Char>, independientemente de su valor, se considera mayor `null`.</span><span class="sxs-lookup"><span data-stu-id="e2052-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-195">En el ejemplo de código siguiente se muestra <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e2052-196">
            <paramref name="value" /> no es un objeto <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="e2052-197">Punto de código Unicode de 21 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-198">Convierte el punto de código Unicode especificado en una cadena codificada mediante UTF-16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-199">Cadena que está compuesta de un objeto <see cref="T:System.Char" /> o un par suplente de objetos <see cref="T:System.Char" /> que equivalen al punto de código especificado por el parámetro <paramref name="utf32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-200">Utilice este método para convertir un punto de código Unicode de 21 bits en una cadena codificada en UTF-16 antes de probar la cadena con métodos como <xref:System.Char.IsLowSurrogate%28System.Char%29> y <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="e2052-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="e2052-201">Un punto de código válido fuera el plano multilingüe básico (BMP) siempre produce un par suplente válido.</span><span class="sxs-lookup"><span data-stu-id="e2052-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="e2052-202">Sin embargo, un punto de código válido dentro de BMP podría no producir un resultado válido según el estándar Unicode porque no se utiliza ningún procesamiento lingüístico en la conversión.</span><span class="sxs-lookup"><span data-stu-id="e2052-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="e2052-203">Por ese motivo, utilice el <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> clase para convertir de forma masiva datos UTF-32 en forma masiva datos UTF-16.</span><span class="sxs-lookup"><span data-stu-id="e2052-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-204">En el ejemplo de código siguiente se muestra el <xref:System.Char.ConvertToUtf32%2A> y <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-205">
            <paramref name="utf32" /> no es un punto de código Unicode válido de 21 bits comprendido entre U+0 y U+10FFFF, excluyendo el intervalo del par suplente de U+D800 a U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-206">Convierte el valor de un par suplente codificado mediante UTF-16 en un punto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="e2052-207">Unidad de código suplente alto (es decir, una unidad de código que va de U+D800 a U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="e2052-208">Unidad de código suplente bajo (es decir, una unidad de código que va de U+DC00 a U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-209">Convierte el valor de un par suplente codificado mediante UTF-16 en un punto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-210">Punto de código Unicode de 21 bits que representan los parámetros <paramref name="highSurrogate" /> y <paramref name="lowSurrogate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-211">Utilice este método para convertir a un par suplente en un punto de código Unicode de 21 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="e2052-212">Para convertir datos UTF-16 en datos UTF-32, utilice el <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="e2052-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="e2052-213">Normalmente, la codificación UTF-16 representa un único carácter Unicode como una unidad de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="e2052-214">Sin embargo, también admite pares suplentes, que permiten un único carácter abstracto para representarse como dos unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="e2052-215">Estos dos <xref:System.Char> objetos deben tener unidades de código de ese intervalo de U+D800 a U+DBFF, para el primer suplente (alto) y de U+DC00 a U+DFFF para el segundo suplente (bajo).</span><span class="sxs-lookup"><span data-stu-id="e2052-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="e2052-216">Los pares suplentes son compatibles únicamente con UTF-16 de codificación.</span><span class="sxs-lookup"><span data-stu-id="e2052-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="e2052-217">Este método permite un carácter representado por un par suplente UTF-16 para convertirse en un carácter mediante la codificación UTF-32.</span><span class="sxs-lookup"><span data-stu-id="e2052-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-218">En el ejemplo de código siguiente se muestra el <xref:System.Char.ConvertToUtf32%2A> y <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-219">
            <paramref name="highSurrogate" /> no está en el intervalo de U+D800 a U+DBFF, o <paramref name="lowSurrogate" /> no está en el intervalo de U+DC00 a U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-220">Cadena que contiene un carácter o par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-221">Posición de índice del carácter o par suplente en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-222">Convierte el valor de un par suplente o carácter codificado mediante UTF-16 que está situado en una posición concreta de una cadena en un punto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-223">Punto de código Unicode de 21 bits representado por el carácter o par suplente situado en la posición del parámetro <paramref name="s" /> que especifica el parámetro <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-224">Utilice este método para convertir a un carácter o par suplente en un punto de código Unicode de 21 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="e2052-225">Para convertir datos UTF-16 en datos UTF-32, utilice el <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="e2052-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-226">En el ejemplo de código siguiente se muestra el <xref:System.Char.ConvertToUtf32%2A> y <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-227">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-228">
            <paramref name="index" /> no es una posición dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e2052-229">La posición de índice especificada contiene un par suplente y el primer carácter del par no es un suplente alto válido o el segundo carácter del par no es un suplente bajo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-230">Devuelve un valor que indica si esta instancia es igual a un objeto o a un valor <see cref="T:System.Char" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="e2052-231">Un objeto que se va a comparar con esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-232">Devuelve un valor que indica si esta instancia es igual que el objeto <see cref="T:System.Char" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-233">
            <see langword="true" /> si el parámetro <paramref name="obj" /> es igual al valor de esta instancia; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-234">Este método implementa el <xref:System.IEquatable%601?displayProperty=nameWithType> interfaz y realiza un poco mejor que <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> porque no es necesario aplicar conversión unboxing a la `obj` parámetro.</span><span class="sxs-lookup"><span data-stu-id="e2052-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="e2052-235">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-236">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-237">Es <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Char" /> y es igual al valor de esta instancia; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-238">La comparación realizada por este método se basa en los valores codificados de esta instancia y `obj`, no necesariamente en sus características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="e2052-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-239">En el ejemplo de código siguiente se muestra <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2052-240">Devuelve el código hash de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-241">Código hash de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-242">Convierte un carácter Unicode numérico especificado en un número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-243">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-244">Convierte el carácter Unicode numérico especificado en un número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-245">Valor numérico de <paramref name="c" /> si dicho carácter representa un número; en caso contrario, -1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-246">El `c` parámetro debe ser el <xref:System.Char> representación de un valor numérico.</span><span class="sxs-lookup"><span data-stu-id="e2052-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="e2052-247">Por ejemplo, si `c` es "5", el valor devuelto es 5.</span><span class="sxs-lookup"><span data-stu-id="e2052-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="e2052-248">Sin embargo, si `c` es la "z", el valor devuelto es -1,0.</span><span class="sxs-lookup"><span data-stu-id="e2052-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="e2052-249">Un carácter tiene un valor numérico asociado sólo si se trata de un miembro de uno de los siguientes <xref:System.Globalization.UnicodeCategory> categorías: `DecimalDigitNumber`, `LetterNumber`, o `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="e2052-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="e2052-250">El <xref:System.Char.GetNumericValue%2A> método supone que `c` corresponde a un único carácter lingüístico y comprueba si dicho carácter puede convertirse en un dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="e2052-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="e2052-251">Sin embargo, algunos números en el estándar Unicode están representadas por dos <xref:System.Char> objetos que forman un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="e2052-252">Por ejemplo, el sistema de numeración de Egeo consta de 10107 U + U + 10133 a través de los puntos de código.</span><span class="sxs-lookup"><span data-stu-id="e2052-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="e2052-253">En el ejemplo siguiente se usa el <xref:System.Char.ConvertFromUtf32%2A> método para crear instancias de una cadena que representa el número uno de menores.</span><span class="sxs-lookup"><span data-stu-id="e2052-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="e2052-254">Como la salida muestra el ejemplo, el <xref:System.Char.GetNumericValue%28System.Char%29> método devuelve -1 si se pasa un suplente alto o un suplente bajo de este carácter.</span><span class="sxs-lookup"><span data-stu-id="e2052-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="e2052-255">En el ejemplo siguiente se muestra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-256">Objeto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-257">Posición de caracteres en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-258">Convierte el carácter Unicode numérico situado en la posición especificada de una cadena especificada en un número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-259">Valor numérico del carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> si dicho carácter representa un número; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-260">El `s` parámetro debe ser la representación de cadena de un valor numérico.</span><span class="sxs-lookup"><span data-stu-id="e2052-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="e2052-261">Por ejemplo, si el carácter que ocupa la posición `index` en `s` es "5", el valor devuelto es 5.</span><span class="sxs-lookup"><span data-stu-id="e2052-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="e2052-262">Sin embargo, si el carácter que ocupa la posición `index` en `s` es la "z", el valor devuelto es -1.</span><span class="sxs-lookup"><span data-stu-id="e2052-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="e2052-263">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-264">Un carácter tiene un valor numérico asociado sólo si se trata de un miembro de uno de los siguientes <xref:System.Globalization.UnicodeCategory> categorías: `DecimalDigitNumber`, `LetterNumber`, o `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="e2052-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="e2052-265">Si el <xref:System.Char> objeto en la posición `index` es el primer carácter de un par suplente válido, el <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método determina si el par suplente forms un dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="e2052-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="e2052-266">Por ejemplo, el sistema de numeración de Egeo consta de 10107 U + U + 10133 a través de los puntos de código.</span><span class="sxs-lookup"><span data-stu-id="e2052-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="e2052-267">En el ejemplo siguiente se usa el <xref:System.Char.ConvertFromUtf32%2A> método para crear instancias de una cadena que representa cada número menores.</span><span class="sxs-lookup"><span data-stu-id="e2052-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="e2052-268">Como la salida muestra el ejemplo, el <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método devuelve el valor numérico correcto si se pasa el suplente alto de un número de menores.</span><span class="sxs-lookup"><span data-stu-id="e2052-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="e2052-269">Sin embargo, si se pasa al suplente bajo, considere a solo el suplente bajo de forma aislada y devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="e2052-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="e2052-270">En el ejemplo de código siguiente se muestra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-271">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-272">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2052-273">Devuelve el <see cref="T:System.TypeCode" /> para el tipo de valor <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-274">Constante enumerada, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-275">Clasifica un carácter Unicode dentro de un grupo identificado por uno de los valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-276">Carácter Unicode que se va a clasificar por categorías.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-277">Clasifica un carácter Unicode especificado dentro de un grupo identificado por uno de los valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-278">Valor de <see cref="T:System.Globalization.UnicodeCategory" /> que identifica el grupo que contiene <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-279">El <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método no siempre devuelven el mismo <xref:System.Globalization.UnicodeCategory> valor como el <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> cuando se pasa un carácter determinado como un parámetro de método.</span><span class="sxs-lookup"><span data-stu-id="e2052-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="e2052-280">El <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método está diseñado para reflejar la versión actual del estándar Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="e2052-281">En cambio, aunque el <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método normalmente refleja la versión actual del estándar Unicode, puede devolver la categoría de un carácter basándose en una versión anterior del estándar o puede devolver una categoría que difiera del estándar en orden para mantener la compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="e2052-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="e2052-282">Como resultado, se recomienda que utilice el <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método en lugar de <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e2052-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e2052-283">A partir de la [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode se clasifican según [el estándar de Unix, versión 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="e2052-284">En las versiones de .NET Framework desde el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] a la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], se clasifican según [el estándar de Unix, versión 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-285">En el ejemplo de código siguiente se muestra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-286">Objeto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-287">Posición de caracteres en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-288">Clasifica el carácter que ocupa la posición especificada en una cadena especificada dentro de un grupo identificado por uno de los valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-289">Constante enumerada <see cref="T:System.Globalization.UnicodeCategory" /> que identifica el grupo que contiene el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-290">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-291">El <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método no siempre devuelven el mismo <xref:System.Globalization.UnicodeCategory> valor como el <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> cuando se pasa un carácter determinado como un parámetro de método.</span><span class="sxs-lookup"><span data-stu-id="e2052-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="e2052-292">El <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> método está diseñado para reflejar la versión actual del estándar Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="e2052-293">En cambio, aunque el <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método normalmente refleja la versión actual del estándar Unicode, puede devolver la categoría de un carácter basándose en una versión anterior del estándar o puede devolver una categoría que difiera del estándar en orden para mantener la compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="e2052-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="e2052-294">Como resultado, se recomienda que utilice el <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método en lugar de <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e2052-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e2052-295">A partir de la [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode se clasifican según [el estándar de Unix, versión 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="e2052-296">En las versiones de .NET Framework desde el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] a la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], se clasifican según [el estándar de Unix, versión 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="e2052-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-297">En el ejemplo siguiente se muestra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-298">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-299">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-300">Indica si un carácter Unicode especificado se clasifica por categorías como un carácter de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-301">Se da formato los caracteres de control y otros caracteres no imprimibles, por ejemplo, confirmación, BEL, CR, FF, LF y VT.</span><span class="sxs-lookup"><span data-stu-id="e2052-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="e2052-302">El estándar Unicode asigna los puntos de código desde \U0000 a \U001F, \U007F y de \U0080 a \U009F a caracteres de control.</span><span class="sxs-lookup"><span data-stu-id="e2052-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="e2052-303">Según el estándar Unicode, estos valores tienen que interpretarse como caracteres de control, a menos que su uso en caso contrario, se define mediante una aplicación.</span><span class="sxs-lookup"><span data-stu-id="e2052-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="e2052-304">Caracteres de control válidos son miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-305">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-306">Indica si el carácter Unicode especificado se clasifica por categorías como un carácter de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-307">Es <see langword="true" /> si <paramref name="c" /> es un carácter de control; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-308">Se da formato los caracteres de control y otros caracteres no imprimibles, por ejemplo, confirmación, BEL, CR, FF, LF y VT.</span><span class="sxs-lookup"><span data-stu-id="e2052-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="e2052-309">El estándar de Unicode T asigna los puntos de código desde \U0000 a \U001F, \U007F y de \U0080 a \U009F a caracteres de control.</span><span class="sxs-lookup"><span data-stu-id="e2052-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="e2052-310">Según el estándar Unicode, estos valores tienen que interpretarse como caracteres de control, a menos que su uso en caso contrario, se define mediante una aplicación.</span><span class="sxs-lookup"><span data-stu-id="e2052-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="e2052-311">Caracteres de control válidos son miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-312">El ejemplo siguiente muestra el punto de código Unicode de cada uno de los caracteres de control.</span><span class="sxs-lookup"><span data-stu-id="e2052-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-313">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-314">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-315">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un carácter de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-316">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> de <paramref name="s" /> es un carácter de control; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-317">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-318">Se da formato los caracteres de control y otros caracteres no imprimibles, por ejemplo, confirmación, BEL, CR, FF, LF y VT.</span><span class="sxs-lookup"><span data-stu-id="e2052-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="e2052-319">El estándar Unicode asigna los puntos de código desde \U0000 a \U001F, \U007F y de \U0080 a \U009F a caracteres de control.</span><span class="sxs-lookup"><span data-stu-id="e2052-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="e2052-320">Según el estándar Unicode, estos valores tienen que interpretarse como caracteres de control, a menos que su uso en caso contrario, se define mediante una aplicación.</span><span class="sxs-lookup"><span data-stu-id="e2052-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="e2052-321">Caracteres de control válidos son miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-322">El ejemplo siguiente enumera los caracteres de una cadena y determina si alguno es un carácter de control.</span><span class="sxs-lookup"><span data-stu-id="e2052-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-323">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-324">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-325">Indica si un carácter Unicode se clasifica por categorías como un dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-326">Dígitos válidos son miembros de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-327">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-328">Indica si el carácter Unicode especificado se clasifica por categorías como un dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-329">
            <see langword="true" /> si <paramref name="c" /> es un dígito decimal; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-330">Este método determina si un <xref:System.Char> es un dígito en base 10.</span><span class="sxs-lookup"><span data-stu-id="e2052-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="e2052-331">Esto contrasta con <xref:System.Char.IsNumber%2A>, que determina si un `Char` es cualquier categoría numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="e2052-332">Números de incluir caracteres como fracciones, subíndices, superíndices, números romanos, numeradores de moneda, números rodeados con un círculo y dígitos específicos de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="e2052-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="e2052-333">Dígitos válidos son miembros de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-334">En el ejemplo de código siguiente se muestra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-335">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-336">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-337">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-338">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un dígito decimal; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-339">Este método determina si un <xref:System.Char> es un dígito en base 10.</span><span class="sxs-lookup"><span data-stu-id="e2052-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="e2052-340">Esto contrasta con <xref:System.Char.IsNumber%2A>, que determina si un <xref:System.Char> es cualquier categoría numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="e2052-341">Números de incluir caracteres como fracciones, subíndices, superíndices, números romanos, numeradores de moneda, números rodeados con un círculo y dígitos específicos de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="e2052-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="e2052-342">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-343">Dígitos válidos son miembros de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-344">En el ejemplo de código siguiente se muestra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-345">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-346">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-347">Indica si el objeto <see cref="T:System.Char" /> especificado es un suplente alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-348">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-349">Indica si el objeto <see cref="T:System.Char" /> especificado es un suplente alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-350">
            <see langword="true" /> si el valor numérico del parámetro <paramref name="c" /> va de U+D800 a U+DBFF; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-351">Además de representar los caracteres individuales mediante un punto de código de 16 bits, la codificación UTF-16 permite representar caracteres abstractas mediante dos puntos de código de 16 bits, que se conoce como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="e2052-352">El primer elemento en este par es el suplente alto.</span><span class="sxs-lookup"><span data-stu-id="e2052-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="e2052-353">Su punto de código puede oscilar entre U+D800 y U+DBFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="e2052-354">Un suplente individual no tiene una interpretación propia; tiene sentido sólo cuando se usa como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-355">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-356">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-357">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-358">Indica si el objeto <see cref="T:System.Char" /> situado en la posición especificada de una cadena es un suplente alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-359">
            <see langword="true" /> si el valor numérico del carácter especificado en el parámetro <paramref name="s" /> va de U+D800 a U+DBFF; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-360">El `index` parámetro está basado en cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="e2052-361">Además de representar los caracteres individuales mediante un punto de código de 16 bits, la codificación UTF-16 permite representar caracteres abstractas mediante dos puntos de código de 16 bits, que se conoce como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="e2052-362">El primer elemento en este par es el suplente alto.</span><span class="sxs-lookup"><span data-stu-id="e2052-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="e2052-363">Su punto de código puede oscilar entre U+D800 y U+DBFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="e2052-364">Un suplente individual no tiene una interpretación propia; tiene sentido sólo cuando se usa como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-365">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-366">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-367">
            <paramref name="index" /> no es una posición dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-368">Indica si un carácter Unicode se clasifica por categorías como una letra Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-369">Este método determina si un <xref:System.Char> es un miembro de cualquier categoría de letras Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="e2052-370">Las letras de Unicode siguientes:</span><span class="sxs-lookup"><span data-stu-id="e2052-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="e2052-371">Letras mayúsculas, como u+0041 (LATIN CAPITAL letra A) a través de U + 005A (letra mayúscula latina Z), o u+0400 (CIRÍLICO letra mayúscula IE con acento GRAVE) a través de U + 042F (letra mayúscula CIRÍLICA YA).</span><span class="sxs-lookup"><span data-stu-id="e2052-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="e2052-372">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-373">Letras minúsculas, como u+0061 (letra latina A) a través de 007A U + (pequeña letra latina Z), o U + 03AC (letra pequeña GRIEGA alfa con TONOS) a través de U + 03CE (letra pequeña GRIEGA OMEGA con TONOS).</span><span class="sxs-lookup"><span data-stu-id="e2052-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="e2052-374">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-375">Título de letras mayúsculas, como 01 U + C 5 (LATÍN letra mayúscula D con pequeña letra Z con acento circunflejo) o U + 1FFC (GRIEGO letra mayúscula OMEGA con PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="e2052-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="e2052-376">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-377">Modificadores, como U + 02B0 (letra MODIFICADORA minúscula H) a través de u+02C1 (modificador letra GLÓTICO invertido), o U + 1D2C (letra MODIFICADORA mayúscula A) a través de u+1D61 (letra MODIFICADORA minúscula CHI).</span><span class="sxs-lookup"><span data-stu-id="e2052-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="e2052-378">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-379">Otras letras, como U + 05 D 0 (HEBREO letra ALEF) a través de U + 05EA (letra hebrea TAV), u+0621 (letra árabe HAMZA) a través de U + 063A (letra árabe GHAIN), o U + 4E00 (\<a de Ideogramas CJK, primero >) a través de FC U + 9 3 (\<a de Ideogramas CJK, último >).</span><span class="sxs-lookup"><span data-stu-id="e2052-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="e2052-380">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-381">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-382">Indica si el carácter Unicode especificado pertenece a alguna categoría de letras Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-383">
            <see langword="true" /> si <paramref name="c" /> es una letra; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-384">Este método determina si un <xref:System.Char> es un miembro de cualquier categoría de letras Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="e2052-385">Las letras de Unicode siguientes:</span><span class="sxs-lookup"><span data-stu-id="e2052-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="e2052-386">Letras mayúsculas, como u+0041 (LATIN CAPITAL letra A) a través de U + 005A (letra mayúscula latina Z), o u+0400 (CIRÍLICO letra mayúscula IE con acento GRAVE) a través de U + 042F (letra mayúscula CIRÍLICA YA).</span><span class="sxs-lookup"><span data-stu-id="e2052-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="e2052-387">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-388">Letras minúsculas, como u+0061 (letra latina A) a través de 007A U + (pequeña letra latina Z), o U + 03AC (letra pequeña GRIEGA alfa con TONOS) a través de U + 03CE (letra pequeña GRIEGA OMEGA con TONOS).</span><span class="sxs-lookup"><span data-stu-id="e2052-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="e2052-389">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-390">Título de letras mayúsculas, como 01 U + C 5 (LATÍN letra mayúscula D con pequeña letra Z con acento circunflejo) o U + 1FFC (GRIEGO letra mayúscula OMEGA con PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="e2052-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="e2052-391">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-392">Modificadores, como U + 02B0 (letra MODIFICADORA minúscula H) a través de u+02C1 (modificador letra GLÓTICO invertido), o U + 1D2C (letra MODIFICADORA mayúscula A) a través de u+1D61 (letra MODIFICADORA minúscula CHI).</span><span class="sxs-lookup"><span data-stu-id="e2052-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="e2052-393">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-394">Otras letras, como U + 05 D 0 (HEBREO letra ALEF) a través de U + 05EA (letra hebrea TAV), u+0621 (letra árabe HAMZA) a través de U + 063A (letra árabe GHAIN), o U + 4E00 (\<a de Ideogramas CJK, primero >) a través de FC U + 9 3 (\<a de Ideogramas CJK, último >).</span><span class="sxs-lookup"><span data-stu-id="e2052-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="e2052-395">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-396">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-397">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-398">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-399">Indica si el carácter que ocupa la posición especificada en una determinada cadena pertenece a alguna categoría de letras Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-400">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es una letra; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-401">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-402">Este método determina si el carácter que ocupa una posición de índice especificada en una cadena es un miembro de cualquier categoría de letras Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="e2052-403">Las letras de Unicode siguientes:</span><span class="sxs-lookup"><span data-stu-id="e2052-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="e2052-404">Letras mayúsculas, como u+0041 (LATIN CAPITAL letra A) a través de U + 005A (letra mayúscula latina Z), o u+0400 (CIRÍLICO letra mayúscula IE con acento GRAVE) a través de U + 042F (letra mayúscula CIRÍLICA YA).</span><span class="sxs-lookup"><span data-stu-id="e2052-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="e2052-405">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-406">Letras minúsculas, como u+0061 (letra latina A) a través de 007A U + (pequeña letra latina Z), o U + 03AC (letra pequeña GRIEGA alfa con TONOS) a través de U + 03CE (letra pequeña GRIEGA OMEGA con TONOS).</span><span class="sxs-lookup"><span data-stu-id="e2052-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="e2052-407">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-408">Título de letras mayúsculas, como 01 U + C 5 (LATÍN letra mayúscula D con pequeña letra Z con acento circunflejo) o U + 1FFC (GRIEGO letra mayúscula OMEGA con PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="e2052-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="e2052-409">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-410">Modificadores, como U + 02B0 (letra MODIFICADORA minúscula H) a través de u+02C1 (modificador letra GLÓTICO invertido), o U + 1D2C (letra MODIFICADORA mayúscula A) a través de u+1D61 (letra MODIFICADORA minúscula CHI).</span><span class="sxs-lookup"><span data-stu-id="e2052-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="e2052-411">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="e2052-412">Otras letras, como U + 05 D 0 (HEBREO letra ALEF) a través de U + 05EA (letra hebrea TAV), u+0621 (letra árabe HAMZA) a través de U + 063A (letra árabe GHAIN), o U + 4E00 (\<a de Ideogramas CJK, primero >) a través de FC U + 9 3 (\<a de Ideogramas CJK, último >).</span><span class="sxs-lookup"><span data-stu-id="e2052-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="e2052-413">Estos caracteres son miembros de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-414">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-415">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-416">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-417">Indica si un carácter Unicode pertenece a alguna categoría de letras o dígitos decimales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-418">Dígitos decimales y las letras válidas son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, o `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="e2052-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-419">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-420">Indica si el carácter Unicode especificado pertenece a alguna categoría de letras o dígitos decimales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-421">
            <see langword="true" /> si <paramref name="c" /> es una letra o dígito decimal; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-422">Dígitos decimales y las letras válidas son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, o `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="e2052-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-423">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-424">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-425">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-426">Indica si el carácter que ocupa la posición especificada en una cadena especificada pertenece a alguna categoría de letras o dígitos decimales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-427">
            <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es una letra o dígito decimal; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-428">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-429">Dígitos decimales y las letras válidas son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, o `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="e2052-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-430">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-431">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-432">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-433">Indica si un carácter Unicode se clasifica por categorías como una letra minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-434">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-435">Indica si el carácter Unicode especificado se clasifica por categorías como una letra minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-436">
            <see langword="true" /> si <paramref name="c" /> es una letra minúscula; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-437">Letras minúsculas válidas son miembros de la siguiente categoría de <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="e2052-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-438">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-439">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-440">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-441">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como una letra minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-442">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es una letra minúscula; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-443">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-444">Letras minúsculas válidas son miembros de la siguiente categoría de <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="e2052-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-445">En el ejemplo de código siguiente se muestra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-446">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-447">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-448">Indica si el objeto <see cref="T:System.Char" /> especificado es un suplente bajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-449">Carácter que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-450">Indica si el objeto <see cref="T:System.Char" /> especificado es un suplente bajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-451">
            <see langword="true" /> si el valor numérico del parámetro <paramref name="c" /> va de U+DC00 a U+DFFF; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-452">Además de representar los caracteres individuales mediante un punto de código de 16 bits, la codificación UTF-16 permite representar caracteres abstractas mediante dos puntos de código de 16 bits, que se conoce como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="e2052-453">El segundo elemento en este par es el suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="e2052-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="e2052-454">Su punto de código puede oscilar entre U+DC00 y U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="e2052-455">Un suplente individual no tiene una interpretación propia; tiene sentido sólo cuando se usa como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-456">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-457">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-458">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-459">Indica si el objeto <see cref="T:System.Char" /> situado en la posición especificada de una cadena es un suplente bajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-460">
            <see langword="true" /> si el valor numérico del carácter especificado en el parámetro <paramref name="s" /> va de U+DC00 a U+DFFF; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-461">El `index` parámetro está basado en cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="e2052-462">Además de representar los caracteres individuales mediante un punto de código de 16 bits, la codificación UTF-16 permite representar caracteres abstractas mediante dos puntos de código de 16 bits, que se conoce como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="e2052-463">El segundo elemento en este par es el suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="e2052-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="e2052-464">Su punto de código puede oscilar entre U+DC00 y U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="e2052-465">Un suplente individual no tiene una interpretación propia; tiene sentido sólo cuando se usa como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-466">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-467">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-468">
            <paramref name="index" /> no es una posición dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-469">Indica si un carácter Unicode se clasifica por categorías como un número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-470">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-471">Indica si el carácter Unicode especificado se clasifica por categorías como un número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-472">Es <see langword="true" /> si <paramref name="c" /> es un número; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-473">Este método determina si un <xref:System.Char> es cualquier categoría numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="e2052-474">Además de incluir dígitos, los números incluyen caracteres, fracciones, subíndices, superíndices, números romanos, numeradores de divisa y números rodeados con un círculo.</span><span class="sxs-lookup"><span data-stu-id="e2052-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="e2052-475">Este método se contrasta con la <xref:System.Char.IsDigit%2A> método, que determina si un <xref:System.Char> es un dígito en base 10.</span><span class="sxs-lookup"><span data-stu-id="e2052-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2052-476">El <xref:System.Char.IsNumber%28System.Char%29> método no está pensado para determinar si una cadena formada por caracteres numéricos (por ejemplo, llamando al método para cada carácter en una cadena).</span><span class="sxs-lookup"><span data-stu-id="e2052-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="e2052-477">Para determinar si una cadena consta de caracteres numéricos, llamar a las sobrecargas de los `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> o <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de un tipo entero o de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="e2052-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="e2052-478">Números válidos son miembros de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, o <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="e2052-479">El <xref:System.Char.IsNumber%28System.Char%29> método supone que `c` corresponde a un único carácter lingüístico y comprueba si dicho carácter representa un número.</span><span class="sxs-lookup"><span data-stu-id="e2052-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="e2052-480">Sin embargo, algunos números en el estándar Unicode están representadas por dos <xref:System.Char> objetos que forman un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="e2052-481">Por ejemplo, el sistema de numeración de Egeo consta de 10107 U + U + 10133 a través de los puntos de código.</span><span class="sxs-lookup"><span data-stu-id="e2052-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="e2052-482">En el ejemplo siguiente se usa el <xref:System.Char.ConvertFromUtf32%2A> método para crear instancias de una cadena que representa el número uno de menores.</span><span class="sxs-lookup"><span data-stu-id="e2052-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="e2052-483">Como la salida muestra el ejemplo, el <xref:System.Char.IsNumber%28System.Char%29> devuelve del método `false` si se pasa un suplente alto o un suplente bajo de este carácter.</span><span class="sxs-lookup"><span data-stu-id="e2052-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="e2052-484">En el ejemplo siguiente se muestra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-485">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-486">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-487">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-488">
            <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un número; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-489">Este método determina si un <xref:System.Char> es cualquier categoría numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="e2052-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="e2052-490">Además de incluir dígitos, los números incluyen caracteres, fracciones, subíndices, superíndices, números romanos, numeradores de divisa y números rodeados con un círculo.</span><span class="sxs-lookup"><span data-stu-id="e2052-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="e2052-491">Este método se contrasta con la <xref:System.Char.IsDigit%2A> método, que determina si un <xref:System.Char> es un dígito en base 10.</span><span class="sxs-lookup"><span data-stu-id="e2052-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="e2052-492">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2052-493">El <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método no está pensado para determinar si una cadena formada por caracteres numéricos (por ejemplo, llamando al método para cada carácter en una cadena).</span><span class="sxs-lookup"><span data-stu-id="e2052-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="e2052-494">Para determinar si una cadena consta de caracteres numéricos, llamar a las sobrecargas de los `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> o <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de un tipo entero o de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="e2052-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="e2052-495">Números válidos son miembros de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, o <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="e2052-496">Si el <xref:System.Char> objeto en la posición `index` es el primer carácter de un par suplente válido, el <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método determina si el par suplente forms un dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="e2052-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="e2052-497">Por ejemplo, el sistema de numeración de Egeo consta de 10107 U + U + 10133 a través de los puntos de código.</span><span class="sxs-lookup"><span data-stu-id="e2052-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="e2052-498">En el ejemplo siguiente se usa el <xref:System.Char.ConvertFromUtf32%2A> método para crear instancias de una cadena que representa el número uno de menores.</span><span class="sxs-lookup"><span data-stu-id="e2052-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="e2052-499">Como la salida muestra el ejemplo, el <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> devuelve del método `true` si se pasa el suplente alto de mar EGEO número uno.</span><span class="sxs-lookup"><span data-stu-id="e2052-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="e2052-500">Sin embargo, si se pasa el suplente bajo, considera solo la categoría de suplente bajo y devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e2052-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="e2052-501">En el ejemplo siguiente se muestra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-502">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-503">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-504">Indica si un carácter Unicode se clasifica por categorías como un signo de puntuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-505">Signos de puntuación válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, o `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="e2052-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="e2052-506">Incluyen caracteres con los puntos de código Unicode enumerados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="e2052-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="e2052-507">U+0021 a u+0023</span><span class="sxs-lookup"><span data-stu-id="e2052-507">U+0021 to U+0023</span></span>|<span data-ttu-id="e2052-508">U+060C y U+060D</span><span class="sxs-lookup"><span data-stu-id="e2052-508">U+060C and U+060D</span></span>|<span data-ttu-id="e2052-509">U + 1800 a 180A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-509">U+1800 to U+180A</span></span>|<span data-ttu-id="e2052-510">3014 U + a 301F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="e2052-511">0025 U + a 002A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-511">U+0025 to U+002A</span></span>|<span data-ttu-id="e2052-512">061B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-512">U+061B</span></span>|<span data-ttu-id="e2052-513">U+1944 y u+1945</span><span class="sxs-lookup"><span data-stu-id="e2052-513">U+1944 and U+1945</span></span>|<span data-ttu-id="e2052-514">3030 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-514">U+3030</span></span>|  
|<span data-ttu-id="e2052-515">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="e2052-515">U+002C to U+002F</span></span>|<span data-ttu-id="e2052-516">U + 061E y 061F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-516">U+061E and U+061F</span></span>|<span data-ttu-id="e2052-517">U + 19DE y 19DF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="e2052-518">303D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-518">U+303D</span></span>|  
|<span data-ttu-id="e2052-519">003A U + y 003B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-519">U+003A and U+003B</span></span>|<span data-ttu-id="e2052-520">066A U + a U+066D</span><span class="sxs-lookup"><span data-stu-id="e2052-520">U+066A to U+066D</span></span>|<span data-ttu-id="e2052-521">U + 1A1E y 1A1F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="e2052-522">30A0 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-522">U+30A0</span></span>|  
|<span data-ttu-id="e2052-523">003F U + y 0040 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-523">U+003F and U+0040</span></span>|<span data-ttu-id="e2052-524">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="e2052-524">U+06D4</span></span>|<span data-ttu-id="e2052-525">1B5A U + a 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="e2052-526">30FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-526">U+30FB</span></span>|  
|<span data-ttu-id="e2052-527">005B U + a U+005D</span><span class="sxs-lookup"><span data-stu-id="e2052-527">U+005B to U+005D</span></span>|<span data-ttu-id="e2052-528">U+0700 a U+070D</span><span class="sxs-lookup"><span data-stu-id="e2052-528">U+0700 to U+070D</span></span>|<span data-ttu-id="e2052-529">U + 2010 a 2027 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-529">U+2010 to U+2027</span></span>|<span data-ttu-id="e2052-530">U+A874 a U+A877</span><span class="sxs-lookup"><span data-stu-id="e2052-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="e2052-531">005F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-531">U+005F</span></span>|<span data-ttu-id="e2052-532">07F7 U + a 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="e2052-533">U+2030 a 2043 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-533">U+2030 to U+2043</span></span>|<span data-ttu-id="e2052-534">U + FD3E y FD3F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="e2052-535">007B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-535">U+007B</span></span>|<span data-ttu-id="e2052-536">U+0964 y u+0965</span><span class="sxs-lookup"><span data-stu-id="e2052-536">U+0964 and U+0965</span></span>|<span data-ttu-id="e2052-537">2045 U + a 2051 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-537">U+2045 to U+2051</span></span>|<span data-ttu-id="e2052-538">U+FE10 a U+FE19</span><span class="sxs-lookup"><span data-stu-id="e2052-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="e2052-539">U + 007D</span><span class="sxs-lookup"><span data-stu-id="e2052-539">U+007D</span></span>|<span data-ttu-id="e2052-540">0970 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-540">U+0970</span></span>|<span data-ttu-id="e2052-541">2053 U + a 205E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-541">U+2053 to U+205E</span></span>|<span data-ttu-id="e2052-542">U+FE30 a U+FE52</span><span class="sxs-lookup"><span data-stu-id="e2052-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="e2052-543">00A1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-543">U+00A1</span></span>|<span data-ttu-id="e2052-544">0DF4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-544">U+0DF4</span></span>|<span data-ttu-id="e2052-545">U + 207D y 207E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-545">U+207D and  U+207E</span></span>|<span data-ttu-id="e2052-546">U+FE54 a U+FE61</span><span class="sxs-lookup"><span data-stu-id="e2052-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="e2052-547">00AB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-547">U+00AB</span></span>|<span data-ttu-id="e2052-548">0E4F U + a 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="e2052-549">U + 208D y 208E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-549">U+208D and U+208E</span></span>|<span data-ttu-id="e2052-550">U + FE63</span><span class="sxs-lookup"><span data-stu-id="e2052-550">U+FE63</span></span>|  
|<span data-ttu-id="e2052-551">00AD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-551">U+00AD</span></span>|<span data-ttu-id="e2052-552">0F04 U + a 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="e2052-553">U + 232A de u+2329 y</span><span class="sxs-lookup"><span data-stu-id="e2052-553">U+2329 and U+232A</span></span>|<span data-ttu-id="e2052-554">U + FE68</span><span class="sxs-lookup"><span data-stu-id="e2052-554">U+FE68</span></span>|  
|<span data-ttu-id="e2052-555">00B7 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-555">U+00B7</span></span>|<span data-ttu-id="e2052-556">0F3A U + a 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="e2052-557">U+2768 a u+2775</span><span class="sxs-lookup"><span data-stu-id="e2052-557">U+2768 to U+2775</span></span>|<span data-ttu-id="e2052-558">U + FE6A y FE6B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="e2052-559">00BB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-559">U+00BB</span></span>|<span data-ttu-id="e2052-560">0F85 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-560">U+0F85</span></span>|<span data-ttu-id="e2052-561">U + 5 27C a u+27C6 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="e2052-562">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="e2052-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="e2052-563">00BF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-563">U+00BF</span></span>|<span data-ttu-id="e2052-564">U+0FD0 y 0FD1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="e2052-565">27E6 U + a 27EB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="e2052-566">U+FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="e2052-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="e2052-567">037E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-567">U+037E</span></span>|<span data-ttu-id="e2052-568">U + 104A a 104F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-568">U+104A to U+104F</span></span>|<span data-ttu-id="e2052-569">U+2983 a u+2998</span><span class="sxs-lookup"><span data-stu-id="e2052-569">U+2983 to U+2998</span></span>|<span data-ttu-id="e2052-570">U + FF0C a FF0F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="e2052-571">0387 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-571">U+0387</span></span>|<span data-ttu-id="e2052-572">10FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-572">U+10FB</span></span>|<span data-ttu-id="e2052-573">U + 8 29D a 29DB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="e2052-574">U + FF1A y FF1B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="e2052-575">055A U + a 055F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-575">U+055A to U+055F</span></span>|<span data-ttu-id="e2052-576">U+1361 a u+1368</span><span class="sxs-lookup"><span data-stu-id="e2052-576">U+1361 to U+1368</span></span>|<span data-ttu-id="e2052-577">U + 29FC y 29FD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="e2052-578">U + FF1F y U+FF20</span><span class="sxs-lookup"><span data-stu-id="e2052-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="e2052-579">U + 058A de u+0589 y</span><span class="sxs-lookup"><span data-stu-id="e2052-579">U+0589 and U+058A</span></span>|<span data-ttu-id="e2052-580">U + 166D y 166E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-580">U+166D and U+166E</span></span>|<span data-ttu-id="e2052-581">2CF9 U + a 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="e2052-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="e2052-582">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="e2052-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="e2052-583">05BE U +</span><span class="sxs-lookup"><span data-stu-id="e2052-583">U+05BE</span></span>|<span data-ttu-id="e2052-584">U + 169B y U + 169C</span><span class="sxs-lookup"><span data-stu-id="e2052-584">U+169B and U+169C</span></span>|<span data-ttu-id="e2052-585">U + 2CFE y 2CFF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="e2052-586">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="e2052-586">U+FF3F</span></span>|  
|<span data-ttu-id="e2052-587">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="e2052-587">U+05C0</span></span>|<span data-ttu-id="e2052-588">16EB U + a 16ED U +</span><span class="sxs-lookup"><span data-stu-id="e2052-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="e2052-589">2E00 U + a 2E17 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="e2052-590">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="e2052-590">U+FF5B</span></span>|  
|<span data-ttu-id="e2052-591">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="e2052-591">U+05C3</span></span>|<span data-ttu-id="e2052-592">U+1735 y u+1736</span><span class="sxs-lookup"><span data-stu-id="e2052-592">U+1735 and U+1736</span></span>|<span data-ttu-id="e2052-593">U + 2E1C y 2E1D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="e2052-594">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="e2052-594">U+FF5D</span></span>|  
|<span data-ttu-id="e2052-595">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="e2052-595">U+05C6</span></span>|<span data-ttu-id="e2052-596">U + 4 17D a U + u+17D6</span><span class="sxs-lookup"><span data-stu-id="e2052-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="e2052-597">3001 U + a 3003 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-597">U+3001 to U+3003</span></span>|<span data-ttu-id="e2052-598">U + FF5F a U+FF65</span><span class="sxs-lookup"><span data-stu-id="e2052-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="e2052-599">U + 05F3 y 05F4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="e2052-600">U + 8 17D a 17DA U +</span><span class="sxs-lookup"><span data-stu-id="e2052-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="e2052-601">3008 U + a U + 3011</span><span class="sxs-lookup"><span data-stu-id="e2052-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-602">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-603">Indica si el carácter Unicode especificado se clasifica por categorías como un signo de puntuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-604">
            <see langword="true" /> si <paramref name="c" /> es un signo de puntuación; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-605">Signos de puntuación válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, o `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="e2052-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="e2052-606">Incluyen caracteres con los puntos de código Unicode enumerados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="e2052-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="e2052-607">U+0021 a u+0023</span><span class="sxs-lookup"><span data-stu-id="e2052-607">U+0021 to U+0023</span></span>|<span data-ttu-id="e2052-608">U+060C y U+060D</span><span class="sxs-lookup"><span data-stu-id="e2052-608">U+060C and U+060D</span></span>|<span data-ttu-id="e2052-609">U + 1800 a 180A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-609">U+1800 to U+180A</span></span>|<span data-ttu-id="e2052-610">3014 U + a 301F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="e2052-611">0025 U + a 002A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-611">U+0025 to U+002A</span></span>|<span data-ttu-id="e2052-612">061B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-612">U+061B</span></span>|<span data-ttu-id="e2052-613">U+1944 y u+1945</span><span class="sxs-lookup"><span data-stu-id="e2052-613">U+1944 and U+1945</span></span>|<span data-ttu-id="e2052-614">3030 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-614">U+3030</span></span>|  
|<span data-ttu-id="e2052-615">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="e2052-615">U+002C to U+002F</span></span>|<span data-ttu-id="e2052-616">U + 061E y 061F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-616">U+061E and U+061F</span></span>|<span data-ttu-id="e2052-617">U + 19DE y 19DF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="e2052-618">303D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-618">U+303D</span></span>|  
|<span data-ttu-id="e2052-619">003A U + y 003B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-619">U+003A and U+003B</span></span>|<span data-ttu-id="e2052-620">066A U + a U+066D</span><span class="sxs-lookup"><span data-stu-id="e2052-620">U+066A to U+066D</span></span>|<span data-ttu-id="e2052-621">U + 1A1E y 1A1F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="e2052-622">30A0 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-622">U+30A0</span></span>|  
|<span data-ttu-id="e2052-623">003F U + y 0040 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-623">U+003F and U+0040</span></span>|<span data-ttu-id="e2052-624">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="e2052-624">U+06D4</span></span>|<span data-ttu-id="e2052-625">1B5A U + a 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="e2052-626">30FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-626">U+30FB</span></span>|  
|<span data-ttu-id="e2052-627">005B U + a U+005D</span><span class="sxs-lookup"><span data-stu-id="e2052-627">U+005B to U+005D</span></span>|<span data-ttu-id="e2052-628">U+0700 a U+070D</span><span class="sxs-lookup"><span data-stu-id="e2052-628">U+0700 to U+070D</span></span>|<span data-ttu-id="e2052-629">U + 2010 a 2027 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-629">U+2010 to U+2027</span></span>|<span data-ttu-id="e2052-630">U+A874 a U+A877</span><span class="sxs-lookup"><span data-stu-id="e2052-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="e2052-631">005F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-631">U+005F</span></span>|<span data-ttu-id="e2052-632">07F7 U + a 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="e2052-633">U+2030 a 2043 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-633">U+2030 to U+2043</span></span>|<span data-ttu-id="e2052-634">U + FD3E y FD3F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="e2052-635">007B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-635">U+007B</span></span>|<span data-ttu-id="e2052-636">U+0964 y u+0965</span><span class="sxs-lookup"><span data-stu-id="e2052-636">U+0964 and U+0965</span></span>|<span data-ttu-id="e2052-637">2045 U + a 2051 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-637">U+2045 to U+2051</span></span>|<span data-ttu-id="e2052-638">U+FE10 a U+FE19</span><span class="sxs-lookup"><span data-stu-id="e2052-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="e2052-639">U + 007D</span><span class="sxs-lookup"><span data-stu-id="e2052-639">U+007D</span></span>|<span data-ttu-id="e2052-640">0970 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-640">U+0970</span></span>|<span data-ttu-id="e2052-641">2053 U + a 205E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-641">U+2053 to U+205E</span></span>|<span data-ttu-id="e2052-642">U+FE30 a U+FE52</span><span class="sxs-lookup"><span data-stu-id="e2052-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="e2052-643">00A1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-643">U+00A1</span></span>|<span data-ttu-id="e2052-644">0DF4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-644">U+0DF4</span></span>|<span data-ttu-id="e2052-645">U + 207D y 207E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-645">U+207D and  U+207E</span></span>|<span data-ttu-id="e2052-646">U+FE54 a U+FE61</span><span class="sxs-lookup"><span data-stu-id="e2052-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="e2052-647">00AB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-647">U+00AB</span></span>|<span data-ttu-id="e2052-648">0E4F U + a 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="e2052-649">U + 208D y 208E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-649">U+208D and U+208E</span></span>|<span data-ttu-id="e2052-650">U + FE63</span><span class="sxs-lookup"><span data-stu-id="e2052-650">U+FE63</span></span>|  
|<span data-ttu-id="e2052-651">00AD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-651">U+00AD</span></span>|<span data-ttu-id="e2052-652">0F04 U + a 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="e2052-653">U + 232A de u+2329 y</span><span class="sxs-lookup"><span data-stu-id="e2052-653">U+2329 and U+232A</span></span>|<span data-ttu-id="e2052-654">U + FE68</span><span class="sxs-lookup"><span data-stu-id="e2052-654">U+FE68</span></span>|  
|<span data-ttu-id="e2052-655">00B7 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-655">U+00B7</span></span>|<span data-ttu-id="e2052-656">0F3A U + a 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="e2052-657">U+2768 a u+2775</span><span class="sxs-lookup"><span data-stu-id="e2052-657">U+2768 to U+2775</span></span>|<span data-ttu-id="e2052-658">U + FE6A y FE6B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="e2052-659">00BB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-659">U+00BB</span></span>|<span data-ttu-id="e2052-660">0F85 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-660">U+0F85</span></span>|<span data-ttu-id="e2052-661">U + 5 27C a u+27C6 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="e2052-662">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="e2052-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="e2052-663">00BF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-663">U+00BF</span></span>|<span data-ttu-id="e2052-664">U+0FD0 y 0FD1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="e2052-665">27E6 U + a 27EB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="e2052-666">U+FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="e2052-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="e2052-667">037E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-667">U+037E</span></span>|<span data-ttu-id="e2052-668">U + 104A a 104F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-668">U+104A to U+104F</span></span>|<span data-ttu-id="e2052-669">U+2983 a u+2998</span><span class="sxs-lookup"><span data-stu-id="e2052-669">U+2983 to U+2998</span></span>|<span data-ttu-id="e2052-670">U + FF0C a FF0F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="e2052-671">0387 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-671">U+0387</span></span>|<span data-ttu-id="e2052-672">10FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-672">U+10FB</span></span>|<span data-ttu-id="e2052-673">U + 8 29D a 29DB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="e2052-674">U + FF1A y FF1B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="e2052-675">055A U + a 055F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-675">U+055A to U+055F</span></span>|<span data-ttu-id="e2052-676">U+1361 a u+1368</span><span class="sxs-lookup"><span data-stu-id="e2052-676">U+1361 to U+1368</span></span>|<span data-ttu-id="e2052-677">U + 29FC y 29FD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="e2052-678">U + FF1F y U+FF20</span><span class="sxs-lookup"><span data-stu-id="e2052-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="e2052-679">U + 058A de u+0589 y</span><span class="sxs-lookup"><span data-stu-id="e2052-679">U+0589 and U+058A</span></span>|<span data-ttu-id="e2052-680">U + 166D y 166E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-680">U+166D and U+166E</span></span>|<span data-ttu-id="e2052-681">2CF9 U + a 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="e2052-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="e2052-682">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="e2052-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="e2052-683">05BE U +</span><span class="sxs-lookup"><span data-stu-id="e2052-683">U+05BE</span></span>|<span data-ttu-id="e2052-684">U + 169B y U + 169C</span><span class="sxs-lookup"><span data-stu-id="e2052-684">U+169B and U+169C</span></span>|<span data-ttu-id="e2052-685">U + 2CFE y 2CFF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="e2052-686">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="e2052-686">U+FF3F</span></span>|  
|<span data-ttu-id="e2052-687">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="e2052-687">U+05C0</span></span>|<span data-ttu-id="e2052-688">16EB U + a 16ED U +</span><span class="sxs-lookup"><span data-stu-id="e2052-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="e2052-689">2E00 U + a 2E17 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="e2052-690">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="e2052-690">U+FF5B</span></span>|  
|<span data-ttu-id="e2052-691">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="e2052-691">U+05C3</span></span>|<span data-ttu-id="e2052-692">U+1735 y u+1736</span><span class="sxs-lookup"><span data-stu-id="e2052-692">U+1735 and U+1736</span></span>|<span data-ttu-id="e2052-693">U + 2E1C y 2E1D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="e2052-694">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="e2052-694">U+FF5D</span></span>|  
|<span data-ttu-id="e2052-695">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="e2052-695">U+05C6</span></span>|<span data-ttu-id="e2052-696">U + 4 17D a U + u+17D6</span><span class="sxs-lookup"><span data-stu-id="e2052-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="e2052-697">3001 U + a 3003 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-697">U+3001 to U+3003</span></span>|<span data-ttu-id="e2052-698">U + FF5F a U+FF65</span><span class="sxs-lookup"><span data-stu-id="e2052-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="e2052-699">U + 05F3 y 05F4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="e2052-700">U + 8 17D a 17DA U +</span><span class="sxs-lookup"><span data-stu-id="e2052-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="e2052-701">3008 U + a U + 3011</span><span class="sxs-lookup"><span data-stu-id="e2052-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="e2052-702">En el ejemplo de código siguiente se muestra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-703">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-704">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-705">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un signo de puntuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-706">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un signo de puntuación; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-707">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-708">Signos de puntuación válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, o `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="e2052-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="e2052-709">Incluyen caracteres con los puntos de código Unicode enumerados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="e2052-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="e2052-710">U+0021 a u+0023</span><span class="sxs-lookup"><span data-stu-id="e2052-710">U+0021 to U+0023</span></span>|<span data-ttu-id="e2052-711">U+060C y U+060D</span><span class="sxs-lookup"><span data-stu-id="e2052-711">U+060C and U+060D</span></span>|<span data-ttu-id="e2052-712">U + 1800 a 180A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-712">U+1800 to U+180A</span></span>|<span data-ttu-id="e2052-713">3014 U + a 301F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="e2052-714">0025 U + a 002A U +</span><span class="sxs-lookup"><span data-stu-id="e2052-714">U+0025 to U+002A</span></span>|<span data-ttu-id="e2052-715">061B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-715">U+061B</span></span>|<span data-ttu-id="e2052-716">U+1944 y u+1945</span><span class="sxs-lookup"><span data-stu-id="e2052-716">U+1944 and U+1945</span></span>|<span data-ttu-id="e2052-717">3030 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-717">U+3030</span></span>|  
|<span data-ttu-id="e2052-718">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="e2052-718">U+002C to U+002F</span></span>|<span data-ttu-id="e2052-719">U + 061E y 061F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-719">U+061E and U+061F</span></span>|<span data-ttu-id="e2052-720">U + 19DE y 19DF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="e2052-721">303D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-721">U+303D</span></span>|  
|<span data-ttu-id="e2052-722">003A U + y 003B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-722">U+003A and U+003B</span></span>|<span data-ttu-id="e2052-723">066A U + a U+066D</span><span class="sxs-lookup"><span data-stu-id="e2052-723">U+066A to U+066D</span></span>|<span data-ttu-id="e2052-724">U + 1A1E y 1A1F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="e2052-725">30A0 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-725">U+30A0</span></span>|  
|<span data-ttu-id="e2052-726">003F U + y 0040 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-726">U+003F and U+0040</span></span>|<span data-ttu-id="e2052-727">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="e2052-727">U+06D4</span></span>|<span data-ttu-id="e2052-728">1B5A U + a 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="e2052-729">30FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-729">U+30FB</span></span>|  
|<span data-ttu-id="e2052-730">005B U + a U+005D</span><span class="sxs-lookup"><span data-stu-id="e2052-730">U+005B to U+005D</span></span>|<span data-ttu-id="e2052-731">U+0700 a U+070D</span><span class="sxs-lookup"><span data-stu-id="e2052-731">U+0700 to U+070D</span></span>|<span data-ttu-id="e2052-732">U + 2010 a 2027 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-732">U+2010 to U+2027</span></span>|<span data-ttu-id="e2052-733">U+A874 a U+A877</span><span class="sxs-lookup"><span data-stu-id="e2052-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="e2052-734">005F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-734">U+005F</span></span>|<span data-ttu-id="e2052-735">07F7 U + a 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="e2052-736">U+2030 a 2043 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-736">U+2030 to U+2043</span></span>|<span data-ttu-id="e2052-737">U + FD3E y FD3F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="e2052-738">007B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-738">U+007B</span></span>|<span data-ttu-id="e2052-739">U+0964 y u+0965</span><span class="sxs-lookup"><span data-stu-id="e2052-739">U+0964 and U+0965</span></span>|<span data-ttu-id="e2052-740">2045 U + a 2051 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-740">U+2045 to U+2051</span></span>|<span data-ttu-id="e2052-741">U+FE10 a U+FE19</span><span class="sxs-lookup"><span data-stu-id="e2052-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="e2052-742">U + 007D</span><span class="sxs-lookup"><span data-stu-id="e2052-742">U+007D</span></span>|<span data-ttu-id="e2052-743">0970 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-743">U+0970</span></span>|<span data-ttu-id="e2052-744">2053 U + a 205E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-744">U+2053 to U+205E</span></span>|<span data-ttu-id="e2052-745">U+FE30 a U+FE52</span><span class="sxs-lookup"><span data-stu-id="e2052-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="e2052-746">00A1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-746">U+00A1</span></span>|<span data-ttu-id="e2052-747">0DF4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-747">U+0DF4</span></span>|<span data-ttu-id="e2052-748">U + 207D y 207E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-748">U+207D and  U+207E</span></span>|<span data-ttu-id="e2052-749">U+FE54 a U+FE61</span><span class="sxs-lookup"><span data-stu-id="e2052-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="e2052-750">00AB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-750">U+00AB</span></span>|<span data-ttu-id="e2052-751">0E4F U + a 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="e2052-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="e2052-752">U + 208D y 208E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-752">U+208D and U+208E</span></span>|<span data-ttu-id="e2052-753">U + FE63</span><span class="sxs-lookup"><span data-stu-id="e2052-753">U+FE63</span></span>|  
|<span data-ttu-id="e2052-754">00AD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-754">U+00AD</span></span>|<span data-ttu-id="e2052-755">0F04 U + a 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="e2052-756">U + 232A de u+2329 y</span><span class="sxs-lookup"><span data-stu-id="e2052-756">U+2329 and U+232A</span></span>|<span data-ttu-id="e2052-757">U + FE68</span><span class="sxs-lookup"><span data-stu-id="e2052-757">U+FE68</span></span>|  
|<span data-ttu-id="e2052-758">00B7 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-758">U+00B7</span></span>|<span data-ttu-id="e2052-759">0F3A U + a 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="e2052-760">U+2768 a u+2775</span><span class="sxs-lookup"><span data-stu-id="e2052-760">U+2768 to U+2775</span></span>|<span data-ttu-id="e2052-761">U + FE6A y FE6B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="e2052-762">00BB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-762">U+00BB</span></span>|<span data-ttu-id="e2052-763">0F85 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-763">U+0F85</span></span>|<span data-ttu-id="e2052-764">U + 5 27C a u+27C6 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="e2052-765">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="e2052-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="e2052-766">00BF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-766">U+00BF</span></span>|<span data-ttu-id="e2052-767">U+0FD0 y 0FD1 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="e2052-768">27E6 U + a 27EB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="e2052-769">U+FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="e2052-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="e2052-770">037E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-770">U+037E</span></span>|<span data-ttu-id="e2052-771">U + 104A a 104F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-771">U+104A to U+104F</span></span>|<span data-ttu-id="e2052-772">U+2983 a u+2998</span><span class="sxs-lookup"><span data-stu-id="e2052-772">U+2983 to U+2998</span></span>|<span data-ttu-id="e2052-773">U + FF0C a FF0F + U</span><span class="sxs-lookup"><span data-stu-id="e2052-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="e2052-774">0387 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-774">U+0387</span></span>|<span data-ttu-id="e2052-775">10FB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-775">U+10FB</span></span>|<span data-ttu-id="e2052-776">U + 8 29D a 29DB U +</span><span class="sxs-lookup"><span data-stu-id="e2052-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="e2052-777">U + FF1A y FF1B + U</span><span class="sxs-lookup"><span data-stu-id="e2052-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="e2052-778">055A U + a 055F U +</span><span class="sxs-lookup"><span data-stu-id="e2052-778">U+055A to U+055F</span></span>|<span data-ttu-id="e2052-779">U+1361 a u+1368</span><span class="sxs-lookup"><span data-stu-id="e2052-779">U+1361 to U+1368</span></span>|<span data-ttu-id="e2052-780">U + 29FC y 29FD U +</span><span class="sxs-lookup"><span data-stu-id="e2052-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="e2052-781">U + FF1F y U+FF20</span><span class="sxs-lookup"><span data-stu-id="e2052-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="e2052-782">U + 058A de u+0589 y</span><span class="sxs-lookup"><span data-stu-id="e2052-782">U+0589 and U+058A</span></span>|<span data-ttu-id="e2052-783">U + 166D y 166E U +</span><span class="sxs-lookup"><span data-stu-id="e2052-783">U+166D and U+166E</span></span>|<span data-ttu-id="e2052-784">2CF9 U + a 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="e2052-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="e2052-785">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="e2052-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="e2052-786">05BE U +</span><span class="sxs-lookup"><span data-stu-id="e2052-786">U+05BE</span></span>|<span data-ttu-id="e2052-787">U + 169B y U + 169C</span><span class="sxs-lookup"><span data-stu-id="e2052-787">U+169B and U+169C</span></span>|<span data-ttu-id="e2052-788">U + 2CFE y 2CFF U +</span><span class="sxs-lookup"><span data-stu-id="e2052-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="e2052-789">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="e2052-789">U+FF3F</span></span>|  
|<span data-ttu-id="e2052-790">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="e2052-790">U+05C0</span></span>|<span data-ttu-id="e2052-791">16EB U + a 16ED U +</span><span class="sxs-lookup"><span data-stu-id="e2052-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="e2052-792">2E00 U + a 2E17 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="e2052-793">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="e2052-793">U+FF5B</span></span>|  
|<span data-ttu-id="e2052-794">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="e2052-794">U+05C3</span></span>|<span data-ttu-id="e2052-795">U+1735 y u+1736</span><span class="sxs-lookup"><span data-stu-id="e2052-795">U+1735 and U+1736</span></span>|<span data-ttu-id="e2052-796">U + 2E1C y 2E1D U +</span><span class="sxs-lookup"><span data-stu-id="e2052-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="e2052-797">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="e2052-797">U+FF5D</span></span>|  
|<span data-ttu-id="e2052-798">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="e2052-798">U+05C6</span></span>|<span data-ttu-id="e2052-799">U + 4 17D a U + u+17D6</span><span class="sxs-lookup"><span data-stu-id="e2052-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="e2052-800">3001 U + a 3003 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-800">U+3001 to U+3003</span></span>|<span data-ttu-id="e2052-801">U + FF5F a U+FF65</span><span class="sxs-lookup"><span data-stu-id="e2052-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="e2052-802">U + 05F3 y 05F4 U +</span><span class="sxs-lookup"><span data-stu-id="e2052-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="e2052-803">U + 8 17D a 17DA U +</span><span class="sxs-lookup"><span data-stu-id="e2052-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="e2052-804">3008 U + a U + 3011</span><span class="sxs-lookup"><span data-stu-id="e2052-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="e2052-805">En el ejemplo de código siguiente se muestra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-806">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-807">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-808">Indica si un carácter Unicode se clasifica por categorías como un carácter separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-809">El estándar Unicode reconoce tres subcategorías de separadores:</span><span class="sxs-lookup"><span data-stu-id="e2052-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="e2052-810">Separadores de espacio (el <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoría), que incluye caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="e2052-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="e2052-811">Separadores de líneas (el <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoría), que incluye \u2028.</span><span class="sxs-lookup"><span data-stu-id="e2052-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="e2052-812">Separadores de párrafos (el <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoría), que incluye \u2029.</span><span class="sxs-lookup"><span data-stu-id="e2052-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2052-813">El estándar Unicode clasifica los caracteres \u000A (LF), \u000C (FF) y \u000D (CR) como caracteres de control (miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría), no como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="e2052-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-814">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-815">Indica si el carácter Unicode especificado se clasifica por categorías como un carácter separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-816">
            <see langword="true" /> si <paramref name="c" /> es un carácter separador; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-817">El estándar Unicode reconoce tres subcategorías de separadores:</span><span class="sxs-lookup"><span data-stu-id="e2052-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="e2052-818">Separadores de espacio (el <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoría), que incluye caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="e2052-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="e2052-819">Separadores de líneas (el <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoría), que incluye \u2028.</span><span class="sxs-lookup"><span data-stu-id="e2052-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="e2052-820">Separadores de párrafos (el <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoría), que incluye \u2029.</span><span class="sxs-lookup"><span data-stu-id="e2052-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2052-821">El estándar Unicode clasifica los caracteres \u000A (LF), \u000C (FF) y \u000D (CR) como caracteres de control (miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría), no como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="e2052-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-822">El ejemplo siguiente se muestra el <xref:System.Char> objetos que se clasifican como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="e2052-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-823">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-824">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-825">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un carácter separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-826">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un carácter separador; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-827">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-828">El estándar Unicode reconoce tres subcategorías de separadores:</span><span class="sxs-lookup"><span data-stu-id="e2052-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="e2052-829">Separadores de espacio (el <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoría), que incluye caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="e2052-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="e2052-830">Separadores de líneas (el <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoría), que incluye \u2028.</span><span class="sxs-lookup"><span data-stu-id="e2052-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="e2052-831">Separadores de párrafos (el <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoría), que incluye \u2029.</span><span class="sxs-lookup"><span data-stu-id="e2052-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2052-832">El estándar Unicode clasifica los caracteres \u000A (LF), \u000C (FF) y \u000D (CR) como caracteres de control (miembros de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoría), no como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="e2052-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-833">En el ejemplo siguiente se muestra <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-834">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-835">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-836">Indica si un carácter tiene una unidad de código suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-837">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-838">Indica si el carácter especificado tiene una unidad de código suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-839">Es <see langword="true" /> si <paramref name="c" /> es un suplente alto o un suplente bajo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-840">Un suplente es un <xref:System.Char> objeto con una unidad de código UTF-16 en el intervalo de U+D800 a U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="e2052-841">Cada carácter con una unidad de código de este intervalo pertenece a la <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="e2052-842">La unidad de código suplente individual no tiene una interpretación propia, pero tiene significado solo cuando se usan como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="e2052-843">Para obtener más información sobre los pares suplentes, vea el estándar Unicode en el [página principal de Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="e2052-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-844">En el ejemplo siguiente se muestra el <xref:System.Char.IsSurrogate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2052-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-845">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-846">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-847">Indica si el carácter situado en la posición especificada de la cadena especificada tiene una unidad de código suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-848">
            <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un suplente alto o un suplente bajo; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-849">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-850">Un suplente es un <xref:System.Char> objeto con una unidad de código UTF-16 en el intervalo de U+D800 a U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="e2052-851">Cada carácter con una unidad de código de este intervalo pertenece a la <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoría.</span><span class="sxs-lookup"><span data-stu-id="e2052-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="e2052-852">La unidad de código suplente individual no tiene una interpretación propia, pero tiene significado solo cuando se usan como parte de un par suplente.</span><span class="sxs-lookup"><span data-stu-id="e2052-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="e2052-853">Para obtener más información sobre los pares suplentes, vea el estándar Unicode en el [página principal de Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="e2052-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-854">En el ejemplo de código siguiente se muestra <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-855">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-856">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-857">Indica si dos objetos <see cref="T:System.Char" /> especificados forman un par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="e2052-858">Carácter que se va a evaluar como suplente alto de un par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="e2052-859">Carácter que se va a evaluar como suplente bajo de un par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-860">Indica si los dos objetos <see cref="T:System.Char" /> especificados forman un par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-861">
            <see langword="true" /> si el valor numérico del parámetro <paramref name="highSurrogate" /> va de U+D800 a U+DBFF, y el valor numérico del parámetro <paramref name="lowSurrogate" /> va de U+DC00 a U+DFFF; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-862">Normalmente, un único carácter se representa mediante una sola unidad de código Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="e2052-863">Codificación UTF-16 también es compatible con los pares suplentes, lo que permite un único carácter abstracto representarlo mediante dos unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="e2052-864">La primera unidad de código, cuyo valor puede oscilar entre U+D800 y u+DBFF, es el suplente alto.</span><span class="sxs-lookup"><span data-stu-id="e2052-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="e2052-865">La segunda unidad de código, cuyo valor puede oscilar entre U+DC00 a U+DFFF, es el suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="e2052-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="e2052-866">Puntos de código suplente individuales no tienen ninguna interpretación de sus propios.</span><span class="sxs-lookup"><span data-stu-id="e2052-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="e2052-867">Para obtener más información sobre caracteres suplentes y el estándar Unicode, vea el [página principal de Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="e2052-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-868">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-869">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-870">Posición inicial del par de caracteres que se va a evaluar dentro de <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-871">Indica si dos objetos <see cref="T:System.Char" /> adyacentes en la posición especificada de una cadena forman un par suplente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-872">
            <see langword="true" /> si el parámetro <paramref name="s" /> incluye caracteres adyacentes en las posiciones <paramref name="index" /> e <paramref name="index" /> + 1, el valor numérico del carácter situado en la posición <paramref name="index" /> va de U+D800 a U+DBFF y el valor numérico del carácter situado en la posición <paramref name="index" />+1 va de U+DC00 a U+DFFF; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-873">Normalmente, un único carácter se representa mediante una sola unidad de código Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="e2052-874">Codificación UTF-16 también es compatible con los pares suplentes, lo que permite un único carácter abstracto representarlo mediante dos unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="e2052-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="e2052-875">La primera unidad de código, cuyo valor puede oscilar entre U+D800 y u+DBFF, es el suplente alto.</span><span class="sxs-lookup"><span data-stu-id="e2052-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="e2052-876">La segunda unidad de código, cuyo valor puede oscilar entre U+DC00 a U+DFFF, es el suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="e2052-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="e2052-877">Puntos de código suplente individuales no tienen ninguna interpretación de sus propios.</span><span class="sxs-lookup"><span data-stu-id="e2052-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="e2052-878">Para obtener más información sobre caracteres suplentes y el estándar Unicode, vea el [página principal de Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="e2052-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-879">En el ejemplo de código siguiente se muestra el <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, y <xref:System.Char.IsSurrogatePair%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e2052-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-880">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-881">
            <paramref name="index" /> no es una posición dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-882">Indica si un carácter Unicode se clasifica por categorías como un carácter de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-883">Símbolos válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, y `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="e2052-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="e2052-884">Símbolos en el estándar Unicode son un conjunto definido de acoplamiento flexible de caracteres que incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="e2052-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="e2052-885">Símbolos de moneda.</span><span class="sxs-lookup"><span data-stu-id="e2052-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="e2052-886">Símbolos tipo letra, que incluyen un conjunto de símbolos alfanuméricos matemáticos, así como los símbolos como ℅, № y™.</span><span class="sxs-lookup"><span data-stu-id="e2052-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="e2052-887">Número de formas, como superíndices y subíndices.</span><span class="sxs-lookup"><span data-stu-id="e2052-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="e2052-888">Operadores matemáticos y flechas.</span><span class="sxs-lookup"><span data-stu-id="e2052-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="e2052-889">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="e2052-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="e2052-890">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="e2052-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="e2052-891">Patrones de Braille.</span><span class="sxs-lookup"><span data-stu-id="e2052-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="e2052-892">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="e2052-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-893">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-894">Indica si el carácter Unicode especificado se clasifica por categorías como un carácter de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-895">
            <see langword="true" /> si <paramref name="c" /> es un carácter de símbolo; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-896">Símbolos válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, y `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="e2052-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="e2052-897">Símbolos en el estándar Unicode son un conjunto definido de acoplamiento flexible de caracteres que incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="e2052-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="e2052-898">Símbolos de moneda.</span><span class="sxs-lookup"><span data-stu-id="e2052-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="e2052-899">Símbolos tipo letra, que incluyen un conjunto de símbolos alfanuméricos matemáticos, así como los símbolos como ℅, № y™.</span><span class="sxs-lookup"><span data-stu-id="e2052-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="e2052-900">Número de formas, como superíndices y subíndices.</span><span class="sxs-lookup"><span data-stu-id="e2052-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="e2052-901">Operadores matemáticos y flechas.</span><span class="sxs-lookup"><span data-stu-id="e2052-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="e2052-902">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="e2052-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="e2052-903">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="e2052-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="e2052-904">Patrones de Braille.</span><span class="sxs-lookup"><span data-stu-id="e2052-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="e2052-905">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="e2052-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-906">En el ejemplo de código siguiente se muestra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-907">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-908">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-909">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un carácter de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-910">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un carácter de símbolo; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-911">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-912">Símbolos válidos son miembros de las siguientes categorías de <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, y `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="e2052-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="e2052-913">Símbolos en el estándar Unicode son un conjunto definido de acoplamiento flexible de caracteres que incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="e2052-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="e2052-914">Símbolos de moneda.</span><span class="sxs-lookup"><span data-stu-id="e2052-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="e2052-915">Símbolos tipo letra, que incluyen un conjunto de símbolos alfanuméricos matemáticos, así como los símbolos como ℅, № y™.</span><span class="sxs-lookup"><span data-stu-id="e2052-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="e2052-916">Número de formas, como superíndices y subíndices.</span><span class="sxs-lookup"><span data-stu-id="e2052-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="e2052-917">Operadores matemáticos y flechas.</span><span class="sxs-lookup"><span data-stu-id="e2052-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="e2052-918">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="e2052-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="e2052-919">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="e2052-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="e2052-920">Patrones de Braille.</span><span class="sxs-lookup"><span data-stu-id="e2052-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="e2052-921">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="e2052-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-922">En el ejemplo de código siguiente se muestra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-923">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-924">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-925">Indica si un carácter Unicode se clasifica por categorías como una letra mayúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-926">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-927">Indica si el carácter Unicode especificado se clasifica por categorías como una letra mayúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-928">
            <see langword="true" /> si <paramref name="c" /> es una letra mayúscula; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-929">Las letras mayúsculas válidas son miembros de la siguiente categoría de <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="e2052-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-930">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-931">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-932">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como una letra mayúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-933">Es <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es una letra mayúscula; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-934">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-935">Las letras mayúsculas válidas son miembros de la siguiente categoría de <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="e2052-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-936">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-937">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-938">Indica si un carácter Unicode se clasifica por categorías como un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-939">Caracteres de espacio en blanco son los siguientes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="e2052-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="e2052-940">Los miembros de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoría, que incluye los caracteres de espacio (u+0020), marca de espacio OGHAM (u+1680), Cuadrante corto (u+2000), EM QUAD (U + 2001), EN espacio (2002), EM espacio (U + 2003), espacio tres por largo (U + 2004), espacio cuatro por largo (U + 2005), seis por EM ESPACIO (2006), figura espacio (U + 2007), fino (U + 2008), signo de puntuación del espacio de espacio (U + 2009), espacio pelo (200A), espacio de NO separación estrecha (202F), espacio matemático intermedio (205F) y espacio ideográfico (u+3000).</span><span class="sxs-lookup"><span data-stu-id="e2052-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="e2052-941">Los miembros de la <xref:System.Globalization.UnicodeCategory.LineSeparator> categoría, que consiste únicamente en el carácter separador de línea (u+2028).</span><span class="sxs-lookup"><span data-stu-id="e2052-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="e2052-942">Los miembros de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoría, que consiste únicamente en el carácter separador de párrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="e2052-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="e2052-943">Los caracteres del carácter de tabulación (u+0009), avance de línea (000A), tabulación de línea (000B), avance de página (U+000C), retorno de carro (U+000D), NEXT LINE (u+0085) y el espacio de NO separación (00A0).</span><span class="sxs-lookup"><span data-stu-id="e2052-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-944">Carácter Unicode que se va a evaluar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-945">Indica si el carácter Unicode especificado se clasifica por categorías como un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-946">
            <see langword="true" /> si <paramref name="c" /> es un espacio en blanco; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-947">Caracteres de espacio en blanco son los siguientes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="e2052-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="e2052-948">Los miembros de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoría, que incluye los caracteres de espacio (u+0020), espacio de NO separación (00A0), marca de espacio OGHAM (u+1680), Cuadrante corto (u+2000), EM QUAD (U + 2001), EN espacio (2002), EM espacio (U + 2003), espacio tres por largo (U + 2004), (cuatro por EM espacio U+ 2005), espacio seis por largo (U + 2006), espacio en la figura (U + 2007), fino (U + 2008), signo de puntuación del espacio espacio (U + 2009), espacio pelo (200A), espacio de NO separación estrecha (202F), espacio matemático intermedio (205F) y espacio ideográfico (u+3000).</span><span class="sxs-lookup"><span data-stu-id="e2052-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="e2052-949">Los miembros de la <xref:System.Globalization.UnicodeCategory.LineSeparator> categoría, que consiste únicamente en el carácter separador de línea (u+2028).</span><span class="sxs-lookup"><span data-stu-id="e2052-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="e2052-950">Los miembros de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoría, que consiste únicamente en el carácter separador de párrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="e2052-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="e2052-951">Los caracteres del carácter de tabulación (u+0009), línea fuente (000A), tabulación de línea (000B), avance de página (U+000C), retorno de carro (U+000D) y, a continuación de línea (0085).</span><span class="sxs-lookup"><span data-stu-id="e2052-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-952">En el ejemplo siguiente se muestra el <xref:System.Char.IsWhiteSpace%28System.Char%29> método.</span><span class="sxs-lookup"><span data-stu-id="e2052-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-953">Una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2052-954">Posición del carácter que se va a evaluar en <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-955">Indica si el carácter que ocupa la posición especificada en una cadena especificada se clasifica por categorías como un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-956">
            <see langword="true" /> si el carácter que ocupa la posición <paramref name="index" /> en <paramref name="s" /> es un espacio en blanco; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-957">Posiciones de caracteres en una cadena se indizan empezando desde cero.</span><span class="sxs-lookup"><span data-stu-id="e2052-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="e2052-958">Caracteres de espacio en blanco son los siguientes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="e2052-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="e2052-959">Los miembros de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoría, que incluye los caracteres de espacio (u+0020), espacio de NO separación (00A0), marca de espacio OGHAM (u+1680), Cuadrante corto (u+2000), EM QUAD (U + 2001), EN espacio (2002), EM espacio (U + 2003), espacio tres por largo (U + 2004), (cuatro por EM espacio U+ 2005), espacio seis por largo (U + 2006), espacio en la figura (U + 2007), fino (U + 2008), signo de puntuación del espacio espacio (U + 2009), espacio pelo (200A), espacio de NO separación estrecha (202F), espacio matemático intermedio (205F) y espacio ideográfico (u+3000).</span><span class="sxs-lookup"><span data-stu-id="e2052-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="e2052-960">Los miembros de la <xref:System.Globalization.UnicodeCategory.LineSeparator> categoría, que consiste únicamente en el carácter separador de línea (u+2028).</span><span class="sxs-lookup"><span data-stu-id="e2052-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="e2052-961">Los miembros de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoría, que consiste únicamente en el carácter separador de párrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="e2052-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="e2052-962">Los caracteres del carácter de tabulación (u+0009), línea fuente (000A), tabulación de línea (000B), avance de página (U+000C), retorno de carro (U+000D) y, a continuación de línea (0085).</span><span class="sxs-lookup"><span data-stu-id="e2052-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-963">En el ejemplo de código siguiente se muestra <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-964">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2052-965">
            <paramref name="index" /> es menor que cero o mayor que la última posición en <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-966">Representa el mayor valor posible de un <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="e2052-967">Este campo es constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-968">El valor de esta constante es el hexadecimal 0xFFFF.</span><span class="sxs-lookup"><span data-stu-id="e2052-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-969">Representa el menor valor posible de un <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="e2052-970">Este campo es constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-971">El valor de esta constante es el hexadecimal 0 x 00.</span><span class="sxs-lookup"><span data-stu-id="e2052-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-972">Una cadena que contiene un carácter único, o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-973">Convierte el valor de la cadena especificada en el carácter Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-974">Carácter Unicode equivalente al carácter único de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2052-975">En el ejemplo de código siguiente se muestra <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-976">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="e2052-977">La longitud de <paramref name="s" /> no es 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-978">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-979">**Nota** No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-980">Si se intenta, se produce una excepción <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-981">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-982">No se devuelve ningún valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-983">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-984">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-985">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-986">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-987">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-988">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-989">La alternativa recomendada es llamar a la <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-990">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-991">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-992">Valor del objeto actual <see cref="T:System.Char" /> sin modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-993">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-994">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-995">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-996">**Nota** No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-997">Si se intenta, se produce una excepción <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-998">No se devuelve ningún valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-999">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1000">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1001">**Nota** No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-1002">Si se intenta, se produce una excepción <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1003">No se devuelve ningún valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-1004">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1005">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1006">**Nota** No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-1007">Si se intenta, se produce una excepción <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1008">No se devuelve ningún valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-1009">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1010">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1011">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1012">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1013">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1014">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1015">La alternativa recomendada es llamar a la <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1016">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1017">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1018">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1019">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1020">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1021">La alternativa recomendada es llamar a la <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1022">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1023">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1024">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1025">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1026">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1027">La alternativa recomendada es llamar a la <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1028">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1029">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1030">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1031">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1032">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1033">La alternativa recomendada es llamar a la <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1034">Este parámetro se ignora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1035">**Nota** No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="e2052-1036">Si se intenta, se produce una excepción <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1037">No se devuelve ningún valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-1038">No se admite esta conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e2052-1039">Un objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="e2052-1040">Un objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1041">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1042">Objeto del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1043">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1044">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1045">La alternativa recomendada es llamar a la <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-1046">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2052-1047">El valor del objeto <see cref="T:System.Char" /> actual no se puede convertir en el tipo especificado por el parámetro <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1048">Un objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="e2052-1049">(Especifique <see langword="null" />, ya que se omite el parámetro <c>provider</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1050">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1051">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1052">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1053">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1054">La alternativa recomendada es llamar a la <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1055">Un objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="e2052-1056">(Especifique <see langword="null" />, ya que se omite el parámetro <c>provider</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1057">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1058">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1059">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1060">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1061">La alternativa recomendada es llamar a la <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1062">Un objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="e2052-1063">(Especifique <see langword="null" />, ya que se omite el parámetro <c>provider</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1064">Para una descripción de este miembro, vea <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1065">Valor convertido del objeto <see cref="T:System.Char" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1066">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e2052-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e2052-1067">Solo se puede utilizar cuando la instancia de <xref:System.Char> se convierte en una interfaz <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e2052-1068">La alternativa recomendada es llamar a la <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e2052-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-1069">Convierte el valor de un carácter Unicode en un carácter equivalente, pero en minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1070">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1071">Convierte el valor de un carácter Unicode en un carácter equivalente, pero en minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1072">Equivalente en minúsculas de <paramref name="c" /> o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en minúsculas o no es un carácter alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1073">Las reglas de mayúsculas y minúsculas se obtienen de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="e2052-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="e2052-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para convertir una cadena a minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1075">En el ejemplo siguiente se muestra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="e2052-1076">
            <para>Como se explica en [prácticas recomendadas para el uso de cadenas](~/docs/standard/base-types/best-practices-strings.md), le recomendamos que evite llamar a métodos de grafía de carácter y cadena de mayúsculas y minúsculas que sustituyen los valores predeterminados. En su lugar, debe llamar a métodos que requieren parámetros para especificarse explícitamente. Para convertir un carácter a minúsculas mediante las convenciones de mayúsculas y minúsculas de la referencia cultural actual, llame a la <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> sobrecarga del método con un valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para su <paramref name="culture" /> parámetro.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1077">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e2052-1078">Objeto que proporciona reglas de mayúsculas y minúsculas específicas de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1079">Convierte el valor de un carácter Unicode especificado en un carácter equivalente pero en minúsculas mediante la información de formato específica de la referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1080">Equivalente en minúsculas de <paramref name="c" />, modificado conforme a <paramref name="culture" />, o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en minúsculas o no es un carácter alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para convertir una cadena a minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1082">En el ejemplo de código siguiente se muestra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-1083">
            <paramref name="culture" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1084">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1085">Convierte el valor de un carácter Unicode en su equivalente en minúsculas utilizando las reglas sobre mayúsculas y minúsculas de la referencia cultural de todos los idiomas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1086">Equivalente en minúsculas del parámetro <paramref name="c" /> o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en minúsculas o no es un carácter alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1087">Si la aplicación se ve afectada por la referencia cultural y depende en el caso de un carácter que cambien de forma predecible, use el <xref:System.Char.ToLowerInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2052-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="e2052-1088">El <xref:System.Char.ToLowerInvariant%2A> método es equivalente a `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="e2052-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="e2052-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> para convertir una cadena a minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-1090">Convierte el valor de esta instancia en la representación de cadena equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2052-1091">Convierte el valor de esta instancia en la representación de cadena equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1092">Representación de cadena del valor de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2052-1093">En el ejemplo de código siguiente se muestra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1094">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1095">Convierte el carácter Unicode especificado en la representación de cadena equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1096">Representación de cadena del valor de <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2052-1097">En el ejemplo de código siguiente se muestra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e2052-1098">(Reservado) Un objeto que aporta información de formato específica de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1099">Convierte el valor de esta instancia en la representación de cadena equivalente mediante la información de formato específica de la referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1100">Representación en forma de cadena del valor de esta instancia, tal y como especifica <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1101">El `provider` parámetro se omite; no participa en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e2052-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1102">En el ejemplo de código siguiente se muestra una sobrecarga de <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2052-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e2052-1103">Convierte el valor de un carácter Unicode en un carácter equivalente, pero en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1104">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1105">Convierte el valor de un carácter Unicode en un carácter equivalente, pero en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1106">Equivalente en mayúsculas del parámetro <paramref name="c" /> o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en mayúsculas, no tiene equivalente en mayúsculas o no es un carácter alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1107">Las reglas de mayúsculas y minúsculas se obtienen de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="e2052-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="e2052-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para convertir una cadena a mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1109">El ejemplo siguiente convierte cada carácter de una matriz a su equivalente en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="e2052-1110">
            <para>Como se explica en [prácticas recomendadas para el uso de cadenas](~/docs/standard/base-types/best-practices-strings.md), le recomendamos que evite llamar a métodos de grafía de carácter y cadena de mayúsculas y minúsculas que sustituyen los valores predeterminados. En su lugar, debe llamar a métodos que requieren parámetros para especificarse explícitamente. Para convertir un carácter a mayúsculas mediante las convenciones de mayúsculas y minúsculas de la referencia cultural actual, llame a la <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> sobrecarga del método con un valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para su <paramref name="culture" /> parámetro.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1111">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e2052-1112">Objeto que proporciona reglas de mayúsculas y minúsculas específicas de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1113">Convierte el valor de un carácter Unicode especificado en el carácter equivalente pero en mayúsculas mediante la información de formato específica de la referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1114">Equivalente en mayúsculas de <paramref name="c" />, modificado conforme a <paramref name="culture" />, o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en mayúsculas, no tiene equivalente en mayúsculas o no es alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para convertir una cadena a mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1116">El ejemplo siguiente convierte cada carácter de una matriz a su equivalente en mayúsculas para la referencia cultural en-US, la referencia cultural y la referencia cultural tr-TR.</span><span class="sxs-lookup"><span data-stu-id="e2052-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="e2052-1117">En este ejemplo, el equivalente en mayúsculas de cada letra minúscula es idéntico para todas las referencias culturales, excepto un caso.</span><span class="sxs-lookup"><span data-stu-id="e2052-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="e2052-1118">Carácter de la letra minúscula "i" (u+0069) se convierte en "I" (u+0049) en la en-US y referencias culturales invariables, pero a"i" (0130) en la referencia cultural tr-TR.</span><span class="sxs-lookup"><span data-stu-id="e2052-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2052-1119">
            <paramref name="culture" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="e2052-1120">Carácter Unicode que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1121">Convierte el valor de un carácter Unicode en su equivalente en mayúsculas utilizando las reglas sobre mayúsculas y minúsculas de la referencia cultural de todos los idiomas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1122">Equivalente mayúsculas minúsculas del parámetro <paramref name="c" /> o el valor sin modificar de <paramref name="c" /> si <paramref name="c" /> ya está en mayúsculas o no es un carácter alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1123">Si la aplicación se ve afectada por la referencia cultural y depende en el caso de un carácter que cambien de forma predecible, use el <xref:System.Char.ToUpperInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2052-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="e2052-1124">El <xref:System.Char.ToUpperInvariant%2A> método es equivalente a `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="e2052-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="e2052-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> para convertir una cadena a mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="e2052-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e2052-1126">Una cadena que contiene un carácter único, o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="e2052-1127">Cuando este método devuelve un valor, si la conversión se ha realizado correctamente, contiene un carácter Unicode equivalente al único carácter de <c>s</c>; si se ha producido un error en la conversión, contiene un valor indefinido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="e2052-1128">Se produce un error en la conversión si el parámetro <c>s</c> es <see langword="null" /> o la longitud de <c>s</c> no es 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="e2052-1129">Este parámetro se pasa sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2052-1130">Convierte el valor de la cadena especificada en el carácter Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="e2052-1131">Un código devuelto indica si la conversión fue correcta o no.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2052-1132">
            <see langword="true" /> si el parámetro <paramref name="s" /> se convierte correctamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2052-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2052-1133">El <xref:System.Char.TryParse%2A> método es similar a la <xref:System.Char.Parse%2A> método, excepto el <xref:System.Char.TryParse%2A> método no produce una excepción si se produce un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="e2052-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2052-1134">En el ejemplo de código siguiente se muestra las sobrecargas de los <xref:System.Char.TryParse%2A> método para varios tipos base y el <xref:System.DateTime.TryParseExact%2A> método para el <xref:System.DateTime> tipo base.</span><span class="sxs-lookup"><span data-stu-id="e2052-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>