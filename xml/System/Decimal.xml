<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Decimal.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52e7b964574f5e8e20e8201e294104a10b1df3669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e7b964574f5e8e20e8201e294104a10b1df3669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Represents a decimal number.</source>
          <target state="translated">Representa un número decimal.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tipo de valor representa números decimales comprendidos entre positivo 79,228,162,514,264,337,593,543,950,335 hasta el negativo 79,228,162,514,264,337,593,543,950,335.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The default value of a <ph id="ph1">`Decimal`</ph> is 0.</source>
          <target state="translated">El valor predeterminado de un <ph id="ph1">`Decimal`</ph> es 0.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> el tipo de valor es adecuado para realizar cálculos financieros que requieren gran número de dígitos enteros y fraccionarios significativos y no hay errores de redondeo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type does not eliminate the need for rounding.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tipo no elimina la necesidad de redondeo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Rather, it minimizes errors due to rounding.</source>
          <target state="translated">En su lugar, minimiza los errores debidos al redondeo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</source>
          <target state="translated">Por ejemplo, el código siguiente genera un resultado de 0,9999999999999999999999999999 en lugar de 1.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>When the result of the division and multiplication is passed to the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method, the result suffers no loss of precision, as the following code shows.</source>
          <target state="translated">Cuando se pasa el resultado de la división y multiplicación a la <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> método, el resultado sufre ninguna pérdida de precisión, como se muestra en el código siguiente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</source>
          <target state="translated">Un número decimal es un valor de punto flotante que consta de un inicio de sesión, un valor numérico, donde cada dígito en el valor comprendido entre 0 y 9 y un factor de escala que indica la posición de un punto decimal flotante que separa las partes enteros y fraccionarias del valor numérico.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor consta de un signo de 1 bit, un número entero de 96 bits y un factor de escala utilizado para dividir el entero de 96 bits y especificar qué parte de ella es una fracción decimal.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">El factor de escala es implícitamente el número 10 elevado a un exponente comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Therefore, the binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value  the form, ((-2<bpt id="p1">&lt;sup&gt;</bpt>96<ept id="p1">&lt;/sup&gt;</ept> to 2<bpt id="p2">&lt;sup&gt;</bpt>96<ept id="p2">&lt;/sup&gt;</ept>) / 10<bpt id="p3">&lt;sup&gt;</bpt>(0 to 28)<ept id="p3">&lt;/sup&gt;</ept>), where -(2<bpt id="p4">&lt;sup&gt;</bpt>96<ept id="p4">&lt;/sup&gt;</ept>-1) is equal to <ph id="ph2">&lt;xref:System.Decimal.MinValue&gt;</ph>, and 2<bpt id="p5">&lt;sup&gt;</bpt>96<ept id="p5">&lt;/sup&gt;</ept>-1 is equal to <ph id="ph3">&lt;xref:System.Decimal.MaxValue&gt;</ph>.</source>
          <target state="translated">Por lo tanto, la representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor el formato ((-2<bpt id="p1">&lt;sup&gt;</bpt>96<ept id="p1">&lt;/sup&gt;</ept> a 2<bpt id="p2">&lt;sup&gt;</bpt>96<ept id="p2">&lt;/sup&gt;</ept>) / 10<bpt id="p3">&lt;sup&gt;</bpt>(de 0 a 28)<ept id="p3">&lt;/sup&gt;</ept>), donde-(2<bpt id="p4">&lt;sup&gt;</bpt>96<ept id="p4">&lt;/sup&gt;</ept>-1) es igual a <ph id="ph2">&lt;xref:System.Decimal.MinValue&gt;</ph>y 2<bpt id="p5">&lt;sup&gt;</bpt>96<ept id="p5">&lt;/sup&gt;</ept>-1 es igual a <ph id="ph3">&lt;xref:System.Decimal.MaxValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>For more information about the binary representation of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values and an example, see the <ph id="ph2">&lt;xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29&gt;</ph> constructor and the <ph id="ph3">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">Para obtener más información acerca de la representación binaria del <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores y un ejemplo, vea el <ph id="ph2">&lt;xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29&gt;</ph> constructor y el <ph id="ph3">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The scaling factor  also preserves any trailing zeros in a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number.</source>
          <target state="translated">El escalado también factor conserva cualquier finales ceros finales en un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> número.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Trailing zeros do not affect the value of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number in arithmetic or comparison operations.</source>
          <target state="translated">Los ceros finales no afecta al valor de una <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números en las operaciones de comparación o aritméticas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>However, trailing zeros might be revealed by the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method if an appropriate format string is applied.</source>
          <target state="translated">Sin embargo, los ceros finales podrían revelarse por la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> método si se aplica una cadena de formato adecuado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversion Considerations</source>
          <target state="translated">Consideraciones de conversión</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>This type provides methods that convert <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.Byte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">Este tipo proporciona métodos que convierten <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores a y desde <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.Byte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, y <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from these integral types to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> are widening conversions that never lose information or throw exceptions.</source>
          <target state="translated">Conversiones de estos tipos enteros para <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> son conversiones de ampliación que nunca se pierden información ni se producen excepciones.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to any of the integral types are narrowing conversions that round the <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to the nearest integer value toward zero.</source>
          <target state="translated">Conversiones de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a cualquiera de los tipos enteros son conversiones de restricción que redondean el <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor para el valor de entero más próximo a cero.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Some languages, such as C#, also support the conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">Algunos lenguajes, como C#, también admiten la conversión de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores <ph id="ph2">&lt;xref:System.Char&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>If the result of these conversions cannot be represented in the destination type, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception is thrown.</source>
          <target state="translated">Si el resultado de estas conversiones no se puede representar en el tipo de destino, un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> se produce la excepción.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type also provides methods that convert <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id="ph3">&lt;xref:System.Single&gt;</ph> and <ph id="ph4">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tipo también proporciona métodos que convierten <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores a y desde <ph id="ph3">&lt;xref:System.Single&gt;</ph> y <ph id="ph4">&lt;xref:System.Double&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> or <ph id="ph3">&lt;xref:System.Double&gt;</ph> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</source>
          <target state="translated">Conversiones de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph2">&lt;xref:System.Single&gt;</ph> o <ph id="ph3">&lt;xref:System.Double&gt;</ph> son conversiones de restricción que podrían perder precisión, pero no la información sobre la magnitud del valor convertido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The conversion does not throw an exception.</source>
          <target state="translated">La conversión no produce una excepción.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> to <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> throw an <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> exception if the result of the conversion cannot be represented as a <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Conversiones de <ph id="ph1">&lt;xref:System.Single&gt;</ph> o <ph id="ph2">&lt;xref:System.Double&gt;</ph> a <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> producir una <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> excepción si el resultado de la conversión no se puede representar como un <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Performing Operations on Decimal Values</source>
          <target state="translated">Realizar operaciones en valores decimales</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tipo es compatible con operaciones matemáticas estándares, como suma, resta, división, multiplicación y unario de negación.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>You can also work directly with the binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">También puede trabajar directamente con la representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor mediante una llamada a la <ph id="ph2">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>To compare two <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, you can use the standard numeric comparison operators, or you can call the <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Para comparar los dos <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores, puede usar los operadores de comparación numéricos estándar, o puede llamar a la <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Decimal.Equals%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>You can also call the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values, getting the sign of a number, and rounding a number.</source>
          <target state="translated">También puede llamar a los miembros de la <ph id="ph1">&lt;xref:System.Math&gt;</ph> clase para realizar una amplia variedad de operaciones numéricas, incluidos obtener el valor absoluto de un número, determinando el valor máximo o mínimo de dos <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores, obtener el signo de un número y un número de redondeo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">En el siguiente ejemplo de código se muestra el uso de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>All members of this type are thread safe.</source>
          <target state="translated">Todos los miembros de este tipo son seguros para subprocesos.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">Los miembros que aparecen modificar el estado de instancia realmente devuelven una nueva instancia inicializada con el nuevo valor.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">Como con cualquier otro tipo, leer y escribir en una variable compartida que contiene una instancia de este tipo deben protegerse mediante un bloqueo para garantizar la seguridad para subprocesos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified double-precision floating-point number.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del número de punto flotante de precisión doble especificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>This constructor rounds <ph id="ph1">`value`</ph> to 15 significant digits using rounding to nearest.</source>
          <target state="translated">Este constructor redondea <ph id="ph1">`value`</ph> a 15 dígitos significativos mediante un redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>This is done even if the number has more than 15 digits and the less significant digits are zero.</source>
          <target state="translated">Esto se hace incluso si el número tiene más de 15 dígitos y los dígitos menos significativos son iguales a cero.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.Double&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> o <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 32-bit signed integer.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del entero de 32 bits con signo especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>An array of 32-bit signed integers containing a representation of a decimal value.</source>
          <target state="translated">Matriz de enteros de 32 bits con signo que contiene una representación de un valor decimal.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a decimal value represented in binary and contained in a specified array.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un valor decimal representado en binario e incluido en una matriz especificada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> número se compone de un signo de 1 bit, un número entero de 96 bits y un factor de escala utilizado para dividir el número entero y especificar qué parte de ella es una fracción decimal.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">El factor de escala es implícitamente el número 10 elevado a un exponente comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> is a four-element long array of 32-bit signed integers.</source>
          <target state="translated"><ph id="ph1">`bits`</ph> es una matriz de longitud de cuatro elementos de enteros de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> [0], <ph id="ph2">`bits`</ph> [1], and <ph id="ph3">`bits`</ph> [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</source>
          <target state="translated"><ph id="ph1">`bits`</ph> [0], <ph id="ph2">`bits`</ph> [1] y <ph id="ph3">`bits`</ph> [2] contienen los 32 bits bajos, medio y altos del número entero de 96 bits.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> [3] contains the scale factor and sign, and consists of following parts:</source>
          <target state="translated"><ph id="ph1">`bits`</ph> [3] contiene el factor de escala y el signo y consta de las siguientes partes:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 0 to 15, the lower word, are unused and must be zero.</source>
          <target state="translated">Los bits 0 y 15, la palabra inferior, no se utilizan y deben ser cero.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</source>
          <target state="translated">Los bits del 16 al 23 deben contener a un exponente entre 0 y 28, que indica la potencia de 10 para dividir el número entero.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 24 to 30 are unused and must be zero.</source>
          <target state="translated">Los bits 24 a 30 no se utilizan y deben ser cero.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</source>
          <target state="translated">El bit 31 contiene el signo; 0 significa positivo y 1 significa negativo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</source>
          <target state="translated">Un valor numérico podría tener varias representaciones binarias; todas son igualmente válidas y numéricamente equivalentes.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Note that the bit representation differentiates between negative and positive zero.</source>
          <target state="translated">Tenga en cuenta que la representación de bits se distingue entre cero positivo y negativo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>These values are treated as being equal in all operations.</source>
          <target state="translated">Estos valores se tratan como si fueran iguales en todas las operaciones.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an array of four <ph id="ph3">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con una matriz de cuatro <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The length of the <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is not 4.</source>
          <target state="translated">La longitud de <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> no es 4.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The representation of the decimal value in <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is not valid.</source>
          <target state="translated">La representación del valor decimal en <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> no es válida.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 64-bit signed integer.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del entero de 64 bits con signo especificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an <ph id="ph3">&lt;xref:System.Int64&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.Int64&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified single-precision floating-point number.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del número de punto flotante de precisión sencilla especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>This constructor rounds <ph id="ph1">`value`</ph> to 7 significant digits using rounding to nearest.</source>
          <target state="translated">Este constructor redondea <ph id="ph1">`value`</ph> a 7 dígitos significativos mediante un redondeo al más próximo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>This is done even if the number has more than 7 digits and the less significant digits are zero.</source>
          <target state="translated">Esto se hace incluso si el número tiene más de 7 dígitos y los dígitos menos significativos son iguales a cero.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.Single&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph> o <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 32-bit unsigned integer.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del entero de 32 bits sin signo especificado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a representar como <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 64-bit unsigned integer.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en el valor del entero de 64 bits sin signo especificado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con un <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The low 32 bits of a 96-bit integer.</source>
          <target state="translated">32 bits inferiores de un entero de 96 bits.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The middle 32 bits of a 96-bit integer.</source>
          <target state="translated">32 bits intermedios de un entero de 96 bits.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The high 32 bits of a 96-bit integer.</source>
          <target state="translated">32 bits superiores de un entero de 96 bits.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate a negative number; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to indicate a positive number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para indicar un número negativo; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para indicar un número positivo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>A power of 10 ranging from 0 to 28.</source>
          <target state="translated">Potencia de 10 comprendida entre el 0 y el 28.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> from parameters specifying the instance's constituent parts.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> a partir de los parámetros que especifican las partes constituyentes de la instancia.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> número se compone de un signo de 1 bit, un número entero de 96 bits y un factor de escala utilizado para dividir el número entero y especificar qué parte de ella es una fracción decimal.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">El factor de escala es implícitamente el número 10 elevado a un exponente comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with three <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value words, a <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> sign, and a <ph id="ph5">&lt;xref:System.Byte&gt;</ph> scale factor.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varias <ph id="ph1">`Decimal`</ph> números utilizando la sobrecarga del constructor que inicializa un <ph id="ph2">`Decimal`</ph> estructura con tres <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valor palabras, un <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> inicio de sesión y un <ph id="ph5">&lt;xref:System.Byte&gt;</ph> factor de escala.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method to retrieve the component parts of an array.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> método para recuperar los componentes de una matriz.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>It then uses this array in the call to the <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor to instantiate a new <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">A continuación, utiliza esta matriz en la llamada a la <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor para crear instancias de un nuevo <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="scale" /&gt;</ph> is greater than 28.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="scale" /&gt;</ph> es mayor que 28.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The first value to add.</source>
          <target state="translated">Primer valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The second value to add.</source>
          <target state="translated">Segundo valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>Adds two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Suma dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The sum of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">La suma de <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The following code sample illustrates the use of <ph id="ph1">`Add`</ph> :</source>
          <target state="translated">El ejemplo de código siguiente muestra el uso de <ph id="ph1">`Add`</ph> :</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The sum of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La suma de <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph2">&lt;paramref name="d2" /&gt;</ph> es menor que <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph4">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">Número decimal.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>Returns the smallest integral value that is greater than or equal to the specified decimal number.</source>
          <target state="translated">Devuelve el valor integral más pequeño que es mayor o igual que el número decimal especificado.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The smallest integral value that is greater than or equal to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          <target state="translated">Valor integral más pequeño que es mayor o igual que el parámetro <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instead of an integral type.</source>
          <target state="translated">Tenga en cuenta que este método devuelve un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en lugar de un tipo entero.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
          <target state="translated">Este tipo de redondeo a veces se denomina redondeo hacia el infinito positivo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`d`</ph> to be rounded to the next highest integer.</source>
          <target state="translated">En otras palabras, si <ph id="ph1">`d`</ph> es positivo, la presencia de las causas de cualquier componente de fracción <ph id="ph2">`d`</ph> se redondea al entero más alto siguiente.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`d`</ph> to be discarded.</source>
          <target state="translated">Si <ph id="ph1">`d`</ph> es negativo, la operación de redondeo hace que cualquier componente fraccionario de <ph id="ph2">`d`</ph> van a descartar.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method, which supports rounding toward negative infinity.</source>
          <target state="translated">La operación de este método difiere de la <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> método, que es compatible con redondeo a infinito negativo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra la <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> método y se contrasta con la <ph id="ph2">&lt;xref:System.Decimal.Floor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>Compares two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Compara dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>A signed number indicating the relative values of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Número con signo que indica los valores relativos de <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> es menor que <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="d2" /&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph4">&lt;paramref name="d2" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> es mayor que <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The following example compares several <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se comparan varias <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the <ph id="ph1">`value2`</ph> variable.</source>
          <target state="translated">Tenga en cuenta que la primera comparación indica que los dos valores son iguales a pesar de la operación de resta realizada con la <ph id="ph1">`value2`</ph> variable.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>This is because the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</source>
          <target state="translated">Esto es porque el <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tipo tiene 29 dígitos de precisión, mientras que una diferencia entre estos dos valores se pueden detectar solo con 30 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Compara esta instancia con un objeto especificado o con un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> y devuelve una indicación de sus valores relativos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object and returns a comparison of their relative values.</source>
          <target state="translated">Compara esta instancia con un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado y devuelve una comparación de los valores relativos.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Número con signo que indica los valores relativos de esta instancia y <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es menor que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es igual a <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es mayor que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Este método implementa el <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaz y realiza ligeramente mejor que la <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método porque no tiene que convertir el <ph id="ph3">`value`</ph> parámetro a un objeto.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">Dependiendo del lenguaje de programación, es posible al código un <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> método donde el tipo de parámetro tiene menos bits (es más estrecho) que el tipo de instancia.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">Esto es posible porque algunos lenguajes de programación realizan una conversión de ampliación implícita que representa el parámetro como un tipo con tantos bits como la instancia.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Por ejemplo, suponga que el tipo de instancia es <ph id="ph1">&lt;xref:System.Int32&gt;</ph> y el tipo de parámetro es <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The Microsoft C# compiler generates instructions to represent the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">El compilador de Microsoft C# genera instrucciones para representar el parámetro como un <ph id="ph1">&lt;xref:System.Int32&gt;</ph> objeto, a continuación, genera un <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método para comparar los valores de la <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instancia y el <ph id="ph4">&lt;xref:System.Int32&gt;</ph> representación del parámetro.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">Consulte la documentación de su lenguaje de programación para determinar si el compilador realiza las conversiones de ampliación implícitas en tipos numéricos.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra versiones genéricas y de la <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> método para varios tipos de valor y de referencia.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>The object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia o <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns a comparison of their relative values.</source>
          <target state="translated">Compara esta instancia con un objeto especificado y devuelve una comparación de los valores relativos.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Número con signo que indica los valores relativos de esta instancia y <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es menor que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es igual a <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es mayor que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cualquier instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, independientemente de su valor, se considera mayor que <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Parameter <ph id="ph1">`value`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Decimal&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated">Parámetro <ph id="ph1">`value`</ph> debe ser <ph id="ph2">`null`</ph> o una instancia de <ph id="ph3">&lt;xref:System.Decimal&gt;</ph>; en caso contrario, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> and other objects to a reference <ph id="ph2">`Decimal`</ph> value using the <ph id="ph3">`CompareTo`</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se compara varios <ph id="ph1">`Decimal`</ph> y otros objetos en una referencia <ph id="ph2">`Decimal`</ph> valor mediante la <ph id="ph3">`CompareTo`</ph> método.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> no es un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          <target state="translated">Dividendo.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          <target state="translated">Divisor.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>Divides two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Divide dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resultado de dividir <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> entre <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> method to divide a range of values by 22.1.</source>
          <target state="translated">El ejemplo siguiente se llama el <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> método dividir un intervalo de valores por 22.1.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> es cero.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The return value (that is, the quotient) is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto (es decir, el cociente) es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> represent the same value.</source>
          <target state="translated">Devuelve un valor que indica si dos instancias de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> representan el mismo valor.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>An object to compare to this instance.</source>
          <target state="translated">Un objeto que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia y un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado representan el mismo valor.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es igual a esta instancia; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Decimal.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Este método implementa el <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz y se ejecuta ligeramente mejor que <ph id="ph2">&lt;xref:System.Decimal.Equals%2A&gt;</ph> porque no tiene que convertir el <ph id="ph3">`value`</ph> parámetro a un objeto.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>If <ph id="ph1">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> tiene menos bits (es más estrecho) que el tipo de instancia, algunos lenguajes de programación realizan una conversión de ampliación implícita que transforma el valor del parámetro en un valor con más bits.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Por ejemplo, suponga que el tipo de instancia es <ph id="ph1">&lt;xref:System.Int32&gt;</ph> y el tipo de parámetro es <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.</source>
          <target state="translated">El compilador de Microsoft C# genera instrucciones para representar el valor del parámetro como un <ph id="ph1">&lt;xref:System.Int32&gt;</ph> objeto, a continuación, genera un <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método para comparar la <ph id="ph3">&lt;xref:System.Int32&gt;</ph> representación en forma de instancia y los parámetros.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">Consulte la documentación de su lenguaje de programación para determinar si el compilador realiza las conversiones de ampliación implícitas en tipos numéricos.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">La resolución de sobrecarga de compilador puede representar una diferencia aparente en el comportamiento de los dos <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method.</source>
          <target state="translated">Si una conversión implícita entre el <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argumento y un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> se define y el argumento no se ha escrito como una <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compiladores pueden realizar una conversión implícita y la llamada la <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">De lo contrario, llame a la <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> método, que siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph> si su <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> el argumento no es un <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">En el ejemplo siguiente se ilustra la diferencia de comportamiento entre las sobrecargas del dos método.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">En el caso de todos los tipos enteros primitivos, incluidos tipos signed y unsigned, devuelve la primera comparación <ph id="ph1">&lt;see langword="true" /&gt;</ph> porque el compilador realiza automáticamente una conversión de ampliación y llama el <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> método, mientras que el segundo comparación devuelve <ph id="ph3">&lt;see langword="false" /&gt;</ph> porque el compilador llama el <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> represent the same type and value.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia y un <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado representan el mismo tipo y valor.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> and equal to this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> y es igual a esta instancia; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> and other objects to a reference <ph id="ph2">`Decimal`</ph> value using the <ph id="ph3">`Equals`</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se compara varios <ph id="ph1">`Decimal`</ph> y otros objetos en una referencia <ph id="ph2">`Decimal`</ph> valor mediante la <ph id="ph3">`Equals`</ph> método.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">La resolución de sobrecarga de compilador puede representar una diferencia aparente en el comportamiento de los dos <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method.</source>
          <target state="translated">Si una conversión implícita entre el <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argumento y un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> se define y el argumento no se ha escrito como una <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compiladores pueden realizar una conversión implícita y la llamada la <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">De lo contrario, llame a la <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> método, que siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph> si su <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> el argumento no es un <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">En el ejemplo siguiente se ilustra la diferencia de comportamiento entre las sobrecargas del dos método.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">En el caso de todos los tipos enteros primitivos, incluidos tipos signed y unsigned, devuelve la primera comparación <ph id="ph1">&lt;see langword="true" /&gt;</ph> porque el compilador realiza automáticamente una conversión de ampliación y llama el <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> método, mientras que el segundo comparación devuelve <ph id="ph3">&lt;see langword="false" /&gt;</ph> porque el compilador llama el <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> represent the same value.</source>
          <target state="translated">Devuelve un valor que indica si dos instancias especificadas de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> representan el mismo valor.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> son iguales; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> values to a reference <ph id="ph2">`Decimal`</ph> value using the static <ph id="ph3">`Equals`</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se compara varios <ph id="ph1">`Decimal`</ph> valores en una referencia <ph id="ph2">`Decimal`</ph> valor mediante el método estático <ph id="ph3">`Equals`</ph> método.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The value to round.</source>
          <target state="translated">El valor que se va a redondear.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>Rounds a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number to the closest integer toward negative infinity.</source>
          <target state="translated">Redondea un número <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado al entero más próximo a infinito negativo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> has a fractional part, the next whole <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> number toward negative infinity that is less than <ph id="ph3">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> tiene una parte fraccionaria, el siguiente número entero <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> que tiende a infinito negativo y que es menor que <ph id="ph3">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> doesn't have a fractional part, <ph id="ph2">&lt;paramref name="d" /&gt;</ph> is returned unchanged.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> no tiene una parte fraccionaria, <ph id="ph2">&lt;paramref name="d" /&gt;</ph> se devuelve sin modificar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>Note that the method returns an integral value of type <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que el método devuelve un valor entero de tipo <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, Section 4.</source>
          <target state="translated">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
          <target state="translated">Este tipo de redondeo a veces se denomina redondeo a infinito negativo.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
          <target state="translated">En otras palabras, si <ph id="ph1">`d`</ph> es positivo, se trunca cualquier componente fraccionario.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
          <target state="translated">Si <ph id="ph1">`d`</ph> es negativo, la presencia de cualquier componente fraccionario hace que se redondea al entero más pequeño.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
          <target state="translated">La operación de este método difiere de la <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> método, que es compatible con redondeo a infinito positivo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra la <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> método y se contrasta con la <ph id="ph2">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>An OLE Automation Currency value.</source>
          <target state="translated">Valor de moneda de Automation OLE.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Convierte el entero de 64 bits con signo especificado, que contiene un valor de moneda de Automation OLE, en el valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the equivalent of <ph id="ph2">&lt;paramref name="cy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que contiene el equivalente de <ph id="ph2">&lt;paramref name="cy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>The following code example uses the <ph id="ph1">`FromOACurrency`</ph> method to convert <ph id="ph2">&lt;xref:System.Int64&gt;</ph> fields that contain OLE Automation Currency values to the equivalent <ph id="ph3">`Decimal`</ph> numbers.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">`FromOACurrency`</ph> método para convertir <ph id="ph2">&lt;xref:System.Int64&gt;</ph> campos que contienen valores de moneda de automatización OLE equivalente <ph id="ph3">`Decimal`</ph> números.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Converts the value of a specified instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to its equivalent binary representation.</source>
          <target state="translated">Convierte el valor de una instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificada en la representación binaria equivalente.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>A 32-bit signed integer array with four elements that contain the binary representation of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Matriz de enteros de 32 bits con signo con cuatro elementos que contiene la representación binaria de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La representación binaria de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> número se compone de un signo de 1 bit, un número entero de 96 bits y un factor de escala utilizado para dividir el número entero y especificar qué parte de ella es una fracción decimal.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">El factor de escala es implícitamente el número 10 elevado a un exponente comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The return value is a four-element array of 32-bit signed integers.</source>
          <target state="translated">El valor devuelto es una matriz de cuatro elementos de enteros de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</source>
          <target state="translated">El primer, segundo y tercer elementos de la matriz devuelta contienen los 32 bits bajos, medio y altos del número entero de 96 bits.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The fourth element of the returned array contains the scale factor and sign.</source>
          <target state="translated">El cuarto elemento de la matriz devuelta contiene el factor de escala y el inicio de sesión.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It consists of the following parts:</source>
          <target state="translated">Consta de las siguientes partes:</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 0 to 15, the lower word, are unused and must be zero.</source>
          <target state="translated">Los bits 0 y 15, la palabra inferior, no se utilizan y deben ser cero.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</source>
          <target state="translated">Los bits del 16 al 23 deben contener a un exponente entre 0 y 28, que indica la potencia de 10 para dividir el número entero.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 24 to 30 are unused and must be zero.</source>
          <target state="translated">Los bits 24 a 30 no se utilizan y deben ser cero.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bit 31 contains the sign: 0 mean positive, and 1 means negative.</source>
          <target state="translated">El bit 31 contiene el inicio de sesión: 0 significa positivo y 1 significa negativo.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Note that the bit representation differentiates between negative and positive zero.</source>
          <target state="translated">Tenga en cuenta que la representación de bits se distingue entre cero positivo y negativo.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>These values are treated as being equal in all operations.</source>
          <target state="translated">Estos valores se tratan como si fueran iguales en todas las operaciones.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The following example uses the <ph id="ph1">`GetBits`</ph> method to convert several <ph id="ph2">`Decimal`</ph> values to their equivalent binary representations.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`GetBits`</ph> método para convertir varias <ph id="ph2">`Decimal`</ph> valores en sus representaciones binarias equivalentes.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">A continuación, muestra los valores decimales y el valor hexadecimal de los elementos en la matriz devuelta por la <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method to retrieve the component parts of an array.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> método para recuperar los componentes de una matriz.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It then uses this array in the call to the <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor to instantiate a new <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">A continuación, utiliza esta matriz en la llamada a la <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor para crear instancias de un nuevo <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Devuelve el código hash de esta instancia.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve el <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> para el tipo de valor <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetTypeCode">
          <source>The enumerated constant <ph id="ph1">&lt;see cref="F:System.TypeCode.Decimal" /&gt;</ph>.</source>
          <target state="translated">Constante enumerada <ph id="ph1">&lt;see cref="F:System.TypeCode.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetTypeCode">
          <source>The following code example uses the <ph id="ph1">`GetTypeCode`</ph> method to return the type code for <ph id="ph2">`Decimal`</ph> value type.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">`GetTypeCode`</ph> método para devolver el código de tipo de <ph id="ph2">`Decimal`</ph> un tipo de valor.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="F:System.Decimal.MaxValue">
          <source>Represents the largest possible value of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Representa el mayor valor posible de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="F:System.Decimal.MaxValue">
          <source>This field is constant and read-only.</source>
          <target state="translated">Este campo es constante y de solo lectura.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MaxValue">
          <source>The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">El valor de esta constante es positivo 79,228,162,514,264,337,593,543,950,335.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MaxValue">
          <source>The following code sample illustrates the use of <ph id="ph1">`MaxValue`</ph> :</source>
          <target state="translated">El ejemplo de código siguiente muestra el uso de <ph id="ph1">`MaxValue`</ph> :</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinusOne">
          <source>Represents the number negative one (-1).</source>
          <target state="translated">Representa el número menos uno (-1).</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinusOne">
          <source>The following code example illustrates the use of the <ph id="ph1">`MinusOne`</ph> field.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">`MinusOne`</ph> campo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinValue">
          <source>Represents the smallest possible value of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Representa el menor valor posible de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinValue">
          <source>This field is constant and read-only.</source>
          <target state="translated">Este campo es constante y de solo lectura.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinValue">
          <source>The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">El valor de esta constante es negativo 79,228,162,514,264,337,593,543,950,335.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinValue">
          <source>The following code example illustrates the use of the <ph id="ph1">`MinValue`</ph> field.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">`MinValue`</ph> campo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The multiplicand.</source>
          <target state="translated">Multiplicando.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The multiplier.</source>
          <target state="translated">Multiplicador.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Multiplica dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resultado de multiplicar <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The following code example creates several pairs of <ph id="ph1">`Decimal`</ph> values and calculates their products with the <ph id="ph2">`Multiply`</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se crea varios pares de <ph id="ph1">`Decimal`</ph> valores y calcula sus productos con el <ph id="ph2">`Multiply`</ph> método.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>The value to negate.</source>
          <target state="translated">Valor que se va a negar.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>Returns the result of multiplying the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value by negative one.</source>
          <target state="translated">Devuelve el resultado de multiplicar el valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado por menos uno.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>A decimal number with the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>, but the opposite sign.</source>
          <target state="translated">Número decimal con el valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph> pero con signo opuesto.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>Zero, if <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is zero.</source>
          <target state="translated">Cero, si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> es cero.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`Negate`</ph> method to change the sign of several <ph id="ph2">`Decimal`</ph> values.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">`Negate`</ph> método para cambiar el inicio de sesión de varios <ph id="ph2">`Decimal`</ph> valores.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="F:System.Decimal.One">
          <source>Represents the number one (1).</source>
          <target state="translated">Representa el número uno (1).</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.One">
          <source>The following code example illustrates the use of the <ph id="ph1">`One`</ph> field.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">`One`</ph> campo.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The first value to add.</source>
          <target state="translated">Primer valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The second value to add.</source>
          <target state="translated">Segundo valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>Adds two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Suma dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The result of adding <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resultado de sumar <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Addition%2A&gt;</ph> method defines the operation of the addition operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Addition%2A&gt;</ph> método define el funcionamiento del operador de suma para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The value to decrement.</source>
          <target state="translated">Valor que se va a disminuir.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>Decrements the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand by one.</source>
          <target state="translated">Reduce en uno el operando <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> decremented by 1.</source>
          <target state="translated">Valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph> reducido en 1.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method defines the operation of the decrement operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> método define el funcionamiento del operador de decremento de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>Some languages (such as Visual Basic) that lack an increment operator can call the <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Algunos lenguajes (como Visual Basic) que no tienen un operador de incremento pueden llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>If your language does not support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead, as the following example shows.</source>
          <target state="translated">Si su lenguaje no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> método en su lugar, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          <target state="translated">Dividendo.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          <target state="translated">Divisor.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>Divides two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Divide dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resultado de dividir <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> entre <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Division%2A&gt;</ph> method defines the operation of the division operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Division%2A&gt;</ph> método define el funcionamiento del operador de división de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> es cero.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values are equal.</source>
          <target state="translated">Devuelve un valor que indica si dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> son iguales; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Equality%2A&gt;</ph> método define el funcionamiento del operador de igualdad para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object and another type.</source>
          <target state="translated">Define una conversión explícita entre un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> y otro tipo.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to an 8-bit unsigned integer.</source>
          <target state="translated">Define una conversión explícita de un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 8 bits sin signo.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>An 8-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 8 bits sin signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valor mediante el uso de C#, C++ y Visual Basic.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Byte&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Byte&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a Unicode character.</source>
          <target state="translated">Define una conversión explícita de un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un carácter Unicode.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>A Unicode character that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Carácter Unicode que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes, o quizás no admita la conversión de en absoluto.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>For example, the Visual Basic and C++ compilers do not support an explicit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Char&gt;</ph> conversion.</source>
          <target state="translated">Por ejemplo, los compiladores de Visual Basic y C++ no admiten explícito <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Char&gt;</ph> conversión.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Char&gt;</ph> values (Unicode characters) by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Char&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Char&gt;</ph> valores (caracteres Unicode) usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Char&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a double-precision floating-point number.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un número de punto flotante de precisión doble.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>A double-precision floating-point number that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Número de punto flotante de precisión doble que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Esta operación puede provocar una pérdida de precisión, porque un número de punto flotante de precisión doble tiene menos dígitos significativos que un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Double&gt;</ph> valor mediante el uso de C#, C++ y Visual Basic.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Double&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Double&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Double&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 16-bit signed integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 16 bits con signo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>A 16-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 16 bits con signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int16&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Int16&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value by using C#, Visual Basic, and C++.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Int16&gt;</ph> valor mediante el uso de C#, Visual Basic y C++.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int16&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Int16&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Int16&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 32-bit signed integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>A 32-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 32 bits con signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valor mediante el uso de C#, C++ y Visual Basic.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int32&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Int32&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 64-bit signed integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 64 bits con signo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>A 64-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 64 bits con signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int64&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Int64&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to an 8-bit signed integer.</source>
          <target state="translated">Define una conversión explícita de un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 8 bits con signo.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>An 8-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 8 bits con signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.SByte&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.SByte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> and an <ph id="ph3">&lt;xref:System.SByte&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Byte&gt;</ph> y un <ph id="ph3">&lt;xref:System.SByte&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.SByte&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.SByte&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.SByte&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a single-precision floating-point number.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un número de punto flotante de precisión sencillo.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>A single-precision floating-point number that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Número de punto flotante de precisión sencilla que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Esta operación puede provocar una pérdida de precisión, porque un número de punto flotante de precisión simple tiene menos dígitos significativos que un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.Single&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Single&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.Single&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.Single&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 16-bit unsigned integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 16 bits sin signo.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>A 16-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 16 bits sin signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.UInt16&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 32-bit unsigned integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 32 bits sin signo.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>A 32-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 32 bits sin signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 64-bit unsigned integer.</source>
          <target state="translated">Define una conversión explícita de un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en un entero de 64 bits sin signo.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>A 64-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Entero de 64 bits sin signo que representa el <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Este operador admite la conversión explícita de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La sintaxis para estas conversiones explícitas depende del lenguaje y compiladores de lenguaje individuales pueden proporcionar diferentes implementaciones y devolver resultados diferentes.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">El ejemplo muestran los diferentes valores devueltos cuando se convierte explícitamente un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> valor mediante el uso de C# y Visual Basic.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para llevar a cabo una conversión que sea independiente del idioma, puede llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> números a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> valores usando el explícita <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> a <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es negativo o mayor que <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">Número de punto flotante de precisión doble que se va a convertir.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>Defines an explicit conversion of a double-precision floating-point number to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión explícita de un número de punto flotante de precisión doble en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The converted double-precision floating point number.</source>
          <target state="translated">Número de punto flotante de precisión doble que se ha convertido.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.Double&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números utilizando la <ph id="ph3">&lt;xref:System.Double&gt;</ph> a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>This conversion requires the op_Explicit operator in Visual Basic.</source>
          <target state="translated">Esta conversión requiere el operador op_Explicit en Visual Basic.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> o <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">Número de punto flotante de precisión sencilla que se va a convertir.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>Defines an explicit conversion of a single-precision floating-point number to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión explícita de un número de punto flotante de precisión sencilla en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The converted single-precision floating point number.</source>
          <target state="translated">Número de punto flotante de precisión sencilla que se ha convertido.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.Single&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Single&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números utilizando la <ph id="ph3">&lt;xref:System.Single&gt;</ph> a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>This conversion requires the op_Explicit operator in Visual Basic.</source>
          <target state="translated">Esta conversión requiere el operador op_Explicit en Visual Basic.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph> o <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is greater than another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado es mayor que otro <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> es mayor que <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> método define el funcionamiento del operador para mayor que <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Es posible que también puedan llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is greater than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado es mayor o igual que otro <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> es mayor o igual que <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> método define el funcionamiento del operador mayor o igual de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Es posible que también puedan llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Defines an implicit conversion of the value of a type to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Define una conversión implícita del valor de un tipo a un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">Entero de 8 bits sin signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>Defines an implicit conversion of an 8-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero de 8 bits sin signo en un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The converted 8-bit unsigned integer.</source>
          <target state="translated">Entero de 8 bits sin signo que se ha convertido.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The Unicode character to convert.</source>
          <target state="translated">Carácter Unicode que se va a convertir.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>Defines an implicit conversion of a Unicode character to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un carácter Unicode en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The converted Unicode character.</source>
          <target state="translated">Carácter Unicode convertido.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Char&gt;</ph> values (Unicode characters) to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Char&gt;</ph> valores (caracteres Unicode) para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</source>
          <target state="translated">Esta conversión requiere el operador op_Implicit en Visual Basic, pero no en C# y C++.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">Entero de 16 bits con signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>Defines an implicit conversion of a 16-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero de 16 bits con signo en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The converted 16-bit signed integer.</source>
          <target state="translated">Entero de 16 bits con signo convertido.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Int16&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</source>
          <target state="translated">Esta conversión requiere el operador op_Implicit en Visual Basic, pero no en C# y C++.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">Entero de 32 bits con signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>Defines an implicit conversion of a 32-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero de 32 bits con signo en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The converted 32-bit signed integer.</source>
          <target state="translated">Entero de 32 bits con signo convertido.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Int32&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">Entero de 64 bits con signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>Defines an implicit conversion of a 64-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero de 64 bits con signo en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The converted 64-bit signed integer.</source>
          <target state="translated">Entero de 64 bits con signo convertido.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.Int64&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">Entero de 8 bits con signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>Defines an implicit conversion of an 8-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero de 8 bits con signo en un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The converted 8-bit signed integer.</source>
          <target state="translated">Entero de 8 bits con signo convertido.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.SByte&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">Entero de 16 bits sin signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero sin signo de 16 bits en <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The converted 16-bit unsigned integer.</source>
          <target state="translated">Entero de 16 bits sin signo que se ha convertido.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">Entero de 32 bits sin signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero sin signo de 32 bits en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The converted 32-bit unsigned integer.</source>
          <target state="translated">Entero de 32 bits sin signo que se ha convertido.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">Entero de 64 bits sin signo que se va a convertir.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Define una conversión implícita de un entero sin signo de 64 bits en un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The converted 64-bit unsigned integer.</source>
          <target state="translated">Entero de 64 bits sin signo que se ha convertido.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> método definen los tipos desde el que el compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">El ejemplo siguiente se convierte <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> valores <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> números utilizando la <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> operador de conversión.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The value to increment.</source>
          <target state="translated">Valor que se va a aumentar.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand by 1.</source>
          <target state="translated">Incrementa en 1 el operando <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> incremented by 1.</source>
          <target state="translated">Valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph> incrementado en 1.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method defines the operation of the increment operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> método define el funcionamiento del operador de incremento de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>Some languages (such as Visual Basic) that lack an increment operator can call the <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Algunos lenguajes (como Visual Basic) que no tienen un operador de incremento pueden llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>If your language does not support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead, as the following example shows.</source>
          <target state="translated">Si su lenguaje no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> método en su lugar, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> objects have different values.</source>
          <target state="translated">Devuelve un valor que indica si dos objetos <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> tienen valores diferentes.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> no son iguales; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Inequality%2A&gt;</ph> método define el funcionamiento del operador de desigualdad para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, puede comprobar la desigualdad mediante una de las siguientes técnicas:</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method, which indicates the relationship between two <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Llamar a la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> método, que indica la relación entre dos <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method and reversing its value.</source>
          <target state="translated">Llamar a la <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> método e invertir su valor.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is less than another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado es menor que otro <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> es menor que <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> método define el funcionamiento del operador para menor que <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Es posible que también puedan llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is less than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si un <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado es menor o igual que otro <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> es menor o igual que <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> método define la operación de la menor que o el operador igual de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Es posible que también puedan llamar a la <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> método directamente, como en el ejemplo siguiente se muestra.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          <target state="translated">Dividendo.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          <target state="translated">Divisor.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>Returns the remainder resulting from dividing two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Devuelve el resto que se obtiene como resultado de dividir dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The remainder resulting from dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resto que resulta de dividir <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> por <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Modulus%2A&gt;</ph> método define el funcionamiento del operador de módulo para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The sign of the value return by the modulus operation depends on the sign of dividend.</source>
          <target state="translated">El signo del valor valor devuelto por la operación de módulo depende del signo del dividendo.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</source>
          <target state="translated">Si el dividendo es positivo, la operación de módulo devuelve un resultado positivo; Si es negativo, la operación de módulo devuelve un resultado negativo.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is <ph id="ph2">&lt;see langword="zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> es <ph id="ph2">&lt;see langword="zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The first value to multiply.</source>
          <target state="translated">Primer valor que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The second value to multiply.</source>
          <target state="translated">Segundo valor que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Multiplica dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resultado de multiplicar <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> por <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Multiply%2A&gt;</ph> método define el funcionamiento del operador de multiplicación para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Multiply%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The minuend.</source>
          <target state="translated">Minuendo.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The subtrahend.</source>
          <target state="translated">Sustraendo.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>Subtracts two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Resta dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> from <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</source>
          <target state="translated">Resultado de restar <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> de <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_Subtraction%2A&gt;</ph> método define el funcionamiento del operador de sustracción de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Si el idioma que está usando no admite operadores personalizados, llame a la <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The value to negate.</source>
          <target state="translated">Valor que se va a negar.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>Negates the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand.</source>
          <target state="translated">Convierte en negativo el valor del operando <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The result of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> multiplied by negative one (-1).</source>
          <target state="translated">Resultado de multiplicar <ph id="ph1">&lt;paramref name="d" /&gt;</ph> por menos uno (-1).</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> método define el funcionamiento del operador unario de negación (o el operador inverso aditivo) para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The operation produces a value that results in 0 (zero) when it is added to the original number.</source>
          <target state="translated">La operación genera un valor que se obtiene en 0 (cero) cuando se agrega al número original.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Decimal.Negate%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The operand to return.</source>
          <target state="translated">El operando para devolver.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand (the sign of the operand is unchanged).</source>
          <target state="translated">Devuelve el valor del operando <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> (el signo del operando no se modifica).</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The value of the operand, <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Valor del operando, <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> método define el funcionamiento del operador unario positivo para <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la representación en forma de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la representación en forma de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>The equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">Equivalente al número que se incluye en <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> contains a number of the form:</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> contiene un número de la forma:</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Específicas de referencias culturales miles símbolo de separador.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> se interpreta usando el <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> estilo.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Esto significa que el espacio en blanco y miles se permiten separadores pero no los símbolos de divisa.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use either the <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para definir explícitamente los elementos (como símbolos de moneda, miles separadores y espacios en blanco) que pueden estar presentes en <ph id="ph1">`s`</ph>, use la <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> initialized for the current system culture.</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> se analiza utilizando la información de formato en un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> inicializado para la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, use the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para analizar una cadena usando la información de formato de alguna otra referencia cultural, use el <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If necessary, the value of <ph id="ph1">`s`</ph> is rounded using rounding to nearest.</source>
          <target state="translated">Si es necesario, el valor de <ph id="ph1">`s`</ph> se redondea utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If during a parse operation a separator is encountered in the <ph id="ph1">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si durante una operación de análisis se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro y la divisa aplicable o número decimal y separadores de grupos son iguales, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29&gt;</ph> method to parse string representations of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29&gt;</ph> método analizar representaciones de cadena de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Combinación bit a bit de valores <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> que indica los elementos de estilo que pueden estar presentes en <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          <target state="translated">Un valor que se especifica de forma habitual es <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la representación de cadena de un número con un estilo especificado en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated">Número <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente al número contenido en <ph id="ph2">&lt;paramref name="s" /&gt;</ph>, tal y como especifica <ph id="ph3">&lt;paramref name="style" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">El <ph id="ph1">`style`</ph> parámetro define los elementos de estilo (como miles separadores, espacio en blanco y símbolos de moneda) que se permiten en la <ph id="ph2">`s`</ph> parámetro para la operación de análisis se realice correctamente.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Debe ser una combinación de marcadores de bits de la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">El siguiente <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros no son compatibles:</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Dependiendo del valor de <ph id="ph1">`style`</ph>, el <ph id="ph2">`s`</ph> parámetro puede incluir los siguientes elementos:</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espacio en blanco puede aparecer al principio de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> marca y pueden aparecer al final de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> incluye la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un símbolo de moneda específico de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">Su posición en la cadena viene definida por el <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> propiedades de la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Símbolo de divisa de la referencia cultural actual puede aparecer en <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El signo puede aparecer al principio de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> marca y pueden aparecer al final de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> incluye la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Se pueden utilizar paréntesis en <ph id="ph1">`s`</ph> para indicar un valor negativo si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Específicas de referencias culturales miles símbolo de separador.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's thousands separator can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Miles de la referencia cultural actual separador puede aparecer en <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Símbolo de separador decimal de la referencia cultural actual puede aparecer en <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Pueden aparecer dígitos fraccionarios en <ph id="ph1">`s`</ph> solo si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">El 'e' o el carácter 'E', lo que indica que el valor se representa en notación exponencial.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro puede representar un número en notación exponencial si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Una cadena formada únicamente por dígitos (que corresponde a la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> estilo) siempre se analiza correctamente.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">El resto <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros controlan los elementos que pueden ser pero no tienen que estar presentes en la cadena de entrada.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">La tabla siguiente se indica cómo individuales <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros afectan a los elementos que pueden estar presentes en <ph id="ph2">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>NumberStyles value</source>
          <target state="translated">Valor NumberStyles</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">Elementos permitidos en s además de dígitos</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated">El <bpt id="p1">*</bpt>dígitos<ept id="p1">*</ept> solo el elemento.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">El elemento de lenguaje <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">y <bpt id="p1">*</bpt>dígitos fraccionarios<ept id="p1">*</ept> elementos.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro también puede utilizar la notación exponencial.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This flag supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</source>
          <target state="translated">Esta marca es compatible con los valores en el formulario <bpt id="p1">*</bpt>dígitos<ept id="p1">*</ept>E<bpt id="p2">*</bpt>dígitos<ept id="p2">*</ept>; adicionales se necesitan marcadores para analizar correctamente cadenas con elementos como signos positivos o negativos y los símbolos de separador decimal.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento situado al principio de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento situado al final de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento situado al principio de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento situado al final de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento en forma de paréntesis delimitando el valor numérico.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated">El <bpt id="p1">*</bpt>,<ept id="p1">*</ept> elemento.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated">El <bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> elemento.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All.</source>
          <target state="translated">Todos.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro no puede representar un número hexadecimal o un número en notación exponencial.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento al principio o al final de <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>inicio de sesión<ept id="p2">*</ept> al principio de <ph id="ph2">`s`</ph>y el <bpt id="p3">*</bpt>.<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>symbol.</source>
          <target state="translated">símbolo.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro también puede utilizar la notación exponencial.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, and <bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
          <target state="translated">El <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, y <bpt id="p2">*</bpt>.<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>elements.</source>
          <target state="translated">elementos.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Todos los estilos excepto <ph id="ph1">`s`</ph> no puede representar un número hexadecimal.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro se analiza utilizando la información de formato en un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto inicializado para la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, <ph id="ph2">`styles`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro durante una operación de análisis, <ph id="ph2">`styles`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> y <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> son los mismos valores y la divisa aplicable o número decimal y separadores de grupos, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method to parse the string representations of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values using the en-US culture.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> método para analizar las representaciones de cadena de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores mediante la referencia cultural en-US.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> no es un valor <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="style" /&gt;</ph> es el valor de <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> que aporta información de análisis específica de la referencia cultural sobre <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified culture-specific format information.</source>
          <target state="translated">Convierte la representación de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente utilizando la información de formato específica de la referencia cultural especificada.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Número <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente al número contenido en <ph id="ph2">&lt;paramref name="s" /&gt;</ph>, tal y como especifica <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is commonly used to convert text that can be formatted in a variety of ways to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">Esta sobrecarga de la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> método normalmente se utiliza para convertir texto al que se puede aplicar formato en una variedad de formas de un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</source>
          <target state="translated">Por ejemplo, se puede utilizar para convertir el texto escrito por un usuario en un cuadro de texto HTML en un valor numérico.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro contiene un número del formulario:</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Específicas de referencias culturales miles símbolo de separador.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro se interpreta usando el <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> estilo.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Esto significa que el espacio en blanco y miles se permiten separadores pero no los símbolos de divisa.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para definir explícitamente los elementos (como símbolos de moneda, miles separadores y espacios en blanco) que pueden estar presentes en <ph id="ph1">`s`</ph>, use el <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación, como un <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> o <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro proporciona información específica de la referencia cultural utilizada en el análisis.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, se usa la referencia cultural actual del subproceso.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objeto tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro durante una operación de análisis y la divisa aplicable o número decimal y separadores de grupos son iguales, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The following example is the button click event handler of a Web form.</source>
          <target state="translated">El ejemplo siguiente es el botón, haga clic en el controlador de eventos de un formulario Web Forms.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>It uses the array returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> property to determine the user's locale.</source>
          <target state="translated">Utiliza la matriz devuelta por la <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> propiedad para determinar la configuración regional del usuario.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>It then instantiates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that locale.</source>
          <target state="translated">A continuación, crea una instancia de un <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto que corresponde a esa configuración regional.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that belongs to that <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is then passed to the <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to convert the user's input to a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto al que pertenece a la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> , a continuación, se pasa el objeto a la <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> para convertir el usuario de entrada del método a un <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Combinación bit a bit de valores <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> que indica los elementos de estilo que pueden estar presentes en <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          <target state="translated">Un valor que se especifica de forma habitual es <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that supplies culture-specific information about the format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> que aporta información específica de la referencia cultural sobre el formato de <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified style and culture-specific format.</source>
          <target state="translated">Convierte la representación de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente utilizando el estilo y el formato específico de la referencia cultural que se hayan especificado.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="style" /&gt;</ph> and <ph id="ph4">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Número <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente al número contenido en <ph id="ph2">&lt;paramref name="s" /&gt;</ph>, tal y como especifican <ph id="ph3">&lt;paramref name="style" /&gt;</ph> y <ph id="ph4">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">El <ph id="ph1">`style`</ph> parámetro define el formato permitido de la <ph id="ph2">`s`</ph> parámetro para la operación de análisis se realice correctamente.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Debe ser una combinación de marcadores de bits de la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">El siguiente <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros no son compatibles:</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Dependiendo del valor de <ph id="ph1">`style`</ph>, el <ph id="ph2">`s`</ph> parámetro puede incluir los siguientes elementos:</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un símbolo de moneda específico de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">Su posición en la cadena viene definida por el <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> propiedades de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto devuelto por la <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método de la <ph id="ph5">`provider`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El símbolo de moneda puede aparecer en <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espacio en blanco puede aparecer al principio de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> marca y pueden aparecer al final de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> incluye la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El signo puede aparecer al principio de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> marca y pueden aparecer al final de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> incluye la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Se pueden utilizar paréntesis en <ph id="ph1">`s`</ph> para indicar un valor negativo si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Específicas de referencias culturales miles símbolo de separador.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator of the culture defined by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Los miles separador de la referencia cultural definida por <ph id="ph1">`provider`</ph> pueden aparecer en <ph id="ph2">`s`</ph> si <ph id="ph3">`style`</ph> incluye la <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture defined by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El símbolo de separador decimal de la referencia cultural definida por <ph id="ph1">`provider`</ph> pueden aparecer en <ph id="ph2">`s`</ph> si <ph id="ph3">`style`</ph> incluye la <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Pueden aparecer dígitos fraccionarios en <ph id="ph1">`s`</ph> solo si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">El 'e' o el carácter 'E', lo que indica que el valor se representa en notación exponencial.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro puede representar un número en notación exponencial si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Una cadena formada únicamente por dígitos (que corresponde a la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> estilo) siempre se analiza correctamente.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">El resto <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros controlan los elementos que pueden ser pero no tienen que estar presentes en la cadena de entrada.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">La tabla siguiente se indica cómo individuales <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros afectan a los elementos que pueden estar presentes en <ph id="ph2">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">Valor NumberStyles</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">Elementos permitidos en s además de dígitos</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated">El <bpt id="p1">*</bpt>dígitos<ept id="p1">*</ept> solo el elemento.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">El elemento de lenguaje <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">y <bpt id="p1">*</bpt>dígitos fraccionarios<ept id="p1">*</ept> elementos.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro también puede utilizar la notación exponencial.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This flag supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</source>
          <target state="translated">Esta marca es compatible con los valores en el formulario <bpt id="p1">*</bpt>dígitos<ept id="p1">*</ept>E<bpt id="p2">*</bpt>dígitos<ept id="p2">*</ept>; adicionales se necesitan marcadores para analizar correctamente cadenas con elementos como signos positivos o negativos y los símbolos de separador decimal.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento situado al principio de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento situado al final de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento situado al principio de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento situado al final de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated">El <bpt id="p1">*</bpt>inicio de sesión<ept id="p1">*</ept> elemento en forma de paréntesis delimitando el valor numérico.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated">El <bpt id="p1">*</bpt>,<ept id="p1">*</ept> elemento.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated">El <bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> elemento.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All.</source>
          <target state="translated">Todos.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro no puede representar un número hexadecimal o un número en notación exponencial.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept>symbol.</source>
          <target state="translated">El <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> elemento al principio o al final de <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>inicio de sesión<ept id="p2">*</ept> al principio de <ph id="ph2">`s`</ph>y el <bpt id="p3">*</bpt>.<ept id="p3">*</ept> símbolo.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">El <ph id="ph1">`s`</ph> parámetro también puede utilizar la notación exponencial.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, and <bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
          <target state="translated">El <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, y <bpt id="p2">*</bpt>.<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>elements.</source>
          <target state="translated">elementos.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Todos los estilos excepto <ph id="ph1">`s`</ph> no puede representar un número hexadecimal.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación, como un <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> o <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro proporciona información específica de la referencia cultural utilizada en el análisis.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, se usa la referencia cultural actual del subproceso.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objeto tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro durante una operación de análisis y la divisa aplicable o número decimal y separadores de grupos son iguales, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example uses a variety of <ph id="ph1">`style`</ph> and <ph id="ph2">`provider`</ph> parameters to parse the string representations of <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se utiliza una variedad de <ph id="ph1">`style`</ph> y <ph id="ph2">`provider`</ph> parámetros para analizar las representaciones de cadena de <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> no es un valor <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="style" /&gt;</ph> es el valor de <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          <target state="translated">Dividendo.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          <target state="translated">Divisor.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>Computes the remainder after dividing two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Calcula el resto de la división de dos valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          <target state="translated">Resto después de dividir <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> por <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> method to calculate the remainder in a series of division operations.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> método para calcular el resto de una serie de operaciones de división.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> es cero.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Rounds a value to the nearest integer or specified number of decimal places.</source>
          <target state="translated">Redondea un valor al entero más próximo o al número especificado de posiciones decimales.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>A decimal number to round.</source>
          <target state="translated">Número decimal que se va a redondear.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>Rounds a decimal value to the nearest integer.</source>
          <target state="translated">Redondea un valor decimal al entero más próximo.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The integer that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          <target state="translated">El entero más cercano al parámetro <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two integers, one of which is even and the other odd, the even number is returned.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> se encuentra a la mitad del intervalo entre dos números enteros, uno par y el otro impar, se devuelve el número par.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>This kind of rounding is sometimes called <bpt id="p1">*</bpt>round half to even<ept id="p1">*</ept> or <bpt id="p2">*</bpt>banker's rounding<ept id="p2">*</ept>.</source>
          <target state="translated">Este tipo de redondeo a veces se denomina <bpt id="p1">*</bpt>de ida y vuelta para igualar la mitad<ept id="p1">*</ept> o <bpt id="p2">*</bpt>el redondeo bancario<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</source>
          <target state="translated">Minimiza los errores de redondeo que son el resultado de redondear de forma consistente un valor de punto medio en una dirección única.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph2">`mode`</ph> argument of <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Es equivalente a llamar a la <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> método con un <ph id="ph2">`mode`</ph> argumento de <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The following example rounds a range of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values between 100 and 102 to the nearest integer.</source>
          <target state="translated">En el ejemplo siguiente se redondea a un intervalo de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores entre 100 y 102 al entero más próximo.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</source>
          <target state="translated">Dado que el método usa redondeo bancario, tenga en cuenta que 100.5 se redondea a 100 y 101,5 se redondeará hasta el valor 102.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">El resultado está fuera del intervalo de un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>A decimal number to round.</source>
          <target state="translated">Número decimal que se va a redondear.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>A value from 0 to 28 that specifies the number of decimal places to round to.</source>
          <target state="translated">Valor comprendido entre el 0 y el 28 que especifica el número de posiciones decimales a las que se va a redondear.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>Rounds a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a specified number of decimal places.</source>
          <target state="translated">Redondea un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> a un número especificado de posiciones decimales.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>The decimal number equivalent to <ph id="ph1">&lt;paramref name="d" /&gt;</ph> rounded to <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> number of decimal places.</source>
          <target state="translated">Número decimal equivalente a <ph id="ph1">&lt;paramref name="d" /&gt;</ph> redondeado a un número <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> de posiciones decimales.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>This method is equivalent to calling the <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph2">`mode`</ph> argument of <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.When <ph id="ph4">`d`</ph> is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</source>
          <target state="translated">Este método es equivalente a llamar a la <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> método con un <ph id="ph2">`mode`</ph> argumento de <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>. Cuando <ph id="ph4">`d`</ph> está exactamente comprendido entre dos valores redondeados, el resultado es el valor redondeado que tiene un dígito par en la posición decimal más a la derecha.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</source>
          <target state="translated">Por ejemplo, cuando se redondea a dos decimales, el valor 2,345 se convierte en 2,34 y el valor 2,355 pasa a ser 2,36.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>This process is known as <bpt id="p1">*</bpt>rounding toward even<ept id="p1">*</ept>, or <bpt id="p2">*</bpt>banker's rounding<ept id="p2">*</ept>.</source>
          <target state="translated">Este proceso se conoce como <bpt id="p1">*</bpt>redondeo al par<ept id="p1">*</ept>, o <bpt id="p2">*</bpt>el redondeo bancario<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</source>
          <target state="translated">Minimiza los errores de redondeo que son el resultado de redondear de forma consistente un valor de punto medio en una dirección única.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>The following example rounds several <ph id="ph1">`Decimal`</ph> values to a specified number of decimal places using the <ph id="ph2">`Round`</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se redondea varios <ph id="ph1">`Decimal`</ph> valores a un número especificado de posiciones decimales mediante el <ph id="ph2">`Round`</ph> método.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is not a value from 0 to 28.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> no es un valor comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A decimal number to round.</source>
          <target state="translated">Número decimal que se va a redondear.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A value that specifies how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated">Valor que especifica el redondeo de <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> si su valor está a la mitad del intervalo entre otros dos números.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounds a decimal value to the nearest integer.</source>
          <target state="translated">Redondea un valor decimal al entero más próximo.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two other numbers.</source>
          <target state="translated">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre otros dos números.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The integer that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          <target state="translated">El entero más cercano al parámetro <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two numbers, one of which is even and the other odd, the <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> parameter determines which of the two numbers is returned.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> se encuentra a la mitad del intervalo entre dos números, uno par y otro impar, el parámetro <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> determina el número que se devuelve.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</source>
          <target state="translated">Un valor de punto medio, el valor después de los dígitos menos significativos en el resultado es precisamente mitad de camino entre dos números.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, 7.5 is a midpoint value if it is to be rounded to an integer.</source>
          <target state="translated">Por ejemplo, 7.5 es un valor de punto medio si no se redondea a un entero.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id="ph1">`mode`</ph> argument.</source>
          <target state="translated">Para los valores de punto medio, el valor más cercano no puede identificarse fácilmente sin una convención de redondeo, que se especifica mediante el <ph id="ph1">`mode`</ph> argumento.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.Round%2A&gt;</ph> method supports two rounding conventions for handling midpoint values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.Round%2A&gt;</ph> método es compatible con dos convenciones de redondeo para controlar los valores de punto medio.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding away from zero.</source>
          <target state="translated">Redondeo para evitar el cero.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Midpoint values are rounded to the next number away from zero.</source>
          <target state="translated">Los valores de punto medio se redondean al siguiente número de dirección contraria a cero.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</source>
          <target state="translated">Por ejemplo, 3,5 se redondea a 4, 4.5 se redondeará a 5,-3.5 se redondea a -4, y-4.5 se redondea a -5.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Esta forma de redondeo es representada por la <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> miembro de enumeración.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding away from zero is the most widely known form of rounding.</source>
          <target state="translated">Redondeo para evitar el cero es la forma más ampliamente conocida de redondeo.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding to even, or banker's rounding</source>
          <target state="translated">Redondeo incluso o redondeo bancario</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Midpoint values are rounded to the nearest even number.</source>
          <target state="translated">Los valores de punto medio se redondean al número par más cercano.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</source>
          <target state="translated">Por ejemplo, 3.5 y 4.5 de ida y vuelta a 4 y-3.5 y-4.5 de ida y vuelta a -4.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Esta forma de redondeo es representada por la <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> miembro de enumeración.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding to nearest is the standard form of rounding used in financial and statistical operations.</source>
          <target state="translated">Redondeo al más cercano es la forma estándar de redondeo utilizado en las operaciones financieras y estadísticas.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>It conforms to IEEE Standard 754, section 4.</source>
          <target state="translated">Se ajusta al estándar IEEE 754, sección 4.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</source>
          <target state="translated">Cuando se utiliza en varias operaciones de redondeo, reduce el error de redondeo que se debe a los valores de punto medio en una dirección única de redondear de forma consistente.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>In some cases, this rounding error can be significant.</source>
          <target state="translated">En algunos casos, este error de redondeo puede ser significativo.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The following example displays values returned by the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph3">`mode`</ph> argument of <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph6">`mode`</ph> argument of <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</source>
          <target state="translated">El ejemplo siguiente muestra los valores devueltos por la <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> método con un <ph id="ph3">`mode`</ph> argumento de <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>y el <ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> método con un <ph id="ph6">`mode`</ph> argumento de <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> no es un valor <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">El resultado está fuera del intervalo de un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A decimal number to round.</source>
          <target state="translated">Número decimal que se va a redondear.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number of significant decimal places (precision) in the return value.</source>
          <target state="translated">Número de posiciones decimales significativas (precisión) del valor devuelto.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A value that specifies how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated">Valor que especifica el redondeo de <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> si su valor está a la mitad del intervalo entre otros dos números.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounds a decimal value to a specified precision.</source>
          <target state="translated">Redondea un valor decimal a una precisión especificada.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two other numbers.</source>
          <target state="translated">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre otros dos números.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter with a precision equal to the <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> parameter.</source>
          <target state="translated">Número más cercano al parámetro <ph id="ph1">&lt;paramref name="d" /&gt;</ph> con una precisión igual al parámetro <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two numbers, one of which is even and the other odd, the <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> parameter determines which of the two numbers is returned.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="d" /&gt;</ph> se encuentra a la mitad del intervalo entre dos números, uno par y otro impar, el parámetro <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> determina el número que se devuelve.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If the precision of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>, <ph id="ph3">&lt;paramref name="d" /&gt;</ph> is returned unchanged.</source>
          <target state="translated">Si la precisión de <ph id="ph1">&lt;paramref name="d" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>, se devuelve <ph id="ph3">&lt;paramref name="d" /&gt;</ph> sin modificar.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The <ph id="ph1">`decimals`</ph> parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</source>
          <target state="translated">El <ph id="ph1">`decimals`</ph> parámetro especifica el número de posiciones decimales significativas en el valor devuelto y comprendido entre 0 y 28.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">`decimals`</ph> is zero, an integer is returned.</source>
          <target state="translated">Si <ph id="ph1">`decimals`</ph> es cero, se devuelve un entero.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</source>
          <target state="translated">Un valor de punto medio, el valor después de los dígitos menos significativos en el resultado es precisamente mitad de camino entre dos números.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</source>
          <target state="translated">Por ejemplo, 3.47500 es un valor de punto medio si no redondea a dos posiciones decimales y 7.500 es un valor de punto medio si no se redondea a un entero.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id="ph1">`mode`</ph> argument.</source>
          <target state="translated">En estos casos, el valor más cercano no puede identificarse fácilmente sin una convención de redondeo, que se especifica mediante el <ph id="ph1">`mode`</ph> argumento.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method supports two rounding conventions for handling midpoint values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> método es compatible con dos convenciones de redondeo para controlar los valores de punto medio.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding away from zero.</source>
          <target state="translated">Redondeo para evitar el cero.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Midpoint values are rounded to the next number away from zero.</source>
          <target state="translated">Los valores de punto medio se redondean al siguiente número de dirección contraria a cero.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</source>
          <target state="translated">Por ejemplo, se redondea 3,75 a 3.8, 3.85 se redondeará a 3.9,-3.75 se redondea a-3.8, y-3.85 se redondea a-3.9.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Esta forma de redondeo es representada por la <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> miembro de enumeración.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding away from zero is the most widely known form of rounding.</source>
          <target state="translated">Redondeo para evitar el cero es la forma más ampliamente conocida de redondeo.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding to even, or banker's rounding</source>
          <target state="translated">Redondeo incluso o redondeo bancario</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Midpoint values are rounded to the nearest even number.</source>
          <target state="translated">Los valores de punto medio se redondean al número par más cercano.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</source>
          <target state="translated">Por ejemplo, redondear 3.8 3,75 y 3.85 y-3.75 y-3.85 de ida y vuelta a-3.8.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Esta forma de redondeo es representada por la <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> miembro de enumeración.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding to nearest is the standard form of rounding used in financial and statistical operations.</source>
          <target state="translated">Redondeo al más cercano es la forma estándar de redondeo utilizado en las operaciones financieras y estadísticas.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>It conforms to IEEE Standard 754, section 4.</source>
          <target state="translated">Se ajusta al estándar IEEE 754, sección 4.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</source>
          <target state="translated">Cuando se utiliza en varias operaciones de redondeo, reduce el error de redondeo que se debe a los valores de punto medio en una dirección única de redondear de forma consistente.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In some cases, this rounding error can be significant.</source>
          <target state="translated">En algunos casos, este error de redondeo puede ser significativo.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> enumeration.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> método con el <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is less than 0 or greater than 28.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> es menor que 0 o mayor que 28.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> no es un valor <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">El resultado está fuera del intervalo de un objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The minuend.</source>
          <target state="translated">Minuendo.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The subtrahend.</source>
          <target state="translated">Sustraendo.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>Subtracts one specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value from another.</source>
          <target state="translated">Resta un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado de otro.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> from <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</source>
          <target state="translated">Resultado de restar <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> de <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The following example illustrates the use of <ph id="ph1">`Subtract`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de <ph id="ph1">`Subtract`</ph>.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor devuelto es menor que <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor de la instancia actual no es cero; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">No se admite esta conversión.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">Cualquier intento de usar este método produce una excepción <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>None.</source>
          <target state="translated">Ninguno.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">No se admite esta conversión.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">En todos los casos.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">No se admite esta conversión.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">Cualquier intento de usar este método produce una excepción <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>None.</source>
          <target state="translated">Ninguno.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">No se admite esta conversión.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">En todos los casos.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">Valor de la instancia actual, sin ningún tipo de modificación.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Because a <ph id="ph1">&lt;xref:System.Double&gt;</ph> has fewer significant digits than a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, this operation may produce round-off errors.</source>
          <target state="translated">Dado que un <ph id="ph1">&lt;xref:System.Double&gt;</ph> tiene menos dígitos significativos que un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, esta operación puede producir errores de redondeo.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor se redondea hacia cero al valor entero más cercano.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The parameter is ignored.</source>
          <target state="translated">Se omite el parámetro.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor se redondea hacia cero al valor entero más cercano.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt64%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToInt64%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToSByte%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToSingle%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert the value of this <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instance.</source>
          <target state="translated">Tipo al que se va a convertir el valor de esta instancia de <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          <target state="translated">Implementación de <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> que proporciona información específica de la referencia cultural sobre el formato del valor devuelto.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> en Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">No se admite la conversión de tipo solicitada.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor se redondea hacia cero al valor entero más cercano.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro se ignora.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Valor de la instancia actual, convertido en <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor se redondea hacia cero al valor entero más cercano.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">El valor entero resultante es menor que <ph id="ph1">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> o mayor que <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">Objeto que inició la devolución de llamada.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">La funcionalidad de este parámetro aún no está implementada.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the deserialization of an object has been completed.</source>
          <target state="translated">Se ejecuta cuando se completa la deserialización de un objeto.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object contains invalid or corrupted data.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> contiene datos no válidos o dañados.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 8-bit unsigned integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 8 bits sin signo equivalente.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>An 8-bit unsigned integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entero de 8 bits sin signo equivalente a <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Parameter <ph id="ph1">`value`</ph> is rounded to the nearest integer value toward zero, and that result is returned.</source>
          <target state="translated">Parámetro <ph id="ph1">`value`</ph> se redondea al valor entero más cercano a cero, y se devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un entero de 8 bits sin signo mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent double-precision floating-point number.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el número de punto flotante de precisión doble equivalente.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>A double-precision floating-point number equivalent to <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Número de punto flotante de precisión doble equivalente a <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Esta operación puede producir errores de redondeo porque un número de punto flotante de precisión doble tiene menos dígitos significativos que un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value by using the <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Double&gt;</ph> valor mediante el uso de la <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que la conversión puede implicar una pérdida de precisión, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>The following code example converts <ph id="ph1">`Decimal`</ph> numbers to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values using <ph id="ph3">`ToDouble`</ph> method.</source>
          <target state="translated">El siguiente código de ejemplo convierte <ph id="ph1">`Decimal`</ph> números a <ph id="ph2">&lt;xref:System.Double&gt;</ph> valores mediante <ph id="ph3">`ToDouble`</ph> método.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 16-bit signed integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 16 bits con signo equivalente.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>A 16-bit signed integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entero de 16 bits con signo que equivale a <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en un entero de 16 bits mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.Int16&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 32-bit signed integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 32 bits con signo equivalente.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>A 32-bit signed integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Entero de 32 bits con signo que equivale al valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">El valor devuelto es la parte entera del valor decimal; se truncan los dígitos fraccionarios.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 32-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en un entero de 32 bits mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 64-bit signed integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 64 bits con signo equivalente.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>A 64-bit signed integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Entero de 64 bits con signo que equivale al valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">El valor devuelto es la parte entera del valor decimal; se truncan los dígitos fraccionarios.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 64-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en un entero de 64 bits mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</source>
          <target state="translated">Convierte el valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el valor de moneda de Automation OLE equivalente, que está contenido en un entero de 64 bits con signo.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>A 64-bit signed integer that contains the OLE Automation equivalent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entero de 64 bits con signo que contiene el equivalente de Automation OLE de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`ToOACurrency`</ph> method to convert <ph id="ph2">`Decimal`</ph> numbers to the equivalent OLE Automation Currency values that are contained in <ph id="ph3">&lt;xref:System.Int64&gt;</ph> fields.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">`ToOACurrency`</ph> método para convertir <ph id="ph2">`Decimal`</ph> números en los valores de moneda de automatización OLE equivalente que se encuentran en <ph id="ph3">&lt;xref:System.Int64&gt;</ph> campos.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 8-bit signed integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 8 bits con signo equivalente.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>An 8-bit signed integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entero de 8 bits con signo que equivale a <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit signed integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un entero de 8 bits con signo utilizando el <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.SByte&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es menor que <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent single-precision floating-point number.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el número de punto flotante de precisión sencilla equivalente.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>A single-precision floating-point number equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Número de punto flotante de precisión sencilla que equivale al valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Esta operación puede producir errores de redondeo porque un número de punto flotante de precisión simple tiene menos dígitos significativos que un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value by using the <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> a una <ph id="ph2">&lt;xref:System.Single&gt;</ph> valor mediante el uso de la <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que la conversión puede implicar una pérdida de precisión, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>The following code example converts <ph id="ph1">`Decimal`</ph> numbers to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values using the <ph id="ph3">`ToSingle`</ph> method.</source>
          <target state="translated">El siguiente código de ejemplo convierte <ph id="ph1">`Decimal`</ph> números a <ph id="ph2">&lt;xref:System.Single&gt;</ph> valores mediante la <ph id="ph3">`ToSingle`</ph> método.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the numeric value of this instance to its equivalent <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convierte el valor numérico de esta instancia en la representación de <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">Convierte el valor numérico de esta instancia en la representación de cadena equivalente.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString">
          <source>A string that represents the value of this instance.</source>
          <target state="translated">Cadena que representa el valor de esta instancia.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in the default ("G", or general) format of the current culture.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.ToString&gt;</ph> método formatos un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor en el valor predeterminado ("G" o general), formato de la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si desea especificar un formato diferente o la referencia cultural, use las otras sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> método, tal como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>To use format</source>
          <target state="translated">Usar formato</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For culture</source>
          <target state="translated">Para la referencia cultural</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Use the overload</source>
          <target state="translated">Use la sobrecarga</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los especificadores de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo dar formato, consulte <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using the default <ph id="ph2">&lt;xref:System.Decimal.ToString&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor mediante el valor predeterminado <ph id="ph2">&lt;xref:System.Decimal.ToString&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value that result from using a number of standard format specifiers.</source>
          <target state="translated">También muestra las representaciones de cadena de la <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor derivados del uso de un número de especificadores de formato estándar.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The following example displays the amount of money in an account.</source>
          <target state="translated">En el ejemplo siguiente se muestra la cantidad de dinero de una cuenta.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objeto que proporciona información de formato específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          <target state="translated">Convierte el valor numérico de esta instancia en la representación de cadena equivalente usando la información de formato específica de la referencia cultural especificada.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Representación en forma de cadena del valor de esta instancia, tal y como especifica <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in the default ("G", or general) format of a specified culture.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29&gt;</ph> método formatos un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor en el valor predeterminado ("G" o general), formato de una referencia cultural especificada.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si desea especificar un formato diferente o la referencia cultural actual, use las otras sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> método, tal como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Usar formato</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Para la referencia cultural</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Use la sobrecarga</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los especificadores de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo dar formato, consulte <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación cuyo <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> método devuelve un <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Por lo general, <ph id="ph1">`provider`</ph> es un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto o un <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro proporciona información específica de la referencia cultural utilizada para dar formato.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, se usa la referencia cultural actual del subproceso.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>To convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to its string representation using a specified culture and a specific format string, call the <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en su representación de cadena utilizando una referencia cultural especificada y una cadena de formato específico, llamada la <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent several different cultures.</source>
          <target state="translated">En el ejemplo siguiente se muestra la representación de cadena de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor usando <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objetos que representan varias referencias culturales diferentes.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Cadena de formato numérico estándar o personalizada.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</source>
          <target state="translated">Convierte el valor numérico de esta instancia en la representación de cadena equivalente usando el formato especificado.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated">Representación en forma de cadena del valor de esta instancia, tal y como especifica <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in a specified format by using the conventions of the current culture.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%29&gt;</ph> método formatos un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valor en un formato especificado usando las convenciones de la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si desea utilizar el valor predeterminado ("G" o general) dar formato o especificar una referencia cultural diferente, use las otras sobrecargas de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> método, tal como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">Usar formato</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">Para la referencia cultural</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">Use la sobrecarga</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method uses the standard or custom numeric format string specified by the <ph id="ph2">`format`</ph> parameter to convert the value of the current instance into its string representation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> método usa la cadena de formato numérico estándar o personalizada especificada por el <ph id="ph2">`format`</ph> parámetro para convertir el valor de la instancia actual en su representación de cadena.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid <bpt id="p1">[</bpt>standard numeric format specifier<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> except for D, R, and X, as well as any combination of <bpt id="p2">[</bpt>custom numeric format specifiers<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">El <ph id="ph1">`format`</ph> parámetro puede ser cualquier <bpt id="p1">[</bpt>especificador de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> salvo D, R y X, así como cualquier combinación de <bpt id="p2">[</bpt>especificadores de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es <ph id="ph2">`null`</ph> o una cadena vacía, el valor devuelto de esta instancia está formateada con el especificador de formato numérico general (G).</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los especificadores de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo dar formato, consulte <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The return value is formatted by using the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">El valor devuelto se da formato mediante la <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto para la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>To apply the formatting conventions of a specified culture, call the <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">Para aplicar las convenciones de formato de una referencia cultural especificada, llame a la <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</source>
          <target state="translated">En el ejemplo siguiente se muestra un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor con cada uno de los especificadores de formato numérico estándar compatibles, junto con dos cadenas de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</source>
          <target state="translated">Para convertir los valores numéricos en cadenas, el ejemplo utiliza las convenciones de formato de la referencia cultural en-US.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A numeric format string.</source>
          <target state="translated">Cadena de formato numérico.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objeto que proporciona información de formato específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</source>
          <target state="translated">Convierte el valor numérico de esta instancia en su representación de cadena equivalente mediante el formato y la información de formato específica de la referencia cultural que se especificaran.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena del valor de esta instancia, tal y como especifican <ph id="ph1">&lt;paramref name="format" /&gt;</ph> y <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> método formatos un <ph id="ph2">&lt;xref:System.Double&gt;</ph> valor en un formato específico de la referencia cultural especificada.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use default format or culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si desea utilizar la configuración predeterminada de formato o la referencia cultural, use las otras sobrecargas de la <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> método, tal como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Usar formato</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Para la referencia cultural</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Use la sobrecarga</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Formato predeterminado ("G")</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Una referencia cultural específica</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un formato concreto</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Referencia cultural predeterminada de (actual).</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated">El <ph id="ph1">`format`</ph> parámetro puede ser cualquier especificador de formato numérico estándar válido salvo D, R y X, así como cualquier combinación de especificadores de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es <ph id="ph2">`null`</ph> o una cadena vacía, el valor devuelto de esta instancia está formateada con el especificador de formato numérico general ("G").</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los especificadores de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo dar formato, consulte <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación cuyo <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> método devuelve un <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Por lo general, <ph id="ph1">`provider`</ph> es un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> o <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro proporciona información específica de la referencia cultural utilizada para dar formato.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, se usa la referencia cultural actual del subproceso.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using each of the supported standard numeric format specifiers for several different cultures.</source>
          <target state="translated">En el ejemplo siguiente se muestra un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor con cada uno de los especificadores de formato numérico estándar compatibles para varias referencias culturales diferentes.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 16 bits sin signo equivalente.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>A 16-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entero de 16 bits sin signo que equivale al valor de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">El valor devuelto es la parte entera del valor decimal; se truncan los dígitos fraccionarios.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor a un entero de 16 bits sin signo mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 32 bits sin signo equivalente.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>A 32-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Entero de 32 bits sin signo que equivale al valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">El valor devuelto es la parte entera del valor decimal; se truncan los dígitos fraccionarios.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 32-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en un entero sin signo de 32 bits mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> es negativo o mayor que <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">Número decimal que se va a convertir.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">Convierte el valor del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado en el entero de 64 bits sin signo equivalente.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>A 64-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">Entero de 64 bits sin signo que equivale al valor de <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">El valor devuelto es la parte entera del valor decimal; se truncan los dígitos fraccionarios.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 64-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">También puede convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor en un entero sin signo de 64 bits mediante el uso de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> operador de asignación.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Dado que el operador realiza una conversión de restricción, debe usar un operador de conversión en C# o una función de conversión en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A&gt;</ph> método para convertir números decimales <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> es negativo o mayor que <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The decimal number to truncate.</source>
          <target state="translated">Número decimal que se va a truncar.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>Returns the integral digits of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>; any fractional digits are discarded.</source>
          <target state="translated">Devuelve los dígitos integrales del <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> especificado; los dígitos fraccionarios se descartan.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The result of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> rounded toward zero, to the nearest whole number.</source>
          <target state="translated">Resultado de redondear <ph id="ph1">&lt;paramref name="d" /&gt;</ph> al número entero más próximo, hacia cero.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>This method rounds <ph id="ph1">`d`</ph> toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</source>
          <target state="translated">Este método redondea <ph id="ph1">`d`</ph> hacia cero, al número entero más próximo, que corresponde a descartar los dígitos situados después del punto decimal.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`Truncate`</ph> method to discard the fractional digits of several <ph id="ph2">`Decimal`</ph> values.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">`Truncate`</ph> método para descartar los dígitos fraccionarios de varios <ph id="ph2">`Decimal`</ph> valores.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la representación en forma de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">Un valor devuelto indica si la conversión se realizó correctamente o si se produjeron errores.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la representación en forma de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">Un valor devuelto indica si la conversión se realizó correctamente o si se produjeron errores.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="s" /&gt;</ph> se convirtió correctamente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">Esta sobrecarga difiere de la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> método devolviendo un valor booleano que indica si la operación de análisis se realizó correctamente en lugar de devolver el valor numérico analizado.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">Elimina la necesidad de utilizar el control de excepciones para probar una <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> en caso de que <ph id="ph2">`s`</ph> no es válido y no se puede analizar correctamente.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> contains a number of the form:</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> contiene un número de la forma:</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Específicas de referencias culturales miles símbolo de separador.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> se interpreta usando el <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> estilo.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Esto significa que el espacio en blanco y miles se permiten separadores pero no los símbolos de divisa.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">Para definir explícitamente los elementos (como símbolos de moneda, miles separadores y espacios en blanco) que pueden estar presentes en <ph id="ph1">`s`</ph>, use el <ph id="ph2">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> sobrecarga del método.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated">Parámetro <ph id="ph1">`s`</ph> se analiza utilizando la información de formato en un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto inicializado para la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>To parse a string using the formatting information of some other specified culture, use the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">Para analizar una cadena usando la información de formato de alguna otra especifica la referencia cultural, use el <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> sobrecarga del método.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If necessary, the value of <ph id="ph1">`s`</ph> is rounded using rounding to nearest.</source>
          <target state="translated">Si es necesario, el valor de <ph id="ph1">`s`</ph> se redondea utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objeto tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If during a parse operation a separator is encountered in the <ph id="ph1">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si durante una operación de análisis se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro y la divisa aplicable o número decimal y separadores de grupos son iguales, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method to convert the string representations of numeric values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> método para convertir las representaciones de cadena de valores numéricos a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>It assumes that en-US is the current culture.</source>
          <target state="translated">Se supone que en-US es la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The string representation of the number to convert.</source>
          <target state="translated">Representación de cadena del número que va a convertirse.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A bitwise combination of enumeration values that indicates the permitted format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Combinación bit a bit de valores de enumeración que indica el formato permitido de <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          <target state="translated">Un valor que se especifica de forma habitual es <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>An object that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Objeto que proporciona información de análisis específica de la referencia cultural sobre <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified style and culture-specific format.</source>
          <target state="translated">Convierte la representación de cadena de un número en su <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente utilizando el estilo y el formato específico de la referencia cultural que se hayan especificado.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">Un valor devuelto indica si la conversión se realizó correctamente o si se produjeron errores.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="s" /&gt;</ph> se convirtió correctamente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">Esta sobrecarga difiere de la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> método devolviendo un valor booleano que indica si la operación de análisis se realizó correctamente en lugar de devolver el valor numérico analizado.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">Elimina la necesidad de utilizar el control de excepciones para probar una <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> en caso de que <ph id="ph2">`s`</ph> no es válido y no se puede analizar correctamente.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">El <ph id="ph1">`style`</ph> parámetro define el formato permitido de la <ph id="ph2">`s`</ph> parámetro para la operación de análisis se realice correctamente.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Debe ser una combinación de marcadores de bits de la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">El siguiente <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> miembros no son compatibles:</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Depending on the value of style, the <ph id="ph1">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Dependiendo del valor de estilo, el <ph id="ph1">`s`</ph> parámetro puede incluir los siguientes elementos:</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Los elementos de los corchetes ([ y ]) son opcionales.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following table describes each element.</source>
          <target state="translated">En la tabla siguiente describe cada elemento.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Element</source>
          <target state="translated">Elemento</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Optional white space.</source>
          <target state="translated">Espacio en blanco opcional.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espacio en blanco puede aparecer al principio de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It can appear at the end of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Puede aparecer al final de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un símbolo de moneda específico de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">Su posición en la cadena viene definida por el <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> propiedades de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto devuelto por la <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> método de la <ph id="ph5">`provider`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">El símbolo de moneda puede aparecer en <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> incluye la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>An optional sign.</source>
          <target state="translated">Un signo opcional.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un símbolo de separador decimal de referencias culturales específicas.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Una secuencia de dígitos que comprende del 0 al 9.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`style`</ph> parameter specifies the permitted format of the <ph id="ph2">`s`</ph> parameter, and can be one or more <ph id="ph3">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumerated constants combined using a bitwise OR operation.</source>
          <target state="translated">El <ph id="ph1">`style`</ph> parámetro especifica el formato permitido de la <ph id="ph2">`s`</ph> parámetro y puede tener uno o más <ph id="ph3">&lt;xref:System.Globalization.NumberStyles&gt;</ph> combinadas mediante una operación OR bit a bit de constantes enumeradas.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`style`</ph> is null, <ph id="ph2">`s`</ph> is interpreted using the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Si <ph id="ph1">`style`</ph> es null, <ph id="ph2">`s`</ph> se interpreta usando el <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> estilo.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación como un <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> o <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro proporciona información específica de la referencia cultural utilizada en el análisis.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, se usa la referencia cultural actual del subproceso.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objeto tiene 29 dígitos de precisión.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> representa un número que tiene más de 29 dígitos, pero tiene una parte fraccionaria y está dentro del intervalo de <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> y <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, el número se redondea, no se trunca a 29 dígitos utilizando el redondeo al más cercano.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si se encuentra un separador en la <ph id="ph1">`s`</ph> parámetro durante una operación de análisis y la divisa aplicable o número decimal y separadores de grupos son iguales, la operación de análisis supone que se trata de un separador decimal en lugar de un separador de grupos.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de los separadores, vea <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29&gt;</ph> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29&gt;</ph> método para analizar la representación de cadena de un número que tiene un estilo determinado y se da formato usando las convenciones de una referencia cultural determinada.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> no es un valor <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="style" /&gt;</ph> es el valor de <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="F:System.Decimal.Zero">
          <source>Represents the number zero (0).</source>
          <target state="translated">Representa el número cero (0).</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.Zero">
          <source>The following code example illustrates the use of the <ph id="ph1">`Zero`</ph> field.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">`Zero`</ph> campo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>